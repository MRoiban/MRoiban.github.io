<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>Jonanshietala</title>
    <link>https://www.jonashietala.se/archive/</link>
    <description>All posts are auto-generated into RSS</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Mar 2025 15:52:48 +0000</lastBuildDate>
    <item>
      <title>Netrunner Lindhska Store Championship Ãrebro</title>
      <link>https://www.jonashietala.se/blog/2015/04/02/netrunner_lindhska_store_championship_rebro</link>
      <description>Netrunner Lindhska Store Championship ÃrebroPublished:April  2,2015in814820fTagged:Netrunner,GamingAfter the awesomeness during theprevious store championship, I decided to go to the store championship at Lindhska Bokhandel in Ãrebro.I brought a modified version of the same corp I used the last time, aBlue Sun kill deckand anew runnerwith Leela Patel. See the links for cards and some card choices.The tournament was a 26-player one, at least thatâs the number I heard, with 5 rounds of swiss followed by a double elimination bracket. 7 players from LinkÃ¶ping went, again I think but Iâm not sure if thatâs the correct number.SwissMatch 1, Tennin/Reinavs TenninMemory is a bit fuzzy here. I think I got off to a good start, but somehow the corp stabilized and we went into a long slog of a game. For some reason the corp managed to score out before I could find the final agenda.It certainly felt like I could have won the game, but Iâm not sure what I did wrong. Might be that I wasnât comfortable with the deck and played too aggressively. 0-2vs ReinaAgain I donât remember the specifics. We had very little time and I manage to score out an agenda, so I get a timed win.Still, corp felt great and I was in control, 1-2.Match 2, RP/Chaos Theoryvs Replicating PerfectionAh RP. Actually the first time Iâve played against the id, but I had a pretty good idea of how to approach the game. I scored an early agenda but Iâm slowly getting locked out. Then he makes a pretty big misplay - he flips a naked remote and he wants to score, but itâs Nisei MK II instead of a 3/2 agenda and now heâs flustered. I apologize and I score the Nisei and I remove the Enhanced Login Protocol.Still, heâs not out of the game. I run indexing but he hid a Jackson in a remote, stupid mistake! I manage to same old thing indexing again and I score another agenda and I place another agenda as the 5th card. I carefully count the cards and I manage to score the winning agenda, before being locked out of the game.The opponent said heâs only played a weekâ¦ Still played pretty good Iâm very glad for that victory. 3-2vs Chaos TheoryAnother quick corp game. Snare last click into scorch for a simple victory. His inexperienced lost him the game there.5-2 and feeling better.Match 3, RP/MaxXvs MaxXWeâre 6 players from LinkÃ¶ping and 2 from Stockholm at the top. Sadly Iâm facing David, also from LinkÃ¶ping and weâre on our way to knock each other down.The game is slow, very slow. I feel in control and take it slow and easy. Scoring some agendas when I get them, but not drawing all that much. MaxX runs out of cards and runs a Levy. Somehow he runs of cards again and I know Iâve won.I have no idea how this happened, but we actually went to time, during our first match! Maybe it really was an intense game or maybe I was just tired or hungryâ¦ But anyway it happened. I manage to set up a win-win scenario for me during my second-to-last turn. Either he lets me score out or he runs the remote and let me sea-source scorch him to death (he had a hand size of 3 due to an early Cerebral Overwriter). He cooses the second option.7-2Match 4, NEH/Whizzardvs Near-Earth HubThis was by far the most stressful/exciting game of the day for me. I get a bad hand and I mulliganâ¦ Into a much much worse hand. No economy, no nothing. The corp scores an early astroscript, this isnât looking so goodâ¦ I do something, I canât remember, then he sets up  a remote with one advancement counter on. Curious, itâs probably an NAPD, but sadly I canât get in and score so Iâm gearing up for a next turn combo.Sadly, itâs a Project Beale, worth 3 points and heâs got an astroscript token. From bad to worse, much worse. I desperately run his hand and his remote. Oh no, heâs got a scorch on top of R&amp;D and heâs got a Data Raven protecting HQ. Luckily Iâve got a plascrete so I go tag-me with a Legwork, finding nothing. Heâs using Jackson to draw like mad.I run another Legwork with a same old thing through the Data Raven and I find two agendas and I get in some single-accesses on R&amp;D. Lady luck isnât smiling for long though as he draws and install-advance a remote. Surely an NAPD, which Iâm too poor to get at.My only hope is R&amp;D and I have two interfaces out so I can access 3 cards. If I can bounce the NAPD I might still have a chance. The first card is a.. NAPD which I canât steal. The second is a Breaking News so I bounce the advanced card now sitting on 5 agenda points.Iâm too poor to get the NAPD and the next turn I get Scorched to death.The game was practically over from the terrible start, but I almost managed to steal a win. I got praise from the opponent but I canât stop but think that I should have had a few more credits for that NAPDâ¦7-4, feeling the pain.vs WhizzardAnother id I havenât played against. He tried, and was successful for a while, with killing my oversighted curtain walls and keeping my economy low. But still, I managed to score out two the cleaners and putting more and more pressure as I gradually build up my economy lead. I think I hit a shattered remains as well.The game ends with me advancing the winning agenda, he tries but cannot access it or any other agenda, and I score for the win.Again corp is feeling absolutely great. 9-4Match 5, EtF/KateThis time Iâm faced up against Henrik, my buddy from LinkÃ¶ping who knows my decks and I know his decks. Sadly it appears this is the battle for top 8.vs Engineering the FutureDuring practice I felt very confident with my Leela deck and I get a great start scoring two 3/2 agendas. Not thinking more about it I try to build up a bit and getting ready to score the winning agenda as I know he has a few 5/3.But things are not shaping up that way. I try to keep is economy low but he manages to get two adonis campaigns up and running and he hits two large GRNLD Refineries. Probably a huge misplay by me to allow that to happen. With his economy up he gets some nice taxing servers up and my aggressive running has not paid off at all. Heâs all set up and I practically have nothing.My last hope is an indexing through a Janus I know is there. By my counts Iâm only 2 or 1 credit off from making two succesful runs through R&amp;D in the hopes of scoring out, but itâs not meant to be. Iâve already accumulated 3 brain damage from previous (too aggressive) encounters.With great play he manages to score out and win. Well played. 9-6vs KateAgain Iâm having difficulties to recall the specifics of the match. I know I managed to hit one shattered remains to stop his drip econ for a while. I manage to score an agenda but time is running out.I have a 5/3 agenda which Iâve already advanced twice. I literary have my whole hand full of kill cards: 1 snare, 1 sea-source, 3 scorch and 2 punitives and with more money Iâm just waiting for him to make a run. I decide to fake the agenda as the almighty 9/6 Government Takeover agenda and I advance it up to 7 in the course of two turns. In hindsight it might have been better to score it out as a 5/3, but thatâs not what I did.So sitting at 7 advancement counters Henrik decides toâ¦ Not run it! Instead he runs my hand twice, the second time he imps my sea-source. Sigh.So the game ends with me winning on time, somehow it feels a bit frustrating as I had so much control the whole game, thinking how can I loose? Turns out, with some bad luck and some good runner decisions itâs quite possible not to win.10-6.The CutAs Henrik and I had the battle for the last place into playoffs, which I lost, Henrik makes the cut on 11 points and weâre a bunch of other players with 10 points.  Huge congrats to Henrik as he really did play better than I did.SummaryOnce again Iâm amazed by the friendliness of the Netrunner community. Everyone was really nice and friendly. I joked around a bit with some guys and girls Iâve never even met before, which is no small feat with a very shy and introvert person such as myself. I got a ride all the way from LinkÃ¶ping to Ãrebro and the guy with the other car even came and asked me if I wanted to come with him earlier as I got knocked out. As it happens I stayed and watched some of Henrikâs and Fredrikâs matches.As for the games themselves Iâm super happy with my corp deck which practically went undefeated during the tournament. I felt quite comfortable to win both the games where I got a timed win from.The runner deck however Iâm not super happy with. It felt slow and low on economy and just a bit awkward. Some of the problems can be attributed to good corp play: I didnât land many good account siphons which made my economy quite bad and they played around Leelaâs ability quite well. Ice up centrals at least twice and donât score out agendas on the last click.But mostly I think I didnât play the runner deck right, I wanted to play more aggressively than maybe youâre supposed to with a slower control deck such as the one I had made. I really need to try out a Leela build based on Desperado and an economy package with Dirty Laundry and Security Testing, I think it might fit my style better. I also want to play around more with the wonderful Anarchsâ¦Looking forward to the next time I can play some Netrunner!Published:April  2,2015in814820fTagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Years at LinkÃ¶ping's University</title>
      <link>https://www.jonashietala.se/blog/2015/07/22/5_years_at_the_university</link>
      <description>5 Years at LinkÃ¶ping's UniversityâPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolI recently finished my masterâs degree (civilingenjÃ¶r or civil engineering) at LinkÃ¶pingâs University. At first it felt like 5 years would be an eternity, but in hindsight it was over in a flash. my gut feeling is that I havenât learnt or done anything of note, except you know actually finishing my degree, but if I sit down and think about it I have done some things. Actually quite a lot of things.First yearI moved to LinkÃ¶ping with my girlfriend and it was quite an adjustment as we both moved from our parents and to a city where we practically knew nothing and no one. But we managed fine and while we never went out to parties or went to other student events we found some friends. I also startedITF Taekwon-doafter a few months.There werenât too much to do in school. The focus was on foundation math courses, mostly things I had already done but needed refreshing, and on introductory programming courses which werenât challenging at all for me.Second yearDuring the second year I felt the courses were harder and more interesting than the first yearâs courses. The courses in Combinatorial Optimization, Data Structures and Algorithms and Linear Algebra were fun and new for me. I also took an extra continuation course in Linear Algebra which was interesting.When I started the university I thought I would like electronics and hardware construction, but the courses from the first year were really not interesting at all. Even when making the transition from analog to digital I didnât care for it at all. But it all changed when we started actuallybuildingthings with digital circuits.At first we had an introductory course where we built digital clocks and counters. You were supposed to have prepared a design sketch for the labs, but me and my partner for some reason never did it, and so we were always running late in the labs. I remember one very fun, or horrible, occasion where we had struggled a lot with one lab and we had spent almost the full 4 hours until we finally completed it with maybe 10 - 15 minutes left. Filled with relief we started taring apart what we so painstakingly had built. When done we realized we had one part left where we were supposed to use the circuit we just destroyedâ¦ Luckily we could use the circuits another group had made, but it was a painful lesson in always reading the descriptions and prepare for the labs in advance.The digital circuit labs were followed by a digital project of our own choice. Wedesigned a processorwhich could run theCore Wars 88 standardand we simulated it on an FPGA.The main block schema for the processorAnd here is a small video of the simulation in action:Click to view on YouTubeThe project was interesting as it was an outlet for our creativity and it touched on several different areas. Processor design, hardware debugging (!) and I wrote aredcode assemblerfor our CPU and amicrocode compiler.The behaviour of the processor is controlled by microcode which basically is a set of control outputs of 0s and 1s. For example our processor has 18 outputs consisting of a total of 39 bits (uPC_addris internal).game FIFO IR ADR1 ADR2 OP M1 M2 mem1 mem2 mem3 mem_addr ALU1 ALU2 ALU buss PC  uPC  uPC_addr00   00  0   00  00   0  00 00  00   00   00    000     00   0   000 000  00 00000 00000000To make things easier, instead of manually editing each 0/1 line we introduced a DSL which then the compiler turns into microcode lines.For examplethe microcodeis described in our DSL:; Startup, check if we're in gamejmpS $GAME                              ; Execute game code only if we're runningjmpO +0                                 ; Infinite loop if we've recieved game over, reset to break it; Clear memory contentsALU = 0                                 ; Load 0ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC:CLRMEM PC -&gt; mem_addr                          ; Look at PCOP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem         ; Clear itALU++                                   ; IncrALU1 -&gt; PC, jmpZ $LOADP                 ; If 0 we're done loopingjmp $CLRMEM                             ; Else continue...And is then compiled intoVHDL code:signalmem:Data:=(--Startup, check if we're in game"00000000000000000000000000000000000011000110011",--jmpS GAME(33)"00000000000000000000000000000000000101000000001",--jmpO +0(01)--Clear memory contents"00000000000000000000000000110000000000000000000",--ALU = 0"00000000010101000000000000000100010000000000000",--ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC"00000000000000000000110000000000000000000000000",--PC -&gt; mem_addr"00000000000000101010000000000000000000000000000",--OP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem"00000000000000000000000000100000000000000000000",--ALU++"00000000000000000000000000000100010001100001001",--ALU1 -&gt; buss, buss -&gt; PC, jmpZ LOADP(09)"00000000000000000000000000000000000001000000100",--jmp CLRMEM(04)...The redcode assemblers job is to transform a warrior (a piece of redcode) into a binary object file which we can then send to the FPGA for execution.For example this warrior:step    EQU 417init    EQU 1337size    EQU 9JMP start           ; boot jump as we can't specify PC in the middle T.Tsrc     DAT 0               ; src pointerstart   MOV #size, src      ; setup src pointercopy    MOV @src,DJN copy, srcSPL @dst            ; throw a pc thereADD #step, dst      ; space out a bitJMP start           ; make a new copy, yay!dst     DAT #0, #init       ; dst pointerendCompiles to:$ ./assembler jonas-replicator.red -r0000000000001001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000010010001111111111111000000000001101100011111111111100000000000000101000000001001000000011111111111110001111111111101000000001010100000000000000000110000000000000000000000000010010000000001101000010000000000000010000000000100000000011111111110110000000000000000000000000000010100000000000000000000010100111001With the--verbosetag the format can be examined:$ ./assembler jonas-replicator.red --verbose0000000000001001  00 09  ; Number of rows (9) jonas-replicator.redpad    OP  A  B  pad     A op      pad      B op00000000 0100 00 00 000 0000000000010 000 0000000000000   00 40 00 02 00 00  ; JMP  start           (2)  0(0)00000000 0000 00 00 000 0000000000000 000 0000000000000   00 00 00 00 00 00  ; DAT  0               (0)  0(0)00000000 0001 01 00 000 0000000001001 000 1111111111111   00 14 00 09 1f ff  ; MOV # size(9)  src       (-1)00000000 0001 10 11 000 1111111111110 000 0000000000101   00 1b 1f fe 00 05  ; MOV @ src(-2) &lt; dst      (5)00000000 1001 00 00 000 1111111111111 000 1111111111101   00 90 1f ff 1f fd  ; DJN  copy(-1)  src(-3)00000000 1010 10 00 000 0000000000011 000 0000000000000   00 a8 00 03 00 00  ; SPL @ dst            (3)  0(0)00000000 0010 01 00 000 0000110100001 000 0000000000010   00 24 01 a1 00 02  ; ADD # step(417)  dst      (2)00000000 0100 00 00 000 1111111111011 000 0000000000000   00 40 1f fb 00 00  ; JMP  start           (-5)  0(0)00000000 0000 01 01 000 0000000000000 000 0010100111001   00 05 00 00 05 39  ; DAT # 0(0) # init       (1337)If youâre interested in the project you canread more on github.In addition, or as a prerequisite, to this awesome project we also got an introduction to 68k assembly and to computer architecture which was very good.This year me and a friend also made game in the Java programming course calledGrand Thief Arto. Not the greatest of games but it was still fun to make it. I also became a mentor in discrete math for the first year students which was a fun and easy way to earn a bit of extra money.Third yearThis year we continued with some more advanced courses. We had some project oriented courses with some theory about how projects should be run and then a practical part where we made some software for an actual company. The overall idea the course idea is great, to get some real world experience and to get some interaction with an actual company, but the execution was very much not so.For example in the middle of the project one of our project members were supposed to be exchanged with another member from another project. The motivation was that âin the real world this could happen, so you need to always be preparedâ but thatâs just stupid in my opinion. Firstly you donât get fired and just booted from the team very often, but you get an advanced notice and you have some time to prepare the team, yourself and your eventual replacement for the move. Secondly it adds a very real sense of dread and nervousness for everyone involved. I happened to really like all members in the project and I was very worried to be switched out. Turns out I was the one who had to change project. I was very upset and I didnât click nearly as well with the new team and I thought the experience really sucked and I became demotivated.Another thing which was quite bad was the extreme focus on documentation. The whole first 2-3 months were supposed to be a planning stage and the actual implementation was supposed to be done the last 2-3 months. But large parts of the implementation stage were also spent on documentation, or rather writing documents because the course demanded it and we never had any use for the majority. The funny thing is that most of the project theory was spent on motivating why the waterfall development model wasnât suited to software development, but what did the project degenerate into? Even despite our best efforts, we tried to implement an iterative development as our customers didnât really know what they wanted, but we were foiled by course planners.A much better project was theRobot projectwhere we created an autonomous robot! There we poked around with hardware and lower level programming in C.Debugging this was quite an experienceI continued to be a mentor in discrete math and I joinedTeam Obelixwhich organized student visits to different companies. I won the âbest CVâ award given by Ericsson, I won some things in the local programming competitionIMPAand I had a great course in operative systems where we usedPintos. I took an extra course in Graph Theory which was quite different from other math courses but very interesting. Additionally I took aProgramming Languagescourse at Coursera, also quite nice.This summer I also had my first real programming job which was a summer internship atConfiguraand I had a really good time and we replaced their triangulation software.Fourth yearThe courses from the previous years were all mandatory, with the exception of some extra courses I took, but for the 4th and 5th year I could choose my own profile and what courses to take. I spent quite a lot of time thinking about which courses I wanted to take. In the end Iâm quite happy with my selection but there are many interesting courses I had to say no to. The main profile I targeted was theProgramming and Algorithmsprofile.In hindsight these are my favourite courses during the year:TDDD48 Automated PlanningAAPS Advanced Algorithmic Problem SolvingTDDB44 Compiler ConstructionTATA54 Number TheoryTDDC17 Artificial IntelligenceTDDD56 Multicore and GPU ComputingTDDA69 Data and Program Structures (SICP)I didnât find the compiler courseasfun as I had initially thought. The theory part wasnât very interesting but the lab part was really, really good! All in all it still was a very fun course. The AI courses (Automated Planning and Artificial Intelligence) were great and AI is an area Iâm very interested in. During this time I also took anonline course in Machine Learningvia Coursera by Stanford University. Number Theory is another maybe niche area in mathematics which I found interesting.I continued doing some programming competitions as can be seen inUVawhich enabled my to go toNWERC 2013in the Netherlands. Ultimately Iâm not super good at these competitions but it was still a great experience. Netherlands (or specifically Delft) was great. In the Multicore and GPU Computing course there was a parallel sorting contest which I and my lab partner managed to win. The goal was to create a sorting routine on the CPU with the best sorting performance. Oh and I also went through the classic book Structure and Interpretation of Computer Programs orSICPin a course. Very excellent book!During the summer I also took part inIDA Summer of Code 2014where I contributed torust. I also had mysecond summer job at Configura:Our octree implementationFifth yearAt the end of my fourth year I had grown a bit study tired. I had thought the summer jobs would have helped a bit but although the summer jobs were amazing it might have been better to take a bit of a holiday, which I did not do at all.But the real issue wasnât me getting sick of studying, although I was a bit unmotivated, but I was fast approaching a burnout. It never got so serious that I became apathetic but it was pretty bad for a while. The last semester in my 4th year I only did 27 hp (30 hp is the target value) and the first semester in my 5th year I only managed 24 hp. I had accumulated extra points so I finished the university with 308.5 hp, of the required 30 hp, but I was less effective the last 1.5 year or so than usual.I might write more about my burnout in another post, but I did three main things to get out of it. The first thing I did was to start CBT (Cognitive Behavioral Therapy or Kognitiv beteendeterapi in Swedish). The second was to continue with things which made me happy and more importantly gave me more energy. Basically I started exercising more regularly. And the third thing I did was to scale down on my ambitions and focus on taking care of myself, this is the reason I didnât study 100% the first semester.In the end I think I managed to get rid of the worst effects of the burnout and I managed to finish my studies. I was also a mentor in discrete math for a fourth time. I didnât complete a ton of courses as the whole last semester was spent on writing myMasterâs thesisbut I did complete a great course in cryptology and one about logic programming in Prolog.The cryptology course was especially good as it even introducedBitcoinand the way the blockchain worked. Big kudos to that! I was aware of Bitcoin before but I wasnât aware of the implementation details.All coursesFor reference this is the list of courses I completed. It surprises me at least to see how much Iâve actually done these years.I started two extra courses which I never finished:TAMS15   Mathematical Statistics, first courseTATA49   Geometry with ApplicationsThe statistics course was started during my first year, but I finished a similar in my later years and the geometry course was taken as a fun extra course but I later decided to skip it.First yearTATA41   Calculus in One Variable 1TATA42   Calculus in One Variable 2TATA65   Discrete MathematicsTDDC10   Perspectives to Computer TechnologyTDDC66   Computer Systems and ProgrammingTDDC67   Functional Programming and LispTDDC68   Imperative Programming and AdaTSEA22   Switching Theory and Logical DesignTSTE58   ElectronicsTTIT02   Foundation Course in MathematicsSecond yearTAOP33   Combinatorial Optimization, Introductory CourseTATA24   Linear AlgebraTATA53   Linear Algebra, Honours CourseTATA61   Multivariable and Vector CalculusTDDC36   LogicTDDC69   Object Oriented Programming and JavaTDDC70   Data Structures and AlgorithmsTDDD60   Interactive SystemsTFYY68   Engineering MechanicsTSEA43   Digital Project LaboratoryTSEA47   Computer Hardware and Architecture, part 1TSEA49   Computer Hardware and Architecture, part 2Third yearTAMS27   Mathematical StatisticsTATA50   Transform TheoryTATA64   Graph TheoryTDDB68   Concurrent Programming and Operating SystemsTDDC93   Software Engineering TheoryTDDD09   Software Engineering ProjectTEIO27   Technology Based EntrepreneurshipTFYA68   PhysicsTGTU50   Visits to IndustryTSDT18   Signals and SystemsTSEA29   Microcomputer, Project LaboratoryTSKS10   Signals, Information and CommunicationTSRT12   Automatic Control YFourth yearTANA09   Numerical Algorithms in Computer ScienceTATA54   Number TheoryTD1077   Advanced Algorithmic Problem SolvingTDDA69   Data and Program StructuresTDDB44   Compiler ConstructionTDDC17   Artificial IntelligenceTDDD14   Formal Languages and Automata TheoryTDDD20   Design and Analysis of AlgorithmsTDDD48   Automated PlanningTDDD56   Multicore and GPU ComputingFifth yearTDDD08   Logic ProgrammingTDDD38   Advanced Programming in C++TGTU49   History of TechnologyTQDT33   Degree Project - Masterâs ThesisTSIT03   CryptologyPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner ID draft Ãrebro</title>
      <link>https://www.jonashietala.se/blog/2015/08/29/netrunner_id_draft_rebro</link>
      <description>Netrunner ID draft ÃrebroPublished:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerI entered an ID draft tournament inNetrunnerhosted in Ãrebro and this is a brief overview of what happened. Disclaimer: My memory is a little bit fuzzy and the events may or may not correspond to what actually happened.The draftThe idea was to randomly sort all entrants and in turn each chooses an ID which nobody else can choose. When everyone has chosen an ID the procedure continues in reverse order. This means you can choose either corp or runner early and leave the other until later.I got the 5th spot and Geist, Nasir, RP and NEH was chosen before me. If the goal was to do well I should probably have chosen a strong corp like Blue Sun, HB or possibly PE but I had just started playing Noise and I was loving every second of it so that was my choice. It was a little bit boring perhaps as it wasnât a new ID I had to come up, but I had no idea of what I actually wanted to play with as corp so I simply delayed that decision. When it was my turn again most actually good corps had gone and I could choose between Titan, Harmony Medtech, Argus and Biotech (and some othersâ¦). Recently some popular Titan lists had popped up on netrunnerdb so I took that one.This is the drafting result:Frida unfortunately did not attend the actual draft and she had to pick both runner and corp last.With Wayland and Jinteki being relatively popular I was thinking of adding Iâve had worse to Noiseâ¦ But in the end I decided to be ballsy and skip all that. And no plascretes. But I thought with some careful play and Imp/Utopia shard I could manage. Instead I went with the no frills 3 Aesop/3 Cache low economy approach which Iâve found is perfectly fine. I slotted 2 Hacktivist meeting as the local playgroup in LinkÃ¶ping insisted on running Cerebral static and Manhunt and maybe others would do weird stuff with currents as well?This is the Noise deck.The Titan buildis basically the popularAtlas Shruggedwith Beanstalk replacing Subliminal messaging and an extra Crisium Grid for the relative increase of criminal. In testing the corp deck performed okayâ¦ But never amazing. Noise performed consistently whenever I didnât just die against Jinteki due toâ¦ Jinteki stuff.The matchesWhen we arrived at Ãrebro the basement already full of Magic gamers is already hot and things would only get worse. I didnât get enough sleep and Iâm already tired but still pumped to play some Netrunner!  The tournament features five rounds of swiss without a cut.Match 1: Yoshi, Reina/Blue Sunvs ReinaHedge fund, beanstalk, install ice over HQ. Runner installs things, runs on R&amp;D and misses. I sea source-scorch second turn as he has 2 (or 3?) cards and I feel a bit bad about it. Unfortunately silly wins and losses like these happens sometimes.vs Blue SunHe gets a great start with ice and money. Iâm having trouble setting up and I canât find D4v1d before he can retrieve his oversighted Curtain Wall. Iâm too scared/incapable of stealing his agendas as heâs rushing them out. When I finally get my Imp going on HQ he already has a scored atlas with two tokens and he scores out a hostile in a flash. I made a mistake of not installing a clone chip as I had a clot in my heap and I maybe should have been more aggressive but overall Yoshi outplayed me.2 points, 1-1Match 2: Dan, TWIY/Whizzardvs TWIYDan is from LinkÃ¶ping, same as me, but I havenât actually played him but I knew his was a variation of theMidseasons/Psychographics rush deck. I play very carefully and builds up while he takes money. He gets a bunch more money and I continue milling and building. Iâm waiting for him to start scoring out and I go through a Tollbooth and imps away an NAPD contract, but he never gets the astro train going while I sit back milling with clot ready. The game basically end when he never scores out and I get a mill victory.vs WhizzardHe trashes my sansans but I get some points scored. The game goes a bit long and weâre almost going to time. I think I could have won by rezzing an Archer against his faust when he doesnât have enough cards to continue the game, but I stress out and for some reason I donât rez it. Later he finds a 3-pointer for the win from HQ. I guess I took the risk as he could have just as easily hit a Snare and loose.4 points, 2-2Match 3: Johannes, Harmony Medtech/Geistvs GeistIâve played against Johannes a lot so I know his deck and he knows mine. I get an excellent start with 3(!) Quandary protecting HQ, R&amp;D and my remote. I manage to tax out his breaking and entering breakers as I score out with the help of sansan. Annoyingly Forger prevented me from scorching him more than once but in the end I manage to score out behind 2x barriers and a Quandary as he had basically exhausted his breakers and clone chips.vs Harmony MedtechI got set up with Noise fast and controlled the game from the start. He scored out a Nisei but I was never really worried. I made a stupid move of running archives when I had just trashed a Cyberdex and later I ran it again! But in the end my start was just too good and I won by pounding HQ with Lamprey, Imp and parasites.8 points, 4-2Match 4: Magnus, Nisei Division/Valenciavs Nisei DivisionIâve never played Magnus but I know heâs a very good player so Iâm really nervous to play him. He installs over R&amp;D and remote and does a hedge fund. I install a lamprey and imp and run HQâ¦ Just to hit a Snare. Sigh. I thought about it but I figured it wouldnât be a big deal, but it was. I donât shake the tag as I donât have any resource installed and he scorches me. Huge misplay from me and now Iâm trying not to tilt too hard.vs ValenciaI have a fairly bad starting hand which I keepâ¦ For some unknown reason. Heâs very aggressive and he gets a medium dig going but misses. I donât care about it too much and continue trying to score/finding my pieces. He does another big medium dig through a Grim, paying 3 + 1 cards for it and another ice, and hits a Snare on his last click, with two cards left in hand. I have a jackson out so I click to draw two cards and find the scorch for the win.Funny how both games ends in basically the same way. Iâm still a bit upset about the way I lost but it feels a little bit better that I could pull out a win against such a good player, even if it was a lucky one.10 points, 5-3Match 5: Frida, Argus/Silhouettevs ArgusI know Frida loves meat damage so I play very carefully. I get a good start and I imp a bunch of things from R&amp;D while milling a healthy amount. She scores out a couple of 1-pointers but Iâm milling very fast and sheâs not threatening me yet. When she goes up to 5 points I have as much money as she has so I make a run on archives (I also have an installed Utopia Shard) and take the win.vs SilhouetteAgain I get a good start and I get a Crisium grid on HQ to stop siphon. She doesnât find her breakers and I get a hostile scored followed by the atlas train.14 points, 7-3Final resultsI won 7 matches, 4 with Titan and 3 with Noise. Surprisingly my corp faired better than my runner which can partly be explained by the two lucky flatlines I got. But overall it felt a lot better than during testing. Perhaps itâs because Iâve never played a rush deck before and the style takes a little getting used to? Then I got the silly scorched loss with Noise which really shouldnât happen if you play as you should. But mistakes happen. Iâm quite glad I managed to avoid tilting though.Generally with Noise I feel if the corp doesnât push scoring windows hard youâre always in control of the game. Even then itâs difficult without a secondary win condition like scorch or midseasons. This is what Yoshi did with Blue Sun so very well where I really felt behind the whole game, but perhaps I was being too cautious.Overall Iâm quite pleased with my result all things considered. This is the final results after the five rounds of swiss:There were quite a lot of prizes available and after the three victors took theirs this is what took home as my 4th place:I wanted to have a full playset of aesopâs, especially as I really love Noise, but the mat feels a little more special. I still want the alt-arts though, hopefully I can get them from somewhere else.Published:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Summer Tournament LinkÃ¶ping</title>
      <link>https://www.jonashietala.se/blog/2015/09/18/netrunner_summer_tournament_linkping</link>
      <description>Netrunner Summer Tournament LinkÃ¶pingPublished:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerThere was anotherNetrunnertournament this Sunday with 8 entrants. We had two new legal data packs with Old Hollywood and The Universe of Tomorrow so a lot of new things were tried. I heard a rumor that a full playset of both Aesopâs Pawnshop and Wyldside were available so I decided to not take my jankiest ideas and playNoiseandBlue Sun.The Noise buildwas practically unchanged from what Iâve played previously. The Blue Sun was a new glacier build with space ice and the new agendas Hollywood Renovation and The Future is Now. I wanted the threat of scorch and I also threw in two snares for extra spice.SwissWith 8 players we did 4 rounds of swiss, without any cut.Match 1: Dan, Valencia/Haarpsichordvs ValenciaI tried to push a Hollywood Renovation early, but it was snagged with blackmail.  It was a big gamble which unfortunately didnât pan out.  This was a kinda large mistake, but in the end it didnât matter.  I got my huge ice up and running and I forced him out of my servers.  I made a big play with Hollywood Renovation where I fast advanced a The Future is Now with the 5th and 6th advancement tokens and the game was basically over from that point.  I think I flatlined him in the end, but thatâs more of a symbolic victory as I could have just as easily scored out.vs HaarpsichordSuper close, he had scored a lot of points and I was sitting with clot. In the end he installs 3 new remotes, one behind an ice. I push through the ice to steal the first agenda and I imp the second one (now the Imp is without counters). So I install another program, trashing the imp, then trashing the third remote with the imp. All new remotes were agendas. After this my victory was clear as a run on archives sealed the deal.4 points, 2-0Match 2: Harald, Haarpsichord, Hayleevs HaarpsichordI felt like I was behind the whole game, but so did Harald. In the end I managed to snag another very close win, but Iâm not sure how that happened. All my Aesopâs were in the bottom of my stack but somehow I managed to steal/imp enough to make up for it. What decided things was a Clot hidden on my street peddler, which he overlooked. Without it I should have lost the game.vs HayleeI allowed some accesses to R&amp;D, but mostly no big damage was done. Then I sealed the game up and the win was basically clear. I had a public support ticking down but we ran out of time so I got one point for being up to 6 agenda points. Maybe I could have played it faster to get the victory on time, but I donât know.7 points, 4-0Match 3: Henrik, NEH, Chaos Theoryvs NEHI got set up fairly well and I managed to trash a sansan early. I had clot and everything was going alright. I hit a Snare in a remote which took me off guard a bit. The turn after he made another remote and I contemplated running on it, I did have imp tokens after all, but I decided it was fine to possibly allow him a single agenda. Big mistake as I installed cards down to 3 cards in hand and I died to a breaking news and scorch. For some reason I was convinced he was running the fast advance version, or some kind of nearpad, but the reality is I played too fast and didnât consider everything properly. Live (or die) and learn I guess.vs Chaos TheoryAfter I rezzed an Archer on the remote it was basically game over as he couldnât break it with the exception of datasuckers/parasiters, which quickly got used. I iced up my centrals with huge space ice and I could simply score out and win. He tried a big Vamp play against HQ, but on the last click and with a tag he died against double scorch after taking down my curtain wall.9 points, 5-1Match 4: Johannes, Haarpsichord/Ianvs HaarpsichordA blistering game where he rushed out agendas and I tried to punish/steal with Imp. The game slowed down when I had a Clot on board and I pushed up to 6 points. A run on archives with a Jackson reshuffle and then triggering Utopia shard sealed the deal.vs IanWe laughed about our decks being super late game focused and he stayed true to his words and he installed a ton of resources, three Gang Signs and two HQ interfaces. I was kinda agenda flooded but I managed to push them out in Archives with double Jackson. The game was decided in a funny way I think, even if I misplayed it quite a bit (I blame tiredness or something!).I had Hollywood Renovation with a bunch of advancement tokens, The Future is Now in a naked remote and one Snare and one Scorch in my hand. So I advanced Hollywood Renovation 3 times and scored it. He hit a Snare but nothing else with all his accesses. Then I scored The Future is Now and fetched my second Snare from R&amp;D, which he accessed and died to. Naturally the correct play would have been to advance Hollywood Renovation twice, score The Future is Now and fetch the Snare. Now if he hits a Snare I can just scorch him on my last click.13 points, 7-1The resultsThe self critic in me keeps on thinking about the lost game and the game which went to time, but some small part of me tries to point out that things actually went well. I felt fine in all games and it never felt hopeless in any game. I did take âbetterâ or more serious decks and the other guys joked about my very serious decks, but itâs fine. I did accomplish my goal and I even won the tournament, yay!I managed to achieve my goal and I got to choose a playset of Aesops! I also got a couple of Swordsman and a new deckbox. Itâs a little bit sad that I declined the Femme Fatale alt-art as itâs preeettyâ¦ But maybe next time.Published:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Winter Kit Tournament LinkÃ¶ping</title>
      <link>https://www.jonashietala.se/blog/2016/01/16/netrunner_winter_kit_tournament</link>
      <description>Netrunner Winter Kit Tournament LinkÃ¶pingPublished:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerAfter quite the hiatus fromNetrunnerI had a chance to join a tournament here in LinkÃ¶ping with 14 participants. The number of players has grown a lot since the previous tournament which is really great.As I really wanted to win the wonderfulDay Jobplaymat I went with two of the best decks I could come up with. I went with theNoisedeck Iâve been playing a while which has been performing really well. I was expecting a lot of EtF so I was on the verge on playing a classicLooking 4 JobWhizzard deck but I switched to Noise just before the tournament as Iâm more comfortable with it but I also find it more fun to play Noise than anything else. As for the corp I had played a littleFoodcoatssince it dominated worlds and it has felt extremely solid overall.Tournament structureWe did 4 rounds of swiss without a cut, even though I was personally hoping for 5 rounds. The more games I can play the better it is, I just love to play you know. As usual you get 2 points for each game you win and 1 point for a timed win.Round 1: Dan, Reina/Syncvs ReinaHe got me low on credits early but I played it slow and slowly but steadily accumulated enough credits to build rez enough ice and score out. Foodcoats destroyed the game.vs SyncI was really scared of Sync as Noise is weak against tags and I donât run any meat damage protection. But I got a nice start and got a few points lead but he still managed to score out some astro counters and I carelessly gave him a Quantum Predictive Model so he got up to 5 point. Luckily I had set up the shard combo with utopia and hades shard I maged to score out with them the click before he would have won.Generally I need to be more mindful of quantum predictive model. I actually think itâs a really good agenda in this type of deck.4 points, 2-0Round 2: Johannes, Leela/Haarpsichordvs LeelaI was really, really poor in the beginning of the game and I had trouble getting my campaigns to stick. I made the really big mistake of trying to rush out an Accelerated Beta Test but I was too poor and too scared of Legwork and The Makerâs Eye after bounce to do it. In the process I had blocked Breaker Bay Grid from my campaigns which made the game really slowâ¦ I think I could have won in the end anyway but he got through my remote twice by forcing through an Ichi. Well played by him but I feel like I should have done better.vs HaarpsichordA bit rushed on time and super scared of 24/7 News Cycle I got a fairly good grip in the beginning with a Lamprey lock and I stole a couple of agendas early. Unfortunately I accumulated two News Team and nullified my lead. I still managed to find a couple of agendas to have the lead.In the turn I went through a Gutenberg and took a tag (which I could have avoided with Faust) and gave him a Quantum Predictive Model while I was on 4 points. If I had just broken the sub I would have gone up to 5 points and I had a Hades Shard with at least one 2 pointer in the archiveâ¦ Once again I need to be more mindful of taking tags. Still had more points and got the timed win.5 points, 3-1Round 3: Henrik, Noise/Blue Sunvs NoiseEtf got set up well and the runner didnât do anything useful at the start and I got set up really well economically and I was quite safe. Game ended early due to a faceplant into Assassin with only 2 cards in hand and I had a ton of money.vs Blue SunI knew Henrik ran an Accelerated Diagnostics combo deck and I was again scared of dying to Scorched Earth with my not having any protection. But I got a lot of HQ and R&amp;D accesses by trashing two Spiderwebs and an Assassin and I managed to ping away some kill pieces. He drew a lot with jacksson and managed to end up with all three copies of scorch in archives and I finally won by a Medium for his whole R&amp;D.9 points, 5-1Round 4: Fredrik, Kate/EtFThe last game of the tournament and I and Fredrik were the top dogs. As I had one timed win but Fredrik did not so I had to win both games to win the tournament. Tough task as Fredrik is a very solid player.vs KateI was a little flooded in the beginning but I didnât get punished for it and after that I drew really good. I managed to stick the campaigns in the remote and I had a ton of money basically the whole game. Fredrik security nexus kate and I managed to get two 2-points early and I didnât draw any agendas in the midgame when he was set up with his monster rig.At the end of the game I had built up a 4-Ice remote and a 5-Ice R&amp;D. He hit me with an Escher which felt quite awful as he had a bunch of R&amp;D interfaces but it turns out my super taxing ice and R&amp;D luck saved me. Foodcoat can and will make extremely taxing servers it turns outâ¦vs EtFFredrik ran a sort of Team Sponsorship fast-advance/rush EtF which I wasnât looking forward to all that much. But luckily he didnât draw a lot of economy and I managed to keep him down economically by a combination of lamprey and forcing him to rez ice. I also sniped an early 2-pointer by clicking through an eli and breaking a marcus with Faust, which felt really good admittedly. Overall I managed to keep up a ton of pressure on him even though I didnât find aesopâs until fairly late.I really felt in control the whole game and the game ended as a timed win for me. The only bigger mistake I recall is one I did on my last turn in the game where I installed a cache and then ran on the remote server thinking I could beat the ash trace just to plant into a Turing. At this point I was already at 5 points and what I could have done is walk through R&amp;D 2 times by taking assassin to the face to maximize my chances of getting a regular win.12 points, 7-1The resultsI was a bit down after loosing points in the second round but I managed to recoup very well in the end. I felt I had some really good in some key matches and my decks served me very well. I will probably try some other corps but I may still continue playing Noise even after the most wanted list.In the end I managed to win the whole tournament which I didnât really expect. I was hoping to do well but I wasnât expecting it.As my prize I naturally chose Day Job. The Ice Wall participation prize was great as well. Iâm a little sad I didnât get the Corroder one as I think it looks really good, but you canât get everything in this world.Was a good tournament and everyone were once again awesome! Iâm already planning for the next one!Published:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>I'll give up Neovim when you pry it from my cold, dead hands</title>
      <link>https://www.jonashietala.se/blog/2025/02/18/ill_give_up_neovim_when_you_pry_it_from_my_cold_dead_hands</link>
      <description>I'll give up Neovim when you pry it from my cold, dead handsâPublished:February 18,2025inc1366c4Tagged:Life Hacking,NeovimI recently came upon a horror story where a developer wasforced to switch editor from Neovim to Cursorand I felt I had to write a little to cleanse myself of the disgust I felt.Two different ways of approaching an editorI think that thereâs two opposing ways of thinking about the tool that is an editor:Refuse to personalize anything and only use the basic featuresâAn editor is a simple tool I use to get the job done.âGet stuck in configuration hell and spend tons of time tweaking minor thingsâAn editor is a highly personalized tool that works the way I want.âThese are the extreme ends of the spectrum to make a point and most developers will fall somewhere in between.Itâs not a static proposition; Iâve had periods in my life where Iâve used the same Vim configuration for years and other times Iâve spent more time rewriting my Neovim config than doing useful things.I donât differentiate between text editors and IDEs as I donât find the distinction very meaningful.
Theyâre all just editors.Freedom of choice is importantFreedom of choice is more to be treasured than any possession earth can give.David O. McKaySome developers want zero configuration while others want to configure their editor so itâsjustright.
Either way is fine and Iâve met excellent developers from both sides.But removing the power of choice is ahorribleidea as youâre forcing developers to work in a way theyâre not comfortable with, not productive with, or simply donât like.
Youâre bound to make some of the developers miserable or see them leave (usually the best ones who can easily find another job).To explain how important an editor might be to some people, I give you this story about Stephen Hendryâone of the most successful Snooker players everâand how important his cue was to him:In all the years Iâve been playing Iâve never considered changing my cue. It was the first cue I ever bought, aged 13, picked from a cabinet in a Dunfermline snooker centre just because I liked the Rex Williams signature on it.I saved Â£40 to buy it. Itâs a cheap bit of wood and itâs been the butt of other playersâ jokes for ages. Alex Higgins said it was âonly good for holdinâ up f*g tomatoes!âBut I insist on sticking with it. And Iâve won a lot of silverware, including seven World Championship trophies, with it. Itâs a one-piece which I carry in a wooden, leather-bound case thatâs much more expensive than the cue it houses.But in 2003, at Glasgow airport after a flight from Bangkok, it emerges through the rubber flaps on the carousel and even at twenty yards I can see that both case and cue are broken. Snapped almost clean in two, the whole thing now resembling some form of shepherdâs crook. The cue comes to where Iâm standing, and I pick it up, the broken end dangling down forlornly.I could weep. Instead, I laugh.âWell,â I say to my stunned-looking friend John, âthatâs my career over.âStephen Hendry,The MirrorSmall improvements leads to large long-term gainsKaizen isnât about massive overhauls or overnight success. Instead, it focuses on small, continuous improvements that add up to significant long-term gains.What is Kaizen? A Guide to Continuous ImprovementI firmly believe that even small improvements are worth it as they add up over time (also seecompound interestand how it relates to financial investments).An editor is a great example where even small improvements may have a big effect for the simple reason that you spendsomuch time in your editor.
Iâve spenthoursalmost every day inside (neo)vim since I started using it 15+ years ago.Even simple things like quickly changing text inside brackets (ci[) instead of selecting text with your mouse might save hundreds of hours during a programming careerâand thatâs just one example.Naturally, as a developer you can find small but worthwhile improvements in other areas too, for instance:Learning the programming languages and libraries you use a little betterCustomizingyour keyboardandkeyboard layoutThis is more for comfort and health than speed but that makes it even more important, not less.Increasing your typing speedSome people dismiss typing speed as they say theyâre limited by their thinking, not typing.
But the benefit of typing faster (and more fluidly) isnât really the overall time spent typing vs thinking;
itâs so you can continue thinking with as little interruption as possible.On some level you want to reduce the time typing in this chain:thinkâ¦ edit, thinkâ¦ edit, thinkâ¦Itâs also why the Vim way of editing is so goodâitâs based on making small edits and to return quickly to normal (thinking) mode.Some people ask how can you afford to spend time practicing Vim commands or to configure your editor as it takes away time from work?But I ask you: with a programming career of several decades and tens of thousands of hours to spend in front of your computer, how can you affordnotto?Neovim is versatileDuring the years Iâve done different things:Studied at the University and then started working as a developer.Used many different programming languages and paradigms.Changed domains many times (games, grammars &amp; language design, graphics programming, web development, â¦)Switched keyboardandkeyboard layoutmultiple times.Been blogging andwrote a book.The one constant through all of this has been Neovim.
Neovim may not have the best language specific integrations but it does everything well and the benefit of having the same setup for everything you do is not to be underestimated.
It pairs nicely with the idea of adding up small improvements over time; every small improvement that I add to my Neovim workflow will stay with me no matter what I work with.I did use Emacs at work for years because their proprietary language only had an Emacs integration and I didnât have the time nor energy to create one for Neovim.
WhileEvilmade the experience survivable I realized then that I absolutely hate having my work setup be different from my setup at home.People werenât overjoyed with being unable to choose their own editor and Iâve heard rumors that thereâs now an extension for Visual Studio.Neovim is easily extensibleNeovim: a Personalized Development EnvironmentTJ DeVriesA different take on editing codeIâve always felt that Vimscript is the worst part of Vim.
Maybe thatâs a weird statement as the scriptability of Vim is one if itâs strengths;
and to be fair, simple things are very nice:nnoremapj gjsetexpandtabBut writing complex things in Vimscript is simply not a great experience.One of the major benefits of Neovim is the addition of Lua as a first-class scripting language.
Yes, Lua isnât perfect and itâs often too verbose but itâssomuch better than Vimscript.
Lua is the main reason that the Neovim plugin ecosystem is currently a lot more vibrant than in Vim.Making it easier to write plugins is of course a boon, but the real benefit is in how it makes it even easier to make more complex customization for yourself.
Just plop down some Lua in the configuration files you already have and youâre done.
(Emacs worked this out to an even greater extent decades ago.)One way I use this customizability is tohelp me when Iâm blogging:A custom picker to search and display blog postsAutocomplete tags, post urls, and moreLSP-like functionality to display warnings and jump between postsUse treesitter to convert links, autoformat lists, and jump aroundMaybe you donât need to create something this big but even small things such as disabling autoformat for certain file types in specific folders can be incredibly useful.Approachability should not be underestimated.While plugins in Lua is understandably the focus today, Neovim can still use plugins written in Vimscript and 99% of your old Vim configuration will still work in Neovim.Neovim wonât go anywhereThe old is expected to stay longer than the young in proportion to their age.Nassim Nicholas Taleb, âAntifragileâThe last big benefit with Neovim Iâll highlightâand why I feel fine with investing even more time into Neovimâis that Neovim will most likely continue to exist and thrive for years if not decades to come.While Vim hasâafter an impressive 30 years of developmentârecentlyentered maintenance mode, activity in Neovim has steadily increased since the fork from Vim more than a decade ago.
The amount ofhigh quality plugins, interest inGoogle trends, andGitHub activityhave all been trending upwards.
Neovim was also the most desired editor according to thelatest Stackoverflow developer surveyand the overall buzz and excitement in the community is at an all-time high.With the self-reinforced behavior and benefits of investing into a versatile and flexible editor with a huge plugin ecosystem such as Neovim I see no reason for the trend to taper off anytime soon.Neovim will probably never be as popular as something like VSCode but as an open source project backed by excited developers, Neovim will probably be around long after VSCode has been discontinued for The Next Big Thing.Published:February 18,2025inc1366c4Tagged:Life Hacking,NeovimPrevious</description>
      <pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Lindhska Store Championship Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/04/02/netrunner_lindhska_store_championship_rebro</link>
      <description>Netrunner Lindhska Store Championship ÖrebroPublished:April  2,2015in814820fTagged:Netrunner,GamingAfter the awesomeness during theprevious store championship, I decided to go to the store championship at Lindhska Bokhandel in Örebro.I brought a modified version of the same corp I used the last time, aBlue Sun kill deckand anew runnerwith Leela Patel. See the links for cards and some card choices.The tournament was a 26-player one, at least that’s the number I heard, with 5 rounds of swiss followed by a double elimination bracket. 7 players from Linköping went, again I think but I’m not sure if that’s the correct number.SwissMatch 1, Tennin/Reinavs TenninMemory is a bit fuzzy here. I think I got off to a good start, but somehow the corp stabilized and we went into a long slog of a game. For some reason the corp managed to score out before I could find the final agenda.It certainly felt like I could have won the game, but I’m not sure what I did wrong. Might be that I wasn’t comfortable with the deck and played too aggressively. 0-2vs ReinaAgain I don’t remember the specifics. We had very little time and I manage to score out an agenda, so I get a timed win.Still, corp felt great and I was in control, 1-2.Match 2, RP/Chaos Theoryvs Replicating PerfectionAh RP. Actually the first time I’ve played against the id, but I had a pretty good idea of how to approach the game. I scored an early agenda but I’m slowly getting locked out. Then he makes a pretty big misplay - he flips a naked remote and he wants to score, but it’s Nisei MK II instead of a 3/2 agenda and now he’s flustered. I apologize and I score the Nisei and I remove the Enhanced Login Protocol.Still, he’s not out of the game. I run indexing but he hid a Jackson in a remote, stupid mistake! I manage to same old thing indexing again and I score another agenda and I place another agenda as the 5th card. I carefully count the cards and I manage to score the winning agenda, before being locked out of the game.The opponent said he’s only played a week… Still played pretty good I’m very glad for that victory. 3-2vs Chaos TheoryAnother quick corp game. Snare last click into scorch for a simple victory. His inexperienced lost him the game there.5-2 and feeling better.Match 3, RP/MaxXvs MaxXWe’re 6 players from Linköping and 2 from Stockholm at the top. Sadly I’m facing David, also from Linköping and we’re on our way to knock each other down.The game is slow, very slow. I feel in control and take it slow and easy. Scoring some agendas when I get them, but not drawing all that much. MaxX runs out of cards and runs a Levy. Somehow he runs of cards again and I know I’ve won.I have no idea how this happened, but we actually went to time, during our first match! Maybe it really was an intense game or maybe I was just tired or hungry… But anyway it happened. I manage to set up a win-win scenario for me during my second-to-last turn. Either he lets me score out or he runs the remote and let me sea-source scorch him to death (he had a hand size of 3 due to an early Cerebral Overwriter). He cooses the second option.7-2Match 4, NEH/Whizzardvs Near-Earth HubThis was by far the most stressful/exciting game of the day for me. I get a bad hand and I mulligan… Into a much much worse hand. No economy, no nothing. The corp scores an early astroscript, this isn’t looking so good… I do something, I can’t remember, then he sets up  a remote with one advancement counter on. Curious, it’s probably an NAPD, but sadly I can’t get in and score so I’m gearing up for a next turn combo.Sadly, it’s a Project Beale, worth 3 points and he’s got an astroscript token. From bad to worse, much worse. I desperately run his hand and his remote. Oh no, he’s got a scorch on top of R&amp;amp;D and he’s got a Data Raven protecting HQ. Luckily I’ve got a plascrete so I go tag-me with a Legwork, finding nothing. He’s using Jackson to draw like mad.I run another Legwork with a same old thing through the Data Raven and I find two agendas and I get in some single-accesses on R&amp;amp;D. Lady luck isn’t smiling for long though as he draws and install-advance a remote. Surely an NAPD, which I’m too poor to get at.My only hope is R&amp;amp;D and I have two interfaces out so I can access 3 cards. If I can bounce the NAPD I might still have a chance. The first card is a.. NAPD which I can’t steal. The second is a Breaking News so I bounce the advanced card now sitting on 5 agenda points.I’m too poor to get the NAPD and the next turn I get Scorched to death.The game was practically over from the terrible start, but I almost managed to steal a win. I got praise from the opponent but I can’t stop but think that I should have had a few more credits for that NAPD…7-4, feeling the pain.vs WhizzardAnother id I haven’t played against. He tried, and was successful for a while, with killing my oversighted curtain walls and keeping my economy low. But still, I managed to score out two the cleaners and putting more and more pressure as I gradually build up my economy lead. I think I hit a shattered remains as well.The game ends with me advancing the winning agenda, he tries but cannot access it or any other agenda, and I score for the win.Again corp is feeling absolutely great. 9-4Match 5, EtF/KateThis time I’m faced up against Henrik, my buddy from Linköping who knows my decks and I know his decks. Sadly it appears this is the battle for top 8.vs Engineering the FutureDuring practice I felt very confident with my Leela deck and I get a great start scoring two 3/2 agendas. Not thinking more about it I try to build up a bit and getting ready to score the winning agenda as I know he has a few 5/3.But things are not shaping up that way. I try to keep is economy low but he manages to get two adonis campaigns up and running and he hits two large GRNLD Refineries. Probably a huge misplay by me to allow that to happen. With his economy up he gets some nice taxing servers up and my aggressive running has not paid off at all. He’s all set up and I practically have nothing.My last hope is an indexing through a Janus I know is there. By my counts I’m only 2 or 1 credit off from making two succesful runs through R&amp;amp;D in the hopes of scoring out, but it’s not meant to be. I’ve already accumulated 3 brain damage from previous (too aggressive) encounters.With great play he manages to score out and win. Well played. 9-6vs KateAgain I’m having difficulties to recall the specifics of the match. I know I managed to hit one shattered remains to stop his drip econ for a while. I manage to score an agenda but time is running out.I have a 5/3 agenda which I’ve already advanced twice. I literary have my whole hand full of kill cards: 1 snare, 1 sea-source, 3 scorch and 2 punitives and with more money I’m just waiting for him to make a run. I decide to fake the agenda as the almighty 9/6 Government Takeover agenda and I advance it up to 7 in the course of two turns. In hindsight it might have been better to score it out as a 5/3, but that’s not what I did.So sitting at 7 advancement counters Henrik decides to… Not run it! Instead he runs my hand twice, the second time he imps my sea-source. Sigh.So the game ends with me winning on time, somehow it feels a bit frustrating as I had so much control the whole game, thinking how can I loose? Turns out, with some bad luck and some good runner decisions it’s quite possible not to win.10-6.The CutAs Henrik and I had the battle for the last place into playoffs, which I lost, Henrik makes the cut on 11 points and we’re a bunch of other players with 10 points.  Huge congrats to Henrik as he really did play better than I did.SummaryOnce again I’m amazed by the friendliness of the Netrunner community. Everyone was really nice and friendly. I joked around a bit with some guys and girls I’ve never even met before, which is no small feat with a very shy and introvert person such as myself. I got a ride all the way from Linköping to Örebro and the guy with the other car even came and asked me if I wanted to come with him earlier as I got knocked out. As it happens I stayed and watched some of Henrik’s and Fredrik’s matches.As for the games themselves I’m super happy with my corp deck which practically went undefeated during the tournament. I felt quite comfortable to win both the games where I got a timed win from.The runner deck however I’m not super happy with. It felt slow and low on economy and just a bit awkward. Some of the problems can be attributed to good corp play: I didn’t land many good account siphons which made my economy quite bad and they played around Leela’s ability quite well. Ice up centrals at least twice and don’t score out agendas on the last click.But mostly I think I didn’t play the runner deck right, I wanted to play more aggressively than maybe you’re supposed to with a slower control deck such as the one I had made. I really need to try out a Leela build based on Desperado and an economy package with Dirty Laundry and Security Testing, I think it might fit my style better. I also want to play around more with the wonderful Anarchs…Looking forward to the next time I can play some Netrunner!Published:April  2,2015in814820fTagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Years at Linköping's University</title>
      <link>https://www.jonashietala.se/blog/2015/07/22/5_years_at_the_university</link>
      <description>5 Years at LinkÃ¶ping's Universityâ˜Published:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolI recently finished my masterâ€™s degree (civilingenjÃ¶r or civil engineering) at LinkÃ¶pingâ€™s University. At first it felt like 5 years would be an eternity, but in hindsight it was over in a flash. my gut feeling is that I havenâ€™t learnt or done anything of note, except you know actually finishing my degree, but if I sit down and think about it I have done some things. Actually quite a lot of things.First yearI moved to LinkÃ¶ping with my girlfriend and it was quite an adjustment as we both moved from our parents and to a city where we practically knew nothing and no one. But we managed fine and while we never went out to parties or went to other student events we found some friends. I also startedITF Taekwon-doafter a few months.There werenâ€™t too much to do in school. The focus was on foundation math courses, mostly things I had already done but needed refreshing, and on introductory programming courses which werenâ€™t challenging at all for me.Second yearDuring the second year I felt the courses were harder and more interesting than the first yearâ€™s courses. The courses in Combinatorial Optimization, Data Structures and Algorithms and Linear Algebra were fun and new for me. I also took an extra continuation course in Linear Algebra which was interesting.When I started the university I thought I would like electronics and hardware construction, but the courses from the first year were really not interesting at all. Even when making the transition from analog to digital I didnâ€™t care for it at all. But it all changed when we started actuallybuildingthings with digital circuits.At first we had an introductory course where we built digital clocks and counters. You were supposed to have prepared a design sketch for the labs, but me and my partner for some reason never did it, and so we were always running late in the labs. I remember one very fun, or horrible, occasion where we had struggled a lot with one lab and we had spent almost the full 4 hours until we finally completed it with maybe 10 - 15 minutes left. Filled with relief we started taring apart what we so painstakingly had built. When done we realized we had one part left where we were supposed to use the circuit we just destroyedâ€¦ Luckily we could use the circuits another group had made, but it was a painful lesson in always reading the descriptions and prepare for the labs in advance.The digital circuit labs were followed by a digital project of our own choice. Wedesigned a processorwhich could run theCore Wars 88 standardand we simulated it on an FPGA.The main block schema for the processorAnd here is a small video of the simulation in action:Click to view on YouTubeThe project was interesting as it was an outlet for our creativity and it touched on several different areas. Processor design, hardware debugging (!) and I wrote aredcode assemblerfor our CPU and amicrocode compiler.The behaviour of the processor is controlled by microcode which basically is a set of control outputs of 0s and 1s. For example our processor has 18 outputs consisting of a total of 39 bits (uPC_addris internal).game FIFO IR ADR1 ADR2 OP M1 M2 mem1 mem2 mem3 mem_addr ALU1 ALU2 ALU buss PC  uPC  uPC_addr00   00  0   00  00   0  00 00  00   00   00    000     00   0   000 000  00 00000 00000000To make things easier, instead of manually editing each 0/1 line we introduced a DSL which then the compiler turns into microcode lines.For examplethe microcodeis described in our DSL:; Startup, check if we're in gamejmpS $GAME                              ; Execute game code only if we're runningjmpO +0                                 ; Infinite loop if we've recieved game over, reset to break it; Clear memory contentsALU = 0                                 ; Load 0ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC:CLRMEM PC -&gt; mem_addr                          ; Look at PCOP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem         ; Clear itALU++                                   ; IncrALU1 -&gt; PC, jmpZ $LOADP                 ; If 0 we're done loopingjmp $CLRMEM                             ; Else continue...And is then compiled intoVHDL code:signalmem:Data:=(--Startup, check if we're in game"00000000000000000000000000000000000011000110011",--jmpS GAME(33)"00000000000000000000000000000000000101000000001",--jmpO +0(01)--Clear memory contents"00000000000000000000000000110000000000000000000",--ALU = 0"00000000010101000000000000000100010000000000000",--ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC"00000000000000000000110000000000000000000000000",--PC -&gt; mem_addr"00000000000000101010000000000000000000000000000",--OP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem"00000000000000000000000000100000000000000000000",--ALU++"00000000000000000000000000000100010001100001001",--ALU1 -&gt; buss, buss -&gt; PC, jmpZ LOADP(09)"00000000000000000000000000000000000001000000100",--jmp CLRMEM(04)...The redcode assemblers job is to transform a warrior (a piece of redcode) into a binary object file which we can then send to the FPGA for execution.For example this warrior:step    EQU 417init    EQU 1337size    EQU 9JMP start           ; boot jump as we can't specify PC in the middle T.Tsrc     DAT 0               ; src pointerstart   MOV #size, src      ; setup src pointercopy    MOV @src,DJN copy, srcSPL @dst            ; throw a pc thereADD #step, dst      ; space out a bitJMP start           ; make a new copy, yay!dst     DAT #0, #init       ; dst pointerendCompiles to:$ ./assembler jonas-replicator.red -r0000000000001001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000010010001111111111111000000000001101100011111111111100000000000000101000000001001000000011111111111110001111111111101000000001010100000000000000000110000000000000000000000000010010000000001101000010000000000000010000000000100000000011111111110110000000000000000000000000000010100000000000000000000010100111001With the--verbosetag the format can be examined:$ ./assembler jonas-replicator.red --verbose0000000000001001  00 09  ; Number of rows (9) jonas-replicator.redpad    OP  A  B  pad     A op      pad      B op00000000 0100 00 00 000 0000000000010 000 0000000000000   00 40 00 02 00 00  ; JMP  start           (2)  0(0)00000000 0000 00 00 000 0000000000000 000 0000000000000   00 00 00 00 00 00  ; DAT  0               (0)  0(0)00000000 0001 01 00 000 0000000001001 000 1111111111111   00 14 00 09 1f ff  ; MOV # size(9)  src       (-1)00000000 0001 10 11 000 1111111111110 000 0000000000101   00 1b 1f fe 00 05  ; MOV @ src(-2) &lt; dst      (5)00000000 1001 00 00 000 1111111111111 000 1111111111101   00 90 1f ff 1f fd  ; DJN  copy(-1)  src(-3)00000000 1010 10 00 000 0000000000011 000 0000000000000   00 a8 00 03 00 00  ; SPL @ dst            (3)  0(0)00000000 0010 01 00 000 0000110100001 000 0000000000010   00 24 01 a1 00 02  ; ADD # step(417)  dst      (2)00000000 0100 00 00 000 1111111111011 000 0000000000000   00 40 1f fb 00 00  ; JMP  start           (-5)  0(0)00000000 0000 01 01 000 0000000000000 000 0010100111001   00 05 00 00 05 39  ; DAT # 0(0) # init       (1337)If youâ€™re interested in the project you canread more on github.In addition, or as a prerequisite, to this awesome project we also got an introduction to 68k assembly and to computer architecture which was very good.This year me and a friend also made game in the Java programming course calledGrand Thief Arto. Not the greatest of games but it was still fun to make it. I also became a mentor in discrete math for the first year students which was a fun and easy way to earn a bit of extra money.Third yearThis year we continued with some more advanced courses. We had some project oriented courses with some theory about how projects should be run and then a practical part where we made some software for an actual company. The overall idea the course idea is great, to get some real world experience and to get some interaction with an actual company, but the execution was very much not so.For example in the middle of the project one of our project members were supposed to be exchanged with another member from another project. The motivation was that â€œin the real world this could happen, so you need to always be preparedâ€ but thatâ€™s just stupid in my opinion. Firstly you donâ€™t get fired and just booted from the team very often, but you get an advanced notice and you have some time to prepare the team, yourself and your eventual replacement for the move. Secondly it adds a very real sense of dread and nervousness for everyone involved. I happened to really like all members in the project and I was very worried to be switched out. Turns out I was the one who had to change project. I was very upset and I didnâ€™t click nearly as well with the new team and I thought the experience really sucked and I became demotivated.Another thing which was quite bad was the extreme focus on documentation. The whole first 2-3 months were supposed to be a planning stage and the actual implementation was supposed to be done the last 2-3 months. But large parts of the implementation stage were also spent on documentation, or rather writing documents because the course demanded it and we never had any use for the majority. The funny thing is that most of the project theory was spent on motivating why the waterfall development model wasnâ€™t suited to software development, but what did the project degenerate into? Even despite our best efforts, we tried to implement an iterative development as our customers didnâ€™t really know what they wanted, but we were foiled by course planners.A much better project was theRobot projectwhere we created an autonomous robot! There we poked around with hardware and lower level programming in C.Debugging this was quite an experienceI continued to be a mentor in discrete math and I joinedTeam Obelixwhich organized student visits to different companies. I won the â€œbest CVâ€ award given by Ericsson, I won some things in the local programming competitionIMPAand I had a great course in operative systems where we usedPintos. I took an extra course in Graph Theory which was quite different from other math courses but very interesting. Additionally I took aProgramming Languagescourse at Coursera, also quite nice.This summer I also had my first real programming job which was a summer internship atConfiguraand I had a really good time and we replaced their triangulation software.Fourth yearThe courses from the previous years were all mandatory, with the exception of some extra courses I took, but for the 4th and 5th year I could choose my own profile and what courses to take. I spent quite a lot of time thinking about which courses I wanted to take. In the end Iâ€™m quite happy with my selection but there are many interesting courses I had to say no to. The main profile I targeted was theProgramming and Algorithmsprofile.In hindsight these are my favourite courses during the year:TDDD48 Automated PlanningAAPS Advanced Algorithmic Problem SolvingTDDB44 Compiler ConstructionTATA54 Number TheoryTDDC17 Artificial IntelligenceTDDD56 Multicore and GPU ComputingTDDA69 Data and Program Structures (SICP)I didnâ€™t find the compiler courseasfun as I had initially thought. The theory part wasnâ€™t very interesting but the lab part was really, really good! All in all it still was a very fun course. The AI courses (Automated Planning and Artificial Intelligence) were great and AI is an area Iâ€™m very interested in. During this time I also took anonline course in Machine Learningvia Coursera by Stanford University. Number Theory is another maybe niche area in mathematics which I found interesting.I continued doing some programming competitions as can be seen inUVawhich enabled my to go toNWERC 2013in the Netherlands. Ultimately Iâ€™m not super good at these competitions but it was still a great experience. Netherlands (or specifically Delft) was great. In the Multicore and GPU Computing course there was a parallel sorting contest which I and my lab partner managed to win. The goal was to create a sorting routine on the CPU with the best sorting performance. Oh and I also went through the classic book Structure and Interpretation of Computer Programs orSICPin a course. Very excellent book!During the summer I also took part inIDA Summer of Code 2014where I contributed torust. I also had mysecond summer job at Configura:Our octree implementationFifth yearAt the end of my fourth year I had grown a bit study tired. I had thought the summer jobs would have helped a bit but although the summer jobs were amazing it might have been better to take a bit of a holiday, which I did not do at all.But the real issue wasnâ€™t me getting sick of studying, although I was a bit unmotivated, but I was fast approaching a burnout. It never got so serious that I became apathetic but it was pretty bad for a while. The last semester in my 4th year I only did 27 hp (30 hp is the target value) and the first semester in my 5th year I only managed 24 hp. I had accumulated extra points so I finished the university with 308.5 hp, of the required 30 hp, but I was less effective the last 1.5 year or so than usual.I might write more about my burnout in another post, but I did three main things to get out of it. The first thing I did was to start CBT (Cognitive Behavioral Therapy or Kognitiv beteendeterapi in Swedish). The second was to continue with things which made me happy and more importantly gave me more energy. Basically I started exercising more regularly. And the third thing I did was to scale down on my ambitions and focus on taking care of myself, this is the reason I didnâ€™t study 100% the first semester.In the end I think I managed to get rid of the worst effects of the burnout and I managed to finish my studies. I was also a mentor in discrete math for a fourth time. I didnâ€™t complete a ton of courses as the whole last semester was spent on writing myMasterâ€™s thesisbut I did complete a great course in cryptology and one about logic programming in Prolog.The cryptology course was especially good as it even introducedBitcoinand the way the blockchain worked. Big kudos to that! I was aware of Bitcoin before but I wasnâ€™t aware of the implementation details.All coursesFor reference this is the list of courses I completed. It surprises me at least to see how much Iâ€™ve actually done these years.I started two extra courses which I never finished:TAMS15   Mathematical Statistics, first courseTATA49   Geometry with ApplicationsThe statistics course was started during my first year, but I finished a similar in my later years and the geometry course was taken as a fun extra course but I later decided to skip it.First yearTATA41   Calculus in One Variable 1TATA42   Calculus in One Variable 2TATA65   Discrete MathematicsTDDC10   Perspectives to Computer TechnologyTDDC66   Computer Systems and ProgrammingTDDC67   Functional Programming and LispTDDC68   Imperative Programming and AdaTSEA22   Switching Theory and Logical DesignTSTE58   ElectronicsTTIT02   Foundation Course in MathematicsSecond yearTAOP33   Combinatorial Optimization, Introductory CourseTATA24   Linear AlgebraTATA53   Linear Algebra, Honours CourseTATA61   Multivariable and Vector CalculusTDDC36   LogicTDDC69   Object Oriented Programming and JavaTDDC70   Data Structures and AlgorithmsTDDD60   Interactive SystemsTFYY68   Engineering MechanicsTSEA43   Digital Project LaboratoryTSEA47   Computer Hardware and Architecture, part 1TSEA49   Computer Hardware and Architecture, part 2Third yearTAMS27   Mathematical StatisticsTATA50   Transform TheoryTATA64   Graph TheoryTDDB68   Concurrent Programming and Operating SystemsTDDC93   Software Engineering TheoryTDDD09   Software Engineering ProjectTEIO27   Technology Based EntrepreneurshipTFYA68   PhysicsTGTU50   Visits to IndustryTSDT18   Signals and SystemsTSEA29   Microcomputer, Project LaboratoryTSKS10   Signals, Information and CommunicationTSRT12   Automatic Control YFourth yearTANA09   Numerical Algorithms in Computer ScienceTATA54   Number TheoryTD1077   Advanced Algorithmic Problem SolvingTDDA69   Data and Program StructuresTDDB44   Compiler ConstructionTDDC17   Artificial IntelligenceTDDD14   Formal Languages and Automata TheoryTDDD20   Design and Analysis of AlgorithmsTDDD48   Automated PlanningTDDD56   Multicore and GPU ComputingFifth yearTDDD08   Logic ProgrammingTDDD38   Advanced Programming in C++TGTU49   History of TechnologyTQDT33   Degree Project - Masterâ€™s ThesisTSIT03   CryptologyPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner ID draft Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/08/29/netrunner_id_draft_rebro</link>
      <description>Netrunner ID draft ÖrebroPublished:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerI entered an ID draft tournament inNetrunnerhosted in Örebro and this is a brief overview of what happened. Disclaimer: My memory is a little bit fuzzy and the events may or may not correspond to what actually happened.The draftThe idea was to randomly sort all entrants and in turn each chooses an ID which nobody else can choose. When everyone has chosen an ID the procedure continues in reverse order. This means you can choose either corp or runner early and leave the other until later.I got the 5th spot and Geist, Nasir, RP and NEH was chosen before me. If the goal was to do well I should probably have chosen a strong corp like Blue Sun, HB or possibly PE but I had just started playing Noise and I was loving every second of it so that was my choice. It was a little bit boring perhaps as it wasn’t a new ID I had to come up, but I had no idea of what I actually wanted to play with as corp so I simply delayed that decision. When it was my turn again most actually good corps had gone and I could choose between Titan, Harmony Medtech, Argus and Biotech (and some others…). Recently some popular Titan lists had popped up on netrunnerdb so I took that one.This is the drafting result:Frida unfortunately did not attend the actual draft and she had to pick both runner and corp last.With Wayland and Jinteki being relatively popular I was thinking of adding I’ve had worse to Noise… But in the end I decided to be ballsy and skip all that. And no plascretes. But I thought with some careful play and Imp/Utopia shard I could manage. Instead I went with the no frills 3 Aesop/3 Cache low economy approach which I’ve found is perfectly fine. I slotted 2 Hacktivist meeting as the local playgroup in Linköping insisted on running Cerebral static and Manhunt and maybe others would do weird stuff with currents as well?This is the Noise deck.The Titan buildis basically the popularAtlas Shruggedwith Beanstalk replacing Subliminal messaging and an extra Crisium Grid for the relative increase of criminal. In testing the corp deck performed okay… But never amazing. Noise performed consistently whenever I didn’t just die against Jinteki due to… Jinteki stuff.The matchesWhen we arrived at Örebro the basement already full of Magic gamers is already hot and things would only get worse. I didn’t get enough sleep and I’m already tired but still pumped to play some Netrunner!  The tournament features five rounds of swiss without a cut.Match 1: Yoshi, Reina/Blue Sunvs ReinaHedge fund, beanstalk, install ice over HQ. Runner installs things, runs on R&amp;amp;D and misses. I sea source-scorch second turn as he has 2 (or 3?) cards and I feel a bit bad about it. Unfortunately silly wins and losses like these happens sometimes.vs Blue SunHe gets a great start with ice and money. I’m having trouble setting up and I can’t find D4v1d before he can retrieve his oversighted Curtain Wall. I’m too scared/incapable of stealing his agendas as he’s rushing them out. When I finally get my Imp going on HQ he already has a scored atlas with two tokens and he scores out a hostile in a flash. I made a mistake of not installing a clone chip as I had a clot in my heap and I maybe should have been more aggressive but overall Yoshi outplayed me.2 points, 1-1Match 2: Dan, TWIY/Whizzardvs TWIYDan is from Linköping, same as me, but I haven’t actually played him but I knew his was a variation of theMidseasons/Psychographics rush deck. I play very carefully and builds up while he takes money. He gets a bunch more money and I continue milling and building. I’m waiting for him to start scoring out and I go through a Tollbooth and imps away an NAPD contract, but he never gets the astro train going while I sit back milling with clot ready. The game basically end when he never scores out and I get a mill victory.vs WhizzardHe trashes my sansans but I get some points scored. The game goes a bit long and we’re almost going to time. I think I could have won by rezzing an Archer against his faust when he doesn’t have enough cards to continue the game, but I stress out and for some reason I don’t rez it. Later he finds a 3-pointer for the win from HQ. I guess I took the risk as he could have just as easily hit a Snare and loose.4 points, 2-2Match 3: Johannes, Harmony Medtech/Geistvs GeistI’ve played against Johannes a lot so I know his deck and he knows mine. I get an excellent start with 3(!) Quandary protecting HQ, R&amp;amp;D and my remote. I manage to tax out his breaking and entering breakers as I score out with the help of sansan. Annoyingly Forger prevented me from scorching him more than once but in the end I manage to score out behind 2x barriers and a Quandary as he had basically exhausted his breakers and clone chips.vs Harmony MedtechI got set up with Noise fast and controlled the game from the start. He scored out a Nisei but I was never really worried. I made a stupid move of running archives when I had just trashed a Cyberdex and later I ran it again! But in the end my start was just too good and I won by pounding HQ with Lamprey, Imp and parasites.8 points, 4-2Match 4: Magnus, Nisei Division/Valenciavs Nisei DivisionI’ve never played Magnus but I know he’s a very good player so I’m really nervous to play him. He installs over R&amp;amp;D and remote and does a hedge fund. I install a lamprey and imp and run HQ… Just to hit a Snare. Sigh. I thought about it but I figured it wouldn’t be a big deal, but it was. I don’t shake the tag as I don’t have any resource installed and he scorches me. Huge misplay from me and now I’m trying not to tilt too hard.vs ValenciaI have a fairly bad starting hand which I keep… For some unknown reason. He’s very aggressive and he gets a medium dig going but misses. I don’t care about it too much and continue trying to score/finding my pieces. He does another big medium dig through a Grim, paying 3 + 1 cards for it and another ice, and hits a Snare on his last click, with two cards left in hand. I have a jackson out so I click to draw two cards and find the scorch for the win.Funny how both games ends in basically the same way. I’m still a bit upset about the way I lost but it feels a little bit better that I could pull out a win against such a good player, even if it was a lucky one.10 points, 5-3Match 5: Frida, Argus/Silhouettevs ArgusI know Frida loves meat damage so I play very carefully. I get a good start and I imp a bunch of things from R&amp;amp;D while milling a healthy amount. She scores out a couple of 1-pointers but I’m milling very fast and she’s not threatening me yet. When she goes up to 5 points I have as much money as she has so I make a run on archives (I also have an installed Utopia Shard) and take the win.vs SilhouetteAgain I get a good start and I get a Crisium grid on HQ to stop siphon. She doesn’t find her breakers and I get a hostile scored followed by the atlas train.14 points, 7-3Final resultsI won 7 matches, 4 with Titan and 3 with Noise. Surprisingly my corp faired better than my runner which can partly be explained by the two lucky flatlines I got. But overall it felt a lot better than during testing. Perhaps it’s because I’ve never played a rush deck before and the style takes a little getting used to? Then I got the silly scorched loss with Noise which really shouldn’t happen if you play as you should. But mistakes happen. I’m quite glad I managed to avoid tilting though.Generally with Noise I feel if the corp doesn’t push scoring windows hard you’re always in control of the game. Even then it’s difficult without a secondary win condition like scorch or midseasons. This is what Yoshi did with Blue Sun so very well where I really felt behind the whole game, but perhaps I was being too cautious.Overall I’m quite pleased with my result all things considered. This is the final results after the five rounds of swiss:There were quite a lot of prizes available and after the three victors took theirs this is what took home as my 4th place:I wanted to have a full playset of aesop’s, especially as I really love Noise, but the mat feels a little more special. I still want the alt-arts though, hopefully I can get them from somewhere else.Published:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Summer Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2015/09/18/netrunner_summer_tournament_linkping</link>
      <description>Netrunner Summer Tournament LinköpingPublished:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerThere was anotherNetrunnertournament this Sunday with 8 entrants. We had two new legal data packs with Old Hollywood and The Universe of Tomorrow so a lot of new things were tried. I heard a rumor that a full playset of both Aesop’s Pawnshop and Wyldside were available so I decided to not take my jankiest ideas and playNoiseandBlue Sun.The Noise buildwas practically unchanged from what I’ve played previously. The Blue Sun was a new glacier build with space ice and the new agendas Hollywood Renovation and The Future is Now. I wanted the threat of scorch and I also threw in two snares for extra spice.SwissWith 8 players we did 4 rounds of swiss, without any cut.Match 1: Dan, Valencia/Haarpsichordvs ValenciaI tried to push a Hollywood Renovation early, but it was snagged with blackmail.  It was a big gamble which unfortunately didn’t pan out.  This was a kinda large mistake, but in the end it didn’t matter.  I got my huge ice up and running and I forced him out of my servers.  I made a big play with Hollywood Renovation where I fast advanced a The Future is Now with the 5th and 6th advancement tokens and the game was basically over from that point.  I think I flatlined him in the end, but that’s more of a symbolic victory as I could have just as easily scored out.vs HaarpsichordSuper close, he had scored a lot of points and I was sitting with clot. In the end he installs 3 new remotes, one behind an ice. I push through the ice to steal the first agenda and I imp the second one (now the Imp is without counters). So I install another program, trashing the imp, then trashing the third remote with the imp. All new remotes were agendas. After this my victory was clear as a run on archives sealed the deal.4 points, 2-0Match 2: Harald, Haarpsichord, Hayleevs HaarpsichordI felt like I was behind the whole game, but so did Harald. In the end I managed to snag another very close win, but I’m not sure how that happened. All my Aesop’s were in the bottom of my stack but somehow I managed to steal/imp enough to make up for it. What decided things was a Clot hidden on my street peddler, which he overlooked. Without it I should have lost the game.vs HayleeI allowed some accesses to R&amp;amp;D, but mostly no big damage was done. Then I sealed the game up and the win was basically clear. I had a public support ticking down but we ran out of time so I got one point for being up to 6 agenda points. Maybe I could have played it faster to get the victory on time, but I don’t know.7 points, 4-0Match 3: Henrik, NEH, Chaos Theoryvs NEHI got set up fairly well and I managed to trash a sansan early. I had clot and everything was going alright. I hit a Snare in a remote which took me off guard a bit. The turn after he made another remote and I contemplated running on it, I did have imp tokens after all, but I decided it was fine to possibly allow him a single agenda. Big mistake as I installed cards down to 3 cards in hand and I died to a breaking news and scorch. For some reason I was convinced he was running the fast advance version, or some kind of nearpad, but the reality is I played too fast and didn’t consider everything properly. Live (or die) and learn I guess.vs Chaos TheoryAfter I rezzed an Archer on the remote it was basically game over as he couldn’t break it with the exception of datasuckers/parasiters, which quickly got used. I iced up my centrals with huge space ice and I could simply score out and win. He tried a big Vamp play against HQ, but on the last click and with a tag he died against double scorch after taking down my curtain wall.9 points, 5-1Match 4: Johannes, Haarpsichord/Ianvs HaarpsichordA blistering game where he rushed out agendas and I tried to punish/steal with Imp. The game slowed down when I had a Clot on board and I pushed up to 6 points. A run on archives with a Jackson reshuffle and then triggering Utopia shard sealed the deal.vs IanWe laughed about our decks being super late game focused and he stayed true to his words and he installed a ton of resources, three Gang Signs and two HQ interfaces. I was kinda agenda flooded but I managed to push them out in Archives with double Jackson. The game was decided in a funny way I think, even if I misplayed it quite a bit (I blame tiredness or something!).I had Hollywood Renovation with a bunch of advancement tokens, The Future is Now in a naked remote and one Snare and one Scorch in my hand. So I advanced Hollywood Renovation 3 times and scored it. He hit a Snare but nothing else with all his accesses. Then I scored The Future is Now and fetched my second Snare from R&amp;amp;D, which he accessed and died to. Naturally the correct play would have been to advance Hollywood Renovation twice, score The Future is Now and fetch the Snare. Now if he hits a Snare I can just scorch him on my last click.13 points, 7-1The resultsThe self critic in me keeps on thinking about the lost game and the game which went to time, but some small part of me tries to point out that things actually went well. I felt fine in all games and it never felt hopeless in any game. I did take “better” or more serious decks and the other guys joked about my very serious decks, but it’s fine. I did accomplish my goal and I even won the tournament, yay!I managed to achieve my goal and I got to choose a playset of Aesops! I also got a couple of Swordsman and a new deckbox. It’s a little bit sad that I declined the Femme Fatale alt-art as it’s preeetty… But maybe next time.Published:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Winter Kit Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2016/01/16/netrunner_winter_kit_tournament</link>
      <description>Netrunner Winter Kit Tournament LinköpingPublished:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerAfter quite the hiatus fromNetrunnerI had a chance to join a tournament here in Linköping with 14 participants. The number of players has grown a lot since the previous tournament which is really great.As I really wanted to win the wonderfulDay Jobplaymat I went with two of the best decks I could come up with. I went with theNoisedeck I’ve been playing a while which has been performing really well. I was expecting a lot of EtF so I was on the verge on playing a classicLooking 4 JobWhizzard deck but I switched to Noise just before the tournament as I’m more comfortable with it but I also find it more fun to play Noise than anything else. As for the corp I had played a littleFoodcoatssince it dominated worlds and it has felt extremely solid overall.Tournament structureWe did 4 rounds of swiss without a cut, even though I was personally hoping for 5 rounds. The more games I can play the better it is, I just love to play you know. As usual you get 2 points for each game you win and 1 point for a timed win.Round 1: Dan, Reina/Syncvs ReinaHe got me low on credits early but I played it slow and slowly but steadily accumulated enough credits to build rez enough ice and score out. Foodcoats destroyed the game.vs SyncI was really scared of Sync as Noise is weak against tags and I don’t run any meat damage protection. But I got a nice start and got a few points lead but he still managed to score out some astro counters and I carelessly gave him a Quantum Predictive Model so he got up to 5 point. Luckily I had set up the shard combo with utopia and hades shard I maged to score out with them the click before he would have won.Generally I need to be more mindful of quantum predictive model. I actually think it’s a really good agenda in this type of deck.4 points, 2-0Round 2: Johannes, Leela/Haarpsichordvs LeelaI was really, really poor in the beginning of the game and I had trouble getting my campaigns to stick. I made the really big mistake of trying to rush out an Accelerated Beta Test but I was too poor and too scared of Legwork and The Maker’s Eye after bounce to do it. In the process I had blocked Breaker Bay Grid from my campaigns which made the game really slow… I think I could have won in the end anyway but he got through my remote twice by forcing through an Ichi. Well played by him but I feel like I should have done better.vs HaarpsichordA bit rushed on time and super scared of 24/7 News Cycle I got a fairly good grip in the beginning with a Lamprey lock and I stole a couple of agendas early. Unfortunately I accumulated two News Team and nullified my lead. I still managed to find a couple of agendas to have the lead.In the turn I went through a Gutenberg and took a tag (which I could have avoided with Faust) and gave him a Quantum Predictive Model while I was on 4 points. If I had just broken the sub I would have gone up to 5 points and I had a Hades Shard with at least one 2 pointer in the archive… Once again I need to be more mindful of taking tags. Still had more points and got the timed win.5 points, 3-1Round 3: Henrik, Noise/Blue Sunvs NoiseEtf got set up well and the runner didn’t do anything useful at the start and I got set up really well economically and I was quite safe. Game ended early due to a faceplant into Assassin with only 2 cards in hand and I had a ton of money.vs Blue SunI knew Henrik ran an Accelerated Diagnostics combo deck and I was again scared of dying to Scorched Earth with my not having any protection. But I got a lot of HQ and R&amp;amp;D accesses by trashing two Spiderwebs and an Assassin and I managed to ping away some kill pieces. He drew a lot with jacksson and managed to end up with all three copies of scorch in archives and I finally won by a Medium for his whole R&amp;amp;D.9 points, 5-1Round 4: Fredrik, Kate/EtFThe last game of the tournament and I and Fredrik were the top dogs. As I had one timed win but Fredrik did not so I had to win both games to win the tournament. Tough task as Fredrik is a very solid player.vs KateI was a little flooded in the beginning but I didn’t get punished for it and after that I drew really good. I managed to stick the campaigns in the remote and I had a ton of money basically the whole game. Fredrik security nexus kate and I managed to get two 2-points early and I didn’t draw any agendas in the midgame when he was set up with his monster rig.At the end of the game I had built up a 4-Ice remote and a 5-Ice R&amp;amp;D. He hit me with an Escher which felt quite awful as he had a bunch of R&amp;amp;D interfaces but it turns out my super taxing ice and R&amp;amp;D luck saved me. Foodcoat can and will make extremely taxing servers it turns out…vs EtFFredrik ran a sort of Team Sponsorship fast-advance/rush EtF which I wasn’t looking forward to all that much. But luckily he didn’t draw a lot of economy and I managed to keep him down economically by a combination of lamprey and forcing him to rez ice. I also sniped an early 2-pointer by clicking through an eli and breaking a marcus with Faust, which felt really good admittedly. Overall I managed to keep up a ton of pressure on him even though I didn’t find aesop’s until fairly late.I really felt in control the whole game and the game ended as a timed win for me. The only bigger mistake I recall is one I did on my last turn in the game where I installed a cache and then ran on the remote server thinking I could beat the ash trace just to plant into a Turing. At this point I was already at 5 points and what I could have done is walk through R&amp;amp;D 2 times by taking assassin to the face to maximize my chances of getting a regular win.12 points, 7-1The resultsI was a bit down after loosing points in the second round but I managed to recoup very well in the end. I felt I had some really good in some key matches and my decks served me very well. I will probably try some other corps but I may still continue playing Noise even after the most wanted list.In the end I managed to win the whole tournament which I didn’t really expect. I was hoping to do well but I wasn’t expecting it.As my prize I naturally chose Day Job. The Ice Wall participation prize was great as well. I’m a little sad I didn’t get the Corroder one as I think it looks really good, but you can’t get everything in this world.Was a good tournament and everyone were once again awesome! I’m already planning for the next one!Published:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Securing my partner's digital life</title>
      <link>https://www.jonashietala.se/blog/2025/01/20/securing_my_partners_digital_life</link>
      <description>Securing my partner's digital lifePublished:January 20,2025infdf8dc9Tagged:Security,YubiKeyI’ve been with Veronica for over a decade now and I think I’m starting to know her fairly well.
Yet she still manages to surprise me.
For instance, a couple of weeks ago she came and asked me about email security:I worry that my email password is too weak.
Can you help me change email address and make it secure?It was completely unexpected—but I’m all for it.The action planAll heroic journeys needs a plan; here’s mine:Buy her a domain name (her.comsurname was available).Migrate her email toFastmail.SetupBitwardenas a password manager.Use aYubiKeyto secure the important services.Why a domain?If you ever want (or need) to change email providers it’s very nice to have your own domain.
For instance, Veronica has ahotmail.comaddress but she can’t bring that with her if she moves toFastmail.Worse, what if she gets locked out of her Outlook account for some reason?
It might happen if you forget your password, someone breaks into your account, or even by accident.For example,Apple users recently got locked out of their Apple IDswithout any apparent reason and Gmailhasbeennotoriousaboutlocking outusersfor no reason.
Some providers may be better but this is a systemic problem that can happen at any service.In almost all cases, your email is your key to the rest of your digital life.
The email address is your username and to reset your password you use your email.If you lose access to your email you lose everything.When you control your domain, you can point the domain to a new email provider and continue with your life.Why pay for email?One of the first things Veronica told me when I proposed that she’d change providers was that she didn’t want to pay.
It’s a common sentiment online that email must be cheap (or even free).I don’t think that email is the area where cost should be the most significant factor.
As I argued for inwhy you should own your email’s domain, your email is your most important digital asset.
If email is so important, why try to be cheap about it?
You should spend your money on the important things and shouldn’t spend money on the unimportant things.Paying for email gives you a couple of nice things:Human support.It’s all too easy to get shafted by algorithms where you might get banned because you triggered some edge case (such as resetting your password outside your usual IP address).Ability to use your own domain.Having a custom domain is a paid feature at most email providers.A long-term viable business.How do you run an email company if you don’t charge for it?(You sell out your users or you close your business.)Why a password manager?The best thing you can do security wise is to adopt a password manager.
Then you don’t have to try to remember dozens of passwords (leading to easy-to-remember and duplicate passwords) and can focus on remembering a single (stronger) password, confident that the password manager will remember all the rest.“Putting all your passwords in one basket” is a concern of course but I think the pros outweigh the cons.Why aYubiKey?To take digital security to the next level you should usetwo-factor authentication (2FA).
2FA is an extra “thing” in addition to your password you need to be able to login.
It could be a code sent to your phone over SMS (insecure), to your email (slightly better), a code from a 2FA app on your phone such asAegis Authenticator(good), or from a hardware token (most secure).It’s easy to think that I went with aYubiKeybecause it’s the most secure option; but the biggest reason is that aYubiKeyis  more convenient than a 2FA app.With a 2FA app you have to whip out your phone, open the 2FA app, locate the correct site, and then copy the TOTP code into the website (quickly, before the code changes).
It’s honestly not that convenient, even for someone like me who’s used this setup for years.With aYubiKeyyou plug it into a USB port and press it when it flashes.
Or on the phone you can use NFC.
NFC is slightly more annoying compared to plugging it in as you need to move/hold it in a specific spot, yet it’s still preferable to having to jump between apps on the phone.There are hardware keys other thanYubiKeyof course.
I’ve usedYubiKeyfor years and have a good experience.
Don’t fix what isn’t broken.The setupHere’s a few quick notes on how I setup her new accounts:Password management with BitwardenThe first thing we did was setupBitwardenas the password manager for her.
I chose the family plan so I can handle the billing.To give her access I installedBitwardenas:An app on her phoneA browser plugin on her computerI gave her aYubiKeyand registered it withBitwardenfor additional security.
As a backup I also registered my ownYubiKeys on her account; if she loses her key we still have others she can use.Although it was a bit confusing for her I think she appreciates not having to remember a dozen different passwords and can simply remember one (stronger) password.
We can also share passwords easily viaBitwarden(for news papers, Spotify, etc).TheYubiKeyitself is very user friendly and she hasn’t run into any usability issues.Email on FastmailWith the core security up and running the next step was to change her email:Gave her an email address onFastmailwith her own domain (@.com).She has a basic account that I manage (there’s aDuo planthat I couldn’t migrate to at this time).I secured the account with ourYubiKeys and a generated password stored inBitwarden.We bolstered the security of her old Hotmail account by generating a new password and registering ourYubiKeys.Forward all email from her old Hotmail address to her new address.With this done she has a secure email account with an email address that she owns.As is proper she’s been changing her contact information and changing email address in her other services.
It’s a slow process but I can’t be too critical—I still have a few services that use my old Gmail address even though I migrated to my own domain more than a decade ago.Notes on recovery and redundancyIt’s great to worry about weak phishing, weak passwords, and getting hacked.
But for most people the much bigger risk is to forget your password or lose your second factor auth, and get locked out that way.To reduce the risk of losing access to her accounts we have:MultipleYubiKeys for all accounts.The recovery codes for all accounts are written down and secured.My own accounts can recover herBitwardenandFastmailaccounts via their built-in recovery functionality.Perfect is the enemy of goodSome go further than we’ve done here, others do less, and I think that’s fine.
It’s important to not compare yourself with others too much;
even small security measures makes a big difference in practice.Not doing anything at all because you feel overwhelmed is worse than doing something, even something simple as making sure you’re using a strong password for your email account.Published:January 20,2025infdf8dc9Tagged:Security,YubiKeyPrevious</description>
      <pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Lindhska Store Championship Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/04/02/netrunner_lindhska_store_championship_rebro</link>
      <description>Netrunner Lindhska Store Championship ÖrebroPublished:April  2,2015in814820fTagged:Netrunner,GamingAfter the awesomeness during theprevious store championship, I decided to go to the store championship at Lindhska Bokhandel in Örebro.I brought a modified version of the same corp I used the last time, aBlue Sun kill deckand anew runnerwith Leela Patel. See the links for cards and some card choices.The tournament was a 26-player one, at least that’s the number I heard, with 5 rounds of swiss followed by a double elimination bracket. 7 players from Linköping went, again I think but I’m not sure if that’s the correct number.SwissMatch 1, Tennin/Reinavs TenninMemory is a bit fuzzy here. I think I got off to a good start, but somehow the corp stabilized and we went into a long slog of a game. For some reason the corp managed to score out before I could find the final agenda.It certainly felt like I could have won the game, but I’m not sure what I did wrong. Might be that I wasn’t comfortable with the deck and played too aggressively. 0-2vs ReinaAgain I don’t remember the specifics. We had very little time and I manage to score out an agenda, so I get a timed win.Still, corp felt great and I was in control, 1-2.Match 2, RP/Chaos Theoryvs Replicating PerfectionAh RP. Actually the first time I’ve played against the id, but I had a pretty good idea of how to approach the game. I scored an early agenda but I’m slowly getting locked out. Then he makes a pretty big misplay - he flips a naked remote and he wants to score, but it’s Nisei MK II instead of a 3/2 agenda and now he’s flustered. I apologize and I score the Nisei and I remove the Enhanced Login Protocol.Still, he’s not out of the game. I run indexing but he hid a Jackson in a remote, stupid mistake! I manage to same old thing indexing again and I score another agenda and I place another agenda as the 5th card. I carefully count the cards and I manage to score the winning agenda, before being locked out of the game.The opponent said he’s only played a week… Still played pretty good I’m very glad for that victory. 3-2vs Chaos TheoryAnother quick corp game. Snare last click into scorch for a simple victory. His inexperienced lost him the game there.5-2 and feeling better.Match 3, RP/MaxXvs MaxXWe’re 6 players from Linköping and 2 from Stockholm at the top. Sadly I’m facing David, also from Linköping and we’re on our way to knock each other down.The game is slow, very slow. I feel in control and take it slow and easy. Scoring some agendas when I get them, but not drawing all that much. MaxX runs out of cards and runs a Levy. Somehow he runs of cards again and I know I’ve won.I have no idea how this happened, but we actually went to time, during our first match! Maybe it really was an intense game or maybe I was just tired or hungry… But anyway it happened. I manage to set up a win-win scenario for me during my second-to-last turn. Either he lets me score out or he runs the remote and let me sea-source scorch him to death (he had a hand size of 3 due to an early Cerebral Overwriter). He cooses the second option.7-2Match 4, NEH/Whizzardvs Near-Earth HubThis was by far the most stressful/exciting game of the day for me. I get a bad hand and I mulligan… Into a much much worse hand. No economy, no nothing. The corp scores an early astroscript, this isn’t looking so good… I do something, I can’t remember, then he sets up  a remote with one advancement counter on. Curious, it’s probably an NAPD, but sadly I can’t get in and score so I’m gearing up for a next turn combo.Sadly, it’s a Project Beale, worth 3 points and he’s got an astroscript token. From bad to worse, much worse. I desperately run his hand and his remote. Oh no, he’s got a scorch on top of R&amp;amp;D and he’s got a Data Raven protecting HQ. Luckily I’ve got a plascrete so I go tag-me with a Legwork, finding nothing. He’s using Jackson to draw like mad.I run another Legwork with a same old thing through the Data Raven and I find two agendas and I get in some single-accesses on R&amp;amp;D. Lady luck isn’t smiling for long though as he draws and install-advance a remote. Surely an NAPD, which I’m too poor to get at.My only hope is R&amp;amp;D and I have two interfaces out so I can access 3 cards. If I can bounce the NAPD I might still have a chance. The first card is a.. NAPD which I can’t steal. The second is a Breaking News so I bounce the advanced card now sitting on 5 agenda points.I’m too poor to get the NAPD and the next turn I get Scorched to death.The game was practically over from the terrible start, but I almost managed to steal a win. I got praise from the opponent but I can’t stop but think that I should have had a few more credits for that NAPD…7-4, feeling the pain.vs WhizzardAnother id I haven’t played against. He tried, and was successful for a while, with killing my oversighted curtain walls and keeping my economy low. But still, I managed to score out two the cleaners and putting more and more pressure as I gradually build up my economy lead. I think I hit a shattered remains as well.The game ends with me advancing the winning agenda, he tries but cannot access it or any other agenda, and I score for the win.Again corp is feeling absolutely great. 9-4Match 5, EtF/KateThis time I’m faced up against Henrik, my buddy from Linköping who knows my decks and I know his decks. Sadly it appears this is the battle for top 8.vs Engineering the FutureDuring practice I felt very confident with my Leela deck and I get a great start scoring two 3/2 agendas. Not thinking more about it I try to build up a bit and getting ready to score the winning agenda as I know he has a few 5/3.But things are not shaping up that way. I try to keep is economy low but he manages to get two adonis campaigns up and running and he hits two large GRNLD Refineries. Probably a huge misplay by me to allow that to happen. With his economy up he gets some nice taxing servers up and my aggressive running has not paid off at all. He’s all set up and I practically have nothing.My last hope is an indexing through a Janus I know is there. By my counts I’m only 2 or 1 credit off from making two succesful runs through R&amp;amp;D in the hopes of scoring out, but it’s not meant to be. I’ve already accumulated 3 brain damage from previous (too aggressive) encounters.With great play he manages to score out and win. Well played. 9-6vs KateAgain I’m having difficulties to recall the specifics of the match. I know I managed to hit one shattered remains to stop his drip econ for a while. I manage to score an agenda but time is running out.I have a 5/3 agenda which I’ve already advanced twice. I literary have my whole hand full of kill cards: 1 snare, 1 sea-source, 3 scorch and 2 punitives and with more money I’m just waiting for him to make a run. I decide to fake the agenda as the almighty 9/6 Government Takeover agenda and I advance it up to 7 in the course of two turns. In hindsight it might have been better to score it out as a 5/3, but that’s not what I did.So sitting at 7 advancement counters Henrik decides to… Not run it! Instead he runs my hand twice, the second time he imps my sea-source. Sigh.So the game ends with me winning on time, somehow it feels a bit frustrating as I had so much control the whole game, thinking how can I loose? Turns out, with some bad luck and some good runner decisions it’s quite possible not to win.10-6.The CutAs Henrik and I had the battle for the last place into playoffs, which I lost, Henrik makes the cut on 11 points and we’re a bunch of other players with 10 points.  Huge congrats to Henrik as he really did play better than I did.SummaryOnce again I’m amazed by the friendliness of the Netrunner community. Everyone was really nice and friendly. I joked around a bit with some guys and girls I’ve never even met before, which is no small feat with a very shy and introvert person such as myself. I got a ride all the way from Linköping to Örebro and the guy with the other car even came and asked me if I wanted to come with him earlier as I got knocked out. As it happens I stayed and watched some of Henrik’s and Fredrik’s matches.As for the games themselves I’m super happy with my corp deck which practically went undefeated during the tournament. I felt quite comfortable to win both the games where I got a timed win from.The runner deck however I’m not super happy with. It felt slow and low on economy and just a bit awkward. Some of the problems can be attributed to good corp play: I didn’t land many good account siphons which made my economy quite bad and they played around Leela’s ability quite well. Ice up centrals at least twice and don’t score out agendas on the last click.But mostly I think I didn’t play the runner deck right, I wanted to play more aggressively than maybe you’re supposed to with a slower control deck such as the one I had made. I really need to try out a Leela build based on Desperado and an economy package with Dirty Laundry and Security Testing, I think it might fit my style better. I also want to play around more with the wonderful Anarchs…Looking forward to the next time I can play some Netrunner!Published:April  2,2015in814820fTagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Years at Linköping's University</title>
      <link>https://www.jonashietala.se/blog/2015/07/22/5_years_at_the_university</link>
      <description>5 Years at LinkÃ¶ping's Universityâ˜Published:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolI recently finished my masterâ€™s degree (civilingenjÃ¶r or civil engineering) at LinkÃ¶pingâ€™s University. At first it felt like 5 years would be an eternity, but in hindsight it was over in a flash. my gut feeling is that I havenâ€™t learnt or done anything of note, except you know actually finishing my degree, but if I sit down and think about it I have done some things. Actually quite a lot of things.First yearI moved to LinkÃ¶ping with my girlfriend and it was quite an adjustment as we both moved from our parents and to a city where we practically knew nothing and no one. But we managed fine and while we never went out to parties or went to other student events we found some friends. I also startedITF Taekwon-doafter a few months.There werenâ€™t too much to do in school. The focus was on foundation math courses, mostly things I had already done but needed refreshing, and on introductory programming courses which werenâ€™t challenging at all for me.Second yearDuring the second year I felt the courses were harder and more interesting than the first yearâ€™s courses. The courses in Combinatorial Optimization, Data Structures and Algorithms and Linear Algebra were fun and new for me. I also took an extra continuation course in Linear Algebra which was interesting.When I started the university I thought I would like electronics and hardware construction, but the courses from the first year were really not interesting at all. Even when making the transition from analog to digital I didnâ€™t care for it at all. But it all changed when we started actuallybuildingthings with digital circuits.At first we had an introductory course where we built digital clocks and counters. You were supposed to have prepared a design sketch for the labs, but me and my partner for some reason never did it, and so we were always running late in the labs. I remember one very fun, or horrible, occasion where we had struggled a lot with one lab and we had spent almost the full 4 hours until we finally completed it with maybe 10 - 15 minutes left. Filled with relief we started taring apart what we so painstakingly had built. When done we realized we had one part left where we were supposed to use the circuit we just destroyedâ€¦ Luckily we could use the circuits another group had made, but it was a painful lesson in always reading the descriptions and prepare for the labs in advance.The digital circuit labs were followed by a digital project of our own choice. Wedesigned a processorwhich could run theCore Wars 88 standardand we simulated it on an FPGA.The main block schema for the processorAnd here is a small video of the simulation in action:Click to view on YouTubeThe project was interesting as it was an outlet for our creativity and it touched on several different areas. Processor design, hardware debugging (!) and I wrote aredcode assemblerfor our CPU and amicrocode compiler.The behaviour of the processor is controlled by microcode which basically is a set of control outputs of 0s and 1s. For example our processor has 18 outputs consisting of a total of 39 bits (uPC_addris internal).game FIFO IR ADR1 ADR2 OP M1 M2 mem1 mem2 mem3 mem_addr ALU1 ALU2 ALU buss PC  uPC  uPC_addr00   00  0   00  00   0  00 00  00   00   00    000     00   0   000 000  00 00000 00000000To make things easier, instead of manually editing each 0/1 line we introduced a DSL which then the compiler turns into microcode lines.For examplethe microcodeis described in our DSL:; Startup, check if we're in gamejmpS $GAME                              ; Execute game code only if we're runningjmpO +0                                 ; Infinite loop if we've recieved game over, reset to break it; Clear memory contentsALU = 0                                 ; Load 0ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC:CLRMEM PC -&gt; mem_addr                          ; Look at PCOP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem         ; Clear itALU++                                   ; IncrALU1 -&gt; PC, jmpZ $LOADP                 ; If 0 we're done loopingjmp $CLRMEM                             ; Else continue...And is then compiled intoVHDL code:signalmem:Data:=(--Startup, check if we're in game"00000000000000000000000000000000000011000110011",--jmpS GAME(33)"00000000000000000000000000000000000101000000001",--jmpO +0(01)--Clear memory contents"00000000000000000000000000110000000000000000000",--ALU = 0"00000000010101000000000000000100010000000000000",--ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC"00000000000000000000110000000000000000000000000",--PC -&gt; mem_addr"00000000000000101010000000000000000000000000000",--OP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem"00000000000000000000000000100000000000000000000",--ALU++"00000000000000000000000000000100010001100001001",--ALU1 -&gt; buss, buss -&gt; PC, jmpZ LOADP(09)"00000000000000000000000000000000000001000000100",--jmp CLRMEM(04)...The redcode assemblers job is to transform a warrior (a piece of redcode) into a binary object file which we can then send to the FPGA for execution.For example this warrior:step    EQU 417init    EQU 1337size    EQU 9JMP start           ; boot jump as we can't specify PC in the middle T.Tsrc     DAT 0               ; src pointerstart   MOV #size, src      ; setup src pointercopy    MOV @src,DJN copy, srcSPL @dst            ; throw a pc thereADD #step, dst      ; space out a bitJMP start           ; make a new copy, yay!dst     DAT #0, #init       ; dst pointerendCompiles to:$ ./assembler jonas-replicator.red -r0000000000001001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000010010001111111111111000000000001101100011111111111100000000000000101000000001001000000011111111111110001111111111101000000001010100000000000000000110000000000000000000000000010010000000001101000010000000000000010000000000100000000011111111110110000000000000000000000000000010100000000000000000000010100111001With the--verbosetag the format can be examined:$ ./assembler jonas-replicator.red --verbose0000000000001001  00 09  ; Number of rows (9) jonas-replicator.redpad    OP  A  B  pad     A op      pad      B op00000000 0100 00 00 000 0000000000010 000 0000000000000   00 40 00 02 00 00  ; JMP  start           (2)  0(0)00000000 0000 00 00 000 0000000000000 000 0000000000000   00 00 00 00 00 00  ; DAT  0               (0)  0(0)00000000 0001 01 00 000 0000000001001 000 1111111111111   00 14 00 09 1f ff  ; MOV # size(9)  src       (-1)00000000 0001 10 11 000 1111111111110 000 0000000000101   00 1b 1f fe 00 05  ; MOV @ src(-2) &lt; dst      (5)00000000 1001 00 00 000 1111111111111 000 1111111111101   00 90 1f ff 1f fd  ; DJN  copy(-1)  src(-3)00000000 1010 10 00 000 0000000000011 000 0000000000000   00 a8 00 03 00 00  ; SPL @ dst            (3)  0(0)00000000 0010 01 00 000 0000110100001 000 0000000000010   00 24 01 a1 00 02  ; ADD # step(417)  dst      (2)00000000 0100 00 00 000 1111111111011 000 0000000000000   00 40 1f fb 00 00  ; JMP  start           (-5)  0(0)00000000 0000 01 01 000 0000000000000 000 0010100111001   00 05 00 00 05 39  ; DAT # 0(0) # init       (1337)If youâ€™re interested in the project you canread more on github.In addition, or as a prerequisite, to this awesome project we also got an introduction to 68k assembly and to computer architecture which was very good.This year me and a friend also made game in the Java programming course calledGrand Thief Arto. Not the greatest of games but it was still fun to make it. I also became a mentor in discrete math for the first year students which was a fun and easy way to earn a bit of extra money.Third yearThis year we continued with some more advanced courses. We had some project oriented courses with some theory about how projects should be run and then a practical part where we made some software for an actual company. The overall idea the course idea is great, to get some real world experience and to get some interaction with an actual company, but the execution was very much not so.For example in the middle of the project one of our project members were supposed to be exchanged with another member from another project. The motivation was that â€œin the real world this could happen, so you need to always be preparedâ€ but thatâ€™s just stupid in my opinion. Firstly you donâ€™t get fired and just booted from the team very often, but you get an advanced notice and you have some time to prepare the team, yourself and your eventual replacement for the move. Secondly it adds a very real sense of dread and nervousness for everyone involved. I happened to really like all members in the project and I was very worried to be switched out. Turns out I was the one who had to change project. I was very upset and I didnâ€™t click nearly as well with the new team and I thought the experience really sucked and I became demotivated.Another thing which was quite bad was the extreme focus on documentation. The whole first 2-3 months were supposed to be a planning stage and the actual implementation was supposed to be done the last 2-3 months. But large parts of the implementation stage were also spent on documentation, or rather writing documents because the course demanded it and we never had any use for the majority. The funny thing is that most of the project theory was spent on motivating why the waterfall development model wasnâ€™t suited to software development, but what did the project degenerate into? Even despite our best efforts, we tried to implement an iterative development as our customers didnâ€™t really know what they wanted, but we were foiled by course planners.A much better project was theRobot projectwhere we created an autonomous robot! There we poked around with hardware and lower level programming in C.Debugging this was quite an experienceI continued to be a mentor in discrete math and I joinedTeam Obelixwhich organized student visits to different companies. I won the â€œbest CVâ€ award given by Ericsson, I won some things in the local programming competitionIMPAand I had a great course in operative systems where we usedPintos. I took an extra course in Graph Theory which was quite different from other math courses but very interesting. Additionally I took aProgramming Languagescourse at Coursera, also quite nice.This summer I also had my first real programming job which was a summer internship atConfiguraand I had a really good time and we replaced their triangulation software.Fourth yearThe courses from the previous years were all mandatory, with the exception of some extra courses I took, but for the 4th and 5th year I could choose my own profile and what courses to take. I spent quite a lot of time thinking about which courses I wanted to take. In the end Iâ€™m quite happy with my selection but there are many interesting courses I had to say no to. The main profile I targeted was theProgramming and Algorithmsprofile.In hindsight these are my favourite courses during the year:TDDD48 Automated PlanningAAPS Advanced Algorithmic Problem SolvingTDDB44 Compiler ConstructionTATA54 Number TheoryTDDC17 Artificial IntelligenceTDDD56 Multicore and GPU ComputingTDDA69 Data and Program Structures (SICP)I didnâ€™t find the compiler courseasfun as I had initially thought. The theory part wasnâ€™t very interesting but the lab part was really, really good! All in all it still was a very fun course. The AI courses (Automated Planning and Artificial Intelligence) were great and AI is an area Iâ€™m very interested in. During this time I also took anonline course in Machine Learningvia Coursera by Stanford University. Number Theory is another maybe niche area in mathematics which I found interesting.I continued doing some programming competitions as can be seen inUVawhich enabled my to go toNWERC 2013in the Netherlands. Ultimately Iâ€™m not super good at these competitions but it was still a great experience. Netherlands (or specifically Delft) was great. In the Multicore and GPU Computing course there was a parallel sorting contest which I and my lab partner managed to win. The goal was to create a sorting routine on the CPU with the best sorting performance. Oh and I also went through the classic book Structure and Interpretation of Computer Programs orSICPin a course. Very excellent book!During the summer I also took part inIDA Summer of Code 2014where I contributed torust. I also had mysecond summer job at Configura:Our octree implementationFifth yearAt the end of my fourth year I had grown a bit study tired. I had thought the summer jobs would have helped a bit but although the summer jobs were amazing it might have been better to take a bit of a holiday, which I did not do at all.But the real issue wasnâ€™t me getting sick of studying, although I was a bit unmotivated, but I was fast approaching a burnout. It never got so serious that I became apathetic but it was pretty bad for a while. The last semester in my 4th year I only did 27 hp (30 hp is the target value) and the first semester in my 5th year I only managed 24 hp. I had accumulated extra points so I finished the university with 308.5 hp, of the required 30 hp, but I was less effective the last 1.5 year or so than usual.I might write more about my burnout in another post, but I did three main things to get out of it. The first thing I did was to start CBT (Cognitive Behavioral Therapy or Kognitiv beteendeterapi in Swedish). The second was to continue with things which made me happy and more importantly gave me more energy. Basically I started exercising more regularly. And the third thing I did was to scale down on my ambitions and focus on taking care of myself, this is the reason I didnâ€™t study 100% the first semester.In the end I think I managed to get rid of the worst effects of the burnout and I managed to finish my studies. I was also a mentor in discrete math for a fourth time. I didnâ€™t complete a ton of courses as the whole last semester was spent on writing myMasterâ€™s thesisbut I did complete a great course in cryptology and one about logic programming in Prolog.The cryptology course was especially good as it even introducedBitcoinand the way the blockchain worked. Big kudos to that! I was aware of Bitcoin before but I wasnâ€™t aware of the implementation details.All coursesFor reference this is the list of courses I completed. It surprises me at least to see how much Iâ€™ve actually done these years.I started two extra courses which I never finished:TAMS15   Mathematical Statistics, first courseTATA49   Geometry with ApplicationsThe statistics course was started during my first year, but I finished a similar in my later years and the geometry course was taken as a fun extra course but I later decided to skip it.First yearTATA41   Calculus in One Variable 1TATA42   Calculus in One Variable 2TATA65   Discrete MathematicsTDDC10   Perspectives to Computer TechnologyTDDC66   Computer Systems and ProgrammingTDDC67   Functional Programming and LispTDDC68   Imperative Programming and AdaTSEA22   Switching Theory and Logical DesignTSTE58   ElectronicsTTIT02   Foundation Course in MathematicsSecond yearTAOP33   Combinatorial Optimization, Introductory CourseTATA24   Linear AlgebraTATA53   Linear Algebra, Honours CourseTATA61   Multivariable and Vector CalculusTDDC36   LogicTDDC69   Object Oriented Programming and JavaTDDC70   Data Structures and AlgorithmsTDDD60   Interactive SystemsTFYY68   Engineering MechanicsTSEA43   Digital Project LaboratoryTSEA47   Computer Hardware and Architecture, part 1TSEA49   Computer Hardware and Architecture, part 2Third yearTAMS27   Mathematical StatisticsTATA50   Transform TheoryTATA64   Graph TheoryTDDB68   Concurrent Programming and Operating SystemsTDDC93   Software Engineering TheoryTDDD09   Software Engineering ProjectTEIO27   Technology Based EntrepreneurshipTFYA68   PhysicsTGTU50   Visits to IndustryTSDT18   Signals and SystemsTSEA29   Microcomputer, Project LaboratoryTSKS10   Signals, Information and CommunicationTSRT12   Automatic Control YFourth yearTANA09   Numerical Algorithms in Computer ScienceTATA54   Number TheoryTD1077   Advanced Algorithmic Problem SolvingTDDA69   Data and Program StructuresTDDB44   Compiler ConstructionTDDC17   Artificial IntelligenceTDDD14   Formal Languages and Automata TheoryTDDD20   Design and Analysis of AlgorithmsTDDD48   Automated PlanningTDDD56   Multicore and GPU ComputingFifth yearTDDD08   Logic ProgrammingTDDD38   Advanced Programming in C++TGTU49   History of TechnologyTQDT33   Degree Project - Masterâ€™s ThesisTSIT03   CryptologyPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner ID draft Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/08/29/netrunner_id_draft_rebro</link>
      <description>Netrunner ID draft ÖrebroPublished:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerI entered an ID draft tournament inNetrunnerhosted in Örebro and this is a brief overview of what happened. Disclaimer: My memory is a little bit fuzzy and the events may or may not correspond to what actually happened.The draftThe idea was to randomly sort all entrants and in turn each chooses an ID which nobody else can choose. When everyone has chosen an ID the procedure continues in reverse order. This means you can choose either corp or runner early and leave the other until later.I got the 5th spot and Geist, Nasir, RP and NEH was chosen before me. If the goal was to do well I should probably have chosen a strong corp like Blue Sun, HB or possibly PE but I had just started playing Noise and I was loving every second of it so that was my choice. It was a little bit boring perhaps as it wasn’t a new ID I had to come up, but I had no idea of what I actually wanted to play with as corp so I simply delayed that decision. When it was my turn again most actually good corps had gone and I could choose between Titan, Harmony Medtech, Argus and Biotech (and some others…). Recently some popular Titan lists had popped up on netrunnerdb so I took that one.This is the drafting result:Frida unfortunately did not attend the actual draft and she had to pick both runner and corp last.With Wayland and Jinteki being relatively popular I was thinking of adding I’ve had worse to Noise… But in the end I decided to be ballsy and skip all that. And no plascretes. But I thought with some careful play and Imp/Utopia shard I could manage. Instead I went with the no frills 3 Aesop/3 Cache low economy approach which I’ve found is perfectly fine. I slotted 2 Hacktivist meeting as the local playgroup in Linköping insisted on running Cerebral static and Manhunt and maybe others would do weird stuff with currents as well?This is the Noise deck.The Titan buildis basically the popularAtlas Shruggedwith Beanstalk replacing Subliminal messaging and an extra Crisium Grid for the relative increase of criminal. In testing the corp deck performed okay… But never amazing. Noise performed consistently whenever I didn’t just die against Jinteki due to… Jinteki stuff.The matchesWhen we arrived at Örebro the basement already full of Magic gamers is already hot and things would only get worse. I didn’t get enough sleep and I’m already tired but still pumped to play some Netrunner!  The tournament features five rounds of swiss without a cut.Match 1: Yoshi, Reina/Blue Sunvs ReinaHedge fund, beanstalk, install ice over HQ. Runner installs things, runs on R&amp;amp;D and misses. I sea source-scorch second turn as he has 2 (or 3?) cards and I feel a bit bad about it. Unfortunately silly wins and losses like these happens sometimes.vs Blue SunHe gets a great start with ice and money. I’m having trouble setting up and I can’t find D4v1d before he can retrieve his oversighted Curtain Wall. I’m too scared/incapable of stealing his agendas as he’s rushing them out. When I finally get my Imp going on HQ he already has a scored atlas with two tokens and he scores out a hostile in a flash. I made a mistake of not installing a clone chip as I had a clot in my heap and I maybe should have been more aggressive but overall Yoshi outplayed me.2 points, 1-1Match 2: Dan, TWIY/Whizzardvs TWIYDan is from Linköping, same as me, but I haven’t actually played him but I knew his was a variation of theMidseasons/Psychographics rush deck. I play very carefully and builds up while he takes money. He gets a bunch more money and I continue milling and building. I’m waiting for him to start scoring out and I go through a Tollbooth and imps away an NAPD contract, but he never gets the astro train going while I sit back milling with clot ready. The game basically end when he never scores out and I get a mill victory.vs WhizzardHe trashes my sansans but I get some points scored. The game goes a bit long and we’re almost going to time. I think I could have won by rezzing an Archer against his faust when he doesn’t have enough cards to continue the game, but I stress out and for some reason I don’t rez it. Later he finds a 3-pointer for the win from HQ. I guess I took the risk as he could have just as easily hit a Snare and loose.4 points, 2-2Match 3: Johannes, Harmony Medtech/Geistvs GeistI’ve played against Johannes a lot so I know his deck and he knows mine. I get an excellent start with 3(!) Quandary protecting HQ, R&amp;amp;D and my remote. I manage to tax out his breaking and entering breakers as I score out with the help of sansan. Annoyingly Forger prevented me from scorching him more than once but in the end I manage to score out behind 2x barriers and a Quandary as he had basically exhausted his breakers and clone chips.vs Harmony MedtechI got set up with Noise fast and controlled the game from the start. He scored out a Nisei but I was never really worried. I made a stupid move of running archives when I had just trashed a Cyberdex and later I ran it again! But in the end my start was just too good and I won by pounding HQ with Lamprey, Imp and parasites.8 points, 4-2Match 4: Magnus, Nisei Division/Valenciavs Nisei DivisionI’ve never played Magnus but I know he’s a very good player so I’m really nervous to play him. He installs over R&amp;amp;D and remote and does a hedge fund. I install a lamprey and imp and run HQ… Just to hit a Snare. Sigh. I thought about it but I figured it wouldn’t be a big deal, but it was. I don’t shake the tag as I don’t have any resource installed and he scorches me. Huge misplay from me and now I’m trying not to tilt too hard.vs ValenciaI have a fairly bad starting hand which I keep… For some unknown reason. He’s very aggressive and he gets a medium dig going but misses. I don’t care about it too much and continue trying to score/finding my pieces. He does another big medium dig through a Grim, paying 3 + 1 cards for it and another ice, and hits a Snare on his last click, with two cards left in hand. I have a jackson out so I click to draw two cards and find the scorch for the win.Funny how both games ends in basically the same way. I’m still a bit upset about the way I lost but it feels a little bit better that I could pull out a win against such a good player, even if it was a lucky one.10 points, 5-3Match 5: Frida, Argus/Silhouettevs ArgusI know Frida loves meat damage so I play very carefully. I get a good start and I imp a bunch of things from R&amp;amp;D while milling a healthy amount. She scores out a couple of 1-pointers but I’m milling very fast and she’s not threatening me yet. When she goes up to 5 points I have as much money as she has so I make a run on archives (I also have an installed Utopia Shard) and take the win.vs SilhouetteAgain I get a good start and I get a Crisium grid on HQ to stop siphon. She doesn’t find her breakers and I get a hostile scored followed by the atlas train.14 points, 7-3Final resultsI won 7 matches, 4 with Titan and 3 with Noise. Surprisingly my corp faired better than my runner which can partly be explained by the two lucky flatlines I got. But overall it felt a lot better than during testing. Perhaps it’s because I’ve never played a rush deck before and the style takes a little getting used to? Then I got the silly scorched loss with Noise which really shouldn’t happen if you play as you should. But mistakes happen. I’m quite glad I managed to avoid tilting though.Generally with Noise I feel if the corp doesn’t push scoring windows hard you’re always in control of the game. Even then it’s difficult without a secondary win condition like scorch or midseasons. This is what Yoshi did with Blue Sun so very well where I really felt behind the whole game, but perhaps I was being too cautious.Overall I’m quite pleased with my result all things considered. This is the final results after the five rounds of swiss:There were quite a lot of prizes available and after the three victors took theirs this is what took home as my 4th place:I wanted to have a full playset of aesop’s, especially as I really love Noise, but the mat feels a little more special. I still want the alt-arts though, hopefully I can get them from somewhere else.Published:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Summer Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2015/09/18/netrunner_summer_tournament_linkping</link>
      <description>Netrunner Summer Tournament LinköpingPublished:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerThere was anotherNetrunnertournament this Sunday with 8 entrants. We had two new legal data packs with Old Hollywood and The Universe of Tomorrow so a lot of new things were tried. I heard a rumor that a full playset of both Aesop’s Pawnshop and Wyldside were available so I decided to not take my jankiest ideas and playNoiseandBlue Sun.The Noise buildwas practically unchanged from what I’ve played previously. The Blue Sun was a new glacier build with space ice and the new agendas Hollywood Renovation and The Future is Now. I wanted the threat of scorch and I also threw in two snares for extra spice.SwissWith 8 players we did 4 rounds of swiss, without any cut.Match 1: Dan, Valencia/Haarpsichordvs ValenciaI tried to push a Hollywood Renovation early, but it was snagged with blackmail.  It was a big gamble which unfortunately didn’t pan out.  This was a kinda large mistake, but in the end it didn’t matter.  I got my huge ice up and running and I forced him out of my servers.  I made a big play with Hollywood Renovation where I fast advanced a The Future is Now with the 5th and 6th advancement tokens and the game was basically over from that point.  I think I flatlined him in the end, but that’s more of a symbolic victory as I could have just as easily scored out.vs HaarpsichordSuper close, he had scored a lot of points and I was sitting with clot. In the end he installs 3 new remotes, one behind an ice. I push through the ice to steal the first agenda and I imp the second one (now the Imp is without counters). So I install another program, trashing the imp, then trashing the third remote with the imp. All new remotes were agendas. After this my victory was clear as a run on archives sealed the deal.4 points, 2-0Match 2: Harald, Haarpsichord, Hayleevs HaarpsichordI felt like I was behind the whole game, but so did Harald. In the end I managed to snag another very close win, but I’m not sure how that happened. All my Aesop’s were in the bottom of my stack but somehow I managed to steal/imp enough to make up for it. What decided things was a Clot hidden on my street peddler, which he overlooked. Without it I should have lost the game.vs HayleeI allowed some accesses to R&amp;amp;D, but mostly no big damage was done. Then I sealed the game up and the win was basically clear. I had a public support ticking down but we ran out of time so I got one point for being up to 6 agenda points. Maybe I could have played it faster to get the victory on time, but I don’t know.7 points, 4-0Match 3: Henrik, NEH, Chaos Theoryvs NEHI got set up fairly well and I managed to trash a sansan early. I had clot and everything was going alright. I hit a Snare in a remote which took me off guard a bit. The turn after he made another remote and I contemplated running on it, I did have imp tokens after all, but I decided it was fine to possibly allow him a single agenda. Big mistake as I installed cards down to 3 cards in hand and I died to a breaking news and scorch. For some reason I was convinced he was running the fast advance version, or some kind of nearpad, but the reality is I played too fast and didn’t consider everything properly. Live (or die) and learn I guess.vs Chaos TheoryAfter I rezzed an Archer on the remote it was basically game over as he couldn’t break it with the exception of datasuckers/parasiters, which quickly got used. I iced up my centrals with huge space ice and I could simply score out and win. He tried a big Vamp play against HQ, but on the last click and with a tag he died against double scorch after taking down my curtain wall.9 points, 5-1Match 4: Johannes, Haarpsichord/Ianvs HaarpsichordA blistering game where he rushed out agendas and I tried to punish/steal with Imp. The game slowed down when I had a Clot on board and I pushed up to 6 points. A run on archives with a Jackson reshuffle and then triggering Utopia shard sealed the deal.vs IanWe laughed about our decks being super late game focused and he stayed true to his words and he installed a ton of resources, three Gang Signs and two HQ interfaces. I was kinda agenda flooded but I managed to push them out in Archives with double Jackson. The game was decided in a funny way I think, even if I misplayed it quite a bit (I blame tiredness or something!).I had Hollywood Renovation with a bunch of advancement tokens, The Future is Now in a naked remote and one Snare and one Scorch in my hand. So I advanced Hollywood Renovation 3 times and scored it. He hit a Snare but nothing else with all his accesses. Then I scored The Future is Now and fetched my second Snare from R&amp;amp;D, which he accessed and died to. Naturally the correct play would have been to advance Hollywood Renovation twice, score The Future is Now and fetch the Snare. Now if he hits a Snare I can just scorch him on my last click.13 points, 7-1The resultsThe self critic in me keeps on thinking about the lost game and the game which went to time, but some small part of me tries to point out that things actually went well. I felt fine in all games and it never felt hopeless in any game. I did take “better” or more serious decks and the other guys joked about my very serious decks, but it’s fine. I did accomplish my goal and I even won the tournament, yay!I managed to achieve my goal and I got to choose a playset of Aesops! I also got a couple of Swordsman and a new deckbox. It’s a little bit sad that I declined the Femme Fatale alt-art as it’s preeetty… But maybe next time.Published:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Winter Kit Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2016/01/16/netrunner_winter_kit_tournament</link>
      <description>Netrunner Winter Kit Tournament LinköpingPublished:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerAfter quite the hiatus fromNetrunnerI had a chance to join a tournament here in Linköping with 14 participants. The number of players has grown a lot since the previous tournament which is really great.As I really wanted to win the wonderfulDay Jobplaymat I went with two of the best decks I could come up with. I went with theNoisedeck I’ve been playing a while which has been performing really well. I was expecting a lot of EtF so I was on the verge on playing a classicLooking 4 JobWhizzard deck but I switched to Noise just before the tournament as I’m more comfortable with it but I also find it more fun to play Noise than anything else. As for the corp I had played a littleFoodcoatssince it dominated worlds and it has felt extremely solid overall.Tournament structureWe did 4 rounds of swiss without a cut, even though I was personally hoping for 5 rounds. The more games I can play the better it is, I just love to play you know. As usual you get 2 points for each game you win and 1 point for a timed win.Round 1: Dan, Reina/Syncvs ReinaHe got me low on credits early but I played it slow and slowly but steadily accumulated enough credits to build rez enough ice and score out. Foodcoats destroyed the game.vs SyncI was really scared of Sync as Noise is weak against tags and I don’t run any meat damage protection. But I got a nice start and got a few points lead but he still managed to score out some astro counters and I carelessly gave him a Quantum Predictive Model so he got up to 5 point. Luckily I had set up the shard combo with utopia and hades shard I maged to score out with them the click before he would have won.Generally I need to be more mindful of quantum predictive model. I actually think it’s a really good agenda in this type of deck.4 points, 2-0Round 2: Johannes, Leela/Haarpsichordvs LeelaI was really, really poor in the beginning of the game and I had trouble getting my campaigns to stick. I made the really big mistake of trying to rush out an Accelerated Beta Test but I was too poor and too scared of Legwork and The Maker’s Eye after bounce to do it. In the process I had blocked Breaker Bay Grid from my campaigns which made the game really slow… I think I could have won in the end anyway but he got through my remote twice by forcing through an Ichi. Well played by him but I feel like I should have done better.vs HaarpsichordA bit rushed on time and super scared of 24/7 News Cycle I got a fairly good grip in the beginning with a Lamprey lock and I stole a couple of agendas early. Unfortunately I accumulated two News Team and nullified my lead. I still managed to find a couple of agendas to have the lead.In the turn I went through a Gutenberg and took a tag (which I could have avoided with Faust) and gave him a Quantum Predictive Model while I was on 4 points. If I had just broken the sub I would have gone up to 5 points and I had a Hades Shard with at least one 2 pointer in the archive… Once again I need to be more mindful of taking tags. Still had more points and got the timed win.5 points, 3-1Round 3: Henrik, Noise/Blue Sunvs NoiseEtf got set up well and the runner didn’t do anything useful at the start and I got set up really well economically and I was quite safe. Game ended early due to a faceplant into Assassin with only 2 cards in hand and I had a ton of money.vs Blue SunI knew Henrik ran an Accelerated Diagnostics combo deck and I was again scared of dying to Scorched Earth with my not having any protection. But I got a lot of HQ and R&amp;amp;D accesses by trashing two Spiderwebs and an Assassin and I managed to ping away some kill pieces. He drew a lot with jacksson and managed to end up with all three copies of scorch in archives and I finally won by a Medium for his whole R&amp;amp;D.9 points, 5-1Round 4: Fredrik, Kate/EtFThe last game of the tournament and I and Fredrik were the top dogs. As I had one timed win but Fredrik did not so I had to win both games to win the tournament. Tough task as Fredrik is a very solid player.vs KateI was a little flooded in the beginning but I didn’t get punished for it and after that I drew really good. I managed to stick the campaigns in the remote and I had a ton of money basically the whole game. Fredrik security nexus kate and I managed to get two 2-points early and I didn’t draw any agendas in the midgame when he was set up with his monster rig.At the end of the game I had built up a 4-Ice remote and a 5-Ice R&amp;amp;D. He hit me with an Escher which felt quite awful as he had a bunch of R&amp;amp;D interfaces but it turns out my super taxing ice and R&amp;amp;D luck saved me. Foodcoat can and will make extremely taxing servers it turns out…vs EtFFredrik ran a sort of Team Sponsorship fast-advance/rush EtF which I wasn’t looking forward to all that much. But luckily he didn’t draw a lot of economy and I managed to keep him down economically by a combination of lamprey and forcing him to rez ice. I also sniped an early 2-pointer by clicking through an eli and breaking a marcus with Faust, which felt really good admittedly. Overall I managed to keep up a ton of pressure on him even though I didn’t find aesop’s until fairly late.I really felt in control the whole game and the game ended as a timed win for me. The only bigger mistake I recall is one I did on my last turn in the game where I installed a cache and then ran on the remote server thinking I could beat the ash trace just to plant into a Turing. At this point I was already at 5 points and what I could have done is walk through R&amp;amp;D 2 times by taking assassin to the face to maximize my chances of getting a regular win.12 points, 7-1The resultsI was a bit down after loosing points in the second round but I managed to recoup very well in the end. I felt I had some really good in some key matches and my decks served me very well. I will probably try some other corps but I may still continue playing Noise even after the most wanted list.In the end I managed to win the whole tournament which I didn’t really expect. I was hoping to do well but I wasn’t expecting it.As my prize I naturally chose Day Job. The Ice Wall participation prize was great as well. I’m a little sad I didn’t get the Corroder one as I think it looks really good, but you can’t get everything in this world.Was a good tournament and everyone were once again awesome! I’m already planning for the next one!Published:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Lindhska Store Championship Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/04/02/netrunner_lindhska_store_championship_rebro</link>
      <description>Netrunner Lindhska Store Championship ÖrebroPublished:April  2,2015in814820fTagged:Netrunner,GamingAfter the awesomeness during theprevious store championship, I decided to go to the store championship at Lindhska Bokhandel in Örebro.I brought a modified version of the same corp I used the last time, aBlue Sun kill deckand anew runnerwith Leela Patel. See the links for cards and some card choices.The tournament was a 26-player one, at least that’s the number I heard, with 5 rounds of swiss followed by a double elimination bracket. 7 players from Linköping went, again I think but I’m not sure if that’s the correct number.SwissMatch 1, Tennin/Reinavs TenninMemory is a bit fuzzy here. I think I got off to a good start, but somehow the corp stabilized and we went into a long slog of a game. For some reason the corp managed to score out before I could find the final agenda.It certainly felt like I could have won the game, but I’m not sure what I did wrong. Might be that I wasn’t comfortable with the deck and played too aggressively. 0-2vs ReinaAgain I don’t remember the specifics. We had very little time and I manage to score out an agenda, so I get a timed win.Still, corp felt great and I was in control, 1-2.Match 2, RP/Chaos Theoryvs Replicating PerfectionAh RP. Actually the first time I’ve played against the id, but I had a pretty good idea of how to approach the game. I scored an early agenda but I’m slowly getting locked out. Then he makes a pretty big misplay - he flips a naked remote and he wants to score, but it’s Nisei MK II instead of a 3/2 agenda and now he’s flustered. I apologize and I score the Nisei and I remove the Enhanced Login Protocol.Still, he’s not out of the game. I run indexing but he hid a Jackson in a remote, stupid mistake! I manage to same old thing indexing again and I score another agenda and I place another agenda as the 5th card. I carefully count the cards and I manage to score the winning agenda, before being locked out of the game.The opponent said he’s only played a week… Still played pretty good I’m very glad for that victory. 3-2vs Chaos TheoryAnother quick corp game. Snare last click into scorch for a simple victory. His inexperienced lost him the game there.5-2 and feeling better.Match 3, RP/MaxXvs MaxXWe’re 6 players from Linköping and 2 from Stockholm at the top. Sadly I’m facing David, also from Linköping and we’re on our way to knock each other down.The game is slow, very slow. I feel in control and take it slow and easy. Scoring some agendas when I get them, but not drawing all that much. MaxX runs out of cards and runs a Levy. Somehow he runs of cards again and I know I’ve won.I have no idea how this happened, but we actually went to time, during our first match! Maybe it really was an intense game or maybe I was just tired or hungry… But anyway it happened. I manage to set up a win-win scenario for me during my second-to-last turn. Either he lets me score out or he runs the remote and let me sea-source scorch him to death (he had a hand size of 3 due to an early Cerebral Overwriter). He cooses the second option.7-2Match 4, NEH/Whizzardvs Near-Earth HubThis was by far the most stressful/exciting game of the day for me. I get a bad hand and I mulligan… Into a much much worse hand. No economy, no nothing. The corp scores an early astroscript, this isn’t looking so good… I do something, I can’t remember, then he sets up  a remote with one advancement counter on. Curious, it’s probably an NAPD, but sadly I can’t get in and score so I’m gearing up for a next turn combo.Sadly, it’s a Project Beale, worth 3 points and he’s got an astroscript token. From bad to worse, much worse. I desperately run his hand and his remote. Oh no, he’s got a scorch on top of R&amp;amp;D and he’s got a Data Raven protecting HQ. Luckily I’ve got a plascrete so I go tag-me with a Legwork, finding nothing. He’s using Jackson to draw like mad.I run another Legwork with a same old thing through the Data Raven and I find two agendas and I get in some single-accesses on R&amp;amp;D. Lady luck isn’t smiling for long though as he draws and install-advance a remote. Surely an NAPD, which I’m too poor to get at.My only hope is R&amp;amp;D and I have two interfaces out so I can access 3 cards. If I can bounce the NAPD I might still have a chance. The first card is a.. NAPD which I can’t steal. The second is a Breaking News so I bounce the advanced card now sitting on 5 agenda points.I’m too poor to get the NAPD and the next turn I get Scorched to death.The game was practically over from the terrible start, but I almost managed to steal a win. I got praise from the opponent but I can’t stop but think that I should have had a few more credits for that NAPD…7-4, feeling the pain.vs WhizzardAnother id I haven’t played against. He tried, and was successful for a while, with killing my oversighted curtain walls and keeping my economy low. But still, I managed to score out two the cleaners and putting more and more pressure as I gradually build up my economy lead. I think I hit a shattered remains as well.The game ends with me advancing the winning agenda, he tries but cannot access it or any other agenda, and I score for the win.Again corp is feeling absolutely great. 9-4Match 5, EtF/KateThis time I’m faced up against Henrik, my buddy from Linköping who knows my decks and I know his decks. Sadly it appears this is the battle for top 8.vs Engineering the FutureDuring practice I felt very confident with my Leela deck and I get a great start scoring two 3/2 agendas. Not thinking more about it I try to build up a bit and getting ready to score the winning agenda as I know he has a few 5/3.But things are not shaping up that way. I try to keep is economy low but he manages to get two adonis campaigns up and running and he hits two large GRNLD Refineries. Probably a huge misplay by me to allow that to happen. With his economy up he gets some nice taxing servers up and my aggressive running has not paid off at all. He’s all set up and I practically have nothing.My last hope is an indexing through a Janus I know is there. By my counts I’m only 2 or 1 credit off from making two succesful runs through R&amp;amp;D in the hopes of scoring out, but it’s not meant to be. I’ve already accumulated 3 brain damage from previous (too aggressive) encounters.With great play he manages to score out and win. Well played. 9-6vs KateAgain I’m having difficulties to recall the specifics of the match. I know I managed to hit one shattered remains to stop his drip econ for a while. I manage to score an agenda but time is running out.I have a 5/3 agenda which I’ve already advanced twice. I literary have my whole hand full of kill cards: 1 snare, 1 sea-source, 3 scorch and 2 punitives and with more money I’m just waiting for him to make a run. I decide to fake the agenda as the almighty 9/6 Government Takeover agenda and I advance it up to 7 in the course of two turns. In hindsight it might have been better to score it out as a 5/3, but that’s not what I did.So sitting at 7 advancement counters Henrik decides to… Not run it! Instead he runs my hand twice, the second time he imps my sea-source. Sigh.So the game ends with me winning on time, somehow it feels a bit frustrating as I had so much control the whole game, thinking how can I loose? Turns out, with some bad luck and some good runner decisions it’s quite possible not to win.10-6.The CutAs Henrik and I had the battle for the last place into playoffs, which I lost, Henrik makes the cut on 11 points and we’re a bunch of other players with 10 points.  Huge congrats to Henrik as he really did play better than I did.SummaryOnce again I’m amazed by the friendliness of the Netrunner community. Everyone was really nice and friendly. I joked around a bit with some guys and girls I’ve never even met before, which is no small feat with a very shy and introvert person such as myself. I got a ride all the way from Linköping to Örebro and the guy with the other car even came and asked me if I wanted to come with him earlier as I got knocked out. As it happens I stayed and watched some of Henrik’s and Fredrik’s matches.As for the games themselves I’m super happy with my corp deck which practically went undefeated during the tournament. I felt quite comfortable to win both the games where I got a timed win from.The runner deck however I’m not super happy with. It felt slow and low on economy and just a bit awkward. Some of the problems can be attributed to good corp play: I didn’t land many good account siphons which made my economy quite bad and they played around Leela’s ability quite well. Ice up centrals at least twice and don’t score out agendas on the last click.But mostly I think I didn’t play the runner deck right, I wanted to play more aggressively than maybe you’re supposed to with a slower control deck such as the one I had made. I really need to try out a Leela build based on Desperado and an economy package with Dirty Laundry and Security Testing, I think it might fit my style better. I also want to play around more with the wonderful Anarchs…Looking forward to the next time I can play some Netrunner!Published:April  2,2015in814820fTagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Years at Linköping's University</title>
      <link>https://www.jonashietala.se/blog/2015/07/22/5_years_at_the_university</link>
      <description>5 Years at LinkÃ¶ping's Universityâ˜Published:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolI recently finished my masterâ€™s degree (civilingenjÃ¶r or civil engineering) at LinkÃ¶pingâ€™s University. At first it felt like 5 years would be an eternity, but in hindsight it was over in a flash. my gut feeling is that I havenâ€™t learnt or done anything of note, except you know actually finishing my degree, but if I sit down and think about it I have done some things. Actually quite a lot of things.First yearI moved to LinkÃ¶ping with my girlfriend and it was quite an adjustment as we both moved from our parents and to a city where we practically knew nothing and no one. But we managed fine and while we never went out to parties or went to other student events we found some friends. I also startedITF Taekwon-doafter a few months.There werenâ€™t too much to do in school. The focus was on foundation math courses, mostly things I had already done but needed refreshing, and on introductory programming courses which werenâ€™t challenging at all for me.Second yearDuring the second year I felt the courses were harder and more interesting than the first yearâ€™s courses. The courses in Combinatorial Optimization, Data Structures and Algorithms and Linear Algebra were fun and new for me. I also took an extra continuation course in Linear Algebra which was interesting.When I started the university I thought I would like electronics and hardware construction, but the courses from the first year were really not interesting at all. Even when making the transition from analog to digital I didnâ€™t care for it at all. But it all changed when we started actuallybuildingthings with digital circuits.At first we had an introductory course where we built digital clocks and counters. You were supposed to have prepared a design sketch for the labs, but me and my partner for some reason never did it, and so we were always running late in the labs. I remember one very fun, or horrible, occasion where we had struggled a lot with one lab and we had spent almost the full 4 hours until we finally completed it with maybe 10 - 15 minutes left. Filled with relief we started taring apart what we so painstakingly had built. When done we realized we had one part left where we were supposed to use the circuit we just destroyedâ€¦ Luckily we could use the circuits another group had made, but it was a painful lesson in always reading the descriptions and prepare for the labs in advance.The digital circuit labs were followed by a digital project of our own choice. Wedesigned a processorwhich could run theCore Wars 88 standardand we simulated it on an FPGA.The main block schema for the processorAnd here is a small video of the simulation in action:Click to view on YouTubeThe project was interesting as it was an outlet for our creativity and it touched on several different areas. Processor design, hardware debugging (!) and I wrote aredcode assemblerfor our CPU and amicrocode compiler.The behaviour of the processor is controlled by microcode which basically is a set of control outputs of 0s and 1s. For example our processor has 18 outputs consisting of a total of 39 bits (uPC_addris internal).game FIFO IR ADR1 ADR2 OP M1 M2 mem1 mem2 mem3 mem_addr ALU1 ALU2 ALU buss PC  uPC  uPC_addr00   00  0   00  00   0  00 00  00   00   00    000     00   0   000 000  00 00000 00000000To make things easier, instead of manually editing each 0/1 line we introduced a DSL which then the compiler turns into microcode lines.For examplethe microcodeis described in our DSL:; Startup, check if we're in gamejmpS $GAME                              ; Execute game code only if we're runningjmpO +0                                 ; Infinite loop if we've recieved game over, reset to break it; Clear memory contentsALU = 0                                 ; Load 0ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC:CLRMEM PC -&gt; mem_addr                          ; Look at PCOP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem         ; Clear itALU++                                   ; IncrALU1 -&gt; PC, jmpZ $LOADP                 ; If 0 we're done loopingjmp $CLRMEM                             ; Else continue...And is then compiled intoVHDL code:signalmem:Data:=(--Startup, check if we're in game"00000000000000000000000000000000000011000110011",--jmpS GAME(33)"00000000000000000000000000000000000101000000001",--jmpO +0(01)--Clear memory contents"00000000000000000000000000110000000000000000000",--ALU = 0"00000000010101000000000000000100010000000000000",--ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC"00000000000000000000110000000000000000000000000",--PC -&gt; mem_addr"00000000000000101010000000000000000000000000000",--OP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem"00000000000000000000000000100000000000000000000",--ALU++"00000000000000000000000000000100010001100001001",--ALU1 -&gt; buss, buss -&gt; PC, jmpZ LOADP(09)"00000000000000000000000000000000000001000000100",--jmp CLRMEM(04)...The redcode assemblers job is to transform a warrior (a piece of redcode) into a binary object file which we can then send to the FPGA for execution.For example this warrior:step    EQU 417init    EQU 1337size    EQU 9JMP start           ; boot jump as we can't specify PC in the middle T.Tsrc     DAT 0               ; src pointerstart   MOV #size, src      ; setup src pointercopy    MOV @src,DJN copy, srcSPL @dst            ; throw a pc thereADD #step, dst      ; space out a bitJMP start           ; make a new copy, yay!dst     DAT #0, #init       ; dst pointerendCompiles to:$ ./assembler jonas-replicator.red -r0000000000001001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000010010001111111111111000000000001101100011111111111100000000000000101000000001001000000011111111111110001111111111101000000001010100000000000000000110000000000000000000000000010010000000001101000010000000000000010000000000100000000011111111110110000000000000000000000000000010100000000000000000000010100111001With the--verbosetag the format can be examined:$ ./assembler jonas-replicator.red --verbose0000000000001001  00 09  ; Number of rows (9) jonas-replicator.redpad    OP  A  B  pad     A op      pad      B op00000000 0100 00 00 000 0000000000010 000 0000000000000   00 40 00 02 00 00  ; JMP  start           (2)  0(0)00000000 0000 00 00 000 0000000000000 000 0000000000000   00 00 00 00 00 00  ; DAT  0               (0)  0(0)00000000 0001 01 00 000 0000000001001 000 1111111111111   00 14 00 09 1f ff  ; MOV # size(9)  src       (-1)00000000 0001 10 11 000 1111111111110 000 0000000000101   00 1b 1f fe 00 05  ; MOV @ src(-2) &lt; dst      (5)00000000 1001 00 00 000 1111111111111 000 1111111111101   00 90 1f ff 1f fd  ; DJN  copy(-1)  src(-3)00000000 1010 10 00 000 0000000000011 000 0000000000000   00 a8 00 03 00 00  ; SPL @ dst            (3)  0(0)00000000 0010 01 00 000 0000110100001 000 0000000000010   00 24 01 a1 00 02  ; ADD # step(417)  dst      (2)00000000 0100 00 00 000 1111111111011 000 0000000000000   00 40 1f fb 00 00  ; JMP  start           (-5)  0(0)00000000 0000 01 01 000 0000000000000 000 0010100111001   00 05 00 00 05 39  ; DAT # 0(0) # init       (1337)If youâ€™re interested in the project you canread more on github.In addition, or as a prerequisite, to this awesome project we also got an introduction to 68k assembly and to computer architecture which was very good.This year me and a friend also made game in the Java programming course calledGrand Thief Arto. Not the greatest of games but it was still fun to make it. I also became a mentor in discrete math for the first year students which was a fun and easy way to earn a bit of extra money.Third yearThis year we continued with some more advanced courses. We had some project oriented courses with some theory about how projects should be run and then a practical part where we made some software for an actual company. The overall idea the course idea is great, to get some real world experience and to get some interaction with an actual company, but the execution was very much not so.For example in the middle of the project one of our project members were supposed to be exchanged with another member from another project. The motivation was that â€œin the real world this could happen, so you need to always be preparedâ€ but thatâ€™s just stupid in my opinion. Firstly you donâ€™t get fired and just booted from the team very often, but you get an advanced notice and you have some time to prepare the team, yourself and your eventual replacement for the move. Secondly it adds a very real sense of dread and nervousness for everyone involved. I happened to really like all members in the project and I was very worried to be switched out. Turns out I was the one who had to change project. I was very upset and I didnâ€™t click nearly as well with the new team and I thought the experience really sucked and I became demotivated.Another thing which was quite bad was the extreme focus on documentation. The whole first 2-3 months were supposed to be a planning stage and the actual implementation was supposed to be done the last 2-3 months. But large parts of the implementation stage were also spent on documentation, or rather writing documents because the course demanded it and we never had any use for the majority. The funny thing is that most of the project theory was spent on motivating why the waterfall development model wasnâ€™t suited to software development, but what did the project degenerate into? Even despite our best efforts, we tried to implement an iterative development as our customers didnâ€™t really know what they wanted, but we were foiled by course planners.A much better project was theRobot projectwhere we created an autonomous robot! There we poked around with hardware and lower level programming in C.Debugging this was quite an experienceI continued to be a mentor in discrete math and I joinedTeam Obelixwhich organized student visits to different companies. I won the â€œbest CVâ€ award given by Ericsson, I won some things in the local programming competitionIMPAand I had a great course in operative systems where we usedPintos. I took an extra course in Graph Theory which was quite different from other math courses but very interesting. Additionally I took aProgramming Languagescourse at Coursera, also quite nice.This summer I also had my first real programming job which was a summer internship atConfiguraand I had a really good time and we replaced their triangulation software.Fourth yearThe courses from the previous years were all mandatory, with the exception of some extra courses I took, but for the 4th and 5th year I could choose my own profile and what courses to take. I spent quite a lot of time thinking about which courses I wanted to take. In the end Iâ€™m quite happy with my selection but there are many interesting courses I had to say no to. The main profile I targeted was theProgramming and Algorithmsprofile.In hindsight these are my favourite courses during the year:TDDD48 Automated PlanningAAPS Advanced Algorithmic Problem SolvingTDDB44 Compiler ConstructionTATA54 Number TheoryTDDC17 Artificial IntelligenceTDDD56 Multicore and GPU ComputingTDDA69 Data and Program Structures (SICP)I didnâ€™t find the compiler courseasfun as I had initially thought. The theory part wasnâ€™t very interesting but the lab part was really, really good! All in all it still was a very fun course. The AI courses (Automated Planning and Artificial Intelligence) were great and AI is an area Iâ€™m very interested in. During this time I also took anonline course in Machine Learningvia Coursera by Stanford University. Number Theory is another maybe niche area in mathematics which I found interesting.I continued doing some programming competitions as can be seen inUVawhich enabled my to go toNWERC 2013in the Netherlands. Ultimately Iâ€™m not super good at these competitions but it was still a great experience. Netherlands (or specifically Delft) was great. In the Multicore and GPU Computing course there was a parallel sorting contest which I and my lab partner managed to win. The goal was to create a sorting routine on the CPU with the best sorting performance. Oh and I also went through the classic book Structure and Interpretation of Computer Programs orSICPin a course. Very excellent book!During the summer I also took part inIDA Summer of Code 2014where I contributed torust. I also had mysecond summer job at Configura:Our octree implementationFifth yearAt the end of my fourth year I had grown a bit study tired. I had thought the summer jobs would have helped a bit but although the summer jobs were amazing it might have been better to take a bit of a holiday, which I did not do at all.But the real issue wasnâ€™t me getting sick of studying, although I was a bit unmotivated, but I was fast approaching a burnout. It never got so serious that I became apathetic but it was pretty bad for a while. The last semester in my 4th year I only did 27 hp (30 hp is the target value) and the first semester in my 5th year I only managed 24 hp. I had accumulated extra points so I finished the university with 308.5 hp, of the required 30 hp, but I was less effective the last 1.5 year or so than usual.I might write more about my burnout in another post, but I did three main things to get out of it. The first thing I did was to start CBT (Cognitive Behavioral Therapy or Kognitiv beteendeterapi in Swedish). The second was to continue with things which made me happy and more importantly gave me more energy. Basically I started exercising more regularly. And the third thing I did was to scale down on my ambitions and focus on taking care of myself, this is the reason I didnâ€™t study 100% the first semester.In the end I think I managed to get rid of the worst effects of the burnout and I managed to finish my studies. I was also a mentor in discrete math for a fourth time. I didnâ€™t complete a ton of courses as the whole last semester was spent on writing myMasterâ€™s thesisbut I did complete a great course in cryptology and one about logic programming in Prolog.The cryptology course was especially good as it even introducedBitcoinand the way the blockchain worked. Big kudos to that! I was aware of Bitcoin before but I wasnâ€™t aware of the implementation details.All coursesFor reference this is the list of courses I completed. It surprises me at least to see how much Iâ€™ve actually done these years.I started two extra courses which I never finished:TAMS15   Mathematical Statistics, first courseTATA49   Geometry with ApplicationsThe statistics course was started during my first year, but I finished a similar in my later years and the geometry course was taken as a fun extra course but I later decided to skip it.First yearTATA41   Calculus in One Variable 1TATA42   Calculus in One Variable 2TATA65   Discrete MathematicsTDDC10   Perspectives to Computer TechnologyTDDC66   Computer Systems and ProgrammingTDDC67   Functional Programming and LispTDDC68   Imperative Programming and AdaTSEA22   Switching Theory and Logical DesignTSTE58   ElectronicsTTIT02   Foundation Course in MathematicsSecond yearTAOP33   Combinatorial Optimization, Introductory CourseTATA24   Linear AlgebraTATA53   Linear Algebra, Honours CourseTATA61   Multivariable and Vector CalculusTDDC36   LogicTDDC69   Object Oriented Programming and JavaTDDC70   Data Structures and AlgorithmsTDDD60   Interactive SystemsTFYY68   Engineering MechanicsTSEA43   Digital Project LaboratoryTSEA47   Computer Hardware and Architecture, part 1TSEA49   Computer Hardware and Architecture, part 2Third yearTAMS27   Mathematical StatisticsTATA50   Transform TheoryTATA64   Graph TheoryTDDB68   Concurrent Programming and Operating SystemsTDDC93   Software Engineering TheoryTDDD09   Software Engineering ProjectTEIO27   Technology Based EntrepreneurshipTFYA68   PhysicsTGTU50   Visits to IndustryTSDT18   Signals and SystemsTSEA29   Microcomputer, Project LaboratoryTSKS10   Signals, Information and CommunicationTSRT12   Automatic Control YFourth yearTANA09   Numerical Algorithms in Computer ScienceTATA54   Number TheoryTD1077   Advanced Algorithmic Problem SolvingTDDA69   Data and Program StructuresTDDB44   Compiler ConstructionTDDC17   Artificial IntelligenceTDDD14   Formal Languages and Automata TheoryTDDD20   Design and Analysis of AlgorithmsTDDD48   Automated PlanningTDDD56   Multicore and GPU ComputingFifth yearTDDD08   Logic ProgrammingTDDD38   Advanced Programming in C++TGTU49   History of TechnologyTQDT33   Degree Project - Masterâ€™s ThesisTSIT03   CryptologyPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner ID draft Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/08/29/netrunner_id_draft_rebro</link>
      <description>Netrunner ID draft ÖrebroPublished:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerI entered an ID draft tournament inNetrunnerhosted in Örebro and this is a brief overview of what happened. Disclaimer: My memory is a little bit fuzzy and the events may or may not correspond to what actually happened.The draftThe idea was to randomly sort all entrants and in turn each chooses an ID which nobody else can choose. When everyone has chosen an ID the procedure continues in reverse order. This means you can choose either corp or runner early and leave the other until later.I got the 5th spot and Geist, Nasir, RP and NEH was chosen before me. If the goal was to do well I should probably have chosen a strong corp like Blue Sun, HB or possibly PE but I had just started playing Noise and I was loving every second of it so that was my choice. It was a little bit boring perhaps as it wasn’t a new ID I had to come up, but I had no idea of what I actually wanted to play with as corp so I simply delayed that decision. When it was my turn again most actually good corps had gone and I could choose between Titan, Harmony Medtech, Argus and Biotech (and some others…). Recently some popular Titan lists had popped up on netrunnerdb so I took that one.This is the drafting result:Frida unfortunately did not attend the actual draft and she had to pick both runner and corp last.With Wayland and Jinteki being relatively popular I was thinking of adding I’ve had worse to Noise… But in the end I decided to be ballsy and skip all that. And no plascretes. But I thought with some careful play and Imp/Utopia shard I could manage. Instead I went with the no frills 3 Aesop/3 Cache low economy approach which I’ve found is perfectly fine. I slotted 2 Hacktivist meeting as the local playgroup in Linköping insisted on running Cerebral static and Manhunt and maybe others would do weird stuff with currents as well?This is the Noise deck.The Titan buildis basically the popularAtlas Shruggedwith Beanstalk replacing Subliminal messaging and an extra Crisium Grid for the relative increase of criminal. In testing the corp deck performed okay… But never amazing. Noise performed consistently whenever I didn’t just die against Jinteki due to… Jinteki stuff.The matchesWhen we arrived at Örebro the basement already full of Magic gamers is already hot and things would only get worse. I didn’t get enough sleep and I’m already tired but still pumped to play some Netrunner!  The tournament features five rounds of swiss without a cut.Match 1: Yoshi, Reina/Blue Sunvs ReinaHedge fund, beanstalk, install ice over HQ. Runner installs things, runs on R&amp;amp;D and misses. I sea source-scorch second turn as he has 2 (or 3?) cards and I feel a bit bad about it. Unfortunately silly wins and losses like these happens sometimes.vs Blue SunHe gets a great start with ice and money. I’m having trouble setting up and I can’t find D4v1d before he can retrieve his oversighted Curtain Wall. I’m too scared/incapable of stealing his agendas as he’s rushing them out. When I finally get my Imp going on HQ he already has a scored atlas with two tokens and he scores out a hostile in a flash. I made a mistake of not installing a clone chip as I had a clot in my heap and I maybe should have been more aggressive but overall Yoshi outplayed me.2 points, 1-1Match 2: Dan, TWIY/Whizzardvs TWIYDan is from Linköping, same as me, but I haven’t actually played him but I knew his was a variation of theMidseasons/Psychographics rush deck. I play very carefully and builds up while he takes money. He gets a bunch more money and I continue milling and building. I’m waiting for him to start scoring out and I go through a Tollbooth and imps away an NAPD contract, but he never gets the astro train going while I sit back milling with clot ready. The game basically end when he never scores out and I get a mill victory.vs WhizzardHe trashes my sansans but I get some points scored. The game goes a bit long and we’re almost going to time. I think I could have won by rezzing an Archer against his faust when he doesn’t have enough cards to continue the game, but I stress out and for some reason I don’t rez it. Later he finds a 3-pointer for the win from HQ. I guess I took the risk as he could have just as easily hit a Snare and loose.4 points, 2-2Match 3: Johannes, Harmony Medtech/Geistvs GeistI’ve played against Johannes a lot so I know his deck and he knows mine. I get an excellent start with 3(!) Quandary protecting HQ, R&amp;amp;D and my remote. I manage to tax out his breaking and entering breakers as I score out with the help of sansan. Annoyingly Forger prevented me from scorching him more than once but in the end I manage to score out behind 2x barriers and a Quandary as he had basically exhausted his breakers and clone chips.vs Harmony MedtechI got set up with Noise fast and controlled the game from the start. He scored out a Nisei but I was never really worried. I made a stupid move of running archives when I had just trashed a Cyberdex and later I ran it again! But in the end my start was just too good and I won by pounding HQ with Lamprey, Imp and parasites.8 points, 4-2Match 4: Magnus, Nisei Division/Valenciavs Nisei DivisionI’ve never played Magnus but I know he’s a very good player so I’m really nervous to play him. He installs over R&amp;amp;D and remote and does a hedge fund. I install a lamprey and imp and run HQ… Just to hit a Snare. Sigh. I thought about it but I figured it wouldn’t be a big deal, but it was. I don’t shake the tag as I don’t have any resource installed and he scorches me. Huge misplay from me and now I’m trying not to tilt too hard.vs ValenciaI have a fairly bad starting hand which I keep… For some unknown reason. He’s very aggressive and he gets a medium dig going but misses. I don’t care about it too much and continue trying to score/finding my pieces. He does another big medium dig through a Grim, paying 3 + 1 cards for it and another ice, and hits a Snare on his last click, with two cards left in hand. I have a jackson out so I click to draw two cards and find the scorch for the win.Funny how both games ends in basically the same way. I’m still a bit upset about the way I lost but it feels a little bit better that I could pull out a win against such a good player, even if it was a lucky one.10 points, 5-3Match 5: Frida, Argus/Silhouettevs ArgusI know Frida loves meat damage so I play very carefully. I get a good start and I imp a bunch of things from R&amp;amp;D while milling a healthy amount. She scores out a couple of 1-pointers but I’m milling very fast and she’s not threatening me yet. When she goes up to 5 points I have as much money as she has so I make a run on archives (I also have an installed Utopia Shard) and take the win.vs SilhouetteAgain I get a good start and I get a Crisium grid on HQ to stop siphon. She doesn’t find her breakers and I get a hostile scored followed by the atlas train.14 points, 7-3Final resultsI won 7 matches, 4 with Titan and 3 with Noise. Surprisingly my corp faired better than my runner which can partly be explained by the two lucky flatlines I got. But overall it felt a lot better than during testing. Perhaps it’s because I’ve never played a rush deck before and the style takes a little getting used to? Then I got the silly scorched loss with Noise which really shouldn’t happen if you play as you should. But mistakes happen. I’m quite glad I managed to avoid tilting though.Generally with Noise I feel if the corp doesn’t push scoring windows hard you’re always in control of the game. Even then it’s difficult without a secondary win condition like scorch or midseasons. This is what Yoshi did with Blue Sun so very well where I really felt behind the whole game, but perhaps I was being too cautious.Overall I’m quite pleased with my result all things considered. This is the final results after the five rounds of swiss:There were quite a lot of prizes available and after the three victors took theirs this is what took home as my 4th place:I wanted to have a full playset of aesop’s, especially as I really love Noise, but the mat feels a little more special. I still want the alt-arts though, hopefully I can get them from somewhere else.Published:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Summer Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2015/09/18/netrunner_summer_tournament_linkping</link>
      <description>Netrunner Summer Tournament LinköpingPublished:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerThere was anotherNetrunnertournament this Sunday with 8 entrants. We had two new legal data packs with Old Hollywood and The Universe of Tomorrow so a lot of new things were tried. I heard a rumor that a full playset of both Aesop’s Pawnshop and Wyldside were available so I decided to not take my jankiest ideas and playNoiseandBlue Sun.The Noise buildwas practically unchanged from what I’ve played previously. The Blue Sun was a new glacier build with space ice and the new agendas Hollywood Renovation and The Future is Now. I wanted the threat of scorch and I also threw in two snares for extra spice.SwissWith 8 players we did 4 rounds of swiss, without any cut.Match 1: Dan, Valencia/Haarpsichordvs ValenciaI tried to push a Hollywood Renovation early, but it was snagged with blackmail.  It was a big gamble which unfortunately didn’t pan out.  This was a kinda large mistake, but in the end it didn’t matter.  I got my huge ice up and running and I forced him out of my servers.  I made a big play with Hollywood Renovation where I fast advanced a The Future is Now with the 5th and 6th advancement tokens and the game was basically over from that point.  I think I flatlined him in the end, but that’s more of a symbolic victory as I could have just as easily scored out.vs HaarpsichordSuper close, he had scored a lot of points and I was sitting with clot. In the end he installs 3 new remotes, one behind an ice. I push through the ice to steal the first agenda and I imp the second one (now the Imp is without counters). So I install another program, trashing the imp, then trashing the third remote with the imp. All new remotes were agendas. After this my victory was clear as a run on archives sealed the deal.4 points, 2-0Match 2: Harald, Haarpsichord, Hayleevs HaarpsichordI felt like I was behind the whole game, but so did Harald. In the end I managed to snag another very close win, but I’m not sure how that happened. All my Aesop’s were in the bottom of my stack but somehow I managed to steal/imp enough to make up for it. What decided things was a Clot hidden on my street peddler, which he overlooked. Without it I should have lost the game.vs HayleeI allowed some accesses to R&amp;amp;D, but mostly no big damage was done. Then I sealed the game up and the win was basically clear. I had a public support ticking down but we ran out of time so I got one point for being up to 6 agenda points. Maybe I could have played it faster to get the victory on time, but I don’t know.7 points, 4-0Match 3: Henrik, NEH, Chaos Theoryvs NEHI got set up fairly well and I managed to trash a sansan early. I had clot and everything was going alright. I hit a Snare in a remote which took me off guard a bit. The turn after he made another remote and I contemplated running on it, I did have imp tokens after all, but I decided it was fine to possibly allow him a single agenda. Big mistake as I installed cards down to 3 cards in hand and I died to a breaking news and scorch. For some reason I was convinced he was running the fast advance version, or some kind of nearpad, but the reality is I played too fast and didn’t consider everything properly. Live (or die) and learn I guess.vs Chaos TheoryAfter I rezzed an Archer on the remote it was basically game over as he couldn’t break it with the exception of datasuckers/parasiters, which quickly got used. I iced up my centrals with huge space ice and I could simply score out and win. He tried a big Vamp play against HQ, but on the last click and with a tag he died against double scorch after taking down my curtain wall.9 points, 5-1Match 4: Johannes, Haarpsichord/Ianvs HaarpsichordA blistering game where he rushed out agendas and I tried to punish/steal with Imp. The game slowed down when I had a Clot on board and I pushed up to 6 points. A run on archives with a Jackson reshuffle and then triggering Utopia shard sealed the deal.vs IanWe laughed about our decks being super late game focused and he stayed true to his words and he installed a ton of resources, three Gang Signs and two HQ interfaces. I was kinda agenda flooded but I managed to push them out in Archives with double Jackson. The game was decided in a funny way I think, even if I misplayed it quite a bit (I blame tiredness or something!).I had Hollywood Renovation with a bunch of advancement tokens, The Future is Now in a naked remote and one Snare and one Scorch in my hand. So I advanced Hollywood Renovation 3 times and scored it. He hit a Snare but nothing else with all his accesses. Then I scored The Future is Now and fetched my second Snare from R&amp;amp;D, which he accessed and died to. Naturally the correct play would have been to advance Hollywood Renovation twice, score The Future is Now and fetch the Snare. Now if he hits a Snare I can just scorch him on my last click.13 points, 7-1The resultsThe self critic in me keeps on thinking about the lost game and the game which went to time, but some small part of me tries to point out that things actually went well. I felt fine in all games and it never felt hopeless in any game. I did take “better” or more serious decks and the other guys joked about my very serious decks, but it’s fine. I did accomplish my goal and I even won the tournament, yay!I managed to achieve my goal and I got to choose a playset of Aesops! I also got a couple of Swordsman and a new deckbox. It’s a little bit sad that I declined the Femme Fatale alt-art as it’s preeetty… But maybe next time.Published:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Winter Kit Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2016/01/16/netrunner_winter_kit_tournament</link>
      <description>Netrunner Winter Kit Tournament LinköpingPublished:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerAfter quite the hiatus fromNetrunnerI had a chance to join a tournament here in Linköping with 14 participants. The number of players has grown a lot since the previous tournament which is really great.As I really wanted to win the wonderfulDay Jobplaymat I went with two of the best decks I could come up with. I went with theNoisedeck I’ve been playing a while which has been performing really well. I was expecting a lot of EtF so I was on the verge on playing a classicLooking 4 JobWhizzard deck but I switched to Noise just before the tournament as I’m more comfortable with it but I also find it more fun to play Noise than anything else. As for the corp I had played a littleFoodcoatssince it dominated worlds and it has felt extremely solid overall.Tournament structureWe did 4 rounds of swiss without a cut, even though I was personally hoping for 5 rounds. The more games I can play the better it is, I just love to play you know. As usual you get 2 points for each game you win and 1 point for a timed win.Round 1: Dan, Reina/Syncvs ReinaHe got me low on credits early but I played it slow and slowly but steadily accumulated enough credits to build rez enough ice and score out. Foodcoats destroyed the game.vs SyncI was really scared of Sync as Noise is weak against tags and I don’t run any meat damage protection. But I got a nice start and got a few points lead but he still managed to score out some astro counters and I carelessly gave him a Quantum Predictive Model so he got up to 5 point. Luckily I had set up the shard combo with utopia and hades shard I maged to score out with them the click before he would have won.Generally I need to be more mindful of quantum predictive model. I actually think it’s a really good agenda in this type of deck.4 points, 2-0Round 2: Johannes, Leela/Haarpsichordvs LeelaI was really, really poor in the beginning of the game and I had trouble getting my campaigns to stick. I made the really big mistake of trying to rush out an Accelerated Beta Test but I was too poor and too scared of Legwork and The Maker’s Eye after bounce to do it. In the process I had blocked Breaker Bay Grid from my campaigns which made the game really slow… I think I could have won in the end anyway but he got through my remote twice by forcing through an Ichi. Well played by him but I feel like I should have done better.vs HaarpsichordA bit rushed on time and super scared of 24/7 News Cycle I got a fairly good grip in the beginning with a Lamprey lock and I stole a couple of agendas early. Unfortunately I accumulated two News Team and nullified my lead. I still managed to find a couple of agendas to have the lead.In the turn I went through a Gutenberg and took a tag (which I could have avoided with Faust) and gave him a Quantum Predictive Model while I was on 4 points. If I had just broken the sub I would have gone up to 5 points and I had a Hades Shard with at least one 2 pointer in the archive… Once again I need to be more mindful of taking tags. Still had more points and got the timed win.5 points, 3-1Round 3: Henrik, Noise/Blue Sunvs NoiseEtf got set up well and the runner didn’t do anything useful at the start and I got set up really well economically and I was quite safe. Game ended early due to a faceplant into Assassin with only 2 cards in hand and I had a ton of money.vs Blue SunI knew Henrik ran an Accelerated Diagnostics combo deck and I was again scared of dying to Scorched Earth with my not having any protection. But I got a lot of HQ and R&amp;amp;D accesses by trashing two Spiderwebs and an Assassin and I managed to ping away some kill pieces. He drew a lot with jacksson and managed to end up with all three copies of scorch in archives and I finally won by a Medium for his whole R&amp;amp;D.9 points, 5-1Round 4: Fredrik, Kate/EtFThe last game of the tournament and I and Fredrik were the top dogs. As I had one timed win but Fredrik did not so I had to win both games to win the tournament. Tough task as Fredrik is a very solid player.vs KateI was a little flooded in the beginning but I didn’t get punished for it and after that I drew really good. I managed to stick the campaigns in the remote and I had a ton of money basically the whole game. Fredrik security nexus kate and I managed to get two 2-points early and I didn’t draw any agendas in the midgame when he was set up with his monster rig.At the end of the game I had built up a 4-Ice remote and a 5-Ice R&amp;amp;D. He hit me with an Escher which felt quite awful as he had a bunch of R&amp;amp;D interfaces but it turns out my super taxing ice and R&amp;amp;D luck saved me. Foodcoat can and will make extremely taxing servers it turns out…vs EtFFredrik ran a sort of Team Sponsorship fast-advance/rush EtF which I wasn’t looking forward to all that much. But luckily he didn’t draw a lot of economy and I managed to keep him down economically by a combination of lamprey and forcing him to rez ice. I also sniped an early 2-pointer by clicking through an eli and breaking a marcus with Faust, which felt really good admittedly. Overall I managed to keep up a ton of pressure on him even though I didn’t find aesop’s until fairly late.I really felt in control the whole game and the game ended as a timed win for me. The only bigger mistake I recall is one I did on my last turn in the game where I installed a cache and then ran on the remote server thinking I could beat the ash trace just to plant into a Turing. At this point I was already at 5 points and what I could have done is walk through R&amp;amp;D 2 times by taking assassin to the face to maximize my chances of getting a regular win.12 points, 7-1The resultsI was a bit down after loosing points in the second round but I managed to recoup very well in the end. I felt I had some really good in some key matches and my decks served me very well. I will probably try some other corps but I may still continue playing Noise even after the most wanted list.In the end I managed to win the whole tournament which I didn’t really expect. I was hoping to do well but I wasn’t expecting it.As my prize I naturally chose Day Job. The Ice Wall participation prize was great as well. I’m a little sad I didn’t get the Corroder one as I think it looks really good, but you can’t get everything in this world.Was a good tournament and everyone were once again awesome! I’m already planning for the next one!Published:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>First impressions of Ghostty</title>
      <link>https://www.jonashietala.se/blog/2025/01/06/first_impressions_of_ghostty</link>
      <description>First impressions of GhosttyPublished:January  6,2025Revised:January 13,  2025in7ae080cTagged:Ghostty,LinuxThere are two conflicting forces in play in setting up your computer environment:It’s worthwhile to pursue small improvements in frequently used tools.It’s not productive to get stuck tweaking your setup endlessly.It’s common to find people get stuck at the extreme ends of the spectrum;
some programmers refuse to configure or learn their tools at all, while others get stuck re-configuring their setups constantly without any productivity gains to show for it.Finding a balance can be tricky.
With regards to terminals I’ve been usingalacrittyfor many years.
It gets the job done but I don’t know if I’m missing out on anything?
I’ve been meaning to look at alternatives likeweztermandkittybut I never got far enough to try them out.On one hand it’s just a terminal, what difference could it make?On the other hand, I spend countless of hours every day inside a terminal so even a small improvement should pay off in the long run.EnterGhostty, a terminal so hyped up it made me drop any useful things I was working on and see what the fuzz was about.
I don’t quite get why people hype up a terminal of all things but here we are.Ghosttydidn’t revolutionize my setup or anything but I admit thatGhosttyis quite nice and it has replacedalacrittyas my terminal.I just want a blank canvas without any decorationsOne of the big selling points ofGhosttyis itsnative platform integration.
It’s supposed to integrate well with your window manager so it looks the same and gives you some extra functionality…
But I don’t know why I should care—I just want a big square without decorations of any kind.You’re supposed to to be able to simply turn off any window decorations:window-decoration=falseAt the momentthere’s a bugthat requires you set some weird GTK settings to fully remove the borders:gtk-titlebar=falsegtk-adwaita=falseIt’s unfortunate as I haven’t done any GKT configuration on my machine (I useXMonadas my window manager and I don’t have any window decorations anywhere).There might some useful native features I don’t know about.
The password input style is neat for instance, although I’m not sure it does anything functionally different compared to other terminals:Cursor invertcursor-invert-fg-bg=trueInalacrittyI’ve had the cursor invert the background and foreground and you can do that inGhosttytoo.I ran into an issue where it interferes withindent-blankline.nvimmaking the cursor very hard to spot in indents (taking the color of the indent guides, which is by design low contrast with the background).Annoying but it gave me the shove I needed to try out different plugins to see if the problem persisted.
I ended up with (an even nicer) setup usingsnacks.nvimthat doesn’t hide the cursor:Left:indent-blankline.nvim(cursor barely visible)Right:snacks.nvim(cursor visible and it highlights scope).Minimum contrastUnreadablelsoutput is a staple of the excellent Linux UX.
It might look like this:Super annoying.You can of course configure thelsoutput colors but that’s just for one program and it won’t automatically follow when yousshto another server.Ghostty’sminimum-contrastoption ensures that the text and background always has enough contrast to be visible:minimum-contrast=1.05Most excellent.This feature has the potential to break “eye candy” features, such the Neovim indent lines plugins if you use a low contrast configuration.
I still run into minor issues from time to time.Hide cursor while typingmouse-hide-while-typing=trueA small quality-of-life feature is the ability to hide the cursor when typing.
I didn’t know I needed this in my life.Consistent font sizing between desktop and laptopWithalacrittyI have an annoying problem where I need to use a very different font size on my laptop and my desktop (8and12).
This wasn’t always the case and I think something may have changed inalacrittybut I’m not sure.Ghosttydoesn’t have this problem and I can now use the same font settings across my machines (font-size=16).Ligature supportTheissue for adding ligatures to alacrittywas closed eight years ago
and even though I wanted to try ligatures I couldn’t be bothered to “run a low quality fork”.Ghosttyseems like the opposite of “low quality” and it rendersIosevka’s ligatures very well:My configured ligatures of Iosevka, rendered in Ghostty.Overall I feel that the font rendering inGhosttyis a little better than inalacritty, although that might be recency bias.
I’m still undecided on ligatures but I love that I don’t have to feel limited by the terminal.I use acustom Iosevka buildwith theseGhosttysettings:font-family=IosevkaTreeLig Nerd Fontfont-style=Mediumfont-style-bold=Boldfont-style-italic=Medium Italicfont-style-bold-italic=Bold Italicfont-size=16ColorschemeWhileGhosttyhas an absolutely excellent theme selector with a bunch of included themes (ghostty +list-themes)melange-nvimwasn’t included, so I had to configure the colorscheme myself.
It was fairly straightforward even though thepalette = 0=syntax was a bit surprising:# The dark variant of melangebackground=#292522foreground=#ECE1D7palette=0=#867462palette=1=#D47766palette=2=#85B695palette=3=#EBC06Dpalette=4=#A3A9CEpalette=5=#CF9BC2palette=6=#89B3B6palette=7=#ECE1D7palette=8=#34302Cpalette=9=#BD8183palette=10=#78997Apalette=11=#E49B5Dpalette=12=#7F91B2palette=13=#B380B0palette=14=#7B9695palette=15=#C1A78E# I think it's nice to colorize the selection tooselection-background=#403a36selection-foreground=#c1a78eI’m happy with GhosttyIn the endGhosttyhas improved my setup and I’m happy I took time to try it out.
It took a little more time than “just launch it” but it absolutely wasn’t a big deal.
The reward was a few pleasant improvements that have improved my life a little.And perhaps most important of all: I’m now an alpha Nerd that uses a terminal written in Zig.Did I create a custom highlighter for the Ghostty configuration file just to have proper syntax highlighting for this one blog post?You bet I did.(It’s a simpletreesitter grammar.)Published:January  6,2025Revised:January 13,  2025in7ae080cTagged:Ghostty,LinuxPrevious</description>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2024 in review</title>
      <link>https://www.jonashietala.se/blog/2025/01/05/2024_in_review</link>
      <description>2024 in reviewPublished:January  5,2025ine90f82fTagged:Yearly ReviewIt’s time for my15th yearly review.Nerdy things I enjoyedI read a lot of fantasy books this year!My favorite new series wereThe Kingkiller Chronicle,Gentlemen Bastards series, andThe Stormlight Archive.If you’re curious about Sanderson’s books but a little apprehensive about jumping into a massive series such asThe Stormlight Archivethen I’ll recommendThe Emperor’s Soulas an excellent little introduction.
The standalone bookWarbreakeris also fantastic (availablefor free on Brandon’s website).Customizing Neovim was fun and rewarding.It’s amazing I got anything productive done this year…I really enjoy working with Rust in my own hobby projects.Types are coming to Elixirand I’m loving it.(I recently migrated some small projects to v1.18 and found a bunch of errors.)TheGleam programming languageshows a lot of promise.My one gripe is the pain of manually encoding/decoding JSON (even with the various libraries).
Compared to for example Elixir dynamic encoding or Rust’s#[derive(Deserialize)]it just feels so bad that I’ve avoided Gleam for some projects.
Shame on me?CSS is alive and better than ever.Things I accomplishedI quit my job and started my own company.At the moment I’m focusing on consulting but maybe something else can grow from it one day?Iwrote 26 blog posts—it was quite a productive blogging year for me.I built acustom keyboardtogether with acustom keyboard layout.Made the eBook forWhy Cryptocurrencies?freely available and finally finished theHow I wrote ‘Why Cryptocurrencies?’series.I wrote aTree-sitter grammar for Djot.I need to be more active maintaining it…
But it’s hard to get motivated as I’ve got so many other interesting things I’d like to work on.
Managing an open source project is not for the faint of heart (or the easily distracted).Finished the blog series aboutbuilding my first 3D printer.I’m up to over 2100 printing hours with the machine so it’s safe to say I’ve been using it, notonlyplaying around with.Rewrote my lighting home automationfrom Python to Elixir.I realized thatmeta-bloggingis a great way to getvirtual points on Hacker News.Tentative plans/goals/wishes for 2025For some reason the idea of writing a fantasy novel got stuck in my head.I had a stint where I listened to dozens of hours of advice for aspiring writers and started planning a series.
The excitement tapered off a bit during the Christmas holidays and I don’t know if this was just a temporary sidetrack or if it’s something I’ll actually end up doing.Design a one-handed keyboard layout.Again, this was just something my brain got stuck thinking about and I’m not sure if it’s just a fleeting idea or something Ineedto do so I can stop thinking about it.
(Sometimes just a little planning plus solving the most difficult problems are enough—I don’t have to finish all the crazy/dumb ideas I get for my mind to consider them “done”.)Complete my second 3D printer.There’s no point in having a single printer; what if I break it and I can no longer print replacement parts for it?Develop my home automation system more.I’ve got atonof things I’d like to improve (or play around with).
For instance, yesterday I received theHome Assistant Voice Preview Editionthat I hope works as well as advertised.Published:January  5,2025ine90f82fTagged:Yearly ReviewPreviousNext</description>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A type checking error in Elixir 1.18</title>
      <link>https://www.jonashietala.se/blog/2024/12/30/type_checking_in_elixir_118</link>
      <description>A type checking error in Elixir 1.18Published:December 30,2024Revised:December 30,  2024in540b2d8Tagged:ElixirAlthough I’m a big Elixir fan, the lack of static typing has always been my biggest annoyance (and why I thinkGleamis so cool).
I think static typing helps catch bugs earlier and in an automated way, leading to less buggy software and saves time in the long run.To my great joy Elixir is working ona new type systemthat will hopefully give us the early type checking errors I’ve been craving for.
The system has been rolled out in stepssince v1.17and when I migrated tov1.18I found my first type checking warning that I wanted to highlight.Comparison with structsThis is the offending code with the corresponding warning:defget_surrounding_events_as_dt(events,now=%DateTime{})dotime=DateTime.to_time(now)next_i=Enum.find_index(events,fn{_,event_time}-&gt;time&lt; event_timegiven types:dynamic(%Time{}) &lt; dynamic()where "event_time" was given the type:# type: dynamic()# from: lib/haex/sun.ex{_, event_time}where "time" was given the type:# type: dynamic(%Time{})# from: lib/haex/sun.ex:88:10time = DateTime.to_time(now)Comparison operators (&gt;, &lt;, &gt;=, &lt;=, min, and max) perform structural and not semantic comparison.Comparing with a struct won't give meaningful results.Structs that can be compared typically define a compare/2 function within their modules thatcan be used for semantic comparison.typing violation found at:││     next_i = Enum.find_index(events, fn {_, event_time} -&gt; time &lt; event_time end) || 0│                                                                 ~(The type checker cannot yet resolveevent_timeto theTimestruct, leaving it asdynamic()in the text above.)The issue here as that&lt;(andDateTime.beforeforDateTimeetc).As it happens forTimethis doesn’t seem to be an issue as the structurehappensto perform the comparisons in the same order asTime.before?, which this test verifies:test"check_times"dotimes=Enum.zip([0..23,0..59,0..59])|&gt;Enum.map(fn{h,m,s}-&gt;Time.new!(h,m,s)end)fora&lt;-timesdoforb&lt;-timesdoassert a&lt;b&gt;Logger.info("Got pid:#{inspect(pid)}")(There’s a missingrin:already_stated.)At the moment this doesn’t produce an error but I really hope we’ll reach this point sooner rather than later as I make these kinds of mistakes all the time.
I think I catch most of these with tests but I’m sure some slip through.I hope this isn’t that far away as the v1.18 type checker manages to catch a simpler case like this:defnum_to_descr(num)docasenumdo1-&gt;:one2-&gt;:two_-&gt;:manyendenddefprint(num)docasenum_to_descr(num)do:zero-&gt;IO.puts("zero")x-&gt;IO.puts("Other:#{x}")endendwarning: the following clause will never match::zerobecause it attempts to match on the result of:num_to_descr(num)which has type:dynamic(:many or :one or :two)typing violation found at:│41 │       :zero -&gt; IO.puts("zero")│       ~~~~~~~~~~~~~~~~~~~~~~~~Published:December 30,2024Revised:December 30,  2024in540b2d8Tagged:ElixirPreviousNext</description>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Building my ultimate keyboard</title>
      <link>https://www.jonashietala.se/blog/2024/11/26/building_my_ultimate_keyboard</link>
      <description>Building my ultimate keyboardâ˜Published:November 26,2024Revised:November 29,  2024inf19d7b8Tagged:Computer,Cybershard,KeyboardsThe Cybershard keyboard.ContentsMy wishlistCosmos keyboard configuratorInitial design parametersHardware and materialPrototypesFirst printPressing the top right key with the ring fingerAdjust mouse keys and increase tentingRounded base and pinky tweakThumb keys adjustmentsMore tweaks and the left halfBeta V3Small tweaks to pinky and thumb keysTrackball mounting typesRemove mouse keysAdditional printed partsWrist restsMicrocontroller holderBottom plateWiringMatrixController wiringAdding the keyboard to QMKBasic setupFlashingSplit keyboardTrackballIs this the ultimate keyboard?Next stepsWhat comes to mind when you see the description â€œthe ultimate keyboardâ€?There aremanykeyboards in this world; here are some that might fit the â€œultimateâ€ moniker:Das Keyboard 4 Ultimate mechanical keyboardDataHandErgodox EZGlove80Happy Hacking KeyboardModel M KeyboardStenotypekeyboards.Ultimate Hacking KeyboardCharaChorderSome even have â€œultimateâ€ in their name, although Iâ€™ll assert that theyâ€™re far from ultimate.Any man who must say, â€œI am the Kingâ€, is no true king.Tywin LannisterIâ€™ll go one step further to say that no keyboard is universally the ultimate because itâ€™s impossible to agree on how to rank different keyboards.
For example, while I personally prefer a split keyboard, you might not.
Some people have very long fingers and some have very short fingers, making some layouts more preferable.
Others may not even have 10 fingers (or both hands), requiring more drastic modifications.If an ultimate keyboard exists, it differs from person to person.
This is my attempt to buildmyultimate keyboard.My wishlistTo me, the ultimate keyboard should have these features:Should be split to support a more natural typing position.Really the biggest ergonomical leap in my opinion.Customized for my own fingers and typing eccentricities.Column stagger, curvatures and tenting are features I think I want but they need to be tuned, probably by trial-and-error.
The position of the thumb keys is another sticking point that the other keyboards Iâ€™ve tried have failed to get just right.Have an integrated trackball or trackpad.This way I donâ€™t have to move my hand so far and I can free up some valuable desk space.
It shouldnâ€™t be operated with my thumb due to my RSI.Contain the keys I need but no more.I like smaller keyboards and Iâ€™ve been very happy and withmy custom keyboard layoutthat only has 34 keys.
Some modifications are fine of course but for the most part I want to be able to use the same layout on both theFerrisand my new keyboard.To fulfill these requirements I need to be able to customize all parts of the keyboard and I really donâ€™t want to learn CAD and create one from scratch; I wonder what alternatives I have?Cosmoskeyboard configuratorHaving looked around, I probably want something similar to aDactyl/Dactyl Manuform(many variants exists).
Theyâ€™re keyboards you generate from parameters (such as number of rows and columns and the amount of curvature).
Iâ€™ve always wanted to try one and nowwith a 3D printer, I can.When looking for a generator I stumbled upon theCosmos keyboard configuratorand I want to gush about it a little becauseitâ€™s excellent.A relatively standard Dactyl Manuform with an encoder and trackpad.Itâ€™s excellent because it allows a clueless sod like me to configure a keyboard the way I want to and it has an impressive feature list:Easily generate keyboards of any size.Customize XY-spacing, row- and colomn curvature, and more.Several pre-made thumb clusters.UI to move around all the keys.Supports different switches (I so need my Choc switches).AnExpertmode that allows you to customize anything via JavaScript.Supports encoders, trackpads, OLED displays, and trackballs.Can generate a wrist rest.Exports.stlfor easy printing or.stepyou can import to CAD.Hereâ€™s a small snippet from how the code inExpertmode might look like:constcurvature={curvatureOfColumn:15,curvatureOfRow:5,spacingOfRows:18,//18x19 Choc spacingspacingOfColumns:19,arc:0,};/***Useful for setting a different curvature*for the pinky keys.*/constpinkyCurvature={...curvature,curvatureOfColumn:15,};/***The plane used to position the upper keys.*It's rotated by the tenting and x rotation*then translated by the z offset.*/constupperKeysPlane=newTrsf()//`20` specifies the tenting angle..rotate(20,[0,0,0],[0,1,0],false).rotate(1,[0,0,0],[1,0,0],false).translate(0,0,0,false);The entire state of the keyboard is also stored in the url, so I can easily share my config by including a link:Cosmos reference of the final keyboard configuration.
(Barring any breaking changes in the tool of courseâ€¦)Initial design parametersEven with a keyboard configurator I needed a way to start.
I already have alayout that I really likeso I wasnâ€™t starting from nothing.
These were the important parts going into the design process:A 3x5 grid with 1-2 thumb keys (in practice one thumb key is enough).If you question why I want to build such a small keyboard Iâ€™ll redirect you to the discussion inThe T-34 keyboard layoutpost.Integrated trackball on the right-hand side.Choc switches.One of the major decisions with a keyboard is what kind of switch to use.
While MX-style switches are the most common I personally really love Choc switches for a couple of reasons:Low-profileLow actuation forceCan be closer togetherWhile a low profile switch is more important for a flat keyboard, not a tented and curved one like Iâ€™m building now,
the flatter keycaps and the switches being closer together is crucial for pressing two keys with one finger:A horizontal combo is pressed with the finger in the middle of the keys. Itâ€™s surprisingly comfortable.The low-actuation force is also more comfortable to me as it helps reduce the strain on my fingers, and makes combos (pressing several switches at once) generally more pleasant.Hardware and materialItâ€™s not enough with just a 3D printer, to build a working keyboard you need a bunch of hardware:Two microcontrollers.I got theLiatrismicrocontroller as it has enough pins to connect a trackball sensor and it supportsQMK.SwitchesWhat kind of Choc switch should I use?Linear,tactile, orclicky?Exactly how heavy should they be?Should they besilent?I wasnâ€™t sure so I ordered a sampling of different switches to try.A collection of different Choc switches.For the final keyboard I used theAmbients silent Noctural (linear / 20gf)switches,
where the deciding factor was getting as light switches as possible.
(Iâ€™ve previously used modded 15gf switches, which were even better, but I couldnâ€™t find a way to buy them.)KeycapsItâ€™s hard to decide on a colorscheme so Ibought a bunch of random colors.Keycaps arenâ€™t only for looking cool.
A convex keycap for the thumb button instead of the standard concave one makes it much more comfortable:The blue convex keycap to the left and the red concave to the right.I also got keycaps for the index row with these smallhoming notchesto help my fingers more easily find the home row.A pair ofTRRS connectorsand aTRRS cable.A Trackball with a matching sensor.I decided to pick upthis PMW3389 sensorbecause it was recommended in the keyboard configurator anda red 34mm trackball from Amazon.Filament for the 3D printed pieces.I ended up settling on thePolyTerra PLA Army Purplefor the case but I used a bunch of different filament during the prototype phase.Diodes, screws, heatset inserts, and cable to do the wiring.PrototypesSome discarded prototypes.When youâ€™re trying to design something like a custom keyboard I think you need to go through a bunch of trial-and-error until you find something that fits.Hereâ€™s a short rundown of some of the significant revisions I went through, mostly to illustrate that itâ€™s very much an iterative process.When I first started this process theCosmoskeyboard configurator didnâ€™t support generating both halves at the same time, so I focused on getting the right side comfortable first.First printFor my first print I mostly wanted to print it out and test how a keyboard with a standard curvature felt.
I also wanted to try to place a trackball somewhere.I ended up removing a regular thumb key (Iâ€™ve used two thumb keys with mykeyboard layout) to make it fit and I added a â€œmouse thumb keyâ€ that I plan to use as aleft mouse buttonwhen Iâ€™m operating the trackball.
It was tricky to place the trackball as I wanted to operate it with my index + middle finger, not my thumb.Another tweak I made was to reduce the spacing between the keys to be closer to the Choc spacing.
Choc spacing seems to be 18.6 x 17.6 mm, but I used 19 x 18 mm spacingâ€”the attraction to round numbers is real.This is the very first prototype I printed.
Please ignore the bad print quality; the filament was wet and the temperature was too high. Itâ€™s just a prototype so it really doesnâ€™t matter.Pressing the top right key with the ring fingerMost of the keys on the keyboard felt fine but I had one major annoyance: 
I have a habit of using the ring finger to press the top right key instead of the pinky but with the curvature on the keyboard this just wasnâ€™t possible anymore.You might wonder, why donâ€™t I just create a new habit and use the pinkyas youâ€™re supposed to?
The simple answer is that Ihateit.
To my fingers that feels beyond terrible and Iâ€™d rather remove the key and only have two keys in the outermost column.
As it happens, pressing the key with my ring finger (on a flat keyboard) feels good so Iâ€™d rather adjust the key than remove it.Thatâ€™s the beauty of designing a custom keyboard for yourselfâ€”you can do weird shit that only makes sense to you.The second printed prototype, with some keys installed for testing.
The printer clogged before the print was finished but it did its job as a prototype.Hereâ€™s an angle from the configurator showing the offset of thepkey compared the other keys in the column.I also added an extra mouse thumb key and lowered the pinky column a bit.Adjust mouse keys and increase tentingItâ€™s starting to look like an actual keyboard.
With color coded keycaps; red for mouse-only buttons and violet for the home-row keys.Pressingpwith my ring finger feels great.
Pressing the thumb normal thumb key feels awful because the mouse thumb keys are in the way when I relax my hand.Adjustments made:Moved mouse thumb keys to be more vertical and pressed from the side.Added an extra pinky key reachable when Iâ€™m using the trackball.Increased tenting to 20 degrees from 10 degrees.20 degrees of tenting.Rounded base and pinky tweakYet another prototype.I tried the â€œroundedâ€ sides and top feature ofCosmos.The mouse pinky key was too low, I raised it up a bunch.Thumb keys adjustmentsRotated the main thumb key inwardsAdded an area for a displayLowered the mouse thumb keys a littleRemoved the â€œroundedâ€ featuresMore tweaks and the left halfConfigure the left half of the keyboardMove pinky keys a little upwardsMove all thumb keys a little further awayRemoved the display (felt like too much of a hassle for a little coolness)Although I said I wanted to have a 3x5 grid, the generator included an easy option to include a small bottom row with 2 extra keys (for the ring and middle finger) that I wanted to try out for the left side.
Theyâ€™reâ€¦ Okay I guess.
Not crazy uncomfortable but not quite comfortable enough that I want to have common keys there.Beta V3At this point the Beta V3 ofconfiguratoris out and in it thereâ€™s several improvements, most notably:Both halves can be configured at the same time.Can go between the Advanced and Expert tabs! WOW!I had to manually keep track of the JavaScript changes I made, and update them manually if I wanted to make a change in the UIâ€¦
But no more!I had to redo most of the configuration and I think I made some minor changes that I didnâ€™t keep track of, but I made two larger ones:Lowered the tenting angle to 15 degrees (from 20)Lowered ring pinky column key a littleSmall tweaks to pinky and thumb keysRaise/tilt top pinky row keyMove thumb keys on left side closer togetherTrackball mounting typesRoller bearings for the trackball.When I started this projectCosmosonly supported a single type of trackball mount: roller bearings.
They worked quite poorly for me as the ball was spinning well in one direction but poorly in others.Luckily new options were added and as Iâ€™m writing this thereâ€™s 4 different ways you can mount the trackball:Roller bearings (the old option)BTU (7.5mm or 9mm)Static ball bearings (3.175mm)Because I was burned with the bad experience (and I didnâ€™t want to rebuild the keyboard yet again) I made small prototypes of the three different options:The new trackball mounts; BTU 9mm, BTU 7.5mm, and static ball bearings.The BTUs had the least friction and it felt really easy to spin the ball but they were also distressingly loud.
The static ball bearings had more friction than the BTUs and less than the roller bearings while being completely silent, so I chose to go with the ball bearings.The ball bearings installed on the keyboard, with the trackball sensor peeking through.While they donâ€™t feel nearly as good as theKensington SlimBladetheyâ€™re decent enough.
I try not to use the mousethatmuch and having the trackball so much closer is worth it compared to having a separate trackball unit besides the keyboard.When I discovered this issue I had already wired up the keyboard, so to switch mount I had to redo the wiring.
It was worth it.Remove mouse keysAfter having used the keyboard for real I realized that the three keys dedicated to mouse buttons would have to go.
There were two major issues with them:The pinky key got in the way sometimes when I reached for the top column, and I couldnâ€™t retrain myself to avoid it.One of the goals with thekeyboard layout I useis to reduce the thumb and pinky usage of my right hand. The mouse keys counteract this goal.So I had them removed and I rewired the right half for the 3rd time.Sigh.I think the lesson is that itâ€™s not enough to print a prototype and press switches pretending to type, you have to build andusethe keyboard a bunch before you can evaluate some of the design decisions.Cosmos referenceAdditional printed partsWhile the case is the biggest and most important part of this kind of keyboard, there are a few other parts I had to print to complete the keyboard.Wrist restsSome of the different wrist rests I tried.While theyâ€™re called awristrests, I donâ€™t think you should hold your arms so that thereâ€™s pressure on the wrist as that can easily lead to carpal tunnel syndrome.
Surprisingly this is even worse with a softer support but I donâ€™t want to risk it either way.I think of them more aspalmrests, where I rest the lower part of the palm on the rest, making sure the wrist itself doesnâ€™t receive any pressure.Magnet attachmentsThe wrist rests didnâ€™t come with any sort of attachment to the case, so they just always drifted away.
I tried to combat this by gluing magnets inside the case and outside the wrist rest, making them stick together just enough to stay together during normal use, while being easily removable.I ended up not using the wrist restsDespite my efforts, I havenâ€™t been using the printed rests as I reverted to theâ€squishyâ€ onesIâ€™ve used before:Itâ€™s not visible from this angle but my hand rests using the palm instead of the wrist.The printed felt too uncomfortable and I couldnâ€™t find an angle I liked more than the gel rests.
Oh well.Microcontroller holderThe microcontroller is held in place by a holder you screw into the case.Thereâ€™s a holder to fasten the microcontroller to the case that I use.
I had to manually make a hole to make theBootbutton accessible, which was easily accomplished when slicing the model.Bottom plateA flexible bottom plate hides the wiring.One problem with theFerriswas that it would sometimes slip on the table.
I counteracted this by using an old Netrunner playmat but I wanted another solution.The keyboard is generated with a bottom plate thatâ€™s used to hide and protect the internals.
I printed it in TPU, a flexible and rubbery material, that gives enough grip to stay relatively still when Iâ€™m typing.WiringThe complete wiring of the right-side keyboard.MatrixOne of the first things you need to do when wiring up a custom keyboard is to plan out a matrix.
I guess you could directly wire every switch directly to the controller too, but thatâ€™s not feasible if you have a larger amount of keys, so the usual thing is to use a matrix.What a matrix means is you should wire together all keys in a row and connect that to a pin on the controller, and to the same with the columns.It might look something like this:The green lines indicate columns and the purple lines indicates rows.You should also use diodes in the matrix (for either rows or columns, I chose the rows). Pay attention to the diode direction.The rows are connected with diodes and with a cable to a pin on the controller.The first matrix I soldered on the right side.
It was a lot more difficult to solder because of the awkward positions of the switches.The 3rd matrix I soldered for the right side, this time without the challenging mouse keys.
Note that I wired it up slightly differently than in the wiring plan above because it felt more straightforward.
Exactly how you choose to construct the matrix doesnâ€™t really matter, as long as every key has a unique row/column combination.Both the rows and columns are wired up and soldered to the controller.The wiring is horrible, I know.I only lost one microcontroller due to a shortâ€¦
With my wiring prowess I consider that a success!Controller wiringThe right-side controller connected to the TRRS and the trackball sensor.
This was after I had removed them from my second wired right half and was preparing to rebuild it.Itâ€™s a good idea to plan out the pin assignments in advance.
I made the mistake ofsolderingthe wrong pins, mixing the two sets of SPI pins (you canâ€™t use RX0 together with TX1 for example).Or you could not solder directly on the controller, like a normal person.The pins of theLiatrismicrocontroller.
Itâ€™s an RP2040-based controller.Controller pinConnection1Handedness (VCCon the left keyboard and GND on the right)2TRRS data3, 4, 5, 6, 7Matrix columns20, 22, 26, 27Matrix rows13 (CS1)Trackball SS14 (SCK1)Trackball SCK15 (TX1)Trackball MOSI16 (RX1)Trackball MISOAlthough I connected trackball MT to pin 21 on the controller, the motion functionality isnâ€™t supported for split keyboards.
I also didnâ€™t connect RST.The TRRS connector is connected to Vcc, GND, and pin 2 (and similarly on the right side).
Pin 1 is also connected to Vcc to signal to QMK that this is the left side of the keyboard, whereas pin 1 is connected to GND on the right controller.Thepmw3389sensor attached beneath the trackball.The trackball sensor isverysensitive with the distance towards the trackball.
With my last print I had to file down the print where the sensor was attached to in order to get the sensor to track properly.Adding the keyboard to QMKThe QMK cli has theqmk new-keyboardcommand that helps you get started.
I couldnâ€™t get the generated template to work for me, so I copied settings from an existing keybord withrp2042support.Iâ€™ll try to hit on the most important parts of the config, take alook at the source codefor all details.Basic setupThe folder structure for the keyboard looks like this:cybershardâ”œâ”€â”€ keyboard.jsonâ”œâ”€â”€ rules.mkâ”œâ”€â”€ halconf.hâ”œâ”€â”€ mcuconf.hâ””â”€â”€ keymapsÂ Â  â””â”€â”€ defaultÂ Â      â”œâ”€â”€ config.hÂ Â      â”œâ”€â”€ keymap.cÂ Â      â”œâ”€â”€ rules.mkÂ Â      â””â”€â”€ ...(Cybershardis the name I eventually settled on for the keyboard.)The most important part iskeyboard.jsonthat defines (almost) everything we need for a new keyboard in QMK.First you need to set theprocessor,bootloader, andusbvalues.
TheLiatrismicrocontroller uses theRP2040MCU, and I just picked some vendor- and product identifiers:{"keyboard_name":"cybershard","processor":"RP2040","bootloader":"rp2040","usb":{"device_version":"0.0.1","pid":"0x0002","vid":"0x0361"},}Then we need to define the matrix (with the pins we soldered) and the layout (how weâ€™ll configure the keymap inkeymap.c):{"diode_direction":"COL2ROW","matrix_pins":{//We need to use a `GP` prefix for the pins."rows":["GP26","GP27","GP22","GP20"],"cols":["GP3","GP4","GP5","GP6","GP7"]},"layouts":{"LAYOUT":{"layout":[//First physical row{"matrix":[1,0],"x":0,"y":0},{"matrix":[0,1],"x":0,"y":0},{"matrix":[0,2],"x":0,"y":0},{"matrix":[0,3],"x":0,"y":0},{"matrix":[0,4],"x":0,"y":0},//Second row{"matrix":[2,0],"x":0,"y":0},{"matrix":[1,1],"x":0,"y":0},{"matrix":[1,2],"x":0,"y":0},{"matrix":[1,3],"x":0,"y":0},{"matrix":[1,4],"x":0,"y":0},//etc...]}}}Note that we can pick whatever physical pins we want as we can move around and configure them in software.
TheLAYOUTmacro is what we use inkeymap.cto define our keymap.
When defining it we can choose to skip certain keys and reorganize it to be easier to define; for example, thereâ€™s no switch at0,0in my keyboard so I skip that.The aboveLAYOUTcan then be used like this:LAYOUT(SE_J,SE_C,SE_Y,SE_F,SE_P,SE_R,SE_S,SE_T,SE_H,SE_K,SE_COMM,SE_V,SE_G,SE_D,SE_B,SE_A,SE_B,//Thumb keysFUN_CLR,MT_SPC,),FlashingWith the above setup we should be able to flash the keyboard by first entering the boot loader and running:qmkflash -kb cybershard -km defaultI didnâ€™t add a reset button to the keyboard that you typically use to enter the boot loader.
TheLiatrishas a boot button that you can hold when you connect the keyboard, but I want to hide the controller inside the casing.QMK has aQK_BOOTkey that does the same.
I added it as a 5-fingercomboto make it easily accessible but difficult to press by accident.Now the process of updating the firmware is quite nice and unless I screw up I donâ€™t need to connect another keyboard to do it.Start flashing withqmk flash(it will wait until it finds a flashable target).Press theQK_BOOTcombo (the keyboard becomes unresponsive).Wait until the script finishes and the keyboard is available again.qmk flashfirst didnâ€™t work for me and it always got stuck at:Flashing for bootloader: rp2040Waiting for drive to deploy...After some digging around I found that the script is trying to copy a.uf2file into a usb storage, and the controller will then reboot as a keyboard withsomethinglike this:qmkcompile -kb cybershard -km defaultsudomount /dev/sdX1 /media/sdsudocp cybershard_default.uf2 /media/sd/After more frustration I found out that the flash scripts looks for a file calledINFO_UF2.TXTunder all drives mounted below/media.
Because my system doesnâ€™t mount usb drives by default the script would never find it and hang.The simple solution is to start mounting usb drives automatically, which I did by installingudeviland runningdevmonon system startup.Split keyboardTo get the split keyboard feature to work I had to set theSERIAL_DRIVERoption inrules.mk:SERIAL_DRIVER=vendorAnd add thesplitconfiguration tokeyboard.jsonand modify theLAYOUTmacro:{"split":{"enabled":true,//The pin that signals if the current controller is the left (high)//or right (low) controller."handedness":{"pin":"GP1"},//The TRRS data pin."soft_serial_pin":"GP2","matrix_pins":{"right":{//We can override the pins for the right controller.//Note that GP26 and GP27 are swapped compared to the left side//due to a mistake I made when soldering."rows":["GP27","GP26","GP22","GP20"],"cols":["GP3","GP4","GP5","GP6","GP7"]}},"transport":{"sync":{//We need to sync the matrix state to allow combos, mods, and//other stuff to work."matrix_state":true}}},"layouts":{"LAYOUT":{//The rows 0 to 3 specifies rows on the left side and//4 to 7 the rows on the right side."layout":[//These 5 keys are the first row on the left side.{"matrix":[1,0],"x":0,"y":0},{"matrix":[0,1],"x":0,"y":0},{"matrix":[0,2],"x":0,"y":0},{"matrix":[0,3],"x":0,"y":0},{"matrix":[0,4],"x":0,"y":0},//These 5 keys are the first row on the right side.{"matrix":[4,0],"x":0,"y":0},{"matrix":[4,1],"x":0,"y":0},{"matrix":[4,2],"x":0,"y":0},{"matrix":[4,3],"x":0,"y":0},{"matrix":[4,4],"x":0,"y":0},//etc..]}}}TheLAYOUTmacro is just a function with many arguments but with the right order it can be formatted
to look similar to the physical keyboard.
For example, this is how the base layer of my keyboard could look like:LAYOUT(//Left side                                    // Right sideSE_J,SE_C,SE_Y,SE_F,SE_P,SE_X,SE_W,SE_O,SE_U,SE_DOT,SE_R,SE_S,SE_T,SE_H,SE_K,SE_M,SE_N,SE_A,SE_I,REPEAT,SE_COMM,SE_V,SE_G,SE_D,SE_B,SE_SLSH,SE_L,SE_LPRN,SE_RPRN,SE_UNDS,//The extra two keys on the left sideSE_MINS,SE_PLUS,//Left thumb keys   // Right thumb keyFUN_CLR,MT_SPC,SE_E),TrackballIt took a long time for me to get the trackball working (admittedly, mostly because I soldered the pins wrong).
Thereâ€™s quite a lot of documentation for QMK but curiously enough I didnâ€™t find anything that covered the whole setup.
I arrived here by trial and error, trying to piece together parts from other keyboards into a setup that worked for me.First we need to create the fileshalconf.handmcuconf.h(they go in the same folder askeyboard.json) to enable the SPI driver:#pragmaonce#include_next#defineHAL_USE_SPITRUE#pragmaonce#include_next#undefRP_SPI_USE_SPI1#defineRP_SPI_USE_SPI1TRUEI enable theSPI1device that uses theCS1,SCK1,TX1, andRX1pins on the controller.
If you want to use theSPI0device then you must connect to theCS0,SCK0,TX0, andRX0pins instead.And enable the pointing device with thepmw3389device driver inrules.mkPOINTING_DEVICE_ENABLE = yesPOINTING_DEVICE_DRIVER = pmw3389Now we need to add the sensor pins toconfig.h://SPI1, matching mcuconf.h#defineSPI_DRIVERSPID1//The pin connections from the pmw3389 sensor#defineSPI_MISO_PINGP12#definePMW33XX_CS_PINGP13#defineSPI_SCK_PINGP14#defineSPI_MOSI_PINGP15This should be enough to get the sensor going, but because we have a split keyboard we need to set that up too:#defineSPLIT_POINTING_ENABLE//The trackball is on the right#definePOINTING_DEVICE_RIGHTThere are some additional tweaks that I had to play with to make the trackball work well://The trackball is quite sensitive to how//large the liftoff distance should be.#definePMW33XX_LIFTOFF_DISTANCE0x10//Sets the mouse resolution, up to 16000.#definePMW33XX_CPI1600//The directions where messed up, this fixes it.#definePOINTING_DEVICE_ROTATION_2701#definePOINTING_DEVICE_INVERT_X1With that I got the trackball moves the mouse as expected.DebugAs I struggled to get the trackball working I tried to use the debug output.
Iâ€™ll include it here for completeness sake:Enable the console inrules.mk:CONSOLE_ENABLE = yesEnable pointing device debugging inconfig.h:#definePOINTING_DEVICE_DEBUGTurn on debugging inkeymap.c:voidkeyboard_post_init_user(void){debug_enable=true;debug_mouse=true;}And then runqmk consolefrom the command line.Is this the ultimate keyboard?No.This keyboard is certainly the most comfortable keyboard Iâ€™ve used but itâ€™s not close to being an â€œultimateâ€ keyboard.
Hereâ€™s a few things that might improve the keyboard:The trackball still isnâ€™t nearly as comfortable as theKensington SlimBlade.Maybe a keyboard with a larger trackball would be better?The extra keys on the left side are barely useful.Itâ€™s not a big deal, maybe I can find some usage for them, but to me having barely useful keys feels wrong.There are more extra features I feel anultimatekeyboard should have.The keyboard Iâ€™ve built is niceâ€¦ But itâ€™s still just a normal keyboard with a trackball.
Maybe a vibration sensor, a display, or even some LEDs?
Asmart knob with software-configurable endstops and detentswould really add some weight to the moniker of an ultimate keyboard.Next stepsItâ€™s hard to know how good the keyboard is before Iâ€™ve put it through extensive use,
and to do that I need to settle on a keyboard layout for the keyboard.
Iâ€™ve alreadydesigned a layoutfor a 34-key keyboard that should be fairly straightforward to adapt but I still need to figure out how to add mouse keys and what to do with the â€œextraâ€ keys on the left-hand side.Check outThe current Cybershard layoutfor how the keyboard layout is coming along.Published:November 26,2024Revised:November 29,  2024inf19d7b8Tagged:Computer,Cybershard,KeyboardsPreviousNext</description>
      <pubDate>Tue, 26 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The current Cybershard layout</title>
      <link>https://www.jonashietala.se/blog/2024/11/26/the_current_cybershard_layout</link>
      <description>The current Cybershard layoutâ˜Published:November 26,2024Revised:January 14,  2025inecb2ec9Tagged:Computer,Cybershard,Keyboard layouts,KeyboardsContentsLegendLayersBaseSwedish overlaySymbolsNumbersFunction keysNavigation layersWorkspace layerWindows layerMouse layerSpecial charactersModifiersCombosNeighbour combosSplit combosCombos over keyboard halfsThumb key combosQMK bootAdditional featuresLong pressLeader sequencesCAPSWORDNUMWORDRepeat keyTrackballMore infoThis is the keyboard layout Iâ€™m using for my custom keyboardthat I generated, printed, and hand-wired.
Itâ€™s a minimalistic keyboard of 35 keys and features an integrated trackball on the right-hand side.The keyboard layout started out as a direct copy of theT-34 keyboard layout, with some small modifications from the 34-key keyboard T-34 was designed for:An extra two keys on the left-hand side, in the ring and middle finger columns.Removed the second thumb key on the right-hand side.Accommodation for mouse keys and trackball handling.While the layout has diverged since then, the design philosophy fromoriginal T-34 poststill holds true and I recommend it as it may explain why the layout looks like it does.The layout could pretty easily be converted to a 32-key layout by removing the two extra keys and the inner thumb key on the left-hand side.
These keys are barely used and the biggest reason I have them is that I donâ€™t have the energy to rebuild the keyboard.LegendShift / Layer highlightLayer (one shot / down)Modifier (one shot / down)Dead keyManagementLayer (down)Modifier (down)SpecialActive key for layerLayer (toggle)Modifier (implicit)I use quite a number of special features for the keys and Iâ€™ve tried to color code according to the above legend.I made a bit of a detour and developedmy own toolto generate the embedded svg images in this post as the existing tools didnâ€™texactlymatch my preferences.Note that I made it only for myself and it will probably break in many ways if you try to use it for your layout.
Itâ€™s also extremely ugly codeâ€¦LayersLayersare super important for smaller keyboards and I use them a ton.BaseJCYFPXWOU.RSTHKMNAIRepeat,ARROWVGDB/L()__MOUSEF2F12FUNSpaceNAVETherepeat keyis used to output the last pressed key.I shift keys usingauto shift(seelong press) andCAPSWORD.The lettersZandQ, together with a bunch of other keys, are oncombos.The keys forF2,F12andFUNare just extras and arenâ€™t in a comfortable enough position to warrant anything more common.If you wonder why the top left and right keys are off thatâ€™s because the keyboard is built with them further away and with a different curvature than the other keys in the outer columns.
I donâ€™t pressJor.with my pinky but with my ring finger, leaving only two keys dedicated to the pinkies.Swedish overlayÃÃ„Ã–Swedish overlay.When I want to write Swedish I activate this layer that replaces()_withÃ¥Ã¤Ã¶, or I usecombosfrom any layer.Symbols~+*#@^.|{}-\`?[]Repeat,!/&amp;()_Symbols layer.I typically usecombosto output symbols (following the same layout pattern as the symbols layer).
The symbols layer is mostly used to roll symbol pairs like{}or#[.Some common symbol sequences (like-&gt;,!=, or```) exists ascombosand others aslong press.NumbersJ+*FPXW@uRepeat.6402KM3157,VShiftG8B/9()_SpaceNAVNumbers layer. The browner keys (likeJ) turn offNUMWORD.While I can activate the number layer persistently (usingleader sequences) I typically usecombosfor single digitis (like0), orNUMWORDfor larger numbers (like1984).NUMWORDmakes the number layer smart, so it will deactivate when certain keys are pressed.
Itâ€™s used to type numbers in text or code and for relative movement in Neovim, where17Jwould move 17 lines down and then turn off the number layer.
Jumping directly to a line in Neovim with12Gis also made convenient.If I want to enter the layer without it turning off I can either useleadere sequencesto activate it persistently or hold theNUMWORDcombo(hold both thumbs).
The layer wonâ€™t release until both thumb keys are released, soSpacecan be tapped with the left thumb without leaving the number layer.@uis there to easily activate macros in Neovim. For example7@uin the number layer would run theumacro 7 times and then turn offNUMWORD.Function keysF6F4F10F2F12F11F3F1F5F7F8F9LowerDPIRaiseDPIFUNFunction keys.The function keys follow the same layout as thenumbers layer.The trackballDPIcan be lowered and raised at runtime.Navigation layersGui JCtrl CCtrl FEndCtrl XHomeGui WGui EGui RGui .Ctrl AShiftCtrlShiftTabCtrlTabCtrlLeftMouseGui Kâ†â†“â†‘â†’Gui ,Ctrl VRightMousePgDnCtrl DCtrl UPgUpBackMouseFwdMouseSpaceNAVWNAVNavigation layer.Keys withGuiare used inxmonad.Gui+W,Gui+EandGui+Rare used to switch between monitor.Gui+J/Gui+Kto switch windows.Gui+,/Gui+.to add/remove windows from the â€œmasterâ€ area.This layer is commonly used in conjunction with the trackball, giving access to mouse keys.For instance,Shift+Left Mousecan be used to drag,Ctrl+Ato select, andCtrl+Cto copy.Tabbing is for switching browser tabs and theBack/Fwdmouse buttons goes backwards and forwards in history.Ctrl+ arrow is used to switch windows in Neovim.Ctrl+DandCtrl+Uare used in Neovim to scroll half a screen (compared toPgUp/PgDnthat scrolls an entire screen).Theworkspace layeris triggered by first holdingSpace, and then holding the right thumb key (WNAV).PgUpâ†‘PgDnEndHomeâ†â†“â†’â†â†“â†‘â†’,ARROWPgDnPgUpArrows on the left-hand side.This layer exists for the rare occasions I want to navigate using only the left hand.
The keys on the right side is there just because and are rarely, if ever, used.Workspace layerJCWER6402K315789HLSpaceWNAVWorkspace layer. All keys have an implicitGuimodifier.This is used for all window and workspace management inxmonad. Some common operations are also on thenavigation layer.Auto shiftworks and can used to send a window to another workspace (Gui+Shift+2).Windows layerShiftTabTabWindows layer. All keys have an implicitAltmodifier.This is purely to enable window switching usingAlt-TabandCtrl-Alt-Tab, without releasingAlt.Mouse layerMiddleMouseLeftMouseRightMouse__MOUSEThe mouse layer for right-hand only usage.I generally prefer to use thenavigation layer, where the mouse buttons are on the left side, but in some cases Iâ€™d like to only use my right hand.Special characters~Â©^Â¨â„¢Â´`â‚¬Specials layer.Thedead keysadd diacritic to any letter. For example, to getÃ©you can use the dead keyÂ´thene, and the operating system will merge them together.
(Ã‰also exists as acombo.)ModifiersGuiCtrlShiftAltRightAltModifiers.I typically uselong pressfor shift andcombosfor other modifiers, this layer is a fallback for when those arenâ€™t enough (the layer is mostly used forRight Alt).CombosCombosis another fantastic tool that I (ab)use a lot. Simply put it allows you to press multiple keys at once and acts as another keyâ€”very useful for smaller layouts.These combos are layer independent, and work regardless of what layers are activated.
The base layer is shown in the graphics for reference.Neighbour combosThese combos are made by keys next to each other, either horizontally (pressed with two fingers) or vertically (pressed with one finger in the middle of two keys).JCYFPXWOU.RSTHKMNAIRepeat,ARROWVGDB/L()__MOUSEF2F12FUNSpaceNAVEQQUZClear#{}=BspcCtrlEsc SYMDel: SYMCtrlvsplitGuiShiftShiftGui$Ctrl Shift M&lt;-&lt;==&gt;-&gt;|&gt;hsplitMid Mouse&gt;=2-key neighboring combos.Some combos have a separate hold behaviour; for instance holdingEscapeactivates thesymbols layer, allowing me to output[]easily.vsplitsplits a window vertically in Neovim andhsplitsplits it horizontally, andClose Windowcloses a window in Neovim (q).Clearresets all states; sets thebaselayer, releases modifiers, stopsCAPSWORDandNUMWORD, and clears other persistent states.Ctrl+Shift+Mis the shortcut to mute/unmute in Teams.JCYFPXWOU.RSTHKMNAIRepeat,ARROWVGDB/L()__MOUSEF2F12FUNSpaceNAVECtrl WCtrl WTab MODEnterClose WindowSWE3-key horizontal combos.SWEactivates theSwedish layer, and if prefixed with()_it will replace that withÃ¥Ã¤Ã¶and vice versa. So for example if I typedhall(I would pressSWEto gethallÃ¥, with the Swedish layer activated.Ctrl Wis used to close tabs in Firefox.NAIRepeatSave VimA 4-key horizontal combo.Save Neovimis a 4-key combo that saves the buffer in Neovim.Split combosThese split combos uses the ring and index finger.SHNI"'Combos for the quotes"and'.TADL;%Combos donâ€™t have to be on the same row, these angled combos are fairly comfortable.CFWUAltWINOne-shotAlton the left combo and holding the right combo activates thewindowslayer (with implicitAlt).L)Leader KeyLeader keyon the bottom row.Combos over keyboard halfsTASpaceNAVECAPSWORDNUMWORDTappingT+Aonce activatesCAPSWORD, tapping again makes it persistent (CAPS LOCK), and a third tap to deactivateCAPS LOCK.TappingSpace+EactivatesNUMWORDand tapping them again activates thenumber layerpersistently.Therepeat keyworks with the above, making them easier to double-tap.HNSwap _ and -Swaps_and-.SISPECAccess thespecialslayer with the ring fingers.Thumb key combosI have a bunch of 2-keythumb+keycombos:~+*|{}-\3157!https://9ÃÃ„Ã–SpaceNAVNUMWORDCombos usingSpaceand another key.#@^6402Ã‰`?[]8&amp;()_NUMWORDECombos usingEand another key.The logic here is thatsame-side thumb+key=symbolandopposite-side thumb+key=digit, following the placements of thenumbers,symbolsandswedishlayers. Theyâ€™re used if I want to just type a single character, without having to activate a layer first.F6F4F10F2F12F11F3F1F5F7F8F9FUNCombos usingFUNand another key.I have similar combos for thefunction keys.QMK boot,ARROWVGDL()__MOUSESpaceNAVEQMK BootQMK Bootwhe keycodeQMK_BOOTenters boot mode for the microcontroller connected via USB, making it easy to update the keymap on the keyboard.
These two 5-key combos (one for each half) are almost impossible to trigger accidentally while being easily accessible.Additional featuresWhilelayersandcombosare the two main features I use,QMKhas a lot of other nifty features (and you roll your own implementation of them too).Long pressMost keys have a different behaviour when tapped compared to a long press. Most commonly I use this to produce shifted keys (calledauto shift).
So tapping theAkey will outputaas normal and if it itAwill appear instead.There are a bunch of special cases as well (many on top ofcombos):TapLong press_/\#Double, e.g__"'=`0.Triple, e.g"""|&amp;=Double with spaces, e.gâ€ƒ||â€ƒ!â€ƒ!=â€ƒ(with spaces)?{:?}#{:#?}%%{}([{Close and move cursor between@@u(paired withqucombo for Neovim macro execution)Leader sequencesI use the combol+)as theleader key.
This will wait for a sequence of key presses (in contrast to combos where keys must be pressed at the same time).
I use this with mnemonics for rarely used outputs:Leader sequenceActionl+),cCaps lockl+),sSwedish input in Linux (mapped inxmonad)l+),t,nToggleNumber layerl+),t,sToggleSymbols layerl+),t,fToggleFunction layerl+),t,cToggleCaps lock escape swapl+),EscCtrlShiftEscapeCAPSWORDCAPSWORD is a â€œsmart caps lockâ€. It works like a regular caps lock, except it automatically turns off after certain keys are typed (most commonly space).It will not turn off on letters, numbers,_-Backspaceand theRepeatkeys.NUMWORDNUMWORD is a â€œsmart layerâ€. Itâ€™s similar toCAPSWORD, except it activates and then turns off thenumbers layerinstead of caps lock.It will not turn off on these keys:0-9%/+*-_.,:=xBackspaceEnterand theRepeatkeys.Repeat keyThe repeat key simply repeats the previous key. So to typefallI can typefalRepeat, using four different fingers instead of pressingltwice. It can also repeat things likeCtrl-corDelete, and unlike regular keys that useauto shifttheRepeatkey can be held.TrackballThe trackball is normally configured to move the mouse as a regular trackball.There are different modes that alters the behavior of the trackball:Lower the DPI whenSpaceor_are held (the mouse moves slower when thenavigation layeror themouse layerare active).Raise the DPI when theMODcombois held (the mouse moves faster).Scroll instead of moving the mouse when theSYMcombois held.More infoRead theT-34 seriesfor the design process and motivations of my other keyboard layout (itâ€™s the same layout with minor refinements and additions).See the postBuilding my ultimate keyboardfor how I designed and built the keyboard Iâ€™m using this layout with.For implementation details and the most up-to-date reference check out the layoutâ€™sQMK source code.I use a bunch of custom re-implementations of existing QMK functionality and itâ€™s probably not a good idea to copy them.
Theyâ€™re there for various reasons, such asCAPSWORDnot being integrated into QMK when I started using it and I canâ€™t be bothered to migrate over.The code is super messy and in desperate need of refactoringâ€¦November 19, 2024Copied theT-34layout and adapted it for the new keyboard by adding a mouse layer, remove the shortcut layer, and changed the activation of the specials layer.November 22, 2024Moved-to an angled combo, moving theWINkey to the top row,
and move%to the home-row and!to the bottom row.November 23, 2024Reworked the mouse layer and use a more advanced triggering mechanism to be more explicit about when the layer is turned on and off.November 25, 2024Added double-tap functionality toNUMWORDandCAPSWORDcombos.November 26, 2024Moved-back to itâ€™s original position and placed%on the angled combo.Experimental functionality to swap-and_for the languages that usekebab-case.Removed the mouse layer and placed mouse buttons on thenavigation layer.December  3, 2024Reworked thenavigation layerto keep the original positions forPgUp,PgDn, andTabs.
To allow this I moved the mouse click to index finger and demoted theup/downto the top row.January 12, 2025Reworked thenavigation layerto be more focused on two hands on the board.
The idea is to use better placed keys on the right-hand side instead of cramming in too much on the left.
MovedPgUpandHometo the right side and itâ€™s enough to use the arrow keys on the right. (The secondary navigation layer exists to enable arrow keys on the left side.)Added mouse button combos on the right-hand side so in a pinch I can operate the mouse with one hand.January 14, 2025Removed mouse button combos from the right-side and place them on a separate layer instead (to keep the shift combo in the regular place).AddGui+,/.forxmonadmaster window management to thenavigation layer, movingCtrl+Ato the home-row once again.Published:November 26,2024Revised:January 14,  2025inecb2ec9Tagged:Computer,Cybershard,Keyboard layouts,KeyboardsPreviousNext</description>
      <pubDate>Tue, 26 Nov 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why I don't rely on AI for programming (too much)</title>
      <link>https://www.jonashietala.se/blog/2024/10/31/why_i_dont_rely_on_ai_for_programming_too_much</link>
      <description>Why I don't rely on AI for programming (too much)Published:October 31,2024in9a13084Tagged:ProgrammingI find that ai can help significantly with doing plumbing, but it has no problems with connecting the pipes wrong. I need to double and triple check the updated code - or fix the resulting errors when I don’t do that.thih9 on Hacker NewsI’ve been skeptical of the AI craze that’s been going on in the developer community.
It’s a useful tool but some people behave like large swaths of developers will be replaced by AI tomorrow.I don’t understand the hype as my experience has been quite different, yet I’ve struggled to pinpoint why.
In this post post I’ll try to explain what I think is the fundamental problem I have with letting an AI generate code for me.I’m bad at double-checking codeI realized what my problem with AI is when I read this comment on Hacker News (emphasis mine):My theory is the willingness to baby sit and the modality. I’m perfectly fine telling the tool I use its errors and working side by side with it like it was another person. At the end of the day it can belt out lines of code faster than I, or any human, can andI can review code very quicklyso the overall productivity boost has been great.ianbutler on Hacker NewsIt’s true that I’m not fond of pair programming but the key issue is that Ican’treview code quickly.
On the contrary I’m quite bad at looking at an unknown piece of code and verify that it’s correct.I’m specifically talking aboutverifyingcode, not on figuring out what the code is trying to do or even the intent behind the code, which I think I’m relatively decent at.Struggling to verify math problemsThis isn’t a problem of mine that’s unique for programming.
I’ve been quite good at math (relatively speaking) since I was a child and I breezed through the University math (where I read as many math courses I could get my hands on).Despite my relative skills Ialwaysgot marks against me during tests and exams.
They weren’t caused by my lack of understanding but by small mistakes like writing numbers wrong.
Mistakes that I tried hard to correct; I started to double-check and triple-check my work but they were still slipping through.I realized that when I was first solving the problem I was focused.
I wasin the zoneand I could keep the problem in my head while I worked.But when I went back to verify my work my brain wouldn’t engage in the same way.
I was trying to but I couldn’t get into the zone.
The problem was Done™ and it was like my brain had disengaged.
If I was looking at myself in a third-person view I’m sure my eyes would glaze over.Yeah, maybe I’m not that good at math.It’s hard to read code without a mental modelWhen we write code or solve math problems I think we build up a mental model of the problem we’re trying to solve and the system we’re interacting with;
what a variable name signifies, what effects a function call might have, and how pieces of information relate to one another.This mental model is crucial when reading code or solving math problems and if it’s missing we need to rebuild it.
I think this is what happened when I had finished my math problems: when I was finished I dropped the model, so coming back to it was a struggle.The same is true when reviewing code; you’ll be much more effective when reviewing small changes to a code base you’re familiar with because you already have a mental model of the surrounding systems.
It becomes harder when you’re reviewing larger changes, or reviewing changes in an unfamiliar code base, because you have more gaps in your mental model.I struggle to properly review codeMaybe it’s a skill issue but I find it much more difficult to find errors in code others write (or I myself wrote a while ago) than to find errors while I’m developing the code.
I get the same “eye glazes over” feeling as when I went back to verify my math problems.
I’m slow, I know I’m not doing a good job, and it’s a struggle.I truly wonder how other people review code in a productive way.
Sometimes I feel I need to run, change, and test the code to understand it… But that’s time consuming especially as the amount of code increases.
Trusting your fellow developers seems like a necessity.AI generated code requires careful verificationSome are enamored with how great AI code generation is.
And to be sure, compared to just a few years ago it’sunbelievablygood.
But would I trust the code as much as I’d trust a co-worker? Absolutely not.In my experience an AI isat bestas good as a new developer, often much worse, and sometimes outright horrible.
(And no, I don’t blindly trust a new developer. I don’t trust myself either.)
At least I can be reasonably sure that other developers test or run their code before I need to look at it.Relying on AI is like copy pasting code fromStack Overflow: useful but you cannot trust it.
While the code may look good on a surface level, it’s often subtly wrong in ways that even aStack Overflowanswer doesn’t quite manage to.
Hallucinating a non existing library function or adding an extra argument are quite common.This is mostly fine for short snippets where it’s easy to run the code and test but the problem becomes significant when youcopy pasterely on AI for larger pieces of code.Programming less and reviewing more is a bad tradeThe crux of the matter is thatI’m much more productive when I’m programming than when I’m reviewing code.
With most current AI tools it feels like I’m reviewing code more than programming and that’s a bad trade for me to make.You still need to build a mental modelWhile you’re writing code you’re continually building up your mental model but when you let an AI generate the code you still need to do the hard work of building your mental model.I don’t think writing code is the most important thing you’re doing while programming—it’s building a mental model of the system you’re building.There’s no return of your investmentEver felt that it would be faster to just code something yourself than to gently guide a junior developer through a problem?
That’s how I feel like when I shepherd an AI, with the difference that teaching a junior programmer is an investment but the AI won’t learn no matter how many times you interact with it.Wait, what about context windows?
Well, there’s no way to keep a context window spanning months or years.
The learning I’m talking about is more akin to training or tuning an LLM.Maybe your own AI developer that you’ll tune every time you interact with it will be available soon™.Some AI tools are very usefulI need to clarify that while I’m skeptical towards the current AI hype I find some AI tools useful in various contexts.For programming I’m a heavy user ofKagi’s quick answerfunctionality that uses AI to summarize the search results and gives you references so you can drill down further if you need to.
I use it many times a day to answer questions like:How do you format a date in Python?How do you subscribe to a table change in postgres in Elixir?How do you open a new buffer in Neovim using Lua?How to order mp4 by length in Linux?What’s the cron syntax to execute a script every second day?It’s not bullet proof but the combination of good search results (way better than Google in my opinion) combined with AI’s summarizing ability is absolutely fantastic.I must be missing somethingAI dev tools are useful, I just haven’t seen the incredible productivity boost that some say exist.
Maybe they are working on different problems in different contexts than I am, have different standards, or just are better at utilizing them than I am?Because, surely, it would be way to simple to dismiss the productivity claims as people evaluating the tools as how useful theymay becomeinstead of how useful they areright now?xkcd: 605; ever relevant as a response to the currently hyped technology.Published:October 31,2024in9a13084Tagged:ProgrammingPreviousNext</description>
      <pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Writing Home Assistant automations using Genservers in Elixir</title>
      <link>https://www.jonashietala.se/blog/2024/10/08/writing_home_assistant_automations_using_genservers_in_elixir</link>
      <description>Writing Home Assistant automations using Genservers in Elixirâ˜Published:October  8,2024Revised:October  8,  2024in4087cc0Tagged:Elixir,Home AssistantContentsWhy Elixir?Controlling Home Assistant from ElixirConnectingSubscribing to state changesManaging cross-service messages with PubSubCalling servicesOutline of a GenServer automationLet there be lightTime triggerWake-up lightingAbort the wake-up sequenceRefactoring into another GenServerState machines are greatAutomation testingAn isolated GenServerAlter the code to be able to test?The eventually helperCapturing sent websocket messagesBeware of race conditionsWhatâ€™s next?Iâ€™ve been a fan of Home Assistant a while now;
itâ€™s a great platform for home automation with its beginner friendly and feature rich UI,
support fora tonof different devices and integrations,
and thereâ€™s a bunch of ways to create automations.But thereâ€™s no engine for writing automations in Elixir that I could find;
this post addresses this fatal weakness.Specifically, in this post Iâ€™ll go through:How to use Home Assistantâ€™s Websocket API.An introduction to GenServers and concurrency in Elixir.How to use this knowledge to write and test a simple automation.While Iâ€™ll try to be as detailed as possible Iâ€™ve made some simplifications and I wonâ€™t provide the complete source code for everything in this post.
If you want to follow along I encourage you to fill in the blanks and make adjustments where applicable.Why Elixir?Ever since I started with home automation Iâ€™ve thought that it would be a great match for the concurrency model that Elixir uses.
Youâ€™ll have all sorts of automations running concurrently, reacting to different triggers, waiting for different actions, and interacting with each other; something I think Elixir excels at.Now, there are many options for writing automations for Home Assistant that already work well,
the biggest reason I wanted to use Elixir is because Ilikeit.
That Elixir happens to be a good fit for home automation is just a bonus.Iâ€™ve tried to write automations via the Home Assistant UI (meh), using YAML configuration (hated it), visual programming withNode-RED(I want real programming), and in Python usingPyscript(pretty good).
In the end I simply enjoyed writing automations in Elixir more.People think that home automation exists to make your life easier, but thatâ€™s just a bi-product of the true purpose of home automation:having fun.Controlling Home Assistant from ElixirThe very first thing we need to solve is how do we get data from Home Assistant and how to call services (now called actions)?Home Assistant has awebsocket APIand aREST APIthat we can use to implement our engine.
As we can get entity states and call services over the websocket thereâ€™s no need to bother with theREST APIfor our example.ConnectingI usedWebSockexto setup the websocket connection to Home Assistant.
Hereâ€™s a tentative start that connects and receives a message:defmoduleHaex.WebsocketClientdouseWebSockexrequireLogger#Adjust to your Home Assitant instance@url"ws://lannisport:8123/api/websocket"defstart_link(_args)doWebSockex.start_link(@url,__MODULE__,%{},name:__MODULE__)end@impltruedefhandle_frame({:text,msg},state)docaseJason.decode(msg)do{:ok,msg}-&gt;Logger.debug("Received:\n#{inspect(msg)}")handle_msg(msg,state){:error,error}-&gt;Logger.warning("Couldn't decode message `#{inspect(error)}`:\n#{inspect(msg)}"){:ok,state}endenddefphandle_msg(msg,state)doLogger.warning("Unhandled message:#{inspect(msg)}"){:ok,state}endendAs with all concurrent services in Elixir Websockex should be started in a supervision tree.
Under the main Application Supervisor works well:defmoduleHaex.Applicationdo@moduledoc falseuseApplication@impltruedefstart(_type,_args)dochildren=[Haex.WebsocketClient]Supervisor.start_link(children,strategy::one_for_one)endendThe main purpose of the supervision tree is to provide fault tolerance by monitoring and restarting processes if they fail.If we run this then Home Assistant will send us a message upon connection:[warning] Unhandled message: %{"ha_version" =&gt; "2024.10.0", "type" =&gt; "auth_required"}This means we need to authenticate using along lived access token.
Reading thewebsocket APIwe should respond with an"auth"message:defphandle_msg(%{"type"=&gt;"auth_required"},state)dotoken=Application.fetch_env!(:haex,:access_token)reply=Jason.encode!(%{type:"auth",access_token:token}){:reply,{:text,reply},state}endItâ€™s prudent to fetch secrets from environment variables inruntime.exs:config:haex,access_token:System.fetch_env!("HA_ACCESS_TOKEN")And now we get another unhandled message, telling us our auth succeeded:[warning] Unhandled message: %{"ha_version" =&gt; "2024.10.0", "type" =&gt; "auth_ok"}Subscribing to state changesAfter authenticating we can tell Home Assistant that weâ€™d like to subscribe to all state changes in the system (so we can  write automations that trigger on a state change).Iâ€™m lazy so I send the subscription message when Iâ€™m handling (ignoring) the"auth_ok"message:defphandle_msg(%{"type"=&gt;"auth_ok"},state)doreply=Jason.encode!(%{id:1,type::subscribe_events,event_type::state_changed}){:reply,{:text,reply},state}endWith this up weâ€™ll get another acknowledgment that our subscribe command succeeded (matchingid:1):[warning] Unhandled message: %{"id" =&gt; 1, "result" =&gt; nil, "success" =&gt; true, "type" =&gt; "result"}And we start receiving state changed messages:[warning] Unhandled message: %{"event" =&gt; %{"context" =&gt; %{"id" =&gt; "01J9DK3CN0CEEWGCV1139HTC11", "parent_id" =&gt; nil, "user_id" =&gt; nil}, "data" =&gt; %{"entity_id" =&gt; "sensor.vardagsrum_innelampor_switch_power", "new_state" =&gt; %{"attributes" =&gt; %{"device_class" =&gt; "power", "friendly_name" =&gt; "Vardagsrum innelampor switch Power", "state_class" =&gt; "measurement", "unit_of_measurement" =&gt; "W"}, "context" =&gt; %{"id" =&gt; "01J9DK3CN0CEEWGCV1139HTC11", "parent_id" =&gt; nil, "user_id" =&gt; nil}, "entity_id" =&gt; "sensor.vardagsrum_innelampor_switch_power", "last_changed" =&gt; "2024-10-05T05:40:36.640422+00:00", "last_reported" =&gt; "2024-10-05T05:40:36.640422+00:00", "last_updated" =&gt; "2024-10-05T05:40:36.640422+00:00", "state" =&gt; "4.6"}, "old_state" =&gt; %{"attributes" =&gt; %{"device_class" =&gt; "power", "friendly_name" =&gt; "Vardagsrum innelampor switch Power", "state_class" =&gt; "measurement", "unit_of_measurement" =&gt; "W"}, "context" =&gt; %{"id" =&gt; "01J9DK37CMJBDFK7M5VGYJ1CZG", "parent_id" =&gt; nil, "user_id" =&gt; nil}, "entity_id" =&gt; "sensor.vardagsrum_innelampor_switch_power", "last_changed" =&gt; "2024-10-05T05:40:31.252863+00:00", "last_reported" =&gt; "2024-10-05T05:40:31.252863+00:00", "last_updated" =&gt; "2024-10-05T05:40:31.252863+00:00", "state" =&gt; "4.5"}}, "event_type" =&gt; "state_changed", "origin" =&gt; "LOCAL", "time_fired" =&gt; "2024-10-05T05:40:36.640422+00:00"}, "id" =&gt; 1, "type" =&gt; "event"}[warning] Unhandled message: %{"event" =&gt; %{"context" =&gt; %{"id" =&gt; "01J9DK3CQ27BWBX0R9MAP5SRM9", "parent_id" =&gt; nil, "user_id" =&gt; nil}, "data" =&gt; %{"entity_id" =&gt; "sensor.dishwasher_plug_voltage", "new_state" =&gt; %{"attributes" =&gt; %{"device_class" =&gt; "voltage", "friendly_name" =&gt; "Dishwasher plug Voltage", "state_class" =&gt; "measurement", "unit_of_measurement" =&gt; "V"}, "context" =&gt; %{"id" =&gt; "01J9DK3CQ27BWBX0R9MAP5SRM9", "parent_id" =&gt; nil, "user_id" =&gt; nil}, "entity_id" =&gt; "sensor.dishwasher_plug_voltage", "last_changed" =&gt; "2024-10-05T05:40:36.706679+00:00", "last_reported" =&gt; "2024-10-05T05:40:36.706679+00:00", "last_updated" =&gt; "2024-10-05T05:40:36.706679+00:00", "state" =&gt; "232.5"}, "old_state" =&gt; %{"attributes" =&gt; %{"device_class" =&gt; "voltage", "friendly_name" =&gt; "Dishwasher plug Voltage", "state_class" =&gt; "measurement", "unit_of_measurement" =&gt; "V"}, "context" =&gt; %{"id" =&gt; "01J9DK37THDW13GTP09KXNMG0Q", "parent_id" =&gt; nil, "user_id" =&gt; nil}, "entity_id" =&gt; "sensor.dishwasher_plug_voltage", "last_changed" =&gt; "2024-10-05T05:40:31.697304+00:00", "last_reported" =&gt; "2024-10-05T05:40:31.697304+00:00", "last_updated" =&gt; "2024-10-05T05:40:31.697304+00:00", "state" =&gt; "232.18"}}, "event_type" =&gt; "state_changed", "origin" =&gt; "LOCAL", "time_fired" =&gt; "2024-10-05T05:40:36.706679+00:00"}, "id" =&gt; 1, "type" =&gt; "event"}...Managing cross-service messages with PubSubAt this point Iâ€™d like to take a step and plan ahead a little.
We have our state changed events but how should we send them to the automations weâ€™ll write?One option might be to letWebSocketClientloop over all automations and call them directly:defphandle_msg(msg=%{"type"=&gt;"event"},state)doforautomation&lt;-automationsdoautomation.state_changed(msg)end{:ok,state}endBut thatâ€™s not very flexible.
Weâ€™d have to keep theautomationslist updated and what about other services that might want to subscribe to state changes but arenâ€™t automations?Instead I opted to usePhoenix.PubSub, a publisher/subscriber service that can broadcast messages throughout your application.First weâ€™ll need to start an instance in our supervision tree (calledHaex.PubSub):@impltruedefstart(_type,_args)dochildren=[{Phoenix.PubSub,name:Haex.PubSub},Haex.WebsocketClient]Supervisor.start_link(children,strategy::one_for_one)endThen we can broadcast messages to anyone who cares to listen:defphandle_msg(%{"type"=&gt;"event","event"=&gt;event},state)doPhoenix.PubSub.broadcast(Haex.PubSub,"state_schanged",{:state_changed,%{entity_id:event["entity_id"],new_state:event["new_state"],old_state:event["old_state"]}}){:ok,state}endIf a service wants to receive the messages theyâ€™ll subscribe to the"state_changed"channel:Phoenix.PubSub.subscribe(Haex.PubSub,"state_changed")Calling servicesThereâ€™s key component left and thatâ€™s how do call a service / execute an action?You call a service by sending this type of message over the websocket:#This message turns on a light.%{id:2,type::call_service,domain::light,service::turn_on,target:%{entity_id:"light.j_kontor_dator_ledstrip"}service_data:%{color_name:"beige",brightness:100}}Youâ€™ll then receive a successful result message corresponding to theidof the message.
Youâ€™re supposed to correlate theids of the messages you send and receive, but itâ€™s not central to this post so Iâ€™ll gloss over that implementation detail.Outline of a GenServer automationI decided to create automations as regularGenServers that subscribes to triggers and then does stuff.
An automation might look like something like this:defmoduleAutomations.MyAutomationdouseGenServeraliasPhoenix.PubSubdefstart_link(opts)doGenServer.start_link(__MODULE__,opts)end@impltruedefinit(_opts)doPubSub.subscribe(Haex.PubSub,"time"){:ok,%{}}end@impltruedefhandle_info({:time,time},state)do#Do something at a specific time{:noreply,state}endendIf youâ€™re unfamiliar with GenServers then the gist is that a GenServer is an isolated process that receives messages and should be started in a supervision tree.GenServers represent different kind of â€œobject oriented programmingâ€,
very similar to theActor Model.In the above example we subscribe to the"time"channel and then receive a message with thehandle_infocallback.
(The"time"message is generated from a"state_changed"message for the entitysensor.timethatâ€™s updated every minute.)Let there be lightItâ€™s finally time for the ultimate expression of home automation:controlling a light source.Gentlemen I am now about to send a signal from this laptop through our local ISP racing down fiber-optic cable at the speed of light to San Francisco, bouncing off a satellite in geosynchronous orbit to Lisbon Portugal where the data packets will be handed off to submerge transatlantic cables terminating in Halifax Nova Scotia, and transferred across the continent via microwave relays back to our ISP and the XM receiver attached to thisâ€¦Lamp.Big Bang Theory: Internet successJokes aside, controlling a light is great because itâ€™s easy to start with (turn on/off), youâ€™ll get to see results in the real world (the light changes color), and you can increase the complexity if you want (create a sunrise alarm, usecircadian lighting, flash during a fire alarm, etc).Time triggerLetâ€™s ease into an automation by turning on a light on a specific time:defmoduleAutomations.BedroomLightdouseGenServeraliasPhoenix.PubSubaliasHaex.Light#This is the Home Assistant entity I want to control.@entity"light.jonas_bedroom_lamp"defstart_link(opts)doGenServer.start_link(__MODULE__,opts)end@impltruedefinit(_opts)doPubSub.subscribe(Haex.PubSub,"time"){:ok,%{}}end@impltruedefhandle_info({:time,time},state)do#Note that time only ticks every minute so seconds will always be zero.iftime==~T[06:00:00]doLight.turn_on(@entity,color_name:"yellow",brightness_pct:80,transition:10)end{:noreply,state}endendWake-up lightingThat was easy.
Letâ€™s try something bit more interesting: a wake-up sequence.Specifically Iâ€™d like to gradually change the brightness and color of the light from a dim red to a bright, white light.We could hardcode it with something like this:defhandle_info({:time,time},state)doconddotime==~T[06:00:00]-&gt;Light.turn_on(@entity,brightness_pct:10,color_name:"red",transition:450)time==~T[06:10:00]-&gt;Light.turn_on(@entity,brightness_pct:70,color_name:"orange",transition:450)time==~T[06:20:00]-&gt;Light.turn_on(@entity,brightness_pct:80,color_name:"gold",transition:450)time==~T[06:30:00]-&gt;Light.turn_on(@entity,brightness_pct:100,kelvin:2700,transition:450)true-&gt;nilend{:noreply,state}endBut thatâ€™s not flexible if we for example want the start time to be configurable via the UI in the future.
While refactoring it letâ€™s try to implement the transitions using a message passing approach:@impltruedefhandle_info({:time,time},state)doiftime==~T[06:00:00]dosend(self(),:transition_sunrise){:noreply,Map.put(state,:light_state,{:sunrise,0})}else{:noreply,state}endendAt line 3 weâ€™re usingsend()to send the message:transition_sunriseto ourselves and at line 4 weâ€™re tracking inserting:light_stateas{:sunrise,0}, to let the GenServer keep track of what transition we should perform.This message is again handled byhandle_info:defhandle_info(:transition_sunrise,state=%{light_state:{:sunrise,_}})docaseset_sunrise_light(state)do:done-&gt;#We've reached our last transition.{:noreply,Map.put(state,:state,:day)}{:next,next}-&gt;#We still have transitions left to handle,#send another :transition_sunrise message after 10 minutes,#repeating the loop.Process.send_after(self(),:transition_sunrise,10*60*1000){:noreply,Map.put(state,:light_state,{:sunrise,next})}endendThe functionset_sunrise_lightsets the light depending on{:sunrise,sunrise_state}and returns:donewhen weâ€™ve set the last transition.
Pay attention to line 10 where we send another:transition_sunrisemessage but with a delay, continuing the recursion until weâ€™ve set handled all transitions.Iâ€™m not thrilled about the implementation ofset_sunrise_lightbut here it is:defpset_sunrise_light(%{light_state:{:sunrise,sunrise_state}})dotransitions=[[brightness_pct:10,color_name:"red",transition:450],[brightness_pct:70,color_name:"orange",transition:450],[brightness_pct:80,color_name:"gold",transition:450],[brightness_pct:100,kelvin:2700,transition:450]]#Transform the list into a map with index =&gt; transition.#Yes, it's a shoddy imitation of an array.|&gt;Enum.with_index()|&gt;Map.new(fn{val,index}-&gt;{index,val}end)last_state=Enum.count(transitions)-1{light_opts,next_transition}=ifsunrise_state&gt;=last_statedo{transitions[last_state],:done}else{transitions[sunrise_state],{:next,sunrise_state+1}}endLight.turn_on(@entity,light_opts)next_transitionendAbort the wake-up sequenceIâ€™d like to add the ability to abort the sunrise alarm by turning off the lamp.
Itâ€™s fairly straightforward:Subscribe to a state change:PubSub.subscribe(Haex.PubSub,"state:"@entity)(I use a simplified message instead of the raw"state_changed"message weâ€™ve seen before.)Change the state if weâ€™re in a sunrise:defhandle_info({:state,@entity,"off"},state=%{state:{:sunrise,_}})do{:noreply,Map.put(state,:state,:day)}enddefhandle_info(_,state)do{:noreply,state}endWe still have a:transition_sunrisemessage that will arrive later but the fallbackhandle_infowill ignore it.
If weâ€™ll implement a snooze or restart for our sunrise this may become a problem.Refactoring into another GenServerWhat weâ€™ve done so far works but the structure isnâ€™t ideal.
The leftover:transition_sunrisemessage bothers me and what if we want to implement another light transition,
either for a bedtime routine or for another light?
Then weâ€™d have to re-implement a large portion of the automation, which isnâ€™t my idea of fun.We can break out the code into another GenServer, letâ€™s call itLightTransition,
and we can let it keep track of the transitions and lets us focus on the more interesting parts of automation writing.This lets us start a sunrise with something like this:iftime==~T[06:00:00]do{:ok,transition_pid}=LightTransition.start_link(entity_id:@entity,transitions:[[brightness_pct:10,color_name:"red",transition:450],[brightness_pct:70,color_name:"orange",transition:450],[brightness_pct:80,color_name:"gold",transition:450],[brightness_pct:100,kelvin:2700,transition:450]])state=state|&gt;Map.put(:light_state,:sunrise)|&gt;Map.put(:transition,transition_pid){:noreply,state}At line 2 we start our transition usingstart_link, foregoing the supervision tree as it doesnâ€™t make sense to have the transition without the automation.
We keep track of the service process id at line 15, which we can use to stop the transition if needed:GenServer.stop(state.transition)LightTransitionitself is fairly straightforward when we donâ€™t have to keep track of the transition state:defmoduleHaex.LightTransitiondouseGenServeraliasHaex.Lightdefstart_link(opts)doGenServer.start_link(__MODULE__,opts)end@impltruedefinit(opts)dosend(self(),:transition){:ok,Map.new(opts)}end@impltruedefhandle_info(:transition,state)docasestate.transitionsdo[]-&gt;{:stop,:normal,state}[light_opts|rest]-&gt;Light.turn_on(state.entity_id,light_opts)timer=Process.send_after(self(),:transition,light_opts.transition){:noreply,Map.merge(state,%{transitions:rest,timer:timer,last:light_opts})}endendendWith this in place we can support pause and resume by usingProcess.read_timer()andProcess.cancel_timer():@impltruedefhandle_call(:pause,_,state=%{timer:timer})dotime_left=Process.read_timer(timer)Process.cancel_timer(timer)state=state|&gt;Map.put(:time_left,time_left)|&gt;Map.delete(:timer){:reply,:ok,state}enddefhandle_call(:resume,_,state=%{time_left:time_left})doLight.turn_on(state.entity_id,state.last)timer=Process.send_after(self(),:transition,time_left)state=state|&gt;Map.put(:timer,timer)|&gt;Map.delete(:time_left){:reply,:ok,state}endI think things turned out pretty well in the end.State machines are greatSo far we only have a sunrise alarm, but itâ€™s easy to imagine more features that our humble lamp could support:Snooze the wake-up light (using the above pause/resume functionality).Circadian lighting.A bedtime transition, similar to a reverse wake-up light except it shouldnâ€™t force the light on.A â€œmax power modeâ€ that sets the light to max brightness, triggered by togglingon/offquickly. Should only end when you turn off the light.The all-important â€œsexy timeâ€ mode.If a fire alarm goes off, flash the light in an aggressive way. Should of course override every other mode.While you could implement them all as separate automations, the more you add the harder it gets to keep them from interfering with each other.
You wouldnâ€™t want your sexy time to be interrupted would you?An alternative is to use a state machine to track the different states, making the state transitions more explicit.
Our automation is already a simple state machine and itâ€™s fairly easy to add more states and more functionality to it.Automation testingAn automation is just an Elixir GenServer, so the same strategies to test a GenServer applies here too.
Iâ€™ll start with the test I want to write, and weâ€™ll work backwards to make it work:test"trigger sunrise",%{server:server}do#Start the sunrise by sending a time message to the automation.send(server,{:time,~T[06:00:00]})#Assert that we'll eventually receive the sunrise transitions.assert eventually(fn-&gt;[%{brightness_pct:100,kelvin:2700},%{brightness_pct:80,color_name:"gold"},%{brightness_pct:70,color_name:"orange"},%{brightness_pct:10,color_name:"red"},%{brightness_pct:1,color_name:"red"}]=WebsocketClientCollector.get_messages(get_service_data:true)end)endAn isolated GenServerThe first thing weâ€™ll need to do is to start the GenServer so we can start interacting with it.
We donâ€™t need a supervision tree so we can start it directly and send it to the test:setup _optsdo{:ok,server}=BedroomLight.start_link([])%{server:server}endtest"trigger sunrise alarm",%{server:server}do#...endI like to test against isolated GenServers as it allows parallel testing and it reduces the risk of contamination from other parts of the application.Alter the code to be able to test?If we run this test weâ€™ll notice that the automation will only output the first sunrise transition.
What gives?Remember this line?Process.send_after(self(),:transition_sunrise,10*60*1000)It says that weâ€™ll continue the sunrise transition after10 minutes.
Nobody wants to wait that long for a test to finishâ€¦To get around this I added an option to the automation so that we can override the delay to 1 millisecond during the test:setup optsdoopts=Map.put_new(opts,:transition_time,1){:ok,server}=BoysRoofLight.start_link(opts)%{server:server}end#And in the automation:transition_time=state[:transition_time]||10*60*1000Process.send_after(self(),:transition_sunrise,transition_time)I donâ€™t like modifying code just to make tests work but in this case I think itâ€™s a reasonable workaround.The eventually helperI want to touch on theeventuallyhelper that I think is super useful when testing processes in Elixir.
It comes in handy whenever I want to wait for a message to be delivered or wait for a process to reach a certain state.Here it is:defeventually(func,timeout\\1_000)do#Use Task to be able to timeout the execution.task=Task.async(fn-&gt;_eventually(func)end)Task.await(task,timeout)enddefp_eventually(func)dotrydoiffunc.()do#Return true so we can use it in an `assert` statement.trueelseProcess.sleep(10)_eventually(func)endrescue#Safe up so we don't have to bother with proper matches etc#inside the predicate function._-&gt;Process.sleep(10)_eventually(func)endendCareful use of checkpoints in our tests, where we wait for a state to be fulfilled, is much preferable over sprinklingProcess.sleep()in our tests, hoping that the race conditions will go away.Capturing sent websocket messagesThe last thing we need is to capture outgoing websocket messages.
In fact we also need to block the websocket connection because as it is now the full application will run when we run then tests, including connecting to our Home Assistant instance and start receiving state changed events.We can do this by replacing the websocket client during tests.
The application config is a good place for these settings:config:haex,ws_client:Haex.WebsocketClientconfig:haex,ws_client:WebsocketClientCollector,Then when we send a message we delegate to the proper client:defsend(data)dows_client().send(data)enddefws_client()doApplication.fetch_env!(:haex,:ws_client)endAllWebsocketClientCollectordoes is collect sent messages by process id and is able to return a list of them:defmoduleWebsocketClientCollectordouseGenServerdefsend(msg)doGenServer.call(__MODULE__,{:send,msg})enddefget_messages(opts\\[])doGenServer.call(__MODULE__,{:get_messages,opts})end#Skipped the implementation ...endWith this our test for the sunrise alarm should pass!Beware that if we run tests in parallel the collector will receive messages from all tests and we need a way to separate them.If we use uniqueentity_idsfor all test modules we could filter on that (even withuseExUnit.Case,async:truetests in a module arenâ€™t run concurrently, but remember to clear messages between tests).Or we could do whatMoxdoes and separate results by calling process id.
This is the most robust but itâ€™s a more cumbersome to implement as weâ€™re using nested processes (the child processLightTransitionGenServer will callLight.turn_on(), so we need toexplicitly allowit).Beware of race conditionsTests in an asynchronous and concurrent systemâ€”where messages donâ€™t arrive immediately and where services interact with each otherâ€”can be very annoying to deal with as itâ€™s easy to introduce race conditions, where a testsometimesfail.Consider this test where weâ€™ll test that the sunrise is aborted if the light is turned off in the middle:@tagtransition_time:10test"turn off light after sunrise alarm has begun halts it",%{server:server}dosend(server,{:time,~T[06:00:00]})assert eventually(fn-&gt;:sunrise=BedroomLight.get_state(server)end)#Should stop the sunrisesend(server,{:state,@entity,"off"})assert eventually(fn-&gt;:day==BedroomLight.get_state(server)end)assertEnum.count(WebsocketClientCollector.get_messages(server))==1endEven though it appears weâ€™re avoiding race conditions by waiting for the automation to change its internal state at line 4 and 11, this test may still fail on occasion.The issue is that on the last line weâ€™re testing that we only received a single sunrise transition.
But we set a transition time of10milliseconds on line 0, andsometimesthe messages arrive in such a way that the automation manages to transition twice.To add some leeway in our test we might try to change the condition to&lt; 4and to increase the transition timeâ€¦Theoretically the test could still fail even with our precautions.
Testing timeouts reliably is hard.Whatâ€™s next?We already have a working home automation engine that can be used as-is to control our home.
But there are a couple of features that are missing and would enhance the system, for example:Cron style support.We can add cron-like scheduling to our automations using libraries such asQuantumorOban.A simpler API for simpler automations.While GenServers are great in many ways theyâ€™re a bit verbose for simple automations.
I took inspiration fromAppDaemonâ€™slisten_statefor a simpler API:#This automation turns on a ledstrip behind my monitors when the plug power#is above 180, which happens when I turn on my three monitors.listen_state("sensor.winterfell_plug_power",fn-&gt;Light.turn_on("light.j_kontor_dator_ledstrip",color_temp:220,brightness_pct:40)end,gt:180)listen_stateis implemented byâ€”you guessed itâ€”a GenServer.listen_stateregisters a trigger callback together with some trigger conditions within the GenServer, then the server calls the callbacks whenever the conditions are met.
This way we donâ€™t need to mess with the internals of a GenServer and can use a declarative approach to create simpler automations.Querying entity states.Sometimes we want to only execute an automation if an entity has a specific value, for example:ifis_on("input_boolean.doorbell_sound_enabled")do#Trigger doorbellendI support this with theStatesGenServer that holds the state of every entity in Home Assistant.
At startup itfetches all statesand uses the state changed eventweâ€™ve seen beforeto keep it in sync.Generate automation entities.Home Assistant dashboard to enable/disable automations.I want to be able to enable and disable the automations in the system.
Iâ€™ve been manually creatinginput_boolean._enabledentities, but our automation engine could create these manually.
We could keep track of when the automation was last triggered and display the internal state of automations for debugging purposes.To set states (and create entities) we need to use theREST API.Thereâ€™s probably a bunch of things I havenâ€™t yet realized that I need, but at the moment Iâ€™m really happy with writing my home automations in Elixir.Published:October  8,2024Revised:October  8,  2024in4087cc0Tagged:Elixir,Home AssistantPreviousNext</description>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Trying and returning the Eight Sleep Pod 4</title>
      <link>https://www.jonashietala.se/blog/2024/10/05/trying_and_returning_the_eight_sleep_pod_4</link>
      <description>Trying and returning the Eight Sleep Pod 4Published:October  5,2024Revised:October  7,  2024inddc3c11Tagged:Eight Sleep,New StuffI recently bought theEight Sleep Pod 4—a smart mattress cover that tracks your heart rate, HRV, snoring, and cools or warms the mattress during the night.
There’s a lot to like about the mattress but in the end I opted to return it.This post describes my experience with the Pod 4.Sleep is important enough to offset the steep priceTheEight Sleepmattress is really expensive but that’s not all—it’s a mattress witha subscription!
I hated it whenOuraintroduced a subscription for their ring, and I hate the world that led us to amattresswith a subscription.So why bother with the ridiculous pricing?Becausesleep is important.What would 60 or even 30 minutes of extra sleep per day be worth?
Or maybe the same amount of sleep but better?
For me, as a parent of young kids that wakes up way too early, the answer is that it would be wortha lot.That’s why I was able to look past the price and give Eight Sleep a chance.My experience with the smart mattressThere are a bunch of things I like about the mattress and a bunch of things I didn’t like about it.
The cons outweigh the pros for me but not by much; if my circumstances were a little different I might have kept it.ProsSleep generally improved.I didn’t get the promised +30 minutes of extra sleep but anecdotally it was a positive change.The mattress could get very hot and cold.I was worried that the mattress wouldn’t be able to get cold enough but it was able to goreallycool.Tap control on the side works very well.It was very easy to tap the side of the bed to increase or decrease the temperature (at least for me, the bed is flush to the other wall).Separate sections of the bed is excellent.Although our kids slept with us the two sections worked well for us.It’s a cool gadget—I like gadgets.ConsThere’s no way to connect it to Home Assistant.I like home automation and I’ll freely admit that if I could’ve connected the bed to Home Assistant I would’ve kept it, everything else be damned.Using it as a presence sensor and being able to track the temperature of the bed and create my own automations would be glorious.But alas, Eight Sleep keeps all the data to themselves and want you to pay for the expensive subscription for theprivilegeof controlling your own mattress.Update2024-10-06An integration for Home Assistantactually exists.
I feel very silly now.I sleep parts or even whole nights in my kids’ bed.To benefit from this kind of mattress you need to sleep on it, which I didn’t always do.The app is a black box.I was severely disappointed in the app as it doesn’t provide any insight into what the Autopilot is doing, making you question if it does anything at all or if it’s just empty AI marketing.There’s no history of the temperature adjustments during the night.You can’t look back at the night and see your own or the Autopilot’s temperature adjustments.
My own adjustments aren’t even saved so the temperature settings for the next night is a guessing game.Eight Sleep claims that Autopilot is making adjustments but for all I know it’s not doing anything.The “Autopilot has reduced your X by Y%” messages feels made up.I didn’t have the Pod 4 Ultra that can elevate the bed, so how can the Autopilot reduce my snoring during the night?
Sometimes I didn’t sleep the whole night in the bed yet Autopilot claims it improved my deep sleep with 20%?I’ll give them the benefit of the doubt and say it’s probably bad statistics rather than regular old bullshit… But how can you tell?Most importantlyit did not achieve the partner approval.Using the free 30 day returnI gave it a shot but after a few weeks I decided to use the generous free 30 day return to send back the pod and get a refund (you throw away the mattress).It wasn’t the smoothest ride but the customer service did a decent enough job.
I had lots of trouble with the pickup, although that was probably an issue with the shipping company rather than Eight Sleep:At first, they didn’t show up.The next time I didn’t get a label I could print, so they couldn’t take the package.Then they again didn’t show up.Finally, we tried another shipping company and Eight Sleep sent the label to me directly, then they picked it up.I work from home so it wasn’t that big of a deal, although it was a bit stressful.Still, the free return is great and it might be the biggest reason to try Eight Sleep.
In the future, when the kids get older and if someone reverse engineers the next generation of the Pod to connect it to Home Assistant, I might give it a try again.Published:October  5,2024Revised:October  7,  2024inddc3c11Tagged:Eight Sleep,New StuffPreviousNext</description>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why I still blog after 15 years</title>
      <link>https://www.jonashietala.se/blog/2024/09/25/why_i_still_blog_after_15_years</link>
      <description>Why I still blog after 15 yearsâ˜Published:September 25,2024Revised:September 25,  2024in3082d9bTagged:BlogTime flies when youâ€™re having fun.Before you know it, your little babies have started school, you celebrate the30th anniversaryof Jurassic Park, and that little blog you started have now been going for 15 years.15 yearsis a long time; longer than Iâ€™ve been waiting forWinds of Winter, and that wait has felt like an eternity.
How did Iâ€”who frequently abandon projects for the next shiny thingâ€”manage to continue this blog for so long?Iâ€™m as surprised as anyone but Iâ€™ve tried to make a retrospective of how this may have happened.Why I started the blogI started this blog because I wanted to create a bunch offast game prototypesand I wanted somewhere I could write about my plans and, ultimately, the games.You see, I was a budding programmer and I wanted to learn how to program by making a game.
Not a simple game likeTetrisâ€”that would be way too sensibleâ€”no, I wanted to make a big RTS game, likeStarCraftorSupreme Commander.
And to do that you needed agame engine.So I got stuck developing my engine with truly groundbreaking features such as:A menu with keyboardandmouse support.A console you could bring up withF2where you could update variables (such as unit speed) without having to recompile.You could select units with properCtrl,Shift, and right click behavior.â€¦ But, embarrassingly, I didnâ€™t have anything even resembling a game, and with the development speed I had I doubt Iâ€™d be finished to this day.Iâ€™d gotten stuck in theGame Engine Trap, and I hated it.Then I foundThe Experimental Gameplay Project(ofWorld of Goofame) that promoted the idea that you should be able to create a game prototype in just 7 days.
That sounded like the perfect cure against theGame Engine Trap, so I created this blog to document my progress.Why Iâ€™ve continued to blogWhile the blog fulfilled itâ€™s initial purpose as I developed around a dozengame prototypesthat got me out of theGame Engine Trap(and that gave me a small â€œgame engineâ€ library at the end), I soon started write about other things.There are a number of reasons I continued to blog:I enjoy writing.I realize now that the biggest reason I blog is that I enjoy the writing process.
I canâ€™t put my finger on why, I just generallylikeit.This isnâ€™t always true though and Iâ€™ve had years where Iâ€™ve barely written anything at all (2022for example).
Sometimes Iâ€™ve had to force myself to write something.I guess the motivation ebbs and flows sometimes.Writing helps me think more clearly and helps me flesh out ideas.The act of writing something down helps me find errors in my thinking and helps me consider different viewpoints.
Rewriting the text youâ€™ve written has a similar benefit to refactoring your code; your thoughts will be more polished afterwards.Publishing something forces me to do better.If Iâ€™m going to put something out there Iâ€™m going to re-read and rework my text/code/ideas more than if I had kept it for myself.
(Even if nobody will read your posts, the mere act of putting something out there has this effect I think.)For example,my custom keyboard layoutwouldnâ€™t have been nearly as well-developed if I hadnâ€™t published it for everyone to see.Being more thoughtful about how I write is something Iâ€™ve become more cognizant of as the years have gone by.
My first posts where little more than a stream of thoughts, while the larger posts I gravitate towards today have gone through multiple revisions and rewrites before I publish them.At any time I have several drafts that Iâ€™m writing on, but many of them never gets published.
Sometimes I lose interest, and other times I see that the post wonâ€™t become the polished masterpiece (or at least, not a pile of dung), so I abandon it.The blog is a place to document my personal projects.Over the years Iâ€™ve doneother projects, such asbuilt a 3D printerandwrote a book.
Itâ€™s nice to have a place where I can write about them.Looking at a log of things Iâ€™ve done makes me feel better.Iâ€™ve been doing a smallyearly reviewevery year where I try to list the highlights of the past year.
Itâ€™s been super helpful for me as it helps counteract thedepressing feelingthat nothing has happened and that I havenâ€™t done anything.Doing a yearly review of some sort is a practice I highly recommend everyone to try, and of course you donâ€™t have to publish it for everyone to see.I enjoy developing the blog as a project that exclusively solves my problems.Programming is my biggest hobby and I canâ€™t see myself ever stopping.
The blog is a great project as itâ€™s something that exists only for me so I can rewrite, refactor, and add whatever silly features I want and I only have myself to answer to.
Itâ€™s a nice feeling.Blogging helps me become a better writer, which in turns helps me become a better developer.I think communicating well is an important and underrated part of being an effective software developer.
Writing well is a skill that can be developed by practice, and maintaining a blog is a pretty good way to practice Iâ€™d say.No, dumping a stream of thought into ChatGPT isnâ€™t good enough.My motivations arenâ€™t dependent on external feedbackItâ€™s important to point out that itâ€™s not external feedback that has kept me going all these years.
Yes, of course, itâ€™s nice to get the occasional email with compliments, but thatâ€™s just a bonus.I keep this blog for me to write, not necessarily for others to read.Many of these kinds of retrospectives contain graphs of views over time or the most popular posts; but Iâ€™m not showing it to you because I canâ€™tâ€”I donâ€™t keep any statistics whatsoever.I donâ€™t really careâ€”and I donâ€™t want to careâ€”about how many readers I have or what posts are and arenâ€™t popular.
I worry that if I add statistics to the blog itâ€™ll change from an activity I perform for the activityâ€™s sake, to an exercise in hunting clicks where I write for others instead of for myself.If I were chasing views I would certainly not have continued to blog for as long as I have, and Iâ€™d have missed out on themany benefitsIâ€™ve gotten from the blog.Evolution of the tech stackOne of the reasons Iâ€™ve been blogging so long is that Iâ€™ve been able to play around with the tech stack of the blog.
Iâ€™ve changed the tech stack a number of times; from choosing languages I wanted to learn, to a boring setup that â€œjust worksâ€, and back again.~ 2008I started out with PHP using theKohana Frameworkand I still have fond memories of their excellent documentation.
Although I had figured out how to create a website, it never graduated to a real blog.Early 2009Then I moved on to rewrite the site in Perl usingMojolicious.
Iâ€™m not sure my efforts ever resulted in anything tangible but I remember if was fun to play around with.July 2009I stumbled upon the idea of using a static site for my blog and therefore abandoned Perl forJekyll, a popular static site generator at that time.I believe it was a smart choice because it helped mestart writing, instead of jerking around with cool tech.~ July 2013Eventually, I grew tired of the boring backend that just got the job done and in my quest to learn Haskell I replaced the generator withHakyll, another static site generator with a pretty neat DSL.July 2013The earliest Git commit on record.
Iâ€™m fairly sure I used Git before this point(I abandoned SVN for my games in 2009).2013â€“2022Sadly, I never truly graduated from the â€œthrow shit at the wall until it sticksâ€ stage of my Haskell journey, which is why I barely added any features to the blog for many years.August 2022Having outgrown existing solutions I decided tojoin the Rewrite in Rust club(or is it a cult?)Religious weirdness aside, having complete control of the site generator made it fun again totinker and add small features.2022â€“2024Honestly though, my favorite piece of technology on the blog isCSS.
I just really like to spend time to fiddle withthe designand to make small tweaks here and there.
I do useSassbut 95% is just plain CSS.Modern CSS is honestly great.February 2024Almost by accident Istarted using Djotinstead of Markdown to write my posts.
I couldnâ€™t find a Tree-sitter grammar for Djotso I created one.May 2024Iâ€™m in the process ofconnecting the site generator to Neovimto provide autocomplete, diagnostics, jumping between posts, and other cool features.Thereâ€™s lots of potential for spendingtonsof time in this swamp but these IDE-like features really elevate the writing experience.At the moment the blogging software is a whole project in and of itself (by design; itâ€™s a fun project to tinker with).Posts have changed focus and increased in scope20092012201420172019202220240100020003000400050006000WordsEstablishing Habits with Habitica: 996 wordsZucchini Crabcakes: 58 wordsThe 4-Hour Chef: Scrambled Eggs: 198 wordsAutumn 2016 Goals Retrospective: 396 wordsBeing Productive: 429 wordsThe Top Idea: 489 wordsEmbedding youtube videos with Hakyll: 393 wordsMy MCU movie ranking: 1049 wordsBitcoin Cash needs a Specification: 610 wordsDesign for Hackers has arrived!: 106 wordsHandCash handles require trust and are insecure: 588 words5 Kup: 164 wordsThe Coinparty hackathon, take two: 127 wordsHabits to start: 122 wordsAn Elixir based payment processor for the Coinparty hackathon: 1476 wordsIDA Summer of Code 2014: Summary: 1196 wordsGoals for Autumn 2016: 1161 wordsNow we have a Forum: 89 wordsFocusing Attention: Study Hacking: 460 wordsMoving private repositories to Bitbucket: 136 wordsBefore the Games: The Site: 226 words2016 Read Books: 137 wordsTop ten activities that make me happy: 259 wordsOP_RETURN based tokens are fundamentally flawed: 637 wordsGetting Comfortable: 383 wordsMenuCity: Level 0 Walkthrough: 332 wordsComputer upgrade: 757 wordsFocusing Attention: Drawing: 244 wordsEduroam for wicd in Linkoping's University: 156 wordsMinecraft Server Hosting: 469 words10 Games in 10 Languages: 465 wordsThe first (worst) post: 150 wordsIDA Summer of Code 2014: 198 wordsEarly Christmas Present: 91 wordsNew Computer!: 572 wordsAn invisible Remake: 175 wordsThe ASIC pit of despair: 66 words2012 Read Books: 247 words(Fake) Bittman Chinese Chicken: 100 wordsLong Term Goals (part 2): 143 wordsMailto: links with FastMail in Firefox: 61 wordsLong Term Goals: 352 wordsRegex substitution with unicode in Haskell: 171 wordsGenerating ideas: 585 wordsFriend of the Tree: 69 wordsSwelling with New Shiny Books: 280 wordsWhy make games: 111 words2013 Read Books: 267 words2015 Read Books: 115 wordsA small LED Cube: 116 wordsUndo git reset --hard: 75 wordsBack to Training: 261 wordsDrawing a self portrait: 64 wordsPlans for Summer of Code: 217 wordsPushing toward Git: 61 wordsEasy setup of a static site on Amazon S3 with SSL: 716 wordsCoconut Cauliflower Curry Mash: 55 wordsLong Term Goals Update: 401 wordsMinor site updates: 636 wordsSite restyle and update: 894 wordsDeath to the Forum: 144 wordsBitcoin's security isn't binary: 1952 wordsDesign for Hackers: 244 wordsHome office renovation: 674 wordsMoving to FastMail: 441 words2014 Read Books: 313 wordsOtherOffset coordinates in Krita with Xinerama: 366 wordsfish_update_completions in Slackware 14.1: 234 wordsReinstalling Slackware: 1741 wordsInstalling Krita on Slackware 14.1: 182 wordsFailed mime type for Krita: 55 wordsHearthstone on Wine: 175 wordsSlackware installation notes: 562 wordsPreventing Firefox from creating Desktop directories: 46 wordsaddwatch: resource exhausted: 168 wordsghc 8.8.3 cannot find cabal 3.0.0.0 packages: 231 wordsNotifications with xmonad/irssi/urxvt: 200 wordsDefault audio card in linux: 694 wordsSlackware update: 626 wordsFixing Problems: 177 wordsLinuxThe killer features of the Steam Deck: 1900 wordsMy Dream Game: The RTS: 484 wordsNetrunner Spring Tournament: 909 wordsMonaco What's Yours is Mine: 83 wordsNetrunner Winter Kit Tournament LinkÃ¶ping: 1304 wordsFaster than Light: 242 wordsCS:GO AWP Nerf: 32 wordsA friendly game of Twilight Imperium: 1513 wordsWeekend Tournaments: 506 wordsThe Decline of FPS Games: 403 wordsNetrunner Lindhska Store Championship Ã–rebro: 1774 wordsA Vacation Filled with Obsession: 457 wordsOn The Decline of FPS Games: 24 wordsNetrunner Summer Tournament LinkÃ¶ping: 1082 wordsAn intriguing new puzzle: 62 wordsI beat FTL on Hard with all ships in the game: 884 wordsRecent experiences with Netrunner tournaments: 2047 wordsMy Dream Game: The Tycoon: 226 wordsMy first netrunner store championship: 2208 wordsA Christmas Game: 109 wordsFTL got a new victim: 145 wordsThe great Hochstapler: 193 wordsNetrunner ID draft Ã–rebro: 1592 wordsGamingA Simple Thought: 138 wordsFood vacation in Japan: 782 wordsChanges: 164 wordsA Four-Eyed Update: 267 wordsDoing some online Personality tests: 791 wordsIt's Time for More School: 85 wordsMotivation is Valuable: 289 wordsThe End of the Tunnel: 572 wordsWhat's up: 225 wordsA Week of Headache: 229 wordsBattling burnout: 2427 wordsGoing down: 104 wordsDone this, done that. What now?: 208 wordsSoda: 113 wordsA Nice Weekend: 186 wordsThe I'm Great quote: 436 wordsChristmas break: 356 wordsFinishing Stuff: 191 wordsWe moved away from the city: 2299 wordsResurrection: 291 wordsThe games that make me who I am: 460 wordsVacation: 126 wordsSpeeding Ahead: 314 wordsDoing Stuff: 357 words5 Years at LinkÃ¶ping's University: 2920 wordsGoing into Being Busy mode: 75 wordsGoing to University: 171 wordsRobot Project Start: 85 wordsStereotypes: 111 wordsI, Robot: 262 wordsLifeExploring the Gleam FFI: 1701 wordsThe Little Things in Life: 213 wordsISOC update: 301 wordsFavourite Programming Language: 313 wordsDijkstra's Algorithm: 679 wordsEntering Pintos: 206 wordsFocusing Attention: Programming: 356 wordsWidening the horizon: 349 wordsRewriting my Neovim config in Lua: 3362 wordsExtracting schedule information from timeedit: 638 wordsCustomizing Neovim: 1828 wordsLanguage spec in code blocks: 590 wordsLaying off Pintos: 126 wordsUnderstanding the Computer: 622 wordsWhy is my file so huge?: 285 wordsWriting a Pollen lexer in Pygments: 1407 wordsA simple timeline using CSS flexbox: 2464 wordsAutocomplete with nvim-cmp: 2847 wordsrustc: error while loading shared libraries: librustc_driver: 101 wordsPicking up rust by writing a QR code generator: 666 words8-puzzle in rust: 1133 wordsGiving the blog a facelift: 1515 wordsLet's create a Tree-sitter grammar: 6253 wordsBeginning Programming: 460 wordsMonty Hall: 627 wordsGruvbox Syntax Highlighting for Pandoc: 435 wordsFirst impressions of Pollen: 1098 wordsSummer job at Configura: 1157 wordsBrowse posts with telescope.nvim: 3496 wordsBack to lazy.nvim: 406 wordsRewriting my blog in Rust for fun and profit: 2620 wordsGood and Bad Programmers: 293 wordsDbot: 248 wordsBlogging in Djot instead of Markdown: 2074 wordsTufte style sidenotes and marginnotes in Pollen: 1009 wordsPoking at Emacs: 395 wordsMicrofeatures in my blog: 2579 wordsMigrating to rocks.nvim: 2824 wordsCalling closures in a Vec: 198 wordsMy first rust Contribution: 669 wordsProgramming2010 in review: 476 words2023 in review: 559 words2011 in Review: 422 words2018 in review: 214 words2016 in Review: 250 words2013 in Review: 400 words2019 in Review: 591 words2012 in Review: 414 words2015 in Review: 311 words2014 in Review: 447 words2022 in review: 1067 words2021 in review: 857 words2017 in Review: 154 words2020 in review: 704 wordsYearly ReviewEvolution of RTS games: 3324 wordsAugust theme: Bare Minimum: 54 wordsPostmortem: Bugger: 449 wordsAn Epic Start: 165 wordsOctober theme says: Numbers: 42 wordsBeebop The Island Hopper: 100 wordsA *: 68 wordsGrand Thief Arto: 181 wordsWhere's Teddy?: 145 wordsNew Year, New Theme: 100 Things: 91 wordsLudum Dare 20 Timelapse: 37 wordsLudum Dare 17 - an hour or two into it: 79 wordsPostmortem: A Geek Valentine: 647 wordsThe Chronicles of Bim: The 100 Fake Afros: 81 wordsMining Incorporated (unfinished): 129 wordsPostmortem: Black and White: 328 wordsPostmortem: Jonas IceCream Stand: 448 wordsPostmortem: Beebop The Island Hopper: 455 wordsDecember Theme: New World Order: 89 wordsLudum Dare 29 Entry: 83 wordsNovember Theme: Art Game: 85 wordsHard Work: 56 wordsPostmortem: Balls: 821 wordsMy Minions: 200 wordsBalls: 132 wordsFun or Frustration? Ludum Dare 33: 233 wordsBreaking the rule of three: 141 wordsUgly and Slow Progress: 153 wordsGame Design Analysis: World of Goo: 2251 wordsA Geek Valentine: 195 wordsUp like a Sun, Down like a Pancake: 129 wordsMy first theme: Addictive Gaming: 46 wordsFebruary gets Themed: Rejection: 37 wordsNo game this month: 197 wordsSettled on an unoriginal idea: 15 wordsWe can build things!: 44 wordsLudum Dare 22 results!: 224 wordsRising from the Dead, it's Ludum Dare: 97 wordsMenuCity: 122 wordsLudum Dare 22 Here I Come: 263 wordsMaking a Game Again?: 344 wordsBugger: 126 wordsIncomplete game coming up: 278 wordsOres: 67 wordsMarch Theme: 10 seconds: 46 wordsLudum Dare 22 Timelapse: 47 wordsLife and Shields: 48 wordsGroar: 109 wordsThe Arty Timeline: 51 wordsPostmortem: MenuCity: 713 wordsPostmortem: Sat-E: 904 wordsBullets and AI: 68 wordsCompetition Feedback: 289 wordsJonas IceCream Stand: 71 wordsBlack and White: 155 wordsSat-E: 121 wordsThe Experimental Games: 944 wordsPostmortem: The Chronicles of Bim: The 100 Fake Afros: 307 wordsSeptember theme: Failure: 33 wordsI Made It!: 118 wordsGame creationMy book 'Why Cryptocurrencies?' is done: 834 wordsHow I wrote a book using Pollen: 2585 wordsI'm writing a book: Why Cryptocurrencies?: 173 wordsHow I made a kick-ass cover for my self-published book: 1709 wordsWriting lessons learned after writing a book: 2181 wordsGetting the book into my hands: 431 wordsWhy Cryptocurrencies? is now available in print: 291 wordsHow I did the layout for my self-published book: 2250 wordsThe eBook for 'Why Cryptocurrencies?' is now available for free: 1368 wordsAn update on my book 'Why Cryptocurrencies?': 363 wordsBook writingThe T-34/0 keyboard layout: 1874 wordsI designed my own keyboard layout. Was it worth it?: 2185 wordsThe T-34 keyboard layout: 4590 wordsThe current T-34 keyboard layout: 1669 wordsThe T-34/2 keyboard layout: 1446 wordsGeekhack Toxic: 59 wordsBuilding the GH60: 958 wordsThe T-34/1 keyboard layout: 1486 wordsStarcraft 2 Keycaps: 96 wordsKeyboardsPrinting Hextraction for my kids: 2036 wordsLet's build a VORON: Major failure: 502 wordsLet's build a VORON: Toolhead: 1346 wordsLet's build a VORON: Noise: 1004 wordsLet's build a VORON: Software: 1458 wordsLet's build a VORON: Wrap-up: 709 wordsLet's build a VORON: Filters: 1310 wordsLet's build a VORON: Bed &amp; electronics: 418 wordsLet's build a VORON: Printing &amp; Tuning: 1412 wordsLet's build a VORON: Build start: 1332 wordsLet's build a VORON: Wiring: 2015 wordsLet's build a VORON: More mods: 2058 wordsLet's build a VORON: Smaller fixes: 1730 words3D printingPosts mapped by published date and word count, grouped into lose categories. (You'll need CSS enabled to view the Graph in a nice way.)It probably comes as no surprise that my posts have changed a lot since I started the blog.
I made the above visualization that counts the words of each post and plots them on a time axis, together with loose grouping of the type of post.I have two main takeaways:The posts have grown larger and more ambitious.In the beginning I treated the blog almost like a Twitter/X feed with short updates on my game making progress.
Now I spend weeks or even months slowly working away on a post until I feel itâ€™s interesting and polished enough to publish.As my interests have changed, so has the focus of my posts.I only write about my hobbies or things that Iâ€™m interested in at that moment so itâ€™s only natural that the theme of the posts have changed.
Gaming related posts have given way for more programming and the occasional meat-space related project.What does the future bring?I find almost find it obvious that the blog has changed so much during the 15 years of itâ€™s existence;of coursemy posts would grow more ambitious as my writing matured and Iâ€™dobviouslystart gravitating away from games towards other projects.Naturally, itâ€™s just a lie I tell myself with the benefit of hindsight.Predicting the future is impossible and I have no idea what the blog will look like 15 years from now.
While itfeelslike Iâ€™ll keep blogging the same way, it would be foolish to claim that as a fact.Sometimes itâ€™s best to stop worrying and just enjoy the ride.Published:September 25,2024Revised:September 25,  2024in3082d9bTagged:BlogPreviousNext</description>
      <pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A simple timeline using CSS flexbox</title>
      <link>https://www.jonashietala.se/blog/2024/08/25/a_simple_timeline_using_css_flexbox</link>
      <description>A simple timeline using CSS flexboxPublished:August 25,2024Revised:September 24,  2024in0273191Tagged:Blog,CSS,Web DesignAs I added a/nowpage to the site I also decided to refresh my/aboutpage and I figured it would be neat to have timeline element where I could list some of the larger events in my life.To my surprise it wasn’t too difficult to create one that looks pretty clean—theflexboxfeature in CSS is really good.
In this post I’ll walk you through how I made this kind of timeline:1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaIf you’re reading this post in a feed reader then the embedded HTML examples (such as the above) won’t show up correctly.MarkupI like to start with the markup before moving on to styling.
I have two wrappers (timelineandevents) around the different events (event) that contains the event marker (svg) and content with atimeandtext:&lt;!--The first `1989` event--&gt;&lt;!--The circle is an svg--&gt;&lt;!--The event info--&gt;&lt;time&gt;1989&lt;/time&gt;&lt;p&gt;I was born in the north of Sweden&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!--etc ...--&gt;&lt;/div&gt;&lt;/div&gt;A simple lineLet’s start with the actual line in the timeline.
I chose to use the::beforepseudo-element on theeventsdiv to simulate a line by setting the width and height:.events::before{//We need some content for the element to show up.content:"";//Use absolute positioning to place the timeline at the very top.position:absolute;top:0;//With a height and with the timeline will be a tall and thin box.height:100%;width:1px;We also need to set the wrapper.eventsto use relative positioning, otherwise the timeline will start from the top of the page, not the container:.events{position:relative;}I’ll also throw in a little bit of styling so it’s easier to see://For the tutorial I use slightly different colors,//but you get the idea..events::before{background:white;}//Events use different classes to differentiate them..event.life.marker{fill:yellow;}.event.programming.marker{fill:magenta;}.event.family.marker{fill:red;}//Make the time stand out.contenttime{font-family:concourse_4,Helvetica,sans-serif;font-weight:bold;}//Just some extra spacing to make the timeline not merge//with the surrounding text..events{margin:0.5em;}And we have our line for our timeline:1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaAlignmentThe circle and event aren’t aligned, let’s try to fix that.By using flexbox the event will display its content horizontally (with the circle to the left and the content to the right):.event{display:flex;}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaClose, but the circle seems off.
Remember that the circle is an svg 12 pixels wide and high and positioning will use0,0by default.With relative positioning we can move the center of the circle to align it better:.event.marker{position:relative;left:-6px;top:6px;}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaBut if you look closely this still doesn’t look correct.
Turns out thatcentering things is the hardest problem in computer science, so don’t be discouraged.To save you some grief, I found thatalign-items: baselinedoes a better job than nudging top positioning:.event.marker{position:relative;left:-6px;top:0px;}.event{align-items:baseline;}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with Veronica(The alignment looks good enough to me, at least with the default font I use.)Vertical spacingIt feels a bit cramped so lets space things out.
One way is to simply add amargin-bottom:1em;but that would add a useless space below the last event (that we’d have to remove another way).I think a cleaner way is to useflexboxandrow-gapto only specify spacing between elements:.timeline-5{.events{display:flex;//Lay out events column-wise instead of row-wise.flex-direction:column;//Set some spacing between elements.row-gap:1em;}}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaMaking it responsiveWhat we’ve made is good for smaller screens but for larger screens I’d like to place the line in the middle and move some events to the left and some to the right.I’ll usemedia queriesto create a cutoff:@media(min-width:700px){//Styling for wider screens goes here.}Even though I won’t include the media query in the following code snippets the media query should wrap them all.Events to the leftThe first thing I’d like to do is move the line to the middle:.events::before{//This centers the line horizontally.//Remember that we used absolute positioning before.left:50%;}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with Veronica(Use a wider screen to see the effects of our changes.)Now, let’s move the marker to the timeline.
First lets move the marker to be after the content in the layout ordering:.event.marker{order:1;}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaSecondly, we’ll make the content take up all the space to the left, pushing the marker on top of the line in the middle:.event.content{width:50%;}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaLets move right-align the content and add some padding so the text won’t overlap with the marker:.event.content{text-align:right;padding-inline:1em;}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaEvents to the rightTo move events to the right side of the timeline all we have to do is tellflexboxto lay out elements from right to left instead of left to right://Use `nth-child(even)` to target every other event..event:nth-child(even){//Layout elements from right to left.flex-direction:row-reverse;}For the blog I don’t usenth-child(even)as I prefer to group events to either side by type:.event:is(.programming,.work,.projects){flex-direction:row-reverse;}To make it look good lets add left aligned text and move the marker offset to be aligned over the line again:.event:nth-child(even){.content{text-align:left;}//The marker used to be offset -6px, but now we//move from the right..marker{left:6px;}}1989I was born in the north of Sweden2006I got introduced to Visual BasicAugust 2008Got together with VeronicaWe’re doneThat’s all there is to the timeline I use.
You can of course modify and expand on it in many ways but I quite like this simple styling.Withflexboxit was in the end fairly simple to get a basic timeline created and it’s one of my absolute favorite CSS features that manages to simplify many things that used to be very awkward.Here’s the all the styling for the timeline we created in this post://The line in the middle..events::before{content:"";position:absolute;top:0;height:100%;width:1px;background:var(--color-hr);}.events{//Needed for positioning the line.position:relative;//Add some space.display:flex;margin-block:0.5em;flex-direction:column;row-gap:1em;}.event{//Layout content and marker using flexbox.display:flex;//Align marker vertically.align-items:baseline;}.event.marker{//Adjust marker to center on the line.position:relative;left:-6px;}//Some coloring to make our life easier..event.life.marker{fill:var(--melange_b_yellow);}.event.programming.marker{fill:var(--melange_b_magenta);}.event.family.marker{fill:var(--melange_b_red);}.contenttime{font-family:concourse_4,Helvetica,sans-serif;font-weight:bold;}@media(min-width:700px){//Place the line in the middle..events::before{left:50%;}//Layout the marker after the content..event .marker{order:1;}.event .content{//Make the content take 50% space so the marker//will be placed at 50% (on top of the line).width:50%;//Event is to the left, align text towards the line.text-align:right;//Avoid overlap with the marker.padding-inline:1em;}//For these types, move the event to the right..event:is(.programming,.work,.projects){//Layout the content and marker from right to left.flex-direction:row-reverse;//Now align text to the left..content{text-align:left;}//We used to offset the marker from the left with -6px,//now we need to do it from the other side..marker{left:6px;}}}Published:August 25,2024Revised:September 24,  2024in0273191Tagged:Blog,CSS,Web DesignPreviousNext</description>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Microfeatures in my blog</title>
      <link>https://www.jonashietala.se/blog/2024/07/09/microfeatures_in_my_blog</link>
      <description>Microfeatures in my blogâ˜Published:July  9,2024Revised:July 13,  2024in98bd1f3Tagged:Blog,CSS,Web Designxkcd: Nerd snipingA while I ago I encountered a blog post calledMicrofeatures I Love in Blogs and Personal Websites, and together with the relatedHacker News discussionI gotnerd sniped.
(I spent more time than I care to admit implementing new and exciting microfeatures for the blog.)ContentsMicrofeatures are fun and time consumingMicrofeatures Iâ€™ve implementedPublished and revision infoQuote attributionDifferent kinds of notesEnhanced code snippetsTable of contentFlex and gallery display for imagesEmbedding YouTube thumbnailsDifferent list typesUnbroken indexes of all postsFeatured &amp; favorite postsSeriesProjectsAutomatic dark modeMicrofeatures I may implement in the futureTargeted RSS feedsSearchA better 404 pageSummary of a postDisplay â€œrelatedâ€ posts below the postChangelogMicrofeatures are fun and time consumingFor some people, blogging is their job.
For me, blogging is a way to delve deeper into ideas, to document my journey to future me, to relax, or have fun.
Microfeatures arefunand so theyâ€™re a perfect fit for my blog.I also really appreciate microfeatures in other blogs.
Itâ€™s nice todiscover a beautiful table of contentor apage with favorite blog posts.
It makes me want to stick around longer and appreciate the craft that is blogging.But realize that microfeatures take time to implement.
One small feature wonâ€™t make a big difference but dozens of microfeatures might transform your blog rewrite you thought were going to take a weekend, to a project spanning weeks or even months.Microfeatures Iâ€™ve implementedHereâ€™s a collection of notable microfeatures Iâ€™ve implemented for the blog.
Itâ€™s not an exhaustive list, just the ones I think are fun, interesting, or that Iâ€™d like to see in more blogs.Published and revision infoThereâ€™s a trend for blog posts to not include the date the post was publishedâ€”and I hate it,especiallyfor technical content.
I donâ€™t even like to call the date of publishing a â€œmicroâ€ feature as itâ€™s more an essential feature.Regardless, I include the published date below the post title in my blog:The published date together with the Git commit.I also think itâ€™s valuable to display the date the post was updated:The date of the last revision together with the corresponding Git commit.I guess it would be more precise to manually specify when the post was updated, to avoid changes likeEnclose titles in â€œ, now an error after Hakyll updatewhere the post content isnâ€™t changed in a meaningful way.
Itâ€™s too bothersome to remember though so I rely on the Git history and have a list of commits I ignore when I fetch the dates.
Not perfect but good enough I think.Quote attributionThe only true wisdom is in knowing you know nothing.SocratesBlockquotes are standard everywhere but you often want to show where the quote originates from.I think itâ€™s nicer to have specific styling for attributes than to solve it manually, like this:The only true wisdom is in knowing you know nothing.â€” SocratesDifferent kinds of notesIâ€™m a fan of sidenotes andI used themheavilyin the book I wrote.
Theyâ€™re great for a certain style of content but for the blog I noticed I used them very rarely.
Instead I use â€œnotesâ€ of different kinds to highlight certain things:This is a regular note.Update2002-01-12If I want to make a correction I can add a note with a timestamp.Did you know that you cancheck out the sourceof this site to see how the features are implemented?Itâ€™s easy to spend a lot of time building features for the blog instead of actually writing.Building features just for the sake of building is perfectly fine!Maybe a weird thing to prioritize in a post but I really like the additional color splash the notes can give to a post.I also have footnotes1(mostly becauseDjotprovides them by default) but I never really use them.
I guess I should use footnotes more now that I have them.Enhanced code snippetspubenumCode&lt;'a&gt;{Inline{code:&amp;'astr,lang:Option&lt;&amp;'astr&gt;,},Block{code:&amp;'astr,lang:Option&lt;&amp;'astr&gt;,path:Option&lt;&amp;'astr&gt;,linenum_start:Option,highlight_lines:Option&gt;,},}Embedding code into blogs is common practice and Iâ€™ve added a few extra features to the code display on my blog:Overlay the language or file path.For code blocks thereâ€™s a smalldescription that displays the language.
It can be customized to for example display the path of the file:Itâ€™s accomplished using CSS withdata attributesand::before, and wonâ€™t be visible in the RSS feed.View the source Luke.Syntax highlight for inline code elements.Highlighting code blocks is standard but I wonder, why donâ€™t we also highlight inline code?Itâ€™s something I added to be able to refer back to values like"-NoHU",0, andrequire("telescope.builtin").find_files()when explaining what happens inside a code block.
A sentence with color is much more pleasing than the colorless"-NoHU",0, andrequire("telescope.builtin").find_files()donâ€™t you think?Ability to highlight lines.code&gt;.line.hl{background-color:var(--melange_a_sel);}Benjamin Tanâ€™s excellentblog post about Jujutsuused highlighted lines to good effect and inspired me to implement them.Line numbers with offset.code&gt;.line[data-linenum]::before{content:attr(data-linenum);padding-right:var(--space-2xs);color:var(--melange_a_ui);}Line numbers is another feature Iâ€™ve recently implemented that Ithinkis a good idea.
Them being optional is important as line numbers adds visual bloat.
Iâ€™ll probably only use them in very specific scenarios where I really want to call out code at certain lines.The selector at line 9 targets lines with the linenumdata attributeto avoid the padding at line 11 to apply to code blocks without line numbers.Adding line numbers in::beforehas the additional benefit of the line numbers not being included in the selection, so copying the code works as expected.No images, no JavaScript, and no embedded Gists.It frustrates me to no end when someone has made the effort to write a good blog post and then useimagesfor their code.
Images inevitably fail to render as crisply as regular text and theyâ€™re either too small, too blurry, or impossible to read on the phone.I also really dislike requiring JavaScript just for displaying text or embedding code asGitHub Gists.
Itâ€™s just textâ€”letâ€™s serve it as text.Iâ€™ve gotten email at work with images of code they expected me to copy.
Thatâ€™sOffice Space thrillermaterial and such behavior will earn you enemies for life.Table of contentI can optionally insert a table of contents by including a:table-of-content:marker in the markup.
It uses the&lt;details&gt;element and is collapsed by default.
When expanded it looks like this:Expanded table of content forLetâ€™s create a Tree-sitter grammar.Itâ€™s important for me that the table of content is optional as I have a mix of small and large posts.
The table of content is generated from the first two heading levels and it works quite well for my use-case.Flex and gallery display for imagesI sometimes want to display two or more images next to each other.
Instead of having images embedded like normal I place two or more images in a&lt;figure&gt;and useflexboxto place them next to each other:Two boards for a game calledHextractionthat I3D printed.When I have more images I useCSS gridto create a small gallery:Pictures of a robot project from my time at the University.Embedding YouTube thumbnailsClick to view on YouTubeThe recommended way to embed YouTube videos is to use iframes and itâ€™s somethingI implemented over a decade ago.
It works but itâ€™s not a great solution.
Embedding anything from Google is an enabler for their all-encompassing privacy violations andYouTube embeds are bananas heavy.Instead I embed an image generated from the video (served from my site, not YouTube) and make it a link that takes you to YouTube.
I couldâ€™ve used JavaScript to convert the placeholder into an embedded video when clicked but I like simplicity and redirecting to YouTube allows third-party players to handle the redirect.Different list typesI like lists and I have several different types I can use to mix things up a bit.Here are some ordered list types:OneTwoAlpha 1Alpha 2Roman 1Roman 2AlphaBetaAnd here are some unordered list types:BulletDashPlusNecessary? No.Fun? I think so.Unbroken indexes of all postsUnder/archiveI have a list of all posts so itâ€™s easy to scroll through and get an overview of what Iâ€™ve written about during the 15 years the blog has been active.Naturally thereâ€™s no pagination so you can just scroll through.
I only have279postsâ€¦ Whatâ€™s the point of pagination anyway?Thereâ€™s also indexes fortags(seekeyboards) and per year (see2023).
The yearly index mostly exists so I have an easy way to see the past years posts when I do myyearly review.Featured &amp; favorite postsHighlighting favorite posts is a good idea I got from theHacker News discussionand one I just had to implement after seeing it.
I handle featured and favorite posts in three ways:I list five featured posts on the homepage:Featured posts on the homepage.A featured post isnâ€™t the same as a favorite post, although the featured posts tend to be favorites.All favorite posts are listed under/favorite.Each favorite post is accompanied by a star:â˜A post listing from thearchives.Clicking on the star takes you to/favorite.SeriesTags are fine for grouping slightly related posts but sometimes posts follow a more structured story, which is whereseriescome in.A good example of a series is theLetâ€™s build a VORON Tridentwhere I document my journey of building my first 3D printer over 12 posts.Thereâ€™s a few features that come with a series:All series, both ongoing and completed, are listed under/series.Each series gets a separate page with a description and the list of posts.See/series/voron_tridentor/series/t-34.A post is clearly marked as belonging to a series.Itâ€™s marked next to the post title:The series is marked both above and below the post title.And more information about the series is included at the end of the post, so itâ€™s easy to jump around in the series:All posts in the series are included at the end of a post.Selected series are showcased on the homepage.I like series and I want to write more series.
The drawback is that they take more effort to create than standalone blog posts.
As my attention and motivation tends to shift a lot this increases therisk of stressif I lose motivation in the middle of a series.ProjectsWhile a blog is about writing I also wanted to highlight some of the personal projects Iâ€™ve made.There are no individual pages for the projects as they typically live outside this site (maybe at GitHub).
Instead I have a/projectspage with the projects and I include a subset of those on the homepage.The projects markup is fairly simple, just a title and a description (that could include an image, code block, or whatever):TheT-34 Keyboard layoutproject.Long ago I made some game prototypes and I wanted to showcase them in a slightly different manner.
Theyâ€™re still included as a project but they get specialized markup that Iâ€™m pretty happy with:The games overview in the/projectspage.Automatic dark modeThe light and dark style of the site.Because I have a preference for dark mode I really wanted a dark mode for the blog, while also catering to people that prefers a light mode.I implementeddark mode usingprefers-color-scheme, a simple solution that doesnâ€™t require JavaScript and â€œjust worksâ€.
Itâ€™s a CSS feature that allows the user to specify their preference using the browser or operating system.Microfeatures I may implement in the futureNaturally, thereâ€™s always more features you can implement.
Many I wonâ€™t bother with but there are some that I think are good ideas and that I may implement one day.Targeted RSS feedsRSS feeds are awesome and I think all blogs should have them (and news sites, social media sitesâ€¦ almost everything really).
I do of coursehave a feedbut it might be a good idea to add specialized feeds such as:Feed for a seriesFeed for a tagThe only reason I donâ€™t have them is laziness.SearchBecause itâ€™s a static site itâ€™s harder to have a good search functionality.
Maybe thereâ€™s a good way to create/include one but I havenâ€™t looked into it more.A better 404 pagePerhaps related to the search functionality, it would be nice if the 404 page would include a helpful â€œdid you meanâ€ message.For example if you typed in the path/useit could suggest you to try/usesinstead.So far Iâ€™ve avoided JavaScript in the blog but here it would be nice to have.Summary of a postIâ€™ve toyed with the idea of having a summary of each post, so I could have the summary of a featured post on the homepage.
However, good summaries are cumbersome to maintain and hard to auto-generate.I donâ€™t want to summarize manuallyâ€”it introduces too much friction into blogging.
While LLMs are honestly quite good at generating summaries, I think we need less AI generated content on the web, not more.
Taking the first N characters or M paragraphs is a shoddy way of summarizing a post and wonâ€™t create a useful summary.While I like the idea of a post summary, itâ€™s not a feature Iâ€™ll implement anytime soon.Display â€œrelatedâ€ posts below the postAnother interesting idea is to display a bunch of related posts at the end of a post.
The problem is similar to that ofsummarizing a post: itâ€™s cumbersome to maintain or hard to auto-generate well.
For now Iâ€™m content withtagsandseriesas a means of grouping related posts.ChangelogWhile Idisplay the latest Git commitfor each post I was impressed by the list of â€œmeaningful changesâ€ at the bottom of thejj initblog post.A changelog looks cool but Iâ€™m too lazy to maintain one for all posts.
A post likeThe current T-34 keyboard layoutwould probably benefit from a proper changelog.Djothas a bunch of nice benefits over markdown such as footnotes.There are various flavors such asPandocflavored markdown that has footnotes, among other things.â†©ï¸ŽPublished:July  9,2024Revised:July 13,  2024in98bd1f3Tagged:Blog,CSS,Web DesignPreviousNext</description>
      <pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Back to lazy.nvim</title>
      <link>https://www.jonashietala.se/blog/2024/06/25/back_to_lazynvim</link>
      <description>Back to lazy.nvimPublished:June 25,2024Revised:June 25,  2024in3cb913cTagged:Lua,NeovimAround a month agoI had an affairwithrocks.nvim.
It was fun, but I’m back together withlazy.nvimagain.
This is a short post to explain why—at this point in time—the grass wasn’t greener on the other side.Problems withrocks.nvimToo many weird issues.I had quite a few weird bugs that I couldn’t pin down.
What finally broke the camel’s back was thatI couldn’t run neotest with Elixir.
I think the problem was that I didn’t have the correct treesitter grammar but no matter how I tried to:Rocks sync,:Rocks update,:TSInstall, or nuke the nvim folders in~/.localand do a complete reinstall, I couldn’t get it to work.I don’t want to mess with my Neovim configuration when I’ve got work to do.
Withlazy.nvimthese issues went away.Update and sync was really slow.:Rocks updateand:Rocks syncispainfullyslow compared tolazy.nvim.
I was already frustrated with packages breaking and having to wait for the:Rocks syncto finish when I trying to fix them made me want to smash the computer to pieces.That there’s no way toupdateorsyncan individual package was just gravy.UpdateI’m told that:Rocks install {rock}updates an installed package.Lazy.nvim 11.0 supports luarocks and rockspecThesinglereason I started looking intorocks.nvimwas support forluarockswhere plugins can specify their own dependencies so that I don’t have to.With 11.0lazy.nvim added support forluarocksincluding the ability to specify anyluarocksdependency (such as atoml library).Given thatlazy.nvimsupportssemver versioningand:Lazy restorethere are no longer any features I need thatrocks.nvimhave thatlazy.nvimdon’t.Specifying plugins in a.tomlfile rather than in Lua has the benefit of making it easier to create management commands like:Rocks install.
It’s not something I really care about but I can see the attraction of plugin management being as simple as running a few commands.I will be faithful, I promiseI really need my configuration tojust workand unfortunately that wasn’t the case for me withrocks.nvim.
That’s why I’m back tolazy.nvimand I’m really enjoying the fantastic speed oflazy.nvim.
Why did I ever leave you?Published:June 25,2024Revised:June 25,  2024in3cb913cTagged:Lua,NeovimPreviousNext</description>
      <pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Migrating to rocks.nvim</title>
      <link>https://www.jonashietala.se/blog/2024/06/02/migrating_to_rocksnvim</link>
      <description>Migrating to rocks.nvimPublished:June  2,2024Revised:November 26,  2024in4f1cba5Tagged:Lua,NeovimMy relationship with myNeovim configis best described as anOn-again, off-again relationship.
At times I’m deeply in love and spend all my time caressing the config—like how in September Idid a complete rewrite in Lua—while other times I’m busy with other love interests and the config is left alone, sometimes for months or even years.While not as intense as the September affair, I recently got back together with my config to migrate her from the “old and boring”lazy.nvimpackage manager to the new and excitingrocks.nvim.
It wasn’t all smooth sailing but with some patience—and a drink or two—our threesome withrocks.nvimwas quite enjoyable.There’s nothing wrong withlazy.nvim—it’s great.Sometimes I just want a new experience.Whyrocks.nvim?To be honest, the biggest reason I started looking intorocks.nvimwas that my brain—for some weird reason—tends toget stuckthinking of things.
Rewriting my config wasn’t something I wanted to do but it’s not easy to escape the brain lock.Luckily, this time my brain locked onto something a worthwhile asrocks.nvimhas some nice and ambitious features.Benefits over other package managersrocks.nvimmakes dependency management the responsibility of the plugin.With other package managers you as a user have to specify the dependencies for the plugin.
Usinglazy.nvimit might look like this:return{"NeogitOrg/neogit",dependencies={"nvim-lua/plenary.nvim","nvim-telescope/telescope.nvim","sindrets/diffview.nvim",},opts=opts,}There are several issues with this:It’s annoying.You need to babysit the config if the plugin adds or removes a dependency.The plugin might break if there’s a breaking change in a dependency.What if you have several plugins that depend on a different version of a dependency?
(You’re going to have a bad time.)rocks.nvimmoves the dependency management to the plugin, so we can just specify the plugin itself:"neo-tree.nvim"="3.26"This makes plugin management easier and should reduce the risk of plugins breaking.rocks.nvimsupports loading Lua packages fromluarocks.Lua is a neat little language but it’s very bare-bones and doesn’t include a large standard library.
Neovim has been incorporating more and more utility functions—such asvim.splitandvim.fs.joinpath()—but there are still plenty of functionality that we need to import.
That’s why utility plugins such asplenary.nvimexists and is a dependency to a lot of different plugins.Withluarocksyou get access to many more libraries; for example ayamland atomllibrary that would’ve saved mefrom parsing them with regex.Drawbacks compared tolazy.nvimNaturally, it’s not all fun and games and there are drawbacks torocks.nvimcompared tolazy.nvim:Most plugins don’t have a rockspec that define their dependencies, meaning you still need to manage the dependencies yourself, forgoing the biggest benefit ofrocks.nvim.Installing and updating all packages feels a lot slower.You must manage lazy loading manually. I’ve seen rumors of lazy loading support forrocks.nvimbut as I’m writing this post there’s nothing released yet.rocks.nvimis newer thanlazy.nvim; meaning less fancy features, more bugs, and more rough edges.While I think thatrocks.nvimis taking a necessary and difficult step forward for Neovim package managers, there are valid reasons to stick withlazy.nvim.Basic setupYou can installrocks.nvimby manually sourcing an installer script but I wantedrocks.nvimto install itself automatically.
It’s possible by droppingthe bootstrap scriptinto yourinit.luafile.Then you’re good to go with managing plugins with the:Rockscommands::Rocks install {rock}to install a package.:Rocks syncto sync packages withrocks.toml.:Rocks updateto update packagesandtheir versions inrocks.toml.:Rocks prune {rock}to uninstall a package.I was a bit surprised that you can’t update or sync an individual package but otherwise the commands feel intuitive.Separate config file per pluginOne feature Ireallylike aboutlazy.nvimis the ability to separate plugin configuration into separate files.
This is easy to setup inrocks.nvimusingrocks-config.nvim:Run:Rocks install rocks-config.nvimor editrocks.tomlmanually:[plugins]"rocks-config.nvim"="1.6.0"Create a plugin-specific file atlua/plugins/.luawith the plugin setup and configuration code.For example, we can installconform.nvimwith:Rocks install conform.nvimand configure it inlua/plugins/conform.lua:require("conform").setup({formatters_by_ft={lua={"stylua"}}})There aresome ruleson what to name the config file:The plugin’s name (as long as it is a valid module name).The plugin’s name with the.[n]vimsuffix removed.The plugin’s name with the[n]vim-prefix removed.The plugin’s name with-substituted for..Forconform.nvimwe could name the config fileconform-nvim.luaor simplyconform.lua.Something to keep in mind when migrating to a setup with a config file per plugin is a potential ordering issue.
I for example usemason-lspconfig.nvimfor my LSP setup and it’s important to call the setup in the right order:Setupmason.nvim.Setupmason-lspconfig.nvim.Setuplspconfig.If the plugins have their own config file then we can’t guarantee this order.
We can instead setup them all in one of the config files—although I’m not a fan of commingling setup of different plugins in a single file inlua/plugins, I prefer them to have a 1-to-1 relationship with a plugin.
I think it’s cleaner to place such a file in a runtimepath such asplugin/lspconfig.lua.Git dependenciesAnother crucial feature is the ability to install plugins from git repositories.
This requires therocks-git.nvimmodule that’s installed with:Rocks install rocks-git.nvim:[plugins]"rocks-git.nvim"="1.5.1"You can then add git dependencies using:Rocks install or add them torocks.tomlmanually:[plugins]"vim-fugitive"={git="tpope/vim-fugitive"}"trouble.nvim"={git="folke/trouble.nvim",branch="dev"}"nvim-ts-autotag"={git="windwp/nvim-ts-autotag",rev="aeb7090"}As I’m writing this almost exactly half of my plugins inrocks.tomldepends on a git repository instead ofluarocks.
Mostly because they don’t exist onluarocksbut I also have some Vimscript plugins that never will be.One feature I’m missing is a command to automatically updaterevto the latest available value or removing it, now I did it manually.How to build a plugin?There are some plugins that needs to be built before we can use them in Neovim.telescope-fzf-nativeis such an example where we need to runmakeafter we clone the repository.
If this plugin was onluarocksthis would be managed seamlessly byrocks.nvimbut since the dependency is a git repository we need to build it ourselves.I spent some time wondering how I should solve this but turns out it’s as simple as adding abuildoption to the plugin:"telescope-fzf-native.nvim"={git="nvim-telescope/telescope-fzf-native.nvim",build="make"}Before I discovered thebuildoption I calledmakethe hard way:require("nio").run(function()localpackage_path=vim.fs.joinpath(vim.fn.stdpath("data"),"site/pack/rocks/start","telescope-fzf-native.nvim/")--Before loading the extension we need to build it with `make`.require("nio").process.run({cmd="make",args={},cwd=package_path,})--Now we can load the extension.require("telescope").load_extension("fzf")end)That’s what you get if you skip the manual.Lazy loadingOne big feature thatlazy.nvimpromotes is lazy loading—it’s even in the name!
Unfortunatelyrocks.nvimdoesn’t provide first-class support for lazy loading so we have to manage it ourselves.The problem with lazy loadingBefore looking at how to implement lazy loading, I’d like to bring up a few problems with lazy loading plugins.It’s easy to half-ass it.For example, withlazy.nvimyou can add commands and events that you want to lazy load on:{"nvim-treesitter/nvim-treesitter",cmd={"TSInstall","TSUpdate"},event={"BufReadPre","BufNewFile"},config=config,build=":TSUpdate",}But how do you know that you used the correct events and listed the right commands?
And how do you keep up to date when a plugin adds or removes commands?I managed to getreallyagitated when I thought I’d messed up the treesitter installation when I couldn’t call:TSInstallInfo, until I remembered that I hadn’t registered that command to loadnvim-treesitter…nvim-treesitterdefines a lot of commands that we ideally should list when we setup lazy loading.Extra complexity.Earlier in this post I complained about having tomanage the dependencies for the pluginsyou install.
When you lazy load a plugin you also need to specify commands and events you want to use for lazy load.And if youreallywant to commit to lazy loading as many plugins as possible (I did!) you might end up with some pretty horrendous code, like how you’d lazy loadoil.nvim:{"stevearc/oil.nvim",dependencies={"nvim-tree/nvim-web-devicons"},opts=opts,command="Oil",--This is how to lazy load oil according to:--https://github.com/folke/lazy.nvim/issues/533init=function()ifvim.fn.argc()==1thenlocalstat=vim.loop.fs_stat(vim.fn.argv(0))ifstatandstat.type=="directory"thenrequire("lazy").load({ plugins={"oil.nvim"} })endendifnotrequire("lazy.core.config").plugins["oil.nvim"]._.loadedthenvim.api.nvim_create_autocmd("BufNew", {callback=function()ifvim.fn.isdirectory(vim.fn.expand(""))==1thenrequire("lazy").load({ plugins={"oil.nvim"} })--Once oil is loaded, we can delete this autocmdreturntrueendend,})endend,}In general I think properly lazy loading should be the responsibility of the plugin, not us as users.With that said, being able to lazy load plugins is a great feature when you need it.Lazy setup with packadd and setupOn a basic level you can accomplish lazy loading by following these three steps:Mark the plugin withopt=true.[plugins]neorg={version="1.0.0",opt=true}This will preventrocks.nvimfrom sourcing the plugin at startup.Add the plugin withpackadd.vim.cmd("packadd neorg")Setup and configure the plugin as needed.Steps 2 and 3 should be done on-demand, for example via an autocommand:vim.api.nvim_create_autocmd({"BufReadPre","BufNewFile"}, {pattern="*.norg",callback=function()vim.cmd("packadd neorg")require("neorg").setup()returntrueend,})Althoughpackaddis neat, according torocks.nvimit’s only relevant for the plugin’sftdetectandpluginscripts.
I haven’t seen the need to go quite this far to get a snappy experience and right now I don’t usepackaddat all.
I don’t even have 100 plugins yet, I’m practically running stock Neovim!Lazy LSP setupThere’s one instance where I’ve made the plugin setup lazy: the LSP config.It’s important to me that Neovim starts quickly as I have a weird workflow where I start Neovim dozens of times a day.
But after migrating my config I noticed that Neovim was feeling slow.
I tracked it down to the LSP setup (and in particular setting upelixir-tools.nvim).My solution was to create an autocommand that sources the LSP config when reading a file:vim.api.nvim_create_autocmd({"BufReadPre","BufNewFile"}, {pattern="*",callback=function()require("lazy_plugins.lspconfig")returntrueend,})localmason_lspconfig=require("mason-lspconfig")mason_lspconfig.setup({--...})require("elixir").setup({--...})mason_lspconfig.setup_handlers({--...})--And a bunch of other LSP related setup.I could of course make it more granular and make more plugins lazy but I haven’t bothered since Neovim now starts under 150 ms, which my brain interprets as instant.You can get info about Neovim’s startup time by passing the--startuptimeargument:nvim--startuptime log.txtHere’s a shortened output oflog.txtwhere you can see the overall startup time but also how long loading packages take:000.000  000.000: --- NVIM STARTING ---...028.386  000.119  000.119: require('fzy_native')028.388  000.201  000.082: require('fzy')...130.398  000.255: before starting main loop131.047  000.649: first screen update131.049  000.001: --- NVIM STARTED ---TreesitterAnother featurerocks.nvimpromotes is a “just works”tree-sitter setup.
Unfortunately, I couldn’t get it to work and I instead rely on thenvim-treesittergit repository.It’s likely I made some configuration error somewhere but after spending many hours reworking the entire configuration from scratch (on multiple machines) I gave up when I had a working setup.At first I triedrocks-treesitter.nvimwithoutnvim-treesitter.Installing grammars usingrocks-treesitter.nvimwas straightforward and worked well.
However, I use a bunch of extra features found innvim-treesitterand related packages that I need.
Thisnvim-treesitterconfig activates the features:require("nvim-treesitter.configs").setup({highlight={enable=true,},matchup={enable=true,},autotag={enable=true,},endwise={enable=true,},indent={enable=true,},textobjects={move={enable=true,},swap={enable=true,},select={enable=true,},},})But I couldn’t figure out how to make these feature work usingrocks-treesitter.nvim.I tried to have bothrocks-treesitter.nvimandnvim-treesitterinstalled.That only lead to the dreadedinvalid node typeerror (meaning there’s a mismatch between the grammar and the query files).
Which kind-of makes sense asnvim-treesitterprovides query files for all grammars but there’s no guarantee thatrocks-treesitter.nviminstalls the correct grammar for those query files.I tried to use thenvim-treesitter from luarockswithoutrocks-treesitter.nvim.Yet once again the Rust tree-sitter grammar hit theinvalid node typeerror.
I also couldn’t install all the grammars as a lot of them failed during installation:nvim-treesitter[bass]: Failed to execute the following command:{cmd = "mv",opts = {args = { "-f", "tree-sitter-bass-tmp/tree-sitter-bass-master", "tree-sitter-bass" },cwd = "/home/tree/.local/share/nvim",stdio = {[2] =,[3] =}}}mv: cannot stat 'tree-sitter-bass-tmp/tree-sitter-bass-master': No such file or directoryWeird.Fallback to the git repository fornvim-treesitterand friends.It’s surprising, because I’d assume the luarocks dev version would be the same as the GitHub source, yet this worked for me:nvim-treesitter={git="nvim-treesitter/nvim-treesitter",rev="1eabe69"}nvim-treesitter-endwise={git="RRethy/nvim-treesitter-endwise",rev="8b34305"}nvim-ts-context-commentstring={git="JoosepAlviste/nvim-ts-context-commentstring",rev="0bdccb9"}nvim-treesitter-context={git="nvim-treesitter/nvim-treesitter-context",rev="55e2908"}nvim-ts-autotag={git="windwp/nvim-ts-autotag",rev="aeb7090"}nvim-treesitter-textobjects={git="nvim-treesitter/nvim-treesitter-textobjects",rev="5f9bf4b"}I pin them to a revision because I got tired of things breaking.While I can now install all grammars thatnvim-treesitterprovides and use all treesitter features I used before, I’m annoyed that I couldn’t make it work usingrocks-treesitter.nvim.
I’m sure there’s something obvious I’m missing but I don’t have the energy to retrace the steps again right now.
I’ll instead document my failings publicly on the blog and move on with my life.Other resolved issuesWhile migrating I ran into some other minor issues that I managed to resolve:Some plugins inluarocksare outdated.For example, the last update to theluarocks gitsigns.nvimwas made 2 years ago, while thegitsigns.nvim on GitHubwas updated this week.Got some weird errors I couldn’t debug.For example, help forrocks.nvimwasn’t available.
A clean reinstall by removing the folders~/.local/share/nvim/and~/.cache/nvim/seems to have resolved the help installation and some other weird errors.:Rocks syncdidn’t respect the provided git branch.There was a PRthat resolved this issuewhile I was migrating.
It does sound suspiciously similar to the issue with the tree-sitter grammars failing to install but I haven’t explored that further.Should you userocks.nvim?I had issues while migrating my config over torocks.nvim, with rough edges and missing features.
For instance, I miss the install speed oflazy.nvimandlazy.nvim’s excellent dashboard.Yet I’ll stay withrocks.nvimas it deserves props for tackling the huge task of cleaning up dependency management in Neovim and for giving us access to the broader Lua landscape withluarocks.It may be too bleeding edge for some people; but I think more Neovim users and plugin authors should take note ofrocks.nvimand give it a try.
I’d like it if a more sane approach to package management become more popular in the Neovim community.Published:June  2,2024Revised:November 26,  2024in4f1cba5Tagged:Lua,NeovimPreviousNext</description>
      <pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Autocomplete with nvim-cmp</title>
      <link>https://www.jonashietala.se/blog/2024/05/26/autocomplete_with_nvim-cmp</link>
      <description>Extending Neovim for bloggingAutocomplete with nvim-cmpâ˜Published:May 26,2024Revised:July  1,  2024inac95a3bTagged:Lua,NeovimThis is part 3 of theExtending Neovim for bloggingseries.Autocomplete tags in the frontmatter.ContentsA basic completion sourceAvailabilityFormatting entriesCompletion item kindsCustom formatComplete hidden textWhat to complete where?Completion logicAnatomy of a regexItem documentationSortingWrap-upAutocompletion is an absurdly powerful feature that Iâ€”and I must assume most programmersâ€”use all the time.
Itâ€™s not as crucial for writing blog posts as when youâ€™re coding but itâ€™s still easy to come up with examples of how autocomplete would help.
For example:Complete frontmatter metadatatags=["Lua","Neovim"]series="extending_neovim_for_my_blog"Itâ€™s pretty hard to rememberall the tagsI have on the blog.Links to postsYou know, typing out/blog/2024/02/17/how_i_did_the_layout_for_my_self-published_bookcorrectly from memory is pretty much impossible.
Instead I opened the post in the browser, copied the url, removed the host prefix, and then pasted itâ€¦
Which is incrediblyslow and annoying.Image linksI often copy an image to the siteâ€™s image folder and when I want to insert a link to the image Iâ€™ve forgotten the file name.Reference link definitionsInDjot(and Markdown) I prefer reference link definitions for my links:Here's[a link][uses][uses]:/usesIt would be pretty nice to autocomplete the[uses]reference, like some Markdown LSP servers do.
Or maybe the reverse; if Iâ€™ve written[a link][uses]already but havenâ€™t created the reference link definition for it, we could autocomplete that.nvim-cmpis my plugin of choice for autocompletion that supports different sources such as LSP, snippets, spell corrections, math calculations, and more.
Letâ€™s see how to make our own source fornvim-cmp.Iâ€™ve probably made some mistakes in this post or forgotten something.
Checkmy Neovim configif you see something fishy.A basic completion sourceCreating a custom source fornvim-cmpwas described well in:help cmp-develop.
This is a minimal source that allows you to complete path-like items:localsource={}functionsource:complete(params, callback)localitems={}--There's also the `cursor_after_line`, `cursor_line`, and a `cursor` fields on `context`.localcursor_before_line=params.context.cursor_before_line--Only complete if there's a `/` anywhere before the cursor.ifcursor_before_line:sub(1,1)=="/"thenitems={{ label="/one"},{ label="/two"},}end--`callback` should always be called.callback(items)end--Trigger completion (i.e. open up cmp) on these characters.--We can also trigger it manually, see `:help cmp.mapping.complete`.functionsource:get_trigger_characters()return{"/"}end--Don't forget to register your new source to cmp.require("cmp").register_source("blog", source)You also need to register the source when you setup cmp:require("cmp").setup({sources={{name="blog",--`group_index` groups several sources,--and if any completion item for that index is found--all sources with a lower index will be ignored.group_index=1,},}}Assuming youâ€™ve gotnvim-cmpsetup correctly, our completion should show up:I usedlspkind.nvimto display the[BLOG]label and type information.You configure it like so:require("cmp").setup({formatting={format=require("lspkind").cmp_format({mode="symbol_text",menu={blog="[BLOG]",},}),},})AvailabilityIt might be a good idea to implement theis_availablefunction that only activates autocompletion in certain context:functionsource:is_available()--Only returns `true` if the buffer is a markup file inside my blog directory.returnvim.b[0].blog_fileendvim.b[0].blog_fileis set by Buf autocommandfrom the initial setup:autocmd({"BufRead","BufNewFile"}, {pattern=autocmd_pattern,group=blog_group,callback=function(opts)--Mark the buffer as a "blog file" buffervim.b[0].blog_file=true--...end,})Formatting entriesWhilenvim-cmpdoesnâ€™t seem to give as much control over how to display entries astelescope doesitâ€™s possible to customize it a little.
In particular Iâ€™d like to display the entryâ€™s type and mark that it comes from my blog integration (see the image above).Completion item kindsSomething that pops up innvim-cmpâ€™s source code and help is an â€œitem kindâ€.A â€œkindâ€ simply describes what type a completion item is.nvim-cmpfollows theLSP specificationthat includes kinds such asClass,Constant, and the defaultText.Hereâ€™s how to specify a kind other thanTextfor an item:items={{label="/one",kind=require("cmp.types.lsp").CompletionItemKind.File,},}Kinds arenâ€™t anything revolutionary but I think it helps separate different completion types from each other in certain circumstances.Displaying different kinds withlspkind.nvim.The problem is that LSP kinds are focused on code and doesnâ€™t support the kinds Iâ€™d likeâ€”such asPost,Draft, andStandalone.
To display our own custom types we need to do a little more work.Custom formatInstead of relying onlspkind.nvimletâ€™s use our own format function:cmp.setup({formatting={format=function(entry, vim_item)--TODO customize `vim_item` before returning itreturnvim_itemend},I likelspkind.nvimand I want to use it for everything other than the blog, letâ€™s make it the default:localfunctionmake_format()locallspkind_format=require("lspkind").cmp_format({mode="symbol_text",ellipsis_char="â€¦",menu={spell="[SPELL]",async_path="[PATH]",--Other sources here...},})returnfunction(entry, vim_item)ifentry.source.name=="blog"thenreturnblog_format(entry, vim_item)else--Use `lspkind` formatting as a fallback.returnlspkind_format(entry, vim_item)endendend--Remember to update `cmp.setup`:format=make_format()For the actual formattingvim_itemsupports two extra fields that we can customize:kindholds the type information (the 2nd column).menuholds the source information (the 3rd column).blog_formatmight look like this to add type and source information:--The symols are from Nerd Fonts but won't show up--in the blog properly.localblog_types={Post={ symbol="ó±šŒ"},Tag={ symbol="ó°“¹"},Series={ symbol="ï“Ÿ"},--etc}localblog_format=function(entry, vim_item)localtype=entry.completion_item.typevim_item.kind=blog_types[type].symbol..""..typevim_item.menu="[BLOG]"returnvim_itemendWe also need to add thetypefield to our completion items:items={{ label="/one",type="Post"},}With this we can display our custom types in the same way aslspkind.nvimdoes it:Displaying our own custom types.I arrived here by examining the source code oflspkind.nvim.
With a Lua LSP server thatâ€™s only a quickgoto definitionaway.Complete hidden textOne cool thing withtelescope.nvimwas the ability to filter on hidden text.
In thepost finderwe developed we could search for post tags, but only display the post title.
We can do the same withnvim-cmp, where weâ€™ll display one thing, filter against something else, and insert a third piece of text.All we need to do is add some extra fields to the completion items:items={{--Text to be displayed in the completion menu.label="Rewriting my Neovim config in Lua",--Text to insert.insertText="/blog/2023/10/01/rewriting_my_neovim_config_in_lua/",--Text to filter against, works like `ordinal` for telescope.filterText="/blog/2023/10/01/rewriting_my_neovim_config_in_lua/".."|".."Rewriting my Neovim config in Lua",},}In this example we display the post title, insert the url to the post, and filters against both the title and the path.Itâ€™s not as powerful astelescope.nvimwhere we could treat its equivalence tofilterTextasstructured data.
I donâ€™t think itâ€™s a big deal because with autocomplete youâ€™re more likely to wantinsertTextto match what youâ€™re typing, so a mini-languagelike we created for telescopeisnâ€™t as practical.The most advancedfilterTextI use is exactly this example: a combination of the url and the title.
Otherwise I donâ€™t useinsertTextorfilterText.What to complete where?Withsource:completewe already have the toolswe need to autocomplete whatever we want.The completion part of the integration is the section Iâ€™ve had to tweak the most and it has slowly grown more complex.Itâ€™s actually pretty hard to make an exhaustive autocomplete system.
Youâ€™d have to have a parser thatâ€™s capable of parsing incomplete statements.
Maybe something likea Tree-sitter grammar, although theone I created for Djotdoesnâ€™t mark broken things so itâ€™s useless for this purpose (it marks a paragraph with a single_as text instead of broken emphasis for example).Iâ€™ve therefore been relying on regexes oncursor_before_lineto select what to complete.
You could probably design a more powerful solution but this simple approach has served me well so far.Completion logicHereâ€™s one of first versions ofsource:completeto give you an idea on how you might choose what to complete:localitems={}--Expand images separately because I only ever use it in a -- `![](/url)`--context and not mixing with other urls gives a more pleasant experience.ifstring.match(cursor_before_line,"!%[%]%([^%)]*$")then--items = ...end--Expand inline links, e.g. `[txt](/`ifstring.match(cursor_before_line,"%]%(/[^%)]*$")then--items = ...end--Expanding headings in inline links, e.g. `[txt](#`ifstring.match(cursor_before_line,"%]%(#[^%)]*$")then--items = ...end--Expand links in link ref definitions, e.g. `[label]: `ifstring.match(cursor_before_line,"^%[.+%]:%s+")then--items = ...end--Expanding links in ref defs, e.g. `[label]: #`ifstring.match(cursor_before_line,"^%[.+%]:%s+#")then--items = ...end--Expand url definition tags in `[text][tag]`ifstring.match(cursor_before_line,"%[[^%]]+%]%[[^%]]*$")then--items = ...end--Expand url definition tags in `[tag][]`, simplified to after a `[`--If at the beginning of the line, we should complete broken link tags to..ifstring.match(cursor_before_line,"%[[^%]]*$")then--items = ...end--More cases here...callback(items)As the completion logic grew more complex, I moved it out from Neovim to the backend.
It was easier to setup completion details for individual items that way, and now I only rely on a single"Complete"message that I pipe directly back tocmp:functionsource:complete(params, callback)server.call({id="Complete",path=vim.fn.expand("%:p"),},function(reply)--Items is a list where items have `label`,--`insertText`, and `filterText`--like we manually coded before.callback(reply.completion_items)end)I still relyon the regex based approach though.Iâ€™ll revisit how the backend communication works in a future post.Anatomy of a regexDonâ€™t be too scared of the regexes.
Theyâ€™re hard to read if youâ€™re unfamiliar, but nottoobad once you use them a bit.For example, hereâ€™s how the regex matches an image url with the text![](/path:!           !%[          [   `%` escapes special characters%]          ]%(          ([           all characters^           not equal to%)          )]*            0 or more times$           end of stringItâ€™s important to include the end of string, so that we donâ€™t autocomplete images after the image has ended:![](/img) Trailing path /^Don't autocomplete image hereThe[^%)]*part allows the completion to match further into the path:![](/im^We're not done yetAstute regex practitioners might notice that the image regex only matches![](/path), and not![img text](/path).
To fix it maybe we could use a regex like!%[[^%]]*%]%([^%)]*$.But weâ€™re still not handling newlines in the image text!Yes, the correct solution is more complex than regex matching againstcursor_before_line.
Thatâ€™s an exercise for the concerned reader to implement.Item documentationCompletion of a heading references for a url, showing the heading context.Another feature is the â€œdocumentation windowâ€ which is an extra window with information about the entry youâ€™re currently selecting.
To set it up all we need to do is implementsource:resolveand setitem.documentation, for example like this:functionsource:resolve(item, callback)--We should generate `lines` depending on the item.locallines={"`Rewriting my Neovim config in Lua`","2023-10-01","*Neovim*, *Lua*","---",--Post content here}iflinesand#lines&gt;0thenitem.documentation={kind="markdown",value=vim.fn.join(lines,"\n").."\n",}endcallback(item)endWe couldâ€™ve setitem.descriptionimmediately butsource:resolveis preferable as itâ€™s only called when we select the item, making it the better choice if we want to do some heavier operations (such as reading from a file).Speaking of reading from a file, hereâ€™s a function that lets you read a range of lines from a file:--Collect the lines into `res` instead of returning it,--to make it easier to insert lines before the file content.localfunctionread_lines(file, start_row, end_row, res)locallinenum=1forlineinio.lines(file)doiflinenum&gt;=start_rowandlinenum&lt;=end_rowthentable.insert(res, line)endlinenum=linenum+1iflinenum&gt;end_rowthenbreakendendendItâ€™s used like this to produce a documentation for a heading item from another file (preferringnvim_buf_get_linesfor headings in the current buffer):localfunction_heading_docs(heading)--If there's a heading path, then the item is pointing to a heading in another file.ifheading.context.paththen--Uses markdown to make the url bold and adds a separator before the heading context.localres={"*"..heading.context.url.."*","---",}--Read the heading and the 10 following lines.read_lines(heading.context.path, heading.context.start_row, heading.context.end_row+10, res)returnreselse--If we don't have a heading then heading points to the same file.--We can use the buffer `0` to read lines from the current buffer.returnvim.api.nvim_buf_get_lines(0,heading.context.start_row,heading.context.end_row+10,false)endendTo display post bodies we also need to skip the frontmatter.
The frontmatter for my posts are delimited by---like so:---tomltitle = "My post title"tags = ["Lua", "Neovim"]---Post body here...We can do this by counting how many---we see, and only collecting lines after weâ€™ve seen two of them:--Collect `limit` lines from `file` into `res`, skipping the post frontmatter.localfunctionread_post_body(file, limit, res)localcount=1localfrontmatter_delimiters=0forlineinio.lines(file)doiffrontmatter_delimiters==2thentable.insert(res, line)count=count+1ifcount&gt;limitthenbreakendelseifstring.match(line,"^%-%-%-")thenfrontmatter_delimiters=frontmatter_delimiters+1endendendlocalfunction_post_docs(post)--I add more things such as tags and series--but I shortened the code for this example.localres={"`"..post.title.."`","---"}read_post_body(post.path,20, res)returnresendThe documentation window only supportsmarkdownandtexttypes.
Itâ€™s unfortunate butDjotis similar enough to Markdown that I can live with treating it as Markdown.
I tried to wrap the markup in code blocks, but for some reason that removed the syntax highlight.SortingWithnvim-cmpyou get full control over the sorting of items.
Sorting is done with standard comparison functions (e.g.entry1.modified &gt; entry2.modified) that you can chain.
We can add our own comparator tocmp.setuplike so:cmp.setup({sorting={comparators={--With cmp you chain comparators.cmp.config.compare.offset,cmp.config.compare.exact,cmp.config.compare.score,cmp.config.compare.recently_used,cmp.config.compare.locality,--I added my comparator here.blog_compare,cmp.config.compare.kind,cmp.config.compare.sort_text,cmp.config.compare.length,cmp.config.compare.order,},},})localfunctionblog_compare(entry1, entry2)--TODOreturnnilendThe first thing Iâ€™d like to do is sort different completion types, similar tocmp.config.compare.kindbut for the custom blog types:localblog_types={BrokenLink={ rank=0, symbol="ó°Œº"},LinkDef={ rank=1, symbol="ó°Œ¹"},--etc}localfunctionblog_compare(entry1, entry2)--Only sort blog entries.ifentry1.source.name~="blog"orentry2.source.name~="blog"thenreturnnilendlocalitem1=entry1.completion_itemlocalitem2=entry2.completion_itemlocalrank1=blog_types[item1.type].ranklocalrank2=blog_types[item2.type].rankifrank1rank2thenreturnfalseend--The types are the same, `nil` doesn't imply a sort order between them.returnnilendAt the end ofblog_comparewe can add our type specific comparisons.
For example, we can sort images by the modified timestamp so that the newest image comes first, making it easy to insert new images:ifitem1.type=="Img"then--Sort images by modification time.returnitem1.modified&gt;item2.modifiedelseif...then--More type specific sorting cases hereelsereturnnilendWrap-upWith this weâ€™ve created our own completion source fornvim-cmp.
Weâ€™vetweaked the display, separated theinsert and filter text, addeditem documentation, andcustomized the sorting.
The completion has been extremely helpful for me and Iâ€™ll end this post with a gallery of the completion in action:Check outmy Neovim configandthe site sourcefor more details.This is
      part 3 of theExtending Neovim for bloggingseries.Customizing NeovimBrowse posts with telescope.nvimAutocomplete with nvim-cmpâ†This series
      is ongoing.View all seriesPublished:May 26,2024Revised:July  1,  2024inac95a3bTagged:Lua,NeovimPreviousNext</description>
      <pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Browse posts with telescope.nvim</title>
      <link>https://www.jonashietala.se/blog/2024/05/08/browse_posts_with_telescopenvim</link>
      <description>Extending Neovim for bloggingBrowse posts with telescope.nvimâ˜Published:May  8,2024Revised:June 26,  2024ina308224Tagged:Lua,NeovimThis is part 2 of theExtending Neovim for bloggingseries.Iâ€™ve usedtelescope.nvim's find files withrequire("telescope.builtin").find_filesfor quite some time.
I use find files together with itâ€™s cousin.oldfiles(find recently opened files) all the time for finding source code files, blog posts, and more.But itâ€™s naturally restricted to operate on only filenames and you can make telescope richer by operating on structured data.So letâ€™s move away from using the files finder to find posts:To a custom posts picker that display posts in a neater way and allows us to filter using tags or other metadata:I use thefilename_firstoption to display filenames before the directory intelescope.nvimfiles finders:require("telescope").setup({defaults={path_display={"filename_first",},}}The simplest pickerItâ€™s fairly easy to create a new picker fortelescope.nvim.
In itâ€™s simplest form, all you need to do is provide a list of items:localpickers=require("telescope.pickers")localfinders=require("telescope.finders")pickers.new(opts, {finder=finders.new_table({results={"One","Two","Three"},}),}):find()How do I know this?
Because I watchedDeveloping a Neovim Docker Plugin from Scratch.
It does a way better job walking you through a telescope plugin than I could ever do.Then we need to call the above code somehow, for example by wrapping it in a function and add a keymap to it:localmap=vim.keymap.setmap("n","gd",require("blog.telescope").find_draft, { desc="Find blog draft"})map("n","gp",require("blog.telescope").find_post, { desc="Find blog post"})Structured contentTo make our simple picker handle structured content we need to:Convertresultsto a list of tables with the info we have.Specify anentry_markerfunction.A rewrite offinderin our simple picker might look like this:finder=finders.new_table({--1. Structured data inside `results`.results={{ title="One", tags="Tag1, Tag2", path="posts/2024-01-01-one.dj"},{ title="Two", tags="Tag2", path="posts/2024-02-02-two.dj"},},--2. A function that converts a result entry to an entry telescope understands.entry_maker=function(entry)return{--Display the post title instead of the path in the list.display=entry.title,--Allow us to filter against the title and tags (typing `Tag1` finds the "One" post).ordinal=entry.title..entry.tags,--We could also save the whole entry for future usage, if we need it.value=entry,}end,}),With this the finder displays the title of the post rather than the file path, and we can search for a post using the title and its tags.Itâ€™s easy to add more metadata toordinaland itâ€™ll mostly work, but the matching is crude and it can easily misfire depending on your use-case.Because the way fuzzy matching works, if I typeluawith the hope of listing all posts tagged lua, it will also match any post that has the lettersluain that order, which is currently almost 40 of them:Prompting forluamatches too many posts.Here Iâ€™ve also added the post date todisplay.Clearly, thereâ€™s room for improvement.Structured filtering and sortingTurns out thatordinalcan also be a table, and you can provide your ownsorterthat operates on the ordinal to sort and filter.This is the basic setup:pickers.new(opts, {finder=finders.new_table({results={--`tags` is now a list.{ title="One", tags={"Tag1","Tag2"}, path="posts/2024-01-01-one.dj"},{ title="Two", tags={"Tag2"}, path="posts/2024-02-02-two.dj"},},entry_maker=function(entry)return{display=entry.title,--`ordinal` is now a table containing all the entry info specified in `results`.ordinal=entry,}end,}),--This is the important `sorter` function.sorter=post_sorter(opts),}):find()post_sortershould return a newSorterthat describes the sorting behavior:localfunctionpost_sorter(opts)opts=optsor{}--We can use `fzy_sorter` for the actual fuzzy matching.localfzy_sorter=sorters.get_fzy_sorter(opts)returnsorters.Sorter:new({--Allow us to filter entries as well as sorting them.discard=true,scoring_function=function(_, prompt, entry)--This mimics a standard fuzzy sorting on the entry title.returnfzy_sorter:scoring_function(prompt, entry.title)end,--We could also specify a highlighter. The highlighter works fine in this case,--but if we modify `scoring_function` we have to modify this too.--I admit, I currently don't use a highlighter for my posts finder.highlighter=fzy_sorter.highlighter,})endThereâ€™s some ceremony here that I hope is clear enough.
The important thing here is thescoring_functionthat weâ€™ll need to adjust.First, the input arguments toscoring_function:The first argument seems to be ignored even in Telescopeâ€™s own standard sorters, so I ignore it as well.promptis the user input to the Telescope prompt as a string.entryis the ordinal entry thatentry_makerreturns.For instance, in our exampleentrycould be this:{ title="Two", tags={"Tag2"}, path="posts/2024-02-02-two.dj"}Whatscoring_functionshould do is return a single numeric value signifying how closeordinalis toprompt, where higher means a better match.
Because we defineddiscard=trueif we return a value less than0, the entry will get removed (filtered).At first I thought this was a weird way of creating a sorting function.
I had expected a comparison function likecmp(left, right)but after having played with it a little it seems pretty clever.Sorter requirementsBefore implementingscoring_function, letâ€™s take a step back and figure out what behavior we want.
You could go nuts with advanced features such as boolean operators, set comparisons, and similar.
While cool, I donâ€™t think itâ€™s worth implementing as my requirements are fairly simple:Fuzzy find on title, tags, and series.I donâ€™t want to require a perfect match on tags, requiring me to fully type out for exampleExperimental Gameplay Projectwould bequiteannoying.Explicitly filter posts by series and tags.Itâ€™s neat if you can type some text and it filters for seriesorpost title, but in practice I never really want that.
If I want to filter against the post series, I want to be explicit about it and the same holds for tags.Filter posts containingtag1andtag2.I contemplated searching fortag1ortag2, but what I want is to reduce the number of matches as I add more information, not increase them.Include published date in ordering.At a base level I want to see newer posts before older ones.
This is especially true when I first open telescope without prompting anything, then I want to see an ordered lists of all posts.Prompt syntaxBecause I want to be explicit we need some syntax to separate text we want to match against post tags, series, and title.
Simplicity is nice, and a simple solution is to prefix tags with@and prefix series with#, separated by spaces.
I usually find that an example is worth a 1000 words, so here are some examples to shave down the precious words count:@rust gleamRequire a post tag matchingrustand post title matchinggleam.@3d @hexRequire a post tag matching3dand one matchinghex.#34Require a post series matching34.build # startRequire a post with a series and post title matchingbuild start.The code that converts a prompt into parts is conceptually simple: split the prompt into words and categorize them depending starting character.
This is what I use:localfunctionsplit_prompt(prompt)localtags={}localseries={}localtitle={}--Iterates over all non-space substrings.--`prompt:gmatch` is syntax sugar for `string.gmatch(prompt, ..)`forwordinprompt:gmatch("([^%s]+)")do--Use `sub(1, 1)` to get the first character.--It works with empty strings too!localfst=word:sub(1,1)iffst=="@"then--Use `sub(2)` to skip the `@`.table.insert(tags, word:sub(2))elseiffst=="#"thentable.insert(series, word:sub(2))elsetable.insert(title, word)endendreturn{tags=tags,series=series,--Combine non-tagged elements into a string.--Could've be done outside this function but it'll always be done--so I thought it would be easier to join here.title=vim.fn.join(title,""),}endIâ€™m a bit of a Lua noob, so there may be better solutions.Implementingscoring_functionWith a plan in place, letâ€™s go back to try to realize it.
The basic idea is to match against series, tags, and title separately and add their scores at the end:scoring_function=function(_, prompt, entry)prompt=split_prompt(prompt)localseries_score=score_element(prompt.series, entry.series, fzy_sorter)ifseries_score&lt;0thenreturn-1endlocaltags_score=score_element(prompt.tags, entry.tags, fzy_sorter)iftags_score&lt;0thenreturn-1endlocaltitle_score=fzy_sorter:scoring_function(prompt.title, entry.title)iftitle_score&lt;0thenreturn-1endreturnseries_score+tags_score+title_scoreend,Remember that a return value of&lt;0filters the entry, so we make sure to check that for each part.
This is already howfzy_sorter:scoring_functionworks and it will either return&lt;0for entries we should remove and a value in0..1otherwise.
Because the matching of tags and series is so similar, I introduced thescore_elementhelper function:--Match the list `prompt_elements` against `entry_element`, either a list or a string.localfunctionscore_element(prompt_elements, entry_element, sorter)--We didn't prompt for this type, ignore it.--This is a "is list empty?" check in Lua.ifnext(prompt_elements)==nilthenreturn0end--We prompted for this type, but entry didn't have it, so remove the entry.--For example if we prompt for a series, this removes all posts--without a series.ifnotentry_elementthenreturn-1end--Convert multiple entry values to a string like `tag1:tag2`.localentry--We can use `type()` to dynamically check the type of a variable--and act occordingly.iftype(entry_element)=="string"thenentry=entry_elementelseiftype(entry_element)=="table"thenentry=vim.fn.join(entry_element,":")endlocaltotal=0--For each prompt element (`tag1`, `tag2`, ...), match against the entry string (`tag1:tag2`).for_, prompt_elementinipairs(prompt_elements)dolocalscore=sorter:scoring_function(prompt_element, entry)--Require a match for every element.ifscore&lt;0thenreturn-1endtotal=total+scoreend--Clamp score to 0..1.--Not strictly needed but it feels neater.returntotal/#prompt_elementsendWith this in place we have a working sorter.If we type regular text, thenseries_scoreandtags_scorewill be0, practically ignoring them.A#series_filterwill setseries_score==-1unless the post has a matching series, removing the entry.And typing@tag1 @tag2will require a match for every tag, otherwisetags_score==-1that again removes the entry.Adding the fuzzy scores together gives us a pretty good fuzzy matching behavior I feel.The only requirement left is to order posts by date.
It must be done carefully not to override the sort order we get from the fuzzy matching.One way to do this is to sort all posts and add a post counter to each entity (so the first post would get1and the last272) and then add it to the final score somehow.
This felt a little cumbersome and I wanted to see if I could implement the scoring function without having to sort the entries first.
After all, we already have the date of each postâ€¦This is possible by placing the post on a timeline between the date of the very first post and today, and then clamping the range to0..1.
Something like this:--Date of my first blog post as a number.localbeginning_of_time=20090621--Today's date as a number.localtoday=os.date("%Y%m%d")--The entry date looks like `2023-01-31`, if we remove `-` it's formatted like the above.localentry_date=string.gsub(entry.date,"-","")--Place the entry date on a 0..1 scale, where 1 is today.--(`1 -` reverses, otherwise 1 would be the beginning of time).localdate_score=1-(entry_date-beginning_of_time)/(today-beginning_of_time)--Date sorting is only worth 1/10 of the fuzzy scores.--Why? I dunno, 1 was too much and 1/10 felt good.returnseries_score+tags_score+title_score+date_score/10Okay, I admit itâ€™s a little hacky;
but itâ€™s a fun one that fulfills my needs.Formatting entriesItâ€™s possible to customize howtelescope.nvimdisplays an entry in the results list,
see:help telescope.pickers.entry_display.Youâ€™ll useentry_display.create()to create a formatting function that divides the display into columns, then you pass in the columns to produce the line to be displayed.This is a basic example that divides the line into two parts; an icon and a title, together with a highlight group to colorize the parts:localentry_display=require("telescope.pickers.entry_display")entry_maker=function(entry)return{display=function(entry)localdisplayer=entry_display.create({separator="",items={{ width=1},{ remaining=true},},})returndisplayer({{"ó°‡·","TelescopeResultsComment"},{ entry.value.title,"TelescopeResultsNumber"},})end--..}endI took the icon fromNerd Fonts, selected usingnerdy.nvim.The display I use to display filetype icon, title, date, tags, and series is a little more complex but the display logic is similar:localdevicons=require("nvim-web-devicons")localtelescope_utils=require("telescope.utils")localmake_display=function(entry)--Djot doesn't have an icon, I just picked something that looked neat.localext=telescope_utils.file_extension(entry.value.path)ifext=="dj"thenext="tcl"endlocalicon, _=devicons.get_icon_by_filetype(ext)--Tags may be a string or a table, convert it for display purposes.localtagsiftype(entry.value.tags)=="string"thentags=entry.value.tagselseiftype(entry.value.tags)=="table"thentags=vim.fn.join(entry.value.tags,",")endlocalseries=entry.value.seriesor""localdisplayer=entry_display.create({separator="",items={{ width=1},{ width=string.len(entry.value.title) },{ width=string.len(entry.value.date) },{ width=string.len(tags) },{ remaining=true},},})returndisplayer({{ icon,"TelescopeResultsComment"},--We can skip highlight groups if we want.entry.value.title,{ entry.value.date,"TelescopeResultsComment"},{ tags,"TelescopeResultsConstant"},{ series,"TelescopeResultsOperator"},})endSince I grouped the display in a function, we need to set that todisplayinentry_maker:entry_maker=function(entry)return{display=make_display,--...}endI usenvim-web-deviconsto map aNerd Nerd Font iconto a filetype (also used bytelescope.nvimfor the standard file pickers if available).File previewOne of the great features oftelescope.nvimis the very fast preview with syntax highlighting, which we naturally must configure.I searched through the telescope help, and found the functionsnew_buffer_previewerandbuffer_previewer_makerthat allows us to define a previewer for a file:localpreviewers=require("telescope.previewers")finder=finders.new_table({--...previewer=previewers.new_buffer_previewer({--Title isn't needed.title="Post Preview",define_preview=function(self, entry)--Notice `entry.value.path` that uses our catch-all entry value.conf.buffer_previewer_maker(entry.value.path,self.state.bufnr, {bufname=self.state.bufname,winid=self.state.winid,preview=opts.preview,--The file encoding is needed for proper syntax highlighting.file_encoding=opts.file_encoding,})end,}),})Iâ€™m not sure if thereâ€™s a less verbose way to define a file previewer, as the only things I configured here are the title and theentry.value.pathargument tobuffer_preview_maker.Open the selected fileWe have the display of ourtelescope.nvimpicker configured.
Now how do we open the file once weâ€™ve found it?
By default thereâ€™s no way of interacting with an entry, we can only look at it.Turns out all you need to do is addfilenametoentry_maker:entry_maker=function(entry)return{--Make standard action open `entry.path`.filename=entry.path,}endAt first I implemented opening manually usingattach_mappings:localactions=require("telescope.actions")finder=finders.new_table({--...attach_mappings=function(prompt_bufnr)actions.select_default:replace(function()localselection=action_state.get_selected_entry()actions.close(prompt_bufnr)vim.cmd(":e"..selection.value.path)end)returntrueend,})The above mapping overrides the default selection action () to:editvalue.pathof our selection, which will open the selected file.Finding the post data to populate the pickerSo far Iâ€™ve only used placeholder data for the posts, but we need to search the file system for the markup files for the posts.Itâ€™s not as simple as listing files in a directory, we also need to extract post metadata thatâ€™s defined in a frontmatter at the beginning of every markup file:---tomltitle="Let's build a VORON: Noise"tags=["3D printing","VORON"]series="voron_trident"---How can we do this?Withripgrepand regex of course!xkcd 208This time though I have a good reason for choosing an external tool rather than asking the backend server:
I want to be able to find a post the very first thing I do when opening Neovim, and I donâ€™t want to wait on connecting to a backend service, or requiring one running at all times.I guess this is mostly an excuse to try to do as much as I can in Lua, as I couldâ€™ve reused the parser on the backend and treat it as a command-line program like weâ€™ll do with ripgrep.The strategy is to useripgrepto match the frontmatter in all posts, extract the metadata using some hacky Lua regex, and combine them into a post struct we can feed into thefinder we developed.Hereâ€™s one way that usesnvim-nioandripgrepto find all posts under a path and extract the frontmatter:localnio=require("nio")localpath=require("blog.path")nio.process.run({cmd="rg",args={"-NoHU","--heading","\\A\\---\\w*\\n(.+\\n)+^---",--Subpath could be `posts/` or `drafts/`, converted to an absolute path.path.blog_path..subpath,},})Which will produce output formatted like this:posts/2016-07-29-slackware_installation_notes.markdown---layout: posttitle: "Slackware installation notes"tags: Slackware---posts/2019-01-25-site_restyle_and_update.markdown---title: "Site restyle and update"tags: ["Blog", "Web Design"]---posts/2024-02-27-lets_build_a_voron_more_mods.dj---tomltitle = "Let's build a VORON: More mods"tags = ["3D printing", "VORON"]series = "voron_trident"---My code for splitting the output and extracting the metadata is really gross:locallines=vim.fn.split(output,"\n")localposts={}localpost={}for_, lineinipairs(lines)do--When a newline is encountered save the post and prepare for the next entry.ifline==""thenifpost.titlethentable.insert(posts, post)endpost={}--Skip `---` markers.elseifnotstring.match(line,"%-%-%-%w*")then--Try to extract all key value definitions and store them.localkey, value=string.match(line,"(%w+)%s*[:=]%s*(.+)")ifkeythen--Strip surrounding quotes.--Do this here because there's no non-greedy specifier that could be used--in the key/value regex above.value=trim_quotes(value)--Split a sequence.localseq=string.match(value,"^%[(.+)%]$")ifseqthenlocalparts={}forpartinstring.gmatch(seq,"%s*([^,]+)")dotable.insert(parts, trim_quotes(part))endvalue=partsendpost[key]=valueelse--If no key value pair is found, then we should be at the beginning with the file path.post["path"]=line--Only posts have a date in the path, not drafts.localdate=string.match(line,"posts/(%d%d%d%d%-%d%d%-%d%d)%-")ifdatethenpost["date"]=dateelse--Use the modified timestamp for drafts.post["date"]=os.date("%Y-%m-%d", util.file_modified(line))endendendend--If output ends we might have an unsaved post.ifpost.titlethentable.insert(posts, post)endlocalfunctiontrim_quotes(s)localstripped=string.match(s,'^"(.+)"$')ifstrippedthenreturnstrippedelsereturnsendendYes, Iâ€™m using regex to parseyaml/tomlvalues.I could try to find a lua parser, but eeehâ€¦Iâ€™ll probably move the content extraction to Rust so I can reuse the frontmatter parser one day.Update: I started the rewrite less than a day after publishing this post.
See the source for thejson APIon the backend and thelist_postscommandin Neovim.Stupid decisions aside, with all this we have a workingtelescope.nvimpicker!
I may have skipped some details, sotake a look at the source codeif youâ€™re interested.This is
      part 2 of theExtending Neovim for bloggingseries.Customizing NeovimBrowse posts with telescope.nvimâ†Autocomplete with nvim-cmpRead the next partPublished:May  8,2024Revised:June 26,  2024ina308224Tagged:Lua,NeovimPreviousNext</description>
      <pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Customizing Neovim</title>
      <link>https://www.jonashietala.se/blog/2024/05/02/customizing_neovim</link>
      <description>Extending Neovim for bloggingCustomizing NeovimPublished:May  2,2024Revised:May  8,  2024inf7ad0afTagged:Lua,NeovimThis is part 1 of theExtending Neovim for bloggingseries.Scripting is configuration. Configuration is scripting.TJ DeVriesA different take on editing codeI’ve been using Neovim since it forked from Vim almost 8 years ago, and I used Vim many years before that.
I feel quite comfortable with Neovim, and I’ve gone down theconfiguration rabbit holetoo many times I’d like to admit, but I never dove deeper by writing something truly custom like a plugin.That changed when I got inspired by the excellentDeveloping a Neovim Docker Plugin from Scratchwhere the creator goes through how to extendtelescope.nvimin a very pedagogical manner.I was only planning to make a simple telescope picker…
Yet I fell into rabbit holeagainand ended up implementing some cool features such as:Browse posts usingtelescope.nvim.Autocomplete post urls, link definitions, and more usingnvim-cmp.Goto definition.Diagnostics.Browser preview with auto refresh and scroll.Because of my overambitious self, I couldn’t squeeze all these topics into a single blog post, so I split the postinto a series.
This first post will go through how to get started configuring Neovim with a basic setup and some user commands, leaving the more advanced topics for later posts.See the source for theNeovim blog integrationand thesite sourceon GitHub.Initial setupWhile I could develop this as a normal plugin, because it’s for my personalized blogging setup I decided to organize it undernvim/lua/blog:lua/blog/├── autocmd.lua├── cmp.lua├── commands.lua├── content.lua├── diagnostics.lua├── files.lua├── goto.lua├── init.lua├── path.lua├── server.lua└── telescope.luaAnd include the relevant code in my init script atinit.lua(well, reallylua/config/init.luabut a white lie to make it easier to grokk doesn’t hurt):require("blog")This callslua/blog/init.luathat in turn requires other initialization files:require("blog.autocmd")require("blog.cmp")require("blog.commands")The above files handles the initial registration, the other files are required when they’re needed.For example,autocmd.luaregisters a{"BufRead","BufNewFile"}autocommand that establishes a connection to the backend, and registers buffer local keymaps:--This way we include other blog related functionalitylocalpath=require("blog.path")localserver=require("blog.server")localdiagnostics=require("blog.diagnostics")localkeymaps=require("config.keymaps")localautocmd=vim.api.nvim_create_autocmdlocalaugroup=vim.api.nvim_create_augrouplocalblog_group=augroup("blog", { clear=true})--Only handle Djot files inside the blog directory--(at `~/code/jonashietala`).localautocmd_pattern=path.blog_path.."*.dj"--The callback function is called whenever a `.dj` file--is read or created.autocmd({"BufRead","BufNewFile"}, {pattern=autocmd_pattern,group=blog_group,callback=function(opts)--Register buffer local keymaps.keymaps.buf_blog(opts.buf)--Other initialization go here...end,})One quirk of myNeovim configis that I’ve tried to collect all keymaps in one file, where I added some new keymaps for the blog:localmap=vim.keymap.set--Called via `init.lua`.M.init=function()map("n","gd",require("blog.telescope").find_draft, { desc="Find blog draft"})map("n","gp",require("blog.telescope").find_post, { desc="Find blog post"})--Lots of other keymaps...end--Used by the "BufRead", "BufNewFile" autocommand shown above.M.buf_blog=function(buffer)map("n","t",require("blog.telescope").find_tags, { buffer=buffer, desc="List tags"})map("n","d",require("blog.goto").goto_def, { buffer=buffer, desc="Goto definition"})endWherebuf_blogis called by the autocommand when editing a blog post.Creating and moving postsOne of the basic features I want is having user commands that simplify my life a little—like creating a new post.When I write a blog post I start by creating a markup file indrafts/, that should contain a frontmatter with some metadata like so:---tomltitle="Customizing Neovim"tags=["Lua","Neovim"]series="extending_neovim_for_my_blog"---When I feel the post is done I “promote” the draft to a blog post by moving it fromdrafts/toposts/, while adding the release date to the path.I didn’t do this file manipulation manually—that would becrazy—I had it implemented as an option in the blog generation tool
(the blog is a static site, generated by aRust command-line program).I think it’s better to to have this kind of manipulation inside Neovim, which is a good starting point for our customization.User commandsI think implementing them as user commands makes sense—I’ll forget them if I create I keybinding for them. (I know, I tried.)I setup user commands inblog/commands.lua:localcmd=require("util").create_cmdlocalfiles=require("blog.files")--Create a new draft, promote it to a post, or revert it back to a draft.cmd("BlogNewDraft", files.new_draft)cmd("BlogPromoteDraft", files.promote_curr_draft)cmd("BlogDemotePost", files.demote_curr_post)In Neovim you can usevim.api.nvim_create_user_commandto create a user command.
Because it takes three arguments, with the third options argument only being empty, I use the helpercreate_cmdto make it optional:--A module file in lua by convention use an `M` table,--allowing us to call`require("util").create_cmd(...)`.localM={}M.create_cmd=function(command, f, opts)opts=optsor{}vim.api.nvim_create_user_command(command, f, opts)endreturnMNew draftCreating a draft should do two things:Create a file atdrafts/some_title.djunder the blog directory.Open it and fill in some placeholder data.Creating a file and opening it can be done usingvim.cmdto send the:editcommand.Inserting text from lua was harder to figure out, I tried to search Neovim’s help with:Telescope help_tagsbut came up short.
In the end I foundvim.api.nvim_buf_set_linesvia Google that can be used to insert lines.This is the solution I came up with:localpath=require("blog.path")localnio=require("nio")localM={}M.new_draft=function()nio.run(function()--Prompt for the title of the new draft.localtitle=nio.ui.input({ prompt="Draft title:"})--Create and open the draft for edit (without checking if it exists...)--`path.blog_path` expands to the path to my blog and `slugify` converts--a title to a slug by replacing spaces with underscores and removing symbols.localfile_path=path.blog_path.."drafts/"..M.slugify(title)..".dj"vim.cmd(":e"..file_path)--The text the draft will start with.localtemplate={"---toml",'title = "'..title..'"','tags = ["Some tag"]',"---",}--Insert the text into the current buffer (0) at row 0 (to 0).vim.api.nvim_buf_set_lines(0,0,0,true, template)end)end--Convert a title to a "slug" used in the post path and url.--for example, converts `My title` to `my_title`.M.slugify=function(title)title=title:lower()--Remove disallowed characters.title=title:gsub("[^ a-zA-Z0-9_-]+","")--Convert spaces and multiple `_` to a single `_`.title=title:gsub("[ _]+","_")--Remove dashes and underscores from the beginning and end.title=title:gsub("^[ _-]+","")title=title:gsub("[ _-]+$","")returntitleendreturnMI hope it’s clear what the above code is doing, but I want to call out the usage ofnvim-nio.
It’s a great library that makes asynchronous programming simple in Neovim.To start an async task you usenio.run:nio.run(function()--Code here is run asyncend)For this example of creating a new draft async is overkill.
Async is required for some other situations and it’s easy to add so I use it liberally, even when not strictly needed.Moving filesIn my blogging setup I store posts underposts/with the release date in the path, and drafts underdrafts/.
So promoting and demoting is accomplished by moving the file:Promote a draft to a post by moving it fromdrafts/post_title.djtoposts/2024-04-14-post_title.dj.Demote a post by moving it fromposts/2024-04-14-post_title.djtodrafts/post_title.dj.Instead of pasting a big chunk of code, let’s go through the most important implementation details:I want to use the title from the metadata because I’ll often change the title and I want the slug to be updated.We can extract the title from the post by shelling out toripgrepthat matches against atitle="My title"line.nvim-nioprovidesprocess.runto run a shell command:localproc=nio.process.run(args)proc.stdout.read()We can useprocess.runto runripgrepto search for the title by passing this table asargs:{cmd="rg",args={"-INo","^title = (.+)$",path,},}Because we might get multiple matches (such as in this post), we can extract it using Lua:returnoutput:match('title = "([^%"]+)"')Not the prettiest solution I’ve come up with.Another solution would be to rely on the Rust blog generation tool to provide the title;
it would be more robust since the backend properly parses the file.
I started with this route as one of my goals with customizing Neovim was to familiarize myself more with Lua.
I may move it in the future if the need arises.Create the destination path.For example a post path is created like this:path.blog_path.."posts/"..os.date("%Y-%m-%d").."-"..M.slugify(title)..".dj"Move the file.I don’t know what the idiomatic way to rename a file is, or even how to do it in Neovim using Lua.
But I do know that with:!you can call an external program… Likemv!So here’s one way to rename a file, that works for me on Linux:vim.cmd(":!mv"..from..""..to)vim.cmd(":e"..to)Because everything is done in an async context (insidenio.run) we run into a problem: we can’t call the Neovim API.
We’ll get an error like this:...e/tree/.local/share/nvim/lazy/nvim-nio/lua/nio/tasks.lua:95: Async task failed without callback: The coroutine failed with this message:vim/_editor.lua:0: E5560: nvim_exec2 must not be called in a lua loop callbackstack traceback:[C]: in function 'nvim_exec2'vim/_editor.lua: in function 'cmd'/home/tree/.config/nvim/lua/blog/files.lua:82: in function '_rename'/home/tree/.config/nvim/lua/blog/files.lua:116: in functions.lua:106&gt;The error to look out for isnvim_exec2 must not be called in a lua loop callback, which I assume means thatniouses the lower level lua loop API for its async system.What we need to do is yield to the Neovim scheduler before callingvim.cmdto rename the file, which can be done withnio.scheduler():nio.scheduler()--Now we can call `vim.cmd` and `vim.fn`.More functionalityI have some more user commands for creating other types of files;series,projects, and standalones (see/uses) but they work exactly the same as creating drafts.
There are a few other commands that I’ll bring up in future posts, which will go into more advanced functionality.This is
      part 1 of theExtending Neovim for bloggingseries.Customizing Neovim←Browse posts with telescope.nvimAutocomplete with nvim-cmpRead the next partPublished:May  2,2024Revised:May  8,  2024inf7ad0afTagged:Lua,NeovimPreviousNext</description>
      <pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's create a Tree-sitter grammar</title>
      <link>https://www.jonashietala.se/blog/2024/03/19/lets_create_a_tree-sitter_grammar</link>
      <description>Let's create a Tree-sitter grammarâ˜Published:March 19,2024Revised:July  1,  2024inac95a3bTagged:C,Djot,Neovim,Rust,Tree-sitterContentsOur subsetSimple beginningsMissing featuresExternal scannerDiv markers closes open paragraphsNested blocksDiv markersHandling conflictsSome testsUsing tree-sitter for something usefulSyntax highlightingLanguage injectionUsing our grammar with NeovimJumping and selecting with textobjectsEmbedding the grammar with RustWithin edge-cases lies complexityOne of my favorite features in Neovim is the Tree-sitter integration.
It allows for fast syntax highlighting that works well even in an error state (often the case when youâ€™re editing code), and it has additional semantics (you can differentiate between function parameters and local variables).Withnvim-treesitter-textobjectsyou can also jump between nodes (such as]cto jump to next class) or target deletion (cifto delete the function body and enter insert mode).
An amazing feature as it works across languages, no matter how they look like, as long as they have a Tree-sitter grammar (most do).But, you might wonder what does a Tree-sitter grammar look like,
and how do you create one for a language?I started thinking about this and before I knew it I wastrying to make my own parserforDjot(a markup language similar to Markdown).
There are some good tutorials on how to get started, but not on some more advanced things.I spent quite some time trying to figure it outâ€”while refreshing my 10 year old knowledge of grammarsâ€”and decided to document some of my findings.The post spiraled out of control a little, and it will go through:How to use an external scannerUsing Tree-sitterâ€™s built-in conflicts resolutionSyntax highlighting with language injectionUse the grammar from Neovim for syntax highlighting and textobjectsEmbed the grammar into this Blog for syntax highlightingThe source code for the complete grammar weâ€™ll developcan be found on GitHub.Our subsetFor the purpose of this blog post, weâ€™ll implement a small subset ofDjot, where weâ€™ll support:ParagraphsDivsCode blocksEmphasisThis will allow us to parse markup like this:This is amultiline_paragraph_:::This is a paragraph inside a div:::```gleamletx=2;```(Yes, thesdjothighlight uses our grammar.)At first blush, this seems like itâ€™s too simple to require anything more complex than some simple grammar rules, but later on weâ€™ll see that even these simple rules requires a bit more effort to fully support.Simple beginningsThe point of this post isnâ€™t to go through how the Tree-sitter grammar description ingrammar.jsworks.
TheTree-sitter docsgoes through how to get started.
I named the projectsdjotand this is thegrammar.jsweâ€™ll start with:module.exports=grammar({name:"sdjot",//Skip carriage returns.//We could skip spaces here as well, but the actual markup language//has significant spaces in some places, so let's remove them here too.extras:(_)=&gt;["\r"],rules:{document:($)=&gt;repeat($._block),//All blocks should end with a newline, but we can also parse multiple newlines._block:($)=&gt;choice($.div,$.code_block,$.paragraph,"\n"),//A div contains other blocks.div:($)=&gt;prec.left(seq($.div_marker,"\n",repeat($._block),$.div_marker,"\n")),div_marker:(_)=&gt;":::",//Code blocks may have a language specifier.code_block:($)=&gt;seq($.code_block_marker,optional($.language),"\n",optional($.code),$.code_block_marker,),code_block_marker:(_)=&gt;"```",code:(_)=&gt;repeat1(seq(/[^\n]*/,"\n")),language:(_)=&gt;/[^\s]+/,//A paragraph contains inline content and is terminated by a blankline//(two newlines in a row).paragraph:($)=&gt;seq(repeat1(seq($._inline,"\n")),"\n"),//The markup parser could separate block and inline parsing into separate steps,//but we'll do everything in one parser._inline:($)=&gt;repeat1(choice($.emphasis,$._text)),emphasis:($)=&gt;prec.left(seq("_",$._inline,"_")),_text:(_)=&gt;/[^\n]/,},});It recognizes paragraphs with text and emphasis, and it identifies divs and code blocks.We can create anexample-filewith these contents::::A paragraph_with emphasis_inside a div:::And parse it with thetree-sittercli:$tree-sitterparse example-file(document [0, 0] - [5, 0](div [0, 0] - [4, 0](div_marker [0, 0] - [0, 3])(paragraph [1, 0] - [3, 0](emphasis [1, 12] - [1, 27]))(div_marker [3, 0] - [3, 3])))Et voilÃ !Missing featuresBut I told you it wasnâ€™t supposed to be this easy, and there are features missing from our parser.
Most notably:There can be an arbitrary number of:, allowing divs to be nested.Closing a div should close other open blocks (divs and paragraphs in our case).In essence, we need to be able to parse this::::Top-level div::::A paragraph inside a second div,both closed when the top-level div is closedj:::This isâ€¦ Complicated.Sure, we can work around the varying levels of:with something hacky like enumerating the number of colons, using something like this:div:($)=&gt;choice($._div3,$._div4,$._div5,$._div6,$._div7,$._div8),_div3:($)=&gt;seq(/:{3}/,$._inside_div,/:{3}/,"\n"),_div4:($)=&gt;seq(/:{4}/,$._inside_div,/:{4}/,"\n"),_div5:($)=&gt;seq(/:{5}/,$._inside_div,/:{5}/,"\n"),_div6:($)=&gt;seq(/:{6}/,$._inside_div,/:{6}/,"\n"),_div7:($)=&gt;seq(/:{7}/,$._inside_div,/:{7}/,"\n"),_div8:($)=&gt;seq(/:{8}/,$._inside_div,/:{8}/,"\n"),_inside_div:($)=&gt;prec.left("\n",repeat($._block)),But itâ€™s notneat, and automatically closing contained blocks is much harder (to my brain it seems impossible, but Iâ€™m no expert).With an external scanner we can do this (and more).External scannerA Tree-sitter parser is actually a C program.
The grammar weâ€™ve seen has been described in JavaScript, but itâ€™s only used as a description to generate the parser in C.
If youâ€™re a masochist, you can take a look at it insrc/parser.cafter runningtree-sitter generate.An external scanner is just some custom C code thatâ€™s inserted into the parser, and it allows us to override the parser precedence, keep track of a context state, or whatever else we might need or want to do.To get started theofficial docswas pretty good.
Basically you need to:Create asrc/scanner.cand include it inbinding.gypbindings/rust/build.rs.Setupexternalstokens ingrammar.jsand a matching C enum inscanner.c.Define and implement five C functions.Letâ€™s take a look.Div markers closes open paragraphsLetâ€™s start by closing a paragraph early when a:::is encountered.
This is simpler because we can solve this without storing any state.When parsing$.paragraphweâ€™ll give the parser a choice between ending the paragraph on a newline or on our new$._close_paragraphtoken:paragraph:($)=&gt;seq(repeat1(seq($._inline,"\n")),choice("\n",$._close_paragraph)),$._close_paragraphis handled by the external scanner, which is specified using theexternalsfield:externals:($)=&gt;[$._close_paragraph],Now letâ€™s turn our attention tosrc/scanner.c.
The tokens inexternalsgets assigned an incremented number, starting from 0â€¦
Just like an enum in C!//We only have a single element right now, but keep in mind that the order//must match the `externals` array in `grammar.js`.typedefenum{CLOSE_PARAGRAPH}TokenType;The five functions we need to implement are these://You should replace `sdjot` with whatever project name you chose.booltree_sitter_sdjot_external_scanner_scan(void*payload,TSLexer*lexer,constbool*valid_symbols){//All the scanning goes here.returnfalse;}//If we need to allocate/deallocate state, we do it in these functions.void*tree_sitter_sdjot_external_scanner_create(){returnNULL;}voidtree_sitter_sdjot_external_scanner_destroy(void*payload){}//If we have state, we should load and save it in these functions.unsignedtree_sitter_sdjot_external_scanner_serialize(void*payload,char*buffer){return0;}voidtree_sitter_sdjot_external_scanner_deserialize(void*payload,char*buffer,unsignedlength){}Because we wonâ€™t use any state, weâ€™ll only have to update thescanfunction.What youâ€™re supposed to do is checkvalid_symbolsfor the tokens we can return at any point in time, and returntrueif any was found:booltree_sitter_sdjot_external_scanner_scan(void*payload,TSLexer*lexer,constbool*valid_symbols){if(valid_symbols[CLOSE_PARAGRAPH]&amp;&amp;amp;parse_close_paragraph(lexer)){returntrue;}returnfalse;}To decide if weâ€™re going to close the paragraph early, weâ€™ll look ahead for any:::, and if so weâ€™ll close it without consuming any characters.
This might not be the most efficient solution because weâ€™ll have to parse the:::again, but it gets the job done.The matched token should be stored inlexer-&gt;result_symbol:staticboolparse_close_paragraph(TSLexer*lexer){//Mark the end before advancing so that the CLOSE_PARAGRAPH token doesn't//consume any characters.lexer-&gt;mark_end(lexer);uint8_tcolons=consume_chars(lexer,':');if(colons&gt;=3){lexer-&gt;result_symbol=CLOSE_PARAGRAPH;returntrue;}else{returnfalse;}}Note that the resulting token will mark any symbol we advance over as owned by that token.
So:::would be marked as_close_paragraph(which will be ignored by the output since it begins with an underscore), instead ofdiv_marker.
To prevent this, we turn_close_paragraphinto a zero-width token by marking the end before advancing the lexer.How do we advance the lexer?
We calllexer-&gt;advance:staticuint8_tconsume_chars(TSLexer*lexer,charc){uint8_tcount=0;while(lexer-&gt;lookahead==c){lexer-&gt;advance(lexer,false);++count;}returncount;}This is almost all we can do with the lexer.
We only process one character at a time, cannot look behind, and our only tool to look ahead is tomark_endat the correct place.
(We can also query the current column position.)With this we have a working external scanner and div tags now close paragraphs::::A paragraph inside a div:::$tree-sitterparse example-file(document [0, 0] - [4, 0](div [0, 0] - [3, 0](div_marker [0, 0] - [0, 3])(paragraph [1, 0] - [2, 0])(div_marker [2, 0] - [2, 3])))Nested blocksTo automatically close other open blocks we need to add some context to our parser, which means weâ€™ll need state management.The small subset weâ€™re implementing is only concerned with closing divsâ€”because it would be a terribly long post otherwiseâ€”but Iâ€™ll try to implement this in a general manner, to be more indicative of a real-world parser.Our strategy is this:A div can have a varying number of:that must match.Therefore weâ€™ll parse colons in an external scanner and store it on a stack.When we find a div marker, weâ€™ll need to decide if it should start a new div, or close an existing one.Weâ€™ll look at the stack of open blocks and see if we find a match.If we have need to close a nested div, that is if we want to close a div further down the stack, we need to close the nested div(s) first.Thus weâ€™ll introduce ablock_closemarker that ends a div, and leave the ending div marker as optional.First weâ€™ll ask the grammar to let the external scanner manage the begin and end tokens.
Weâ€™ll use a_block_closemarker to end the div, and leave the end marker optional.
(You could probably use achoice()between the two, but this made more sense to me when I was implementing it.)div:($)=&gt;prec.left(seq(//A rule starting with "_" will be hidden in the output,//and we can use "alias" to rename rules.alias($._div_marker_begin,$.div_marker),"\n",repeat($._block),$._block_close,optional(alias($._div_marker_end,$.div_marker)))),externals:($)=&gt;[$._close_paragraph,$._block_close,$._div_marker_begin,$._div_marker_end,//This is used in the scanner internally,//but shouldn't be used by the grammar.$._ignored,],And remember to update the list of external tokens in the scanner (order matters):typedefenum{CLOSE_PARAGRAPH,BLOCK_CLOSE,DIV_MARKER_BEGIN,DIV_MARKER_END,IGNORED}TokenType;Then to our stack of blocks.I used aBlocktype to keep track of the type and number of colons://In a real implementation we'll have more block types.typedefenum{DIV}BlockType;typedefstruct{BlockType type;uint8_tlevel;}Block;I know thatlevelisnâ€™t the best name, but I couldnâ€™t find a very good general name for the number of colons, indentation level, etc.
With sum types you could model it in a clearer way, like this:enumBlock{Div{colons:u32},Footnote{indent:u32},//etc}I will, in fact, claim that the difference between a bad programmer and a good one
is whether he considers his code or his data structures more important.
Bad programmers worry about the code.
Good programmers worry about data structures and their relationships.Linus TorvaldsBut I digress, Iâ€™ll go withlevellike a bad programmer.Another joy of programming C is that youâ€™ll get to re-implement standard data structures such as a growable stack.
Itâ€™s not truly difficult, but itâ€™s annoying and bug-prone.Luckily, during the time Iâ€™m writing this blog post,tree-sitter 0.22.1was released with an array implementation.
So now I donâ€™t have to show you my shoddy stack implementation, and we can use their array for our stack instead.Weâ€™ll shove ourArrayofBlock*into aScannerstruct, because weâ€™ll need to track more data later:#include"tree_sitter/array.h"typedefstruct{Array(Block*)*open_blocks;}Scanner;When you manage state in tree-sitter, you need to do some data management in thetree_sitter_functions we defined earlier.Allocations are managed in the_createand_destroyfunctions.
Also new for 0.22.1 is the recommendation to usets_functions for allocations, to allow consumers to override the default allocator:#include"tree_sitter/alloc.h"void*tree_sitter_sdjot_external_scanner_create(){Scanner*s=(Scanner*)ts_malloc(sizeof(Scanner));//This is how you create an empty arrays-&gt;open_blocks=ts_malloc(sizeof(Array(Block*)));array_init(s-&gt;open_blocks);returns;}voidtree_sitter_sdjot_external_scanner_destroy(void*payload){Scanner*s=(Scanner*)payload;//I haven't shown the allocation of the blocks yet,//but keep in mind that `array_delete` does not deallocate any memory//you store in the array itself.for(size_ti=0;iopen_blocks-&gt;size;++i){//I use `array_get` even though you can index the contents directly.ts_free(array_get(s-&gt;open_blocks,i));}//The array is a growable one, `array_delete` ensures that the//memory is deleted.array_delete(s-&gt;open_blocks);ts_free(s);}I allocate the blocks in apush_blockhelper:staticvoidpush_block(Scanner*s,BlockTypetype,uint8_tlevel){Block*b=ts_malloc(sizeof(Block));b-&gt;type=type;b-&gt;level=level;//Grows the stack automatically.array_push(s-&gt;open_blocks,b);}You also need to define the serialize functions.
These store and retrieve the managed state, to allow tree-sitter to backtrack.unsignedtree_sitter_sdjot_external_scanner_serialize(void*payload,char*buffer){Scanner*s=(Scanner*)payload;unsignedsize=0;for(size_ti=0;iopen_blocks-&gt;size;++i){Block*b=*array_get(s-&gt;open_blocks,i);buffer[size++]=(char)b-&gt;type;buffer[size++]=(char)b-&gt;level;}returnsize;}voidtree_sitter_sdjot_external_scanner_deserialize(void*payload,char*buffer,unsignedlength){Scanner*s=(Scanner*)payload;array_init(s-&gt;open_blocks);size_tsize=0;while(sizelookahead==c){lexer-&gt;advance(lexer,false);++count;}returncount;}staticboolparse_div(Scanner*s,TSLexer*lexer,constbool*valid_symbols){//...uint8_tcolons=consume_chars(lexer,':');if(colons&lt;3){returnfalse;}//...}Opening a new div is simple; we push the block and register the number of colons:push_block(s,DIV,colons);lexer-&gt;result_symbol=DIV_MARKER_BEGIN;returntrue;But to the decide if we should open or close a div, we need a way to search through the stack.
This function does that, while also returning how many blocks deep into the stack we found the div (which weâ€™ll use shortly)://How many blocks from the top of the stack can we find a matching block?//If it's directly on the top, returns 1.//If it cannot be found, returns 0.staticsize_tnumber_of_blocks_from_top(Scanner*s,BlockTypetype,uint8_tlevel){for(inti=s-&gt;open_blocks-&gt;size-1;i&gt;=0;--i){Block*b=*array_get(s-&gt;open_blocks,i);if(b-&gt;type==type&amp;&amp;amp;b-&gt;level==level){returns-&gt;open_blocks-&gt;size-i;}}return0;}staticboolparse_div(Scanner*s,TSLexer*lexer,constbool*valid_symbols){//...size_tfrom_top=number_of_blocks_from_top(s,DIV,colons);//We could check if either DIV_MARKER_BEGIN or DIV_MARKER_END are valid here,//but as the grammar is set up they're both always valid at the same time.if(from_top&gt;0){//Close the current div, and all blocks above.}else{//No matching div to close, let's open one.lexer-&gt;mark_end(lexer);push_block(s,DIV,colons);lexer-&gt;result_symbol=DIV_MARKER_BEGIN;returntrue;}}But we have a problem: when we want to close the div, we want to be able to output multiple tokens.For example, with this type of input::::::::::::::::text:::Weâ€™ll have a stack of 3 divs when we see the closing:::marker:7 (top)53 (the one we want to close)In the code above,from_topwill be3and we need to output 4 tokens: 3BLOCK_CLOSE(one for each div) and 1DIV_MARKER_END(for the last:::).
But the scanner can only output a single token at a time.The way I solved this is by introducing more state to the Scanner.
Specifically, I introduced ablocks_to_closevariable that weâ€™ll use to outputBLOCK_CLOSE, and some variables to output (and consume) theDIV_MARKER_END.typedefstruct{Array(Block*)*open_blocks;//How many BLOCK_CLOSE we should output right now?uint8_tblocks_to_close;//Delayed output of a token.TokenType delayed_token;//Allows us to consume the width of a delayed token.uint8_tdelayed_token_width;}Scanner;We need to remember to update the create and serialize functions too.Serialize:buffer[size++]=(char)s-&gt;blocks_to_close;buffer[size++]=(char)s-&gt;delayed_token;buffer[size++]=(char)s-&gt;delayed_token_width;Deserialize:s-&gt;blocks_to_close=(uint8_t)buffer[size++];s-&gt;delayed_token=(TokenType)buffer[size++];s-&gt;delayed_token_width=(uint8_t)buffer[size++];Weâ€™ll useIGNOREDas the unused token, so weâ€™ll need to reset it when we create the scanner:s-&gt;blocks_to_close=0;s-&gt;delayed_token=IGNORED;Now when we scan we should first checkblocks_to_closeand thendelayed_token, before we scan other things:booltree_sitter_sdjot_external_scanner_scan(void*payload,TSLexer*lexer,constbool*valid_symbols){Scanner*s=(Scanner*)payload;if(valid_symbols[BLOCK_CLOSE]&amp;&amp;amp;handle_blocks_to_close(s,lexer)){returntrue;}if(output_delayed_token(s,lexer,valid_symbols)){returntrue;}//Scan the other stuff}When we seeblocks_to_close &gt; 0, we should output aBLOCK_CLOSEand remove the top block (with some sanity checks for good measure):staticvoidremove_block(Scanner*s){if(s-&gt;open_blocks-&gt;size&gt;0){ts_free(array_pop(s-&gt;open_blocks));if(s-&gt;blocks_to_close&gt;0){--s-&gt;blocks_to_close;}}}staticboolhandle_blocks_to_close(Scanner*s,TSLexer*lexer){if(s-&gt;open_blocks-&gt;size==0){returnfalse;}//If we reach eof with open blocks, we should close them all.if(lexer-&gt;eof(lexer)||s-&gt;blocks_to_close&gt;0){lexer-&gt;result_symbol=BLOCK_CLOSE;remove_block(s);returntrue;}returnfalse;}With this we can output multipleBLOCK_CLOSE, and now to handle delayed tokens:staticbooloutput_delayed_token(Scanner*s,TSLexer*lexer,constbool*valid_symbols){if(s-&gt;delayed_token==IGNORED||!valid_symbols[s-&gt;delayed_token]){returnfalse;}lexer-&gt;result_symbol=s-&gt;delayed_token;s-&gt;delayed_token=IGNORED;//With `delayed_token_width` we can consume the ending `:::`, for example.while(s-&gt;delayed_token_width--){lexer-&gt;advance(lexer,false);}lexer-&gt;mark_end(lexer);returntrue;}Another way to design this is to have a stack of delayed tokens and then just pop that.
Itâ€™s certainly more powerful, I just happened to choose this way when I was playing around with it because itâ€™s more explicit and it felt a little easier to follow what was happening.Either way, we can now implement the div end handling. Inparse_div:size_tfrom_top=number_of_blocks_from_top(s,DIV,colons);if(from_top&gt;0){//Found a div we should close.close_blocks_with_final_token(s,lexer,from_top,DIV_MARKER_END,colons);returntrue;}else{lexer-&gt;mark_end(lexer);push_block(s,DIV,colons);lexer-&gt;result_symbol=DIV_MARKER_BEGIN;returntrue;}close_blocks_with_final_tokenis a general helper that sets up the number of blocks to close and the final token:staticvoidclose_blocks_with_final_token(Scanner*s,TSLexer*lexer,size_tcount,TokenTypefinal,uint8_tfinal_token_width){remove_block(s);s-&gt;blocks_to_close=s-&gt;blocks_to_close+count-1;lexer-&gt;result_symbol=BLOCK_CLOSE;s-&gt;delayed_token=final;s-&gt;delayed_token_width=final_token_width;}Now we can finally try to close divs::::::::::::::::Divception:::$tree-sitterparse example-file(document [0, 0] - [6, 0](div [0, 0] - [6, 0](div_marker [0, 0] - [0, 5])(div [1, 0] - [4, 3](div_marker [1, 0] - [1, 3])(div [2, 0] - [4, 0](div_marker [2, 0] - [2, 7])(paragraph [3, 0] - [4, 0]))(div_marker [4, 0] - [4, 3]))))We can see that it parses without error, the last marker closes theseconddiv correctly, and the last marker captures the final:::.While Iâ€™m jumping to a working implementation directly in this post, when I first did this that was of course not the case.
I found the-dargument useful to see what characters are consumed and what token is output in each step.Hereâ€™s a part of the output (when scanning the final:::), with some comments to point out some interesting things:$tree-sitterparse example-file -d...process version:0, version_count:1, state:34, row:4, col:0lex_external state:4, row:4, column:0consume character:':'                         // Scan `:::`consume character:':'consume character:':'lexed_lookahead sym:_close_paragraph, size:0    // Output _close_paragraphreduce sym:paragraph_repeat1, child_count:2shift state:17process version:0, version_count:1, state:17, row:4, col:0lex_external state:3, row:4, column:0           // Still on first `:`consume character:':'                         // Scan `:::` againconsume character:':'consume character:':'lexed_lookahead sym:_block_close, size:0        // Close div with _block_closereduce sym:paragraph, child_count:2shift state:12process version:0, version_count:1, state:12, row:4, col:0lex_external state:5, row:4, column:0           // Still on first `:`lexed_lookahead sym:_block_close, size:0        // Close second div with _block_closereduce sym:div, child_count:4shift state:12process version:0, version_count:1, state:12, row:4, col:0lex_external state:5, row:4, column:0           // Still on first `:`consume character:':'                         // Consume `:::`consume character:':'consume character:':'lexed_lookahead sym:div_marker, size:3          // div_marker is size 3, marks `:::`shift state:23While the output seems confusing, when you know what to look for itâ€™s very useful.
Iâ€™ve found that a deliberate process, where I look at a single character at a time, helps me get through the problems Iâ€™ve encountered so far.Handling conflictsOur grammar works pretty well, but there are issues you might want to fix.
One issue, that took much longer to figure out than I care to admit, is adding a fallback to text when a markup rule doesnâ€™t match.A simple example for our grammar is a single underscore in a paragraph:a_bIâ€™d assume this would produce a paragraph with text, but instead we get an error:$tree-sitterparse example-file(document [0, 0] - [2, 0](ERROR [0, 0] - [0, 3]))This is weird, because one of the main selling points of Tree-sitter is the GLR algorithm, which should explore the different interpretations to find something that succeeds.
But for some reason, it doesnâ€™t trigger for us.Letâ€™s take a look.
These are the relevant lines from the grammar:_inline:($)=&gt;repeat1(choice($.emphasis,$._text)),emphasis:($)=&gt;prec.left(seq("_",$._inline,"_")),_text:(_)=&gt;/[^\n]/,When we try to match a_then the grammar can match eitheremphasisor_textbecause_matches both"_"and/[^\n]/.
The issue seems to be that Tree-sitter doesnâ€™t recognize this as a conflict.If we instead add a fallback with a_string then Tree-sitter will treat it as a conflict:_inline:($)=&gt;repeat1(choice($.emphasis,$._text,$._fallback)),emphasis:($)=&gt;prec.left(seq("_",$._inline,"_")),//prec.dynamic() is used during conflict resolution to choose which//branch to choose if multiple succeed._fallback:(_)=&gt;prec.dynamic(-100,"_"),_text:(_)=&gt;/[^\n]/,And when we calltree-sitter generateweâ€™re made aware of the conflict:$tree-sittergenerateUnresolved conflict for symbol sequence:'_'  â€¢  '_'  â€¦Possible interpretations:1:  (_fallback  '_')  â€¢  '_'  â€¦2:  (emphasis  '_'  â€¢  _inline  '_')  (precedence: 0, associativity: Left)Possible resolutions:1:  Specify a higher precedence in `emphasis` than in the other rules.2:  Specify a higher precedence in `_fallback` than in the other rules.3:  Specify a left or right associativity in `_fallback`4:  Add a conflict for these rules: `emphasis`, `_fallback`What we want to do is mark them as a conflict thatâ€™s supposed to exist in the grammar using theconflictsfield:conflicts:($)=&gt;[[$.emphasis,$._fallback]],And now we can parse paragraphs containing only a single_without errors.So it seems like Tree-Sitter doesnâ€™t recognize a conflict between a string and a regex.
Another gotcha is that it doesnâ€™t seem like you can trigger the GLR algorithm with a token returned by an external scanner, because the external scanner overrules Tree-sitterâ€™s lexing behavior.Some testsUsingtree-sitter parse example-file(with or without the-dor-Dflags, try them if you havenâ€™t) is fine for experimental tests, but we really should add the different test cases as proper unit tests.
Tree-sitter has a built-in test harness for this purpose.Letâ€™s add the very first test case totest/corpus/syntax.txt:===============================================================================Parsing goal===============================================================================This is amultiline _paragraph_:::This is a paragraph inside a div:::```gleamlet x = 2;```-------------------------------------------------------------------------------(document(paragraph (emphasis))(div(div_marker)(paragraph)(div_marker))(code_block(code_block_marker)(language)(code)(code_block_marker)))And run it:$ tree-sitter testsyntax:âœ“ Parsing goalYay!We should add (a lot) more tests here, but I wonâ€™t bother writing them out in this already too long blog post.Using tree-sitter for something usefulI like a theoretical excursion as much as the next nerd, but I started looking at Tree-sitter because I wanted todosomething with the Grammar, not just play around with it all day.
Letâ€™s end the post by seeing some things we can use it for.Syntax highlightingSyntax highlighting is made using queries from thehighlights.scmfile.
Itâ€™s common to have it placed in thesrcdirectory in the same repository as the grammar, but itâ€™s not required.Hereâ€™s an examplesrc/highlights.scmfile that highlights the different elements of our markup:(div_marker)@punctuation.delimiter(code_block_marker)@punctuation.delimiter(emphasis"_"@punctuation.delimiter)@markup.italic(language)@tag.attribute(code_block)@markup.raw(paragraph)@markupWhat colors to choose is a bit arbitrary, these works well enough I suppose.See thedocumentationfor more details on how the queries and highlighting works.Language injectionOne big question I had when starting writing my grammar was how to mix multiple parsers in the same document, to for example highlight code blocks using the specified language:```gleamletx=2;```Turns out, this is quite straightforward.With the initial grammar, the code block parses into:(code_block(code_block_marker)(language)(code)(code_block_marker)))Which weâ€™ll use insrc/injections.scmto specify that we want to parse(code)using the grammar specified in(language):(code_block(language)@injection.language(code)@injection.content)When weâ€™ll embed the grammar into a program with highlighting support, it will delegate the text inside the code block to the injected language.Using our grammar with NeovimI typically install Tree-sitter grammars in Neovim using:TSInstallprovided bynvim-treesitter.
But you caninstall local Tree-sitter grammarsas well:localparser_config=require("nvim-treesitter.parsers").get_parser_configs()parser_config.sdjot={install_info={--Change this url to your grammarurl="~/code/tree-sitter-sdjot",--If you use an external scanner it needs to be included herefiles={"src/parser.c","src/scanner.c"},generate_reqires_npm=false,requires_generate_from_grammar=false,},--The filetype you want it registered asfiletype="sdjot",}Just make sure you have a"tree-sitter"section in the grammarâ€™spackage.json:"tree-sitter":[{"scope":"source.sdjot","file-types":["sdj"],"injection-regex":"sdjot","highlights":["queries/highlights.scm"]}],With this you can do:TSInstall sjdotand:TSUpdate sdjotwhen you make changes.:TSInstalldoesnâ€™t install queries automatically though.
What I did was symlink the queries directory into Neovims config directory:ln-s ~/code/tree-sitter-sdjot/queries ~/.config/nvim/queries/sdjot:TSPlaygroundToggleis very useful for debugging the grammar, and:Inspectshows you the highlight groups under your cursor.
It might be good to check out:help treesitter-highlight-groupsif you want to play with your theme, as the theme needs to support the highlight groups we use for coloring to appear.You also need to have the Tree-sitter grammar for the injected language installed, if you want to highlight the contents of code blocks.Jumping and selecting with textobjectsI mentionednvim-treesitter-textobjectsas a good example of why Tree-sitter is about more than syntax highlighting.To make use of our grammar we can add some capture groups tosrc/textobjects.scm.
For example we can register our code blocks as â€œfunctionsâ€:(code_block(code)@function.inner)@function.outerThe objects are arbitrary, but@functionis one of the standard objects so I guess it might make sense.With the symlink ready, you need to register keymaps withnvim-treesitter-textobjectsand youâ€™re good to go.
I have it setup so I can jump between@function.outerwith[fand]f, and selections withafandif.This means that with the above textobject definition I can for example jump to the next code block with]fand then remove all the code inside withcifto end up in insert mode, ready to replace it with some new code.Although this example is a bit arbitrary, this general functionality isextremelyuseful for programming languages.
For a markup language likeDjot, jumping between headings might be a more relevant use-case.Embedding the grammar with RustOne of the selling points of Tree-sitter is that you should be able to embed it in any application.
Such as this blog!Iâ€™ve been wanting to add Tree-sitter powered highlighting to my blog for a while, and now I have an excuse to do just that.This blog is a static site generator written in Rust, andtree-sitter-highlightlooks like a suitable library to try.
Letâ€™s add it to ourCargo.toml:[dependencies]tree-sitter-highlight="^0.20.0"tree-sitter-sdjot={git="https://github.com/treeman/tree-sitter-sdjot.git"}I use a slightly older version because some other grammars I want depend on the older version, and itâ€™s a big pain but they all need to use a matching version.
Bleh.According to the docswe first need to setup aHighlightConfiguration.
I usedlazy_static!to create a global map with configurations to be used by any parallel rendering on the blog.
Itâ€™s not the most beautiful code Iâ€™ve written, but it gets the job done://All highlights needs to be listed explicitly.staticHIGHLIGHT_NAMES:&amp;[&amp;amp;str]=&amp;[//I have +100 entries here, this is for sdjot."markup","markup.italic","markup.raw","punctuation.delimiter","tag.attribute",];lazy_static!{staticrefCONFIGS:HashMap=init_configurations();}fninit_configurations()-&gt;HashMap{[//I have more languages here("sdjot",HighlightConfiguration::new(tree_sitter_sdjot::language(),tree_sitter_sdjot::HIGHLIGHTS_QUERY,tree_sitter_sdjot::INJECTIONS_QUERY,"",).unwrap(),),].into_iter().map(|(name,mutconfig)|{config.configure(&amp;amp;HIGHLIGHT_NAMES);(name.to_string(),config)}).collect()}Notice how all highlight names weâ€™re interested in have to be explicitly specified.
This is a big pain, especially if youâ€™re going to include many larger grammars.The names can be filtered for withripgrepwith something like this:rg"@[\w.]+"-INo --trim highlights.scm|sort|uniqI already have syntax highlighting viasyntect, so I wrap the highlighters in their own types:enumHighlighterType&lt;'a&gt;{Syntect(SyntectHighlighter&lt;'a&gt;),Treesitter(TreesitterHighlighter&lt;'a&gt;),}pubstructTreesitterHighlighter&lt;'a&gt;{config:&amp;'aHighlightConfiguration,}impl&lt;'a&gt;TreesitterHighlighter&lt;'a&gt;{pubfnfind(lang_id:&amp;amp;str)-&gt;Option{CONFIGS.get(lang_id).map(|config|Self{config})}}The interesting part is of course thehighlightmethod, that takes a string of code and applies syntax highlighting on it:impl&lt;'a&gt;TreesitterHighlighter&lt;'a&gt;{pubfnhighlight(&amp;amp;self,code:&amp;amp;str)-&gt;Result{letmuthighlighter=Highlighter::new();lethighlights=highlighter.highlight(self.config,code.as_bytes(),None,|lang|{//This callback handles language injection//and should return a `HighlightConfiguration`.letres=CONFIGS.get(lang);if!res.is_some(){warn!("Couldn't find treesitter grammar for `{lang}` to inject");}res})?;letmutrenderer=HtmlRenderer::new();renderer.render(highlights,code.as_bytes(),&amp;|attr|{//This should return a `&amp;'a [u8]` with the same lifetime as `code`.})?;letres=renderer.lines().join("");Ok(res)}}I want to point out the API inHtmlRenderer, where we stumble upon a very annoying problem:
what should we return from the callback, and how should we do that?What the callback does is inject the return value into thespanelement, like this:highlight&lt;/span&gt;So weâ€™d like to return something like"class=\"markup italic\"", usingattrwhich is only ausizeintoHIGHLIGHT_NAMES:renderer.render(highlights,code.as_bytes(),&amp;|attr|{format!(r#"class="{}""#,HIGHLIGHT_NAMES[attr.0].replace(".","")).as_bytes()})?;Because we return a slice of bytes into a string thatâ€™s created inside the callback, of course the Rust compiler will be mad at us:error[E0515]: cannot return value referencing temporary value--&gt; src/markup/syntax_highlight/treesitter_highlighter.rs:33:13|33 |             format!(r#"class="{}""#, HIGHLIGHT_NAMES[attr.0].replace(".", " ")).as_bytes()|             -------------------------------------------------------------------^^^^^^^^^^^|             ||             returns a value referencing data owned by the current function|             temporary value created hereHow to dynamically create a string from inside the callbackâ€¦ That outlives the callback itself?Not easily I tell you.It would be so much easier if the callback would return aCowor something.
I wonder how the designers of the API expects it to be used?
This surely isnâ€™t a very unique requirement, to wrap the attribute in aclass?Oh well.
One way to solve this is to store the generated strings in a container that outlives the callback, and reference that (yeah itâ€™s aFncallback, but there are hacky ways around that).
Or you could, you know, write your ownHtmlRenderer.Or you could pre-generate the classes and reference them:lazy_static!{staticrefCLASSES:Vec=HIGHLIGHT_NAMES.iter().map(|name|format!(r#"class="{}""#,name.replace(".",""))).collect();}renderer.render(highlights,code.as_bytes(),&amp;|attr|{CLASSES[attr.0].as_bytes()})?;This should be the fastest option and is the one I currently useâ€¦
But speed isnâ€™t a bottleneck here and Iâ€™d rather just return aStringwithformat!and be done with it.With this Iâ€™ve integrated Tree-sitter based syntax highlighting into my blog!```With great powers comes great responsibility```I could start moving the various languages over from Syntect to Tree-sitterâ€¦
But I wonâ€™t.There are some issues:You need a compatible version oftree-sitterfor all grammars.The more grammars you add the more painful the upgrade path becomes.Syntect gives better highlighting for some languages (like Rust and C).Neovim has their own highlighter implementation and has made tweaks to certain grammars and gets much nicer highlighting than I got out of the box.Integrating that code into my site generator is probably possible, but not a rabbit hole I want to jump into right now.The highlighter library feels a bit immature.A newer library broke the highlight groups I got from some grammars and I donâ€™t see any support for how to add a language specific class tospanfor injected languages.Because of these issues Iâ€™ll evaluate what highlighter to use on a case-by-case basis, with Syntect as the default choice.Within edge-cases lies complexityIf youâ€™ve read the post to the end, congratulations.
You made it!I donâ€™t claim to be an expert at grammars or Tree-sitter, and Iâ€™m sure there are plenty of things that can be improved with the way the grammar is made.
But I hope it can be helpful as a starting point if youâ€™re curious on how to write a Tree-sitter grammar of your own.See thetree-sitter-djot repofor how I developed the grammar further to support the fullDjot specification(but remember, Iâ€™m not an expert).Just one word of advice before you go.
Writing a grammar for simple rules is pretty easy, but in the real world things can get messy quickly.
This is especially true if you need to juggle multiple conflicting rules in the external scannerâ€”keeping a sane structure is challenging.(Even in our simple grammar there are bugs, but I donâ€™t care to fix them.)The night is dark and full of terrorsGeorge R.R. MartinPublished:March 19,2024Revised:July  1,  2024inac95a3bTagged:C,Djot,Neovim,Rust,Tree-sitterPreviousNext</description>
      <pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Wrap-up</title>
      <link>https://www.jonashietala.se/blog/2024/03/05/lets_build_a_voron_wrap-up</link>
      <description>Let's build a VORON TridentLet's build a VORON: Wrap-upâ˜Published:March  5,2024Revised:March 11,  2024in47fa7a9Tagged:3D printing,VORONThis is part 12 of theLet's build a VORON Tridentseries.Itâ€™s finally doneâ„¢.
Iâ€™ve built a VORON that prints reliably and Iâ€™ve modded it enough to be able to leave it alone for a while, so I think itâ€™s time to wrap up this build series with a little retrospective.Building the printer was really fun and rewardingIâ€™ve always seen myself as a software person instead of a hardware person.
But I must admit, assembling the printer was a very fun and rewarding experience.Seeing how you go from bags of bits and pieces to a fully functional printer, and knowing that Iâ€”someone clueless about hardwareâ€”put everything together, is an awesome feeling.And to then mod the printerâ€”to print out parts to modify and enhance the printerâ€”was also very cool and one of the best parts of this project.
I think I enjoyed the building experience so much that I was seeking out more mods just to extend that sensation.Thereâ€™s so much to learnEven though Iâ€™ve tried to include as much details as possible in this blog series, there are still many things I left out that you need to learn if youâ€™re new to 3D printing like I am.
For example:Klipper &amp; G-code configurationSlicer management and the thousands of settingsFilament selection, stuck filament, wet filament, filament tuningâ€¦You can absolutely start from zero with a VORON like I did, just realize that thereâ€™s a lot to learn, and building the printer is only the beginning of the journey.Take it slow and ask for help, and Iâ€™m sure you could do it too.Some modding is requiredOkay, you can use the printer as-is.
But in my mind some modding is required to get the most out of it:HEPA filterseems like a must.Sure, there are crazy people who even print ABS in their bedroom without an enclosureâ€”but come on.
Your health is the most important thing, you should take better care of it.Asmart filament sensorsaves you so much grief.There are a lot of other great mods too, but I concede theyâ€™re not required.
If youâ€™re building a Trident Iâ€™d at least consider these mods as well:Removable top panel.Some sort of camera(maybe not the Angry CAM).RockNRoll(orinverted electronics, but maybe plan for that from the start).(Modding is also one of the most fun parts, feel free to go nuts!)Issues with the kitOverall, the printer and kit was good and I havenâ€™t had many issues with it.
I did however have two larger issues:Theprinter was loud.ThePOM nuts wore out.This isnâ€™t a knock on the printer design (I think).
Maybe it was an issue with some of the parts I received in the LDO Trident kit, but I donâ€™t know.
It could also be plain old user error.Future plansOne might think that the printer is complete and that I wonâ€™t touch it anymore, but nooo.
Oh no, Iâ€™ve a bunch of large mods I want to do with the printer:Replace the camera with a better one (maybe also a nozzle camera?).Remove drag chains and go umbilical.Complete thepurge bucket mod.Try theinverted electronicsmod.Replace Stealthburner with theXol toolheadfor better PLA cooling.Multimaterial with theEnraged Rabbit Carrot Feeder.But before that Iâ€™ve identified a fatal flaw:
I only have a single printer.What should I do if I find that Iâ€™m missing a printed part when Iâ€™ve disassembled the printer to mod it?
What if I break something?
And if Iâ€™m doing a long mod the printer will be down and I canâ€™t print things for any other project.This clearly isnâ€™t a sustainable solutionâ€”I need a second printer.And isnâ€™t that the best compliment one can give?
That you havenâ€™t even finished it yet, but youâ€™re already pining foranother one?This is
      part 12 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upâ†This series is completed.View all seriesPublished:March  5,2024Revised:March 11,  2024in47fa7a9Tagged:3D printing,VORONPreviousNext</description>
      <pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Major failure</title>
      <link>https://www.jonashietala.se/blog/2024/03/01/lets_build_a_voron_major_failure</link>
      <description>Let's build a VORON TridentLet's build a VORON: Major failurePublished:March  1,2024Revised:March 11,  2024in47fa7a9Tagged:3D printing,VORONThis is part 11 of theLet's build a VORON Tridentseries.The left POM nut got ground down, making the bed fall down.After 600 hours, the printer met it’s first major failure.
I know I earlierdescribed how the extruder starter skippingin a big way, but that was just some filament getting stuck in the extruder.
This time a part physically broke down.What happened was that the rod on one of the Z-motors started to grind down the POM nut that holds up the bed:It did this so much that the threads got ground down, making the bed fall down.The POM nuts are considered expendable items, but a failure after only 600 hours “shouldn’t happen”.
But here we are.Potential issuesI’ve tried asking around, and I’ve rounded up a couple of potential culprits:Tightening the nuts holding the POM too hard.A gap between the motor mount and the front extrusion.I found is a gap between the motor mount and the front extrusion.This should mean that the rod would be tilting backwards at a slight angle, which might mean that the rod would catch against the nut more in that direction, increasing the attrition on the nut.The theory meshes well with the unevenly ground threads, especially since I mostly print things at a similar Z-height (as you can see in the first photo where the rod has collected a lot of flakes).The threads aren’t ground down evenly.
One side is almost completely flat, while the threads are clearly visible on the other.I used thewrong greasefor the rods (POM is self-lubricating, maybe I don’t even need grease?).Dust/dirt stuck in the nut or on the leadscrew.An issue with the LDO kit.Someone in the VORON Discord said that this is a well-known problem with LDO Trident kits (sigh, I chose the expensive option to avoid problems like these…).The Z-motor I have is LDO-42STH40-1684CL300T.
I don’t know what kind of POM nut I have (it’s black and it came with the LDO kit…)Solutions/workaroundsI don’t know the actual cause of this, but I’ve done my best to address the potential issues described above.
I’ve loosened the nuts on the POM nut a bit, I’ve adjusted the motor mount, and I’ve tried to clean the leadscrews (with a toothpick of all things). In the future I’ll try to avoid the grease as well.I complained to 3DJake where I bought the kit, and they’re sending me a replacement leadscrew including a POM nut.
It’s shipping from China so the wait is very long.
In the meantime I bought a fewreplacement leadscrew nuts(TR8*4, not the TR8*2).Replacing the nuts weren’t that hard, but I hope it’ll take more than 600 hours until the next major issue.(I’ve already started seeing dust on the leadscrew… I’ll probably replace it when the replacement arrives and hope it’ll get better.)This is
      part 11 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failure←Let's build a VORON: Wrap-upRead the next partPublished:March  1,2024Revised:March 11,  2024in47fa7a9Tagged:3D printing,VORONPreviousNext</description>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Noise</title>
      <link>https://www.jonashietala.se/blog/2024/02/28/lets_build_a_voron_noise</link>
      <description>Let's build a VORON TridentLet's build a VORON: NoisePublished:February 28,2024Revised:May  3,  2024ine5708e2Tagged:3D printing,VORONThis is part 10 of theLet's build a VORON Tridentseries.The build is going well and the printer is printing tons of random stuff and I’m generally in awe of how cool the printer is.But there’s one thing that sucks: it’sdamn loud.I knew that it wouldn’t be silent, but I wasn’t prepared for this kind of noise.Silent controller fansThe very first mod I made (even before my first print) was to replace the LOUD skirt fans with silentNoctua FN-A6x25.
When I say the fans were loud, I mean that they wereincredibly damn loud.
I don’t see how anyone could be near the printer with fans this loud for a prolonged period of time.Maybe I’m just sensitive, but I digress.You can run PWM fans, but I didn’t see the point so I went with the simple 3-pin variant.
The fans will fit as they are and I only made some small tweaks:Used the 12V selection jumper for the fan output on the Octopus.Converted the 3-pin cable to a 2-pin JST connector, and used the existing fan PCB to split the Octopus output.
(You can ignorethe yellow RPM speed signal cable.)The connection looks like this:The fans are connected to the PCB splitter using low-noise adapters.  
It’s important to move the jumper for the PCB FAN connector.I altered the extension cables that came with the kit because it leaves the fans intact and I can control the speed using the included low-noise adapters (I used the ultra-low-noise adapters).
I didn’t have a compatible 3-pin splitter for the fans so I used the PCB I had on hand.I also took the opportunity to cleanup the wiring and place the fans on the other side, closer to the Raspberry Pi:The wiring looks pretty neat. I hope I don’t have to mess with it in a long time.Message from the future: I’ve been writing these posts out of order, and I’ve had to mess with the wiring a bit.You could do something smart with the fan management, but I no longer hear the fans so I just leave them on all the time.
This is how I set that up inprinter.cfg:[fan_generic controller_fan]## Controller fan - FAN2pin: PD12kick_start_time: 0.5max_power: 1.0# Set the controller fan to be on from startup.# Speed is controlled by noctua low-noise adapter.[delayed_gcode controller_fan_boot]initial_duration: 1.0gcode:SET_FAN_SPEED FAN=controller_fan SPEED=1.0Nevermore fansAnother annoyingly loud part was the fans on the Nevermore filter.
I could try to reduce the fan speeds, but that would also reduce the effectiveness of the filtering which I’m reluctant to do.Then I found an issue discussing thatthe plenum lid makes the fans loud and weakbecause it restricts the airflow.
I can only confirm that it made a noticeable difference.
It’s by no means quiet like the Noctua fans, but now it’s similar in noise level to the hotend and partcooling fans.It’s ugly because the prints don’t match, but it’s much quieter (and more effective).Loud stepper noiseAnother really annoying noise was the steppers.The first problem was them being noisy while idle.
This was solved by adding stealthchop:stealthchop_treshold: 999999But it was still really loud when moving, especially the xy steppers were super annoying.This seems to be acommon issue with some 0.9° steppersand I tried manage this with various config settings:Lowerrun_currentfrom 0.8 to 0.6 for x- and y-stepper motors.This drastically lowered noise during movement.
It’s not silent and it’s still too loud, but it really helped.Some have suggested that raisingrun_currentmight help as well, but for me that just made things worse.Increased microsteps.microsteps: 128on xyAs long as the MCU can handle it there should be no downsides(?), and it does help with lowering noise.I triedinterpolate: true, but I didn’t notice any improvements.While things mostly weren’tthatbad anymore, at certain speeds and certain angles the noise was still way too jarring for me to leave it alone.
And it wasn’t just too high speeds, sometimes decreasing the speed made it worse!77dB is loud! This was from long diagonal movement during (non-first layer) solid infill, which was one of the movements that generated the most noise.So I gave in and ordered twoWantai 42BYGHM810steppers from Aliexpress thataccording to the linked discussionshould be much quieter. (1.8° degree steppers should generally be much better too.)After waiting quite a while, the motor I got had the correct label of42BYGHM810but marked as 1.8°, despite being sold as a 0.9°.
The joy of Aliexpress sometimes…But it does seem that it is a 0.9° motor, and it was just badly labeled.Swapping the motors was very easy, just loosen the belts a bit and I could pull them out.
With some Molex Micro-Fit  3.0 4-Pin connectors (and some crimping…) I got it to run with arun_current: 1.1and it’sso much quieter!The motors run at 52dB in the same conditions as the LDO motors, which isreallyquiet.
I can’t understate how large a 20dB difference truly is.
The 63dB peak was from the filament getting pulled from the spool.Is it silent?Of course, the printer isn’t nearly as quiet as my water cooled computer—how could it?
But these changes have made the printermuchquieter, which is important to me as I’m quite sensitive to noise.It’s still a bit noisy—too much if I want to sit in silence and ponder a difficult problem—
but it’s silent enough so I can have it running in the background while I’m working.
I’ll probably pause it if I’m in a call, and I won’t have it running all the time during work hours.
(The printer is in my office, right behind me.)This is
      part 10 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: Noise←Let's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:February 28,2024Revised:May  3,  2024ine5708e2Tagged:3D printing,VORONPreviousNext</description>
      <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: More mods</title>
      <link>https://www.jonashietala.se/blog/2024/02/27/lets_build_a_voron_more_mods</link>
      <description>Let's build a VORON TridentLet's build a VORON: More modsâ˜Published:February 27,2024Revised:July  1,  2024inac95a3bTagged:3D printing,VORONThis is part 9 of theLet's build a VORON Tridentseries.The printer is done, but I feel one of the best part of a VORON printer is the ability to modify and personalize it.
There atonsof mods you can do, and while Iâ€™ve done a few there are lots more that Iâ€™d like to do some day.Itâ€™s a wonderful feeling to augment the printer with parts made by the printer itself.ContentsRockNRollRemovable panelsClicky-clack doorAngry camSmart filament sensorFlex plate stopsGridfinity mountsMeshed panelsGalileo 2Purge bucket &amp; CNC TapRockNRollFlipping over the printer to access the electronics apartment is a huge pain.
Thereâ€™s a very coolinverted electronics bay modfor Trident printers, but itâ€™s a tall ask for me to redoallthe wiring at this point.But then I found the simpleRockNRollmod that allows you to easily tilt the printer.
Just having the rockers doesnâ€™t work as the center of gravity is too high for the Trident, but withthese additional stiltsit works great.Removable panelsHaving to screw and unscrew the panels when modding or messing around with the toolhead got old fast.
Therefore I made the panels easily removable by using magnets and snap latches.The top is completely magnetic using theMagnetic panels with Magnet Insertsmod and is very easy to remove and replace.Installation of the corner magnets.I played around with the amazingsnap latchesmod to hold the panels together:The latch closes with a very satisfying thud.But theyâ€™re a bit cumbersome to lock and unlock, so I compromised and used the latches in the middle of the side panels and used magnets for the corners:I also made the bottom panel magnetic usingthe bottom panel mag clipmod:Necessary?
Noâ€”but it feels nice.Clicky-clack doorI really didnâ€™t like the stock doors on the printer.
I was planning to use the same magnetic and/or latch system for the front door, but I realized it would be very bothersome compared to a door you can swing open.Luckily I found theClicky-Clack Fridge Doormod that replaces the split panels with a full panel door and that can swing open, provides a better seal than the stock doors, and can easily be removed.
It may not win any beauty awards, but it sure is functional.Angry camThe mod I most appreciate is probably having an integrated camera.
Itâ€™s great to be able to just glance at my phone to see how the print is going, instead of having to go down to the basement to check.I used theAngry CAM USBmod to mount a small camera module in the front of the printer, above the doors.
The camera itself showed up in Mainsail and to my relief it worked immediately.
To configure resolution you can altercrowsnest.conflike so:[cam 1]mode: ustreamer                         # ustreamer - Provides mjpg and snapshots. (All devices)resolution: 2592x1944                   # widthxheight formatmax_fps: 15                             # If Hardware Supports this it will be forced, otherwise ignored/coerced.To see what resolution and fps the camera supports, you can take a look in~/printer_data/logs/crowsnest.log.I used the MJPEG IP Camera integration to get the feed into Home Assistant, usinghttp://192.168.1.32/webcam/?action=streamas the URL and made a quick dashboard for the printer:Can you smell what the rock is cooking?!I should probably rework this and all other Home Assistant dashboards one dayâ€¦The mount works well, but the camera is far from perfect.
Itâ€™s good enough for checking in on the print, but a more clear view wouldâ€™ve been nice.
The focus isnâ€™t working well, the colors are off, and I donâ€™t see the whole build plate.
Worse, the toolhead often covers up the print so I canâ€™t see if itâ€™s still printing well.I wonâ€™t do anything about it right now, but in the future Iâ€™ll probably try to replace it with something else.Smart filament sensorBed adhesion and first layer problems are annoying, but they can be mitigated by watching the first layer go down and if it goes badly you donâ€™t lose that much time.Something much more annoying is when the filament tangles.
According to the internet it â€œshould never happenâ€, but it has happened with four different spools from different manufacturers and it sucks when the print fails multiple hours in.See this? This damned spool ruined 4 prints in a row for me.
Itâ€™s not a real knot, but itâ€™s tangled hard enough that the extruder couldnâ€™t pull it free, and it started to grind down the filament instead of extruding it.Fed up, I ordered Bigtreetechâ€™sSmart Filament Sensor V2.0that can detect both running out of filament and these â€œknottedâ€ spools.There are somenice mountsfor it, but finding a good mounting point was difficult.
I ended up moving the spool to the side of the printer, and routing the cable through the back panel:One difficulty was that the wire was just a tad too short. I got it to reach, but just barely.
I couldnâ€™t route the cables to make the underside prettyâ€¦ But meh.The Octopus has dedicated ports for the two BTT connectors.To setup Klipper I used this code:[filament_switch_sensor filament_sensor_switch]switch_pin: ^PG12pause_on_runout: Trueinsert_gcode:M117 Insert detectedrunout_gcode:M117 Runout detectedSET_DISPLAY_TEXT MSG="Runout detected!"[filament_motion_sensor filament_sensor_motion]switch_pin: ^PG13detection_length: 10 # ellis recommends to start at 10mm, could maybe adjust this?extruder: extruderpause_on_runout: Trueinsert_gcode:M117 Insert detectedrunout_gcode:M117 Runout detectedSET_DISPLAY_TEXT MSG="Runout detected!"You also need properPAUSE/RESUMEmacros.
I just copied the macros fromEllisâ€™ print tuning guide.I tested it by holding the filament during the print, trying to simulate a knot in the filament.
This worked, but damn was it HARD.
The extruder really does have force behind it.Since installing the sensor it has already saved multiple prints.
For sure a huge quality-of-life improvement, and feels like a must-have.Flex plate stopsAligning the flex plate isnâ€™t too much of a pain, but adding someflex plate stopsmakes the process easier.To fit it at the back I removed the now unused z-endstop (I use Tap instead).Gridfinity mountsIâ€™ve been slowly easing intoGridfinityâ€”a free and open organization system.
So naturally I wanted to add some some holders to the printer.I used a combination oftopandbottomholders.Meshed panelsAddingmeshes for the panelsmight be one of the prettiest mods you can doâ€”and I think itâ€™s very prettyâ€”but thatâ€™s not why I did it.
I added it as a safety measure against my kids (or me) inserting something like a screwdriver inside the electronics while the printer is running.I didnâ€™t do any fancy filament swapping prints, I just printed the meshes and glued them onto the backs of the panels.
It works.Galileo 2I replaced the Clockwork 2 extruder with theGalileo 2.This wasnâ€™t exactly needed, I just thought it would be fun as building the Clockwork was one of the most interesting parts of the build, and thisplanetary gearsthing looked pretty interesting.
And the FOMO kicked in as I was following the discussion online, with people hyping about it but not being able to find a kit.
So when I happened to find one I couldnâ€™t help myself.I was planning to make a separate post only about the build, but the build was surprisingly very quick so I think it works if I include it in this blog post.I was worried about the quality of my printed parts, but they fit well.The planetary gears.Time to shove the motor into place.The drive gear is installed.The only difficulty I encountered when assembling the extruder itself was to align the drive gear.
It touched the printed part, and I was worried my prints came out all wrong.
The manual says that you can push down the carrier shaft, but I had to disassemble it and realign it before attaching the motor.
After the reassembly it luckily aligned properly.There were no issues mounting the extruder onto Tap or into the Stealthburner either.
The LDO toolhead PCB fit without having to use spacers, although closing the lid wasverytight.Galileo 2 fits well on the printed Tap.The biggest pain point was the wiring management (yet again).
The drag chain mount on the Galileo 2 is higher up than on the Clockwork 2, which meant I had to pull through more wiring to be able reach the PCB.Opening up the drag chains to pull through more wiring.I really donâ€™t enjoy opening up the drag chains, itâ€™s just a huge pain.
The next time I need to mess with it, Iâ€™ll probably go Canbus orNitehawkand get rid of the annoying chains.Iâ€™ve seen some people complaining that theyâ€™ve lost some y-travel, but I donâ€™t understand why.
For me the range has been unchanged.The big question is,does it print better?Itâ€™s a difficult question, because I donâ€™t really know.
Maybe it does, but I didnâ€™t make any test prints to really compare.
But itâ€™s not an extreme improvement like some people online made me to believe.
Itâ€™s more an incremental improvement, and the Clockwork 2 would honestly be good enough for me.I do miss the latch of the Clockwork 2, but I donâ€™t think Iâ€™ll switch back right now.
Even small improvements to extrusion quality is nice.Purge bucket &amp; CNC TapThe kit comes with a steel brush and references theDecontaminator Purge Bucket &amp; Nozzle Scrubbermod that I was quite excited for.Unfortunately, Tap decreases the range of motion for the toolhead so that the nozzle no longer can reach back behind the bed:This is as far back the nozzle can go. As you can see, it doesnâ€™t reach the (now unused) z endstop, and thereâ€™s no room for a purge bucket / nozzle scrubber.There are some things I could do:Ditch Tap and use Klicky probe instead.Replace the printed Tap with a CNC Tap.The Chaoticlab CNC Voron Tap v2 should save around 4mm in the y-axis while Vitaliiâ€™s version should save around 1.4mm.Sensorless XY homingmight also give back some range.Moving the bed is a theoretical solution, but that seems difficult to me.I bought aChaoticlab CNC Voron Tap, but had I known about the sensorless homing I might have tried that out first.Installation was straightforward, I just had to be mindful of these things:Grease the rails.Apply threadlocker to the screws.I had to switch the wiring in the Tapâ€“PCB cable.Use~!PG15instead of^PG15in the probe config.Butâ€”and hereâ€™s the big butâ€”itâ€™s not compatible with LDOâ€™s X/Y Endstop PCB board:Thereâ€™s nothing to press the X Endstop switch anymore.To make this work Iâ€™ll have to add an X Endstop to the toolhead (thereâ€™s a dedicated mount for it), which is fine.
Thereâ€™s a X Endstop connector in the toolhead PCBâ€¦
But I donâ€™t see how to get that signal out from LDOâ€™s breakout board in the electronics compartment (it takes it from the X/Y Endstop PCB).That feels like a lot of effortâ€¦
And I told myself I would not drag more wires through the drag chain, so I gave up on the mod for now.
Iâ€™ll revisit this when I move to an umbilical setup, where I plan to move the X and Y endstops anyway to get rid of the drag chains.But thatâ€™s a larger project for the future, at the moment Iâ€™m content.Back in no time.last words of William S. BurroughsThis is
      part 9 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsâ†Let's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:February 27,2024Revised:July  1,  2024inac95a3bTagged:3D printing,VORONPreviousNext</description>
      <pubDate>Tue, 27 Feb 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The eBook for 'Why Cryptocurrencies?' is now available for free</title>
      <link>https://www.jonashietala.se/blog/2024/02/19/the_ebook_for_why_cryptocurrencies_is_now_available_for_free</link>
      <description>The eBook for 'Why Cryptocurrencies?' is now available for freeâ˜Published:February 19,2024Revised:March 11,  2024in47fa7a9Tagged:Self-publishing,Why Cryptocurrencies?The eBook for my bookWhy Cryptocurrencies?is nowavailable for free.Itâ€™sbeen almost 4 yearssince theweb versionwas done, and3 since the physical copy was availableâ€¦
Which can hardly be called a success.Things happened, so letâ€™s do a quick retrospective to, maybe, learn something.The project is doneIâ€™m very good at putting myself down and to focus on the negative parts to the expense of the positive.I need to learn to take a step back and appreciate the good things I do, and even though it took a log time the book project is nowcompletely done.No matter how you look at it, actually finishing a large project such as self-publishing a book should be seen as a success.
Sure, it took a lot longer than I wanted to wrap it up, but Ifinished it, and finishing a large project is an accomplishment in itself.Iâ€™ve had this project hanging over me like a dark cloud, painfully aware that itâ€™salmostdoneâ€”and has beenalmostdone for yearsâ€”continually increasing my stress levels.
But now, I can finally let it go.Let it go, let it goCanâ€™t hold it back anymoreLet it go, let it goTurn away and slam the doorFrozen(I prefer theSwedish versionof the song.)I made it more difficult for myself than it had to beDespite reading countless advice to â€œfocus on contentâ€, and to â€œchoose a simple solutionâ€, I added too much complexity and was a tad too ambitious.I used anon-standard generator, with no native eBook or PDF generation support.While generating a PDF was easy (itâ€™s basically a copy of the PDF for the printed book), generating a nice-looking and functional EPUB took a bunch of time.I was very particular with the typesetting and styling.The result looks great, but styling the web version, the printed version, and then (re)style the epub took alotof extra time.I wanted to take payments in crypto, so before I made the eBook I made my owncryptocurrency payment processor.The project suffered hard from ridiculous scope-creep, and it was far from â€œjust accept a paymentâ€
(which was done the first weekâ€¦).
Itâ€™s also yet-another â€œalmost finishedâ€ project I want to revisit.In hindsight, the error is obvious.
I shouldâ€™ve written the book in an existing solution that would generate the website, epub, and PDF with minimal intervention from my side.
Or at the very least I shouldâ€™ve setup the epub and PDF generation from the start, instead of rushing the writing and leave the rest until later (leading to a bunch of extra work).The idea was to make the eBook purchasable with an assortment of cryptoâ€”and I did have that for a whileâ€”but I really shouldâ€™ve focused on finishing the eBook in a timely manner instead.Burnout, procrastination, and losing faithWhile I certainly bit off more than I could chew, I faced other challenges during the project:I got burnt out, hard.Iâ€™m an expert-level procrastinator.My faith in the cryptocurrency community continued to dwindle.We got another kidâ€”twice! Now we have three.I wrote aseparate post about my burnout, no need to rehash the details of that unpleasant experience again here.
With the burnout (and the depression that tagged along), my heavy procrastination, and the arrival of two kids, maybe the surprising thing isnâ€™t that it took so long, but that I got anything done at all?Procrastination is about doing the wrong thingWait a minute you might think; how can this person claim to procrastinate when heâ€™s done so many other things?Itâ€™s true that Iâ€™ve spent a lot of time to do many other things, while neglecting the book project.
But to me procrastination isnâ€™t about doing nothing, itâ€™s about doing things with less priority.For example, instead of finishing the book project Irewrote the blog in Rust, refactored it touse Djot instead of Markdown(despite Markdown working just fine),built a 3D printer, and spent tons of timedesigning my own keyboard layoutâ€¦These are really fun, cool, and even sort-of productive things.
But they werenâ€™t the things Ishouldhave prioritized, which in the logic of procrastination makes themvery appealingto my brain.I donâ€™t know how to stop procrastinating.
The best strategy Iâ€™ve found is to try to harness it by directing it towards something productive (such as exploring a new programming language), and accept the fact that progress on other project will sometimes slow down.I still believe in the potential of cryptoâ€¦.I still firmly believe that cryptocurrencies has an amazing unrealized potentialâ€”and I still stand behind the majority of my argumentsin the book, where I focus on what cryptocurrencies can be useful for.
In many ways I think the arguments of digital cash are even stronger today than when I started writing the book some 5 years ago.But I severely underestimated the negative effect â€œfast moneyâ€ had on the cryptocurrency community, and how the focus completely shifted from cryptocurrencies being used to buy things in the real world, to just rampant speculation and get-rich-schemes.The LaserEyes Bitcoin campaign exemplifies everything I loath about crypto.10 years ago, if you asked people what the point of Bitcoin was, they wouldâ€™ve said that itâ€™s a new form of money that you can send instantly and very cheaply to anyone in the world, without handing it over to a third-party.But today people will point at the newly approved Bitcoin ETF, that Bitcoin has tons of institutional investments, and that itâ€™s a â€œgreat Store of Valueâ€.
Which is all only an euphemism for speculation and a desire to get rich.Thinking about it makes me tired and sad, and drains me of the energy and makes me want to distance myself from the space, rather than try to improve it.
The point of crypto was to improve things for regular people, notthis.â€¦Howâ€™s that for a recommendation formy bookthat extols the virtues of crypto? :)Main takeawaysIf you want to finish a similar project in a reasonable amount of time, Iâ€™d say these are the biggest tips I have:Fight complexity and scope-creep.Focus on the content of the bookâ€”cut down everything else.
Except for marketing, but how to do that competently is a riddle youâ€™ll have to solve yourself.If I had a setup that could generate a web version, an EPUB, and a PDF from the start the eBook wouldâ€™ve been completed years ago.
But now I let things come between, and time runs quickly when that happens.Find a way to stay motivated.I for one love to start projects, but finishing them is tough.
If you find a project that youâ€™rereallypassionate about then youâ€™ll drastically increase the chance for success.
And even if you do, if the project takes a long time then it can still be challenging to get the project over the finish line.External positive feedback is also helpful, even though I believe the best motivation comes from within.What gave me the last push was that I told myself in very stern words that I have to finish this before I can start my next project.
Iâ€™ve done this multiple times with varying levels of success, but this time my brain seemed to listen.Sometimes shit out of your control happens.I was going to add â€œdonâ€™t get burnt outâ€ as an item, but I should know that itâ€™s not something you easily avoid.Acceptance that it sometimes take longer is good.
I try to tell myself that itâ€™s not a disaster just because it takes a bit longer than initially planned.Published:February 19,2024Revised:March 11,  2024in47fa7a9Tagged:Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How I did the layout for my self-published book</title>
      <link>https://www.jonashietala.se/blog/2024/02/17/how_i_did_the_layout_for_my_self-published_book</link>
      <description>How I wrote 'Why Cryptocurrencies?'How I did the layout for my self-published bookâ˜Published:February 17,2024Revised:July  1,  2024inac95a3bTagged:Self-publishing,Why Cryptocurrencies?This is part 4 of theHow I wrote 'Why Cryptocurrencies?'series.This is a rundown of how I typeset and laid out my self-published book for theweb version, theEPUB version, and theprinted version.I was planning to include many more details, but the project took a lot longer than planned so Iâ€™ve forgotten some things.ContentsWeb pageEPUBCreating an EPUBStylingValidatingPhysical bookXML importerStylesLots of manual tweaksPrinted books have certain expectationsWhat Iâ€™d do differentlyWeb pageI started by creating the book in a web format.
Itâ€™s a static site generator that simply outputs HTML with some custom CSS styling to make it look pretty.
I wrote a separate post onhow I wrote a book with Pollen, check it out if you want more details.As Iâ€™ve become more proficient with CSS, I wouldâ€™ve used Flexbox and Grid instead of floats and other hacks.
Still, Iâ€™m quite pleased with how it looks even though Iâ€™d rather not look at the implementation.Iâ€™m absolutely no CSS or design wizard, I just spent quite some time tweaking until I ended up with something decent (I guess design is simple, but not easy).EPUBThe initial plan was to use Pollen to generate both the web and eBook version from the same source.
This is supported in Pollen by branching in the output functions, for example this emphasis functionfrom the tutorial:(define(emph.elements)(case(current-poly-target)[(txt)`("**",@elements"**")][else(txexpr'strongemptyelements)]))Unfortunately, I didnâ€™t do this from the beginning and I wanted to create an EPUB after the book, and all the functions, had already been made.I could of course go back and modify them all, but it was much faster to just branch the repo and modify the webpage until it produced a valid EPUB.
Hardly ideal, but it actually wasnâ€™t as bad as it may sound.Check out theepub3 branchon GitHub for the complete source for the EPUB.Creating an EPUBThere are many EPUB generators out there, but those I tried didnâ€™t produce very pretty books (in many cases the results were quite bad).
But an EPUB is merely XHTML with some extra files, so itâ€™s fairly straightforward to create one by hand.There is anEPUB 3 specificationone can reference, but Iâ€™ve always found that itâ€™s much easier to get going bylooking at examples.For my book, this is how the file structure ended up in the EPUB:â”œâ”€â”€ META-INFâ”‚Â Â  â”œâ”€â”€ container.xmlâ”‚Â Â  â””â”€â”€ encryption.xmlâ”œâ”€â”€ OEBPSâ”‚Â Â  â”œâ”€â”€ content.opfâ”‚Â Â  â”œâ”€â”€ main.cssâ”‚Â Â  â”œâ”€â”€ toc.ncxâ”‚Â Â  â”œâ”€â”€ fontsâ”‚Â Â  â”‚Â Â  â””â”€â”€ ...â”‚Â Â  â”œâ”€â”€ imagesâ”‚Â Â  â”‚Â Â  â”œâ”€â”€ emission-rates-fallback.pngâ”‚Â Â  â”‚Â Â  â”œâ”€â”€ emission-rates.svgâ”‚Â Â  â”‚Â Â  â”œâ”€â”€ generals.pngâ”‚Â Â  â”‚Â Â  â””â”€â”€ ...â”‚Â Â  â”œâ”€â”€ how_do_cryptocurrencies_work.xhtmlâ”‚Â Â  â””â”€â”€ ...â””â”€â”€ mimetypeThe.epubfile itself is just a zip of the above, with the mimetype first in the archive:#!/bin/bashcd_ebook/zip-X0why_cryptocurrencies.epub mimetypezip-Xur9Dwhy_cryptocurrencies.epub*If you want to take a closer look, you candownload the EPUB for freeand unzip it.Themimetypecontains the mimetype (without a trailing newline):application/epub+zipThe entry-point to everything is theMETA-INF/container.xmlfile that simply redirects us toOEBPS/content.opf:We donâ€™t have to use theOEBPS/directory, but most of the examples I looked at used it so I ran with it.
Maybe itâ€™s some kind of standard or something, I donâ€™t know.content.opfcontains what you think it does: all the content for the book:&lt;!--There are other meta fields you want to set, this is just an example--&gt;Why Cryptocurrencies?main&lt;!--Sets the cover page that shows up in EPUB readers--&gt;&lt;!--With EPUB 3 you can also create fixed layouts.My EPUB tries to mimic the reflowable web version,although you could bundle both in the same EPUB file if you wanted to.--&gt;reflowablescrolled-doc...&lt;!--The .ncx file is a deprecated file that EPUB 3 readers should ignore,but it may be included to help EPUB 2 readers understand the file.Instead the &lt;spine&gt; element is used to describe the reading order of the book.I won't describe the file more, if you're curious download the epub and crack it open.--&gt;&lt;!--Every chapter in the book has its own .xhtml file.--&gt;...&lt;!--All images needs its own entry too.--&gt;&lt;!--This is the cover reference defined earlier in the &lt;metadata&gt; section.--&gt;&lt;!--Svg images should specify a png fallback.--&gt;...&lt;!--And the fonts needs to be specified as well.--&gt;...&lt;!--The spine contains the default reading order of chapters(or "items", they don't have to be chapters).--&gt;...Thereâ€™s also font â€œencryptionâ€ viaencryption.xml(which is only obfuscation) that I had to use because of the license of the fonts I use, but generally itâ€™s not needed.And thatâ€™s basically all an EPUB is.
I used a very hackyPython scriptto move the files into position, generate the spine, image items, and the other stuff I alluded to above.Why did I write that in Python instead of in Racket, which the rest of the book made with?
I really have no ideaâ€¦StylingI had an incredibly frustrating experience trying to style the EPUB to match the web version, with matching spacing, typeset, sidenotes, and the rest.
It felt that whatever I tried, every reader would just ignore all the styling and fall back to their own andâ€”in my opinionâ€”horrible appearance.I even gave up on the eBook for a time because of it.But then I noticed I had made an EPUB 2 instead of an EPUB 3, and with the newer version all styling worked with little modification.
This of course depends on the EPUB reader, but thereâ€™s not much I can do about that:Different Android readers (ReadEra, eBoox, and Lithium) renders the EPUB very differently.
Unfortunately, the EPUB wonâ€™t look great on all readers.ValidatingWith the EPUB created, you should validate it.
The commonly recommendedidpf validatorseems to be down, I instead usedepubcheckI found on github.Turns out I had a few errors in my EPUB:$ java -jar epubcheck.jar ~/code/why_cryptocurrencies/_ebook/why_cryptocurrencies.epubCheck finished with errorsMessages: 2 fatals / 2183 errors / 2 warnings / 0 infosAnd this was after I had made a bunch of corrections. Sighâ€¦Fixing them was annoying and time consuming, but it wasnâ€™t hard. Most of them were easily fixed by updating the templates and tag generation within Pollen.Errors I ran into includes xhtml being more strict than html, so I couldnâ€™t nest an&lt;aside&gt;inside a&lt;li&gt;, leading to a nice big refactor of my sidenote generation code.Another error pointed out that I had to provide.pngfallbacks for all.svgimages.
With thefish shellandinkscapeyou can mass convert images like so:forfilein*.svginkscape-w1024$file--export-filename(basename$file.svg)-fallback.pngendAnd then specify the fallback incontent.opfas shown before.Physical bookThe initial idea was, again, to use Pollen to create the book.
I wanted to use Pollen to generate Latex that could produce the PDF I wanted.But thatâ€™s not the route I went with.
Similar to how it was a big challenge to get Pollen to produce an EPUB version in conjunction to a regular HTML version, making it produce a Latex variant was a big task.
In addition, making Latex reproduce my sidenote styling and placement wasnâ€™t at all straightforward (maybe I just suck at Latex).I instead laid out the PDF withInDesign.
It required more manual tweaks that I really didnâ€™t enjoy, but on the flip side it was very easy to make manual adjustments to get the layoutjustright.XML importerOf course, we donâ€™t want to manually copy-paste the whole book, that would be silly.
InDesign has an XML importer that we can use to import the book, and if we setup styles to automatically apply to certain elements (such as&lt;aside&gt;sidenotes) you get quite a lot of help.Yes, itâ€™s buggy and not well documented, but itâ€™s still a life-saver.I had to style the references manually because the importer messed them upâ€¦StylesTo work effectively with InDesign I found that effective use of styles is a must.
The most important part of laying out my book was getting sizing and spacing right, and to do that you setup styles for the different cases and apply them (mostly to paragraphs).Lots of people love to rag on CSS, but CSS is very powerful and itâ€™s relatively simple to for example style a list, with proper spacing before, after, and between elements and text just the way you want it.
With InDesign this wasnâ€™t nearly as straightforward, and I ended up with several styles I had to apply depending on the surrounding context:I ended up with quite a few paragraphs related to lists. The first and last paragraph needed special handling because the spacing was slightly different in order to play nice with other styles.
Then thereâ€™s â€œmultiâ€ that contains multiple paragraphs in one list item, nested lists, and different types of listsâ€¦All this just to get consistent spacing for my various lists.I think the lists look nice and are very readable.Lots of manual tweaksMost of the time what I did in InDesign is read through the book to make small adjustments.
I adjusted sidenote placements, tweaked styles here and there, adjusted page breaks to balance pages, adjusted paragraphs, added index referencesâ€¦ And then I did it all over again.Yes itâ€™s time consuming and annoying, but also weirdly therapeutic.
I could satisfy my need for perfection by nudging text boxes around until the end of time.Who needs therapy when you can lay out boxes?Printed books have certain expectationsIf you upload a book on a website, or even if you create an EPUB, you can almost do whatever you want and itâ€™ll probably be fine.
But printed books has certain expectations that should be followed.For example how a new chapter or section should start on a new page to the right, and leave the left page blank if needed.
Or how chapters and sections next to page numbers on the bottom can help you navigate a technical book such as mine.
These are things you donâ€™t really notice, unless you come across a book without them.
(Fiction has other expectations because you donâ€™t jump around when you read.)One thing thatâ€™s easy to forget about in the internet age theindexyou can find at the end of many books.
Itâ€™s designed to help you easily find things in the book, sort of like a curated search engine, but on paper.A correctly structured index is invaluable. Mine at least exists.Designing a good index is hard, because itâ€™s not about listing all keywords in the book.
Itâ€™s about anticipating the needs of the reader, so someone searching for â€œBitcoinâ€ may be redirected to the chapterHow do cryptocurrencies work?, even though Bitcoin isnâ€™t singled out in the chapter (it discuses cryptocurrencies in general).The index also acts as a sort of overview of what topics are discussed.
(Arenâ€™t you curious whyDakota Skye is mentioned in the index?)This seems difficult to do wellâ€”and I probably failed hardâ€”but I tried.What Iâ€™d do differentlyIf I would write a book again, I would try to do what I wanted to in the first place: generate all versions from a single source.I wouldnâ€™t have usedPollen.
While it feels really nice to be able to inject code anywhere in your markup, having to maintain 3 different outputs with every function you write is a bit much.Instead Iâ€™d try some kind of standard markup format with preexisting EPUB and PDF generation.
I could still set it up to have custom transformations, but it would be so much easier to work with compared to programming the generation completely by myself.Working with InDesign was actually fine, but keeping the different versions in sync was difficult, so it would still be beneficial to cut it out from the process if possible.But Iâ€™d still want to do the layout myself.
It didnâ€™t feel difficult, I mostly enjoyed the process, and I think the result was quite good.The boxes donâ€™t nudge themselves you know?This is
      part 4 of theHow I wrote 'Why Cryptocurrencies?'series.How I wrote a book using PollenHow I made a kick-ass cover for my self-published bookWriting lessons learned after writing a bookHow I did the layout for my self-published bookâ†This series is completed.View all seriesPublished:February 17,2024Revised:July  1,  2024inac95a3bTagged:Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Printing Hextraction for my kids</title>
      <link>https://www.jonashietala.se/blog/2024/02/09/printing_hextraction_for_my_kids</link>
      <description>Printing Hextraction for my kidsâ˜Published:February  9,2024Revised:May  3,  2024ine5708e2Tagged:3D printing,HextractionA session of Hextraction, a 3D printed board game.I did it.
I made something actually useful withmy 3D printerinstead of just tinkering with it.I printedHextraction, a very cool 3D printed board game for my kidsâ€”and they love it.Hextractionis a gamified marble run, where you place tiles and drop balls in order to reach the end without getting yeeted off the board.
Itâ€™s kind of hard to explain it in text, so if youâ€™re still confused just watch the video from the creator.
Heâ€™s hilarious:Click to view on YouTube(The first 20 seconds should give you a good idea of what the game look likes.)Keep it simpleWhile Iloveboardgames, I printed this game for my kids to enjoy.
Because theyâ€™re still young at 6 and 3 years (our 1-year old have to wait) I had to keep the game simpler than Iâ€™d personally like.You see,Hextractiondoesnâ€™t only use regular tiles that directs the balls, they also have special effect tiles that have special rules.
For example, with theTeleport Tileyou can restart your ball from another location or with theClone Tileyouâ€™re supposed to roll another ball from that same tile.
The mind boggles with cool and interesting plays with these kinds of tilesâ€¦But they all have their own specific rules that you have to remember or read on a rules card.
Having to constantly be reminded of rules isnâ€™t really fun, and our kids canâ€™t read Swedish let alone English yet, so unfortunately the special effect tiles must be ignored for now.Another thing Iâ€™ve avoided are the â€œlauncherâ€ tiles that will launch the balls in the air, so you can try to jump over tiles or onto the goals.
Although they look funâ€”and they would be perfect for my boysâ€”I dislike the idea of launching balls to our 1-year old crawling on the floor.Other than that the rules we use are very simple:Place a tile (out of a hand of 3)Drop a ballDraw a new tileAnd if ever 3 balls (or more) get stuck on a single tile, youâ€™re allowed to remove one tile that the balls are touching.(Oh, if a ball happens to bounce into a goal, thatâ€™s ok and part of the game!)BoardsBefore getting into the tilesâ€”which is the meat of the gameâ€”let me first address the board, which is the structure you place your tiles into.Thereâ€™s anofficial boardyou can use, but I really didnâ€™t like it for one major reason:
the balls can easily drop off the board, onto the table and roll down to the floor where our 1-year old might find and try to eat them.Luckily,Hextractionadvertises itself as a hackable game, and Thangs userInaudiblehas created two wonderful alternative boards for us to enjoy:Thesuper fancy remixwith full gutters, variable size, ball holders and more.Amodular boardyou can rebuild into smaller and larger weirdly shaped boards.Modular boardThe modular board.
I failed a little with my color selection as the two darker gray colors are way too similar.I started with themodular boardbecause I thought it would be nice to be able to modify it later, but mostly it was because it had just been released and my monkey brain thought â€œnewer = betterâ€.I think the design is very cool.
You can rearrange the board into cool and weird shapes, and add â€œblockersâ€ right in the middle where no tiles can go.
But we only use it as a regular board, because rearranging it is a bit of a chore, and overkill for my kids.Pros:The mind boggles with the possibilities.Easily repairable if something breaks.Can be made in a cool varying colorscheme.Cons:It was easy to break the goals (they act like levers). I broke three of them.Itâ€™s not so easy to remove the balls from the gutters.Super fancy remixThe super fancy board remix.
I again failed with my color selection, as this is two (very similar) shades of brown.Because Iâ€™m not a reasonable person, I also printed thesuper fancy remix.While you can make the board larger, everything is glued together so once the choice is made youâ€™ll have to live with it.
I made it the same size as the other board, becauseâ€¦ I donâ€™t know really.While the board is less exciting than the modular one, I greatly appreciate the integrated gutters that funnel the balls to the center of the board.
There are some extra things, like dice and ball holders, but itâ€™s not something we use.Pros:Feels more robust.Good gutters that funnels all the balls into one place.Cons:Doesnâ€™t have the same coolness factor or flexibility as the modular board.Which board should you print?If I had printed this for myself, I wouldâ€™ve gone for themodular boardand played around with other layouts.
But for my kids and our use-case, I think thesuper fancy remixis better because itâ€™s a bit more robust and the fully integrated gutters are superior.You can of course print them bothâ€¦
But that require quite some time and material, so just pick one.
The gutters are a must in my opinion, so Iâ€™d rather choose one of these boards over theoriginal board.TilesThe fun part ofHextractionis the tiles, and there are lots of different tiles.
At first I thought itâ€™d be a challenge to find fun and interesting tiles when Iâ€™ve disqualified many of the most fun ones, but there were plenty of tiles for me and my kids to enjoy.Path tilesHonestly, a lot of the times when playing the game one of the most appreciated tiles to draw is just a regular tile.
Around half of the tiles we use are these basic path tiles.
Itâ€™s tempting to go nuts with the special tiles, but you need basic tiles to make the reasonable.
If everything is special, then nothing is.The original creator provides agood selection of basic tiles, most with short descriptive names; the DC, DIC, X, J, S, Z, Asterisk, and Peace tiles.
Iâ€™ve added theK tile,V tile,W tile,Xc tile,Triangle tile,Scissors tile,Rectangle tile, and someReroute tiles.Secret tilesWe had some mixed feelings about the secret tiles.
On one hand itâ€™s great fun to place a tile that only you know how it works,
but on the other hand the ball tends to get stuck inside them quite often, making the â€œ3-ball then destroy the tileâ€ rule difficult to keep track of.So I replaced them withalternative secret tilesthat never blocks a ball path:This is the tiles before I glued the lid on. Although it wasnâ€™t supposed to, the ball sometimes got stuck in the crossed out tile, so we threw that one away.I also used theinverted secret lidto make the lid (much) easier to print well.If you want to use the standard secret tiles, please note that the holes for the lids are too shallow for a few of them.
Seethis linkandthis linkfor fixes.Trap tilesThe trap tiles add quite a lot of depth to the game.Of thestandard trap tiles, the double one is the best IMHO.Traps are interesting because they allow you to block paths, allowing you to throw a wrench into your opponents plans at a crucial time.
This often leads to the players having to route around existing paths, without blocking them off completely.TheAngry Crabacts as a trap for the middle, and is released from the sides.Newtonâ€™s Cradleis an interesting one. Depending on how you orient the tile, it can act as a trap (that you can release from the other side) or as a regular tile.Newtonâ€™s Cradleand theAngry Crabare probably my two favorite tiles in the game.
I should print more of them.Speed bump tilesThespeed bump tilesdecreases the speed of the ball, trapping it if itâ€™s moving too slow.
The issue is that the kids gets a bit too frustrated with them, so Iâ€™ve reduced the number of speed bump tiles in circulation.We still have three that we use, mostly because I like the educational aspect of the tiles (itâ€™s physics!).Flip-flop tilesEven though it can malfunction at times, theFlip-flop tileis great as it adds a small state machine to the game.Misc tilesThePachinko tile.I personally really enjoy thePachinko tileas itâ€™s a great way to add some more randomness.ZoidbergandUwUgives a face to Hextraction.Because that level of randomness isnâ€™t enough, the beautifulUwU tileand theZoidberg tileacts as a random trap tile.
But theyâ€™re mostly traps.Aloop. You need speed if you want to get through this one.I also threw in aloop, because itâ€™s silly and itâ€™s fun when you manage to get a ball through it.
It has the same pedagogical effect as aspeed bump tilewhile having a cooler effect.Who doesnâ€™t love a goodvortex?Every marble run needs a vortex, and thereâ€™s theVortex tileto fill that spot in Hextraction.
I did have some issues getting it to print the tunnels correctly for my 10mm balls, but some filing took care of that issue.Is there a better way to store balls than in a tile?To store the balls I useThe Ultimate Hextraction Storage Box.
Itâ€™s also a tile, although youcanâ€™tshouldnâ€™t play with it.Make the game yoursThe best thing about the game is that you can modify it to suit your needs.Donâ€™t like a tile?
Hide it in a box or throw it in the trash.A box of unused Hextraction stuff.For example, I liked the idea of theSozu tile, but I couldnâ€™t get it to work consistently and having an extra rule of â€œfirst insert ball hereâ€ goes against our simplistic rules policy.We donâ€™t use any of the special effects tiles, but you can (and should) try them out.
You can even make your own tiles, with your own silly rules.
Thebomb tilefor example removesalladjacent tiles when itâ€™s removed, and theangel down tileallows you to remove a trapped ball on any tile below.Itâ€™s a build your own adventure type of a game, and you can even design your own tiles (or boards, if youâ€™re a madman).
If youâ€™re like me and havenâ€™t yet learned the dark CAD magic, there arelots of designsout there for you to include into your game.Print it, play it!If you have a 3D printer lying around (or have a friend with one), I heavily recommend you to check outHextraction.
Itâ€™s a very cool and silly game, which works very well even for young kids with minor tweaks.
(To be honest, our 3-year old often uses it as a marble run. But thatâ€™s fine too.)And if you donâ€™t have a 3D printer yet, gobuybuild one!Published:February  9,2024Revised:May  3,  2024ine5708e2Tagged:3D printing,HextractionPreviousNext</description>
      <pubDate>Fri, 09 Feb 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Blogging in Djot instead of Markdown</title>
      <link>https://www.jonashietala.se/blog/2024/02/02/blogging_in_djot_instead_of_markdown</link>
      <description>Blogging in Djot instead of Markdownâ˜Published:February  2,2024Revised:July  1,  2024inac95a3bTagged:Blog,Djot,RustWhat if we werenâ€™t chained to the past? What if we tried to create a light markup syntax that keeps what is good about Markdown, while revising some of the features that have led to bloat and complexity in the CommonMark spec?John Macfarlane,Beyond MarkdownI recently happened to see an offhand comment onHacker Newsabout a markup language calledDjot.
I donâ€™t really have any large issues with theMarkdownCommonMarkI use to generate the posts for this website, but my brain saw a chance to get sidetracked yet again, and here we are.The creator ofDjotis John MacFarlane, the same philosophy professor that also createdPandocandCommonMark.
These might be two of the most influential projects in the markup space, so youâ€™d get the feeling that maybe thereâ€™s something to thisDjotthing.ContentsThe devil is in the detailsToolsAbstracting away markup parsingCustomized markupEpigraphsAsidesImagesBlockquote citationsOther transformationsThe future is brightComplaints about DjotThe devil is in the detailsI was going to give a few examples of what Djot looks like, but honestly, 95% of the Djot I write looks very similar to Markdown, with only minor differences.So whatâ€™s the point?The point is to try to take the good parts of CommonMark (the standard, unambiguous syntax specification for Markdown) and improve it in two ways:Make it easier to parse.Extend the feature set.Iâ€™m sympathetic to the parsing problem, as it doesnâ€™t sound that fun:There are 17 principles governing emphasis, for example, and these rules still leave cases undecided. The rules for list items and HTML blocks are also very complex. All of these rules lead to unexpected results sometimes, and they make writing a parser for CommonMark a complex affair. I despair, at times, of getting to a spec that is worth calling 1.0.John Macfarlane,Beyond MarkdownFor this alone Iâ€™d be willing to at least try Djot, but there are some added features Iâ€™d like to use.
Itâ€™s true that I probably wonâ€™t have much use for things like definition lists or math for my blog posts, but the native support for divs and the ability to add attributes to any element is something Iâ€™ve been missing.ToolsGiven that Djot is a relatively young project, I expected the tooling to be lacking.
There are things missing, but it wasnâ€™t so bad for my use-case.I found a Djot Sublime Text grammar I can use for syntax highlighting the blog,
and there is Vim syntax highlighting in theDjot repo.(Sad for those who donâ€™t use Vim I guess.)More annoying is that thereâ€™s no treesitter implementation for Djot.
This is unfortunate, as with treesitter for Markdown I get proper syntax highlighting inside code blocks and I have a general treesitter jump command that, for Markdown, jumps between headers with]gand[g.
(In Rust it jumps between structs, implementations, enums, and functions. Itâ€™s a general treesitter mapping.)Not a deal-breaker of course.
Using the Markdown treesitter for Djot works well enough for the time being.
(Maybe I need to explore how treesitter grammars work one day, and create one for Djot.)As for parsing I foundJotdown, which is a Rust library with an API inspired bypulldown-cmark, the library I use to parse CommonMark.Abstracting away markup parsingI didnâ€™t want to convert my existing Markdown files as I have more than 250 posts. (Yeah, I donâ€™t know how that happened.)So to add Djot support I had to refactor my site generator a bit and support both Djot and Markdown parsing.
Iâ€™ve been lazy so this wasnâ€™t as straightforward as I hoped; I had sprinkled calls to Markdown parsing all over the place.When I donâ€™t really know where to begin unwinding such a mess, I like to begin by modeling the data types in the domain.
If I get the data modeling right, the rest has a tendency to fall into place fairly quickly.One of the things I love about Rust is the enums (or sum types for you fancy people) which makes it easy to model an â€œeither this or thatâ€ type:#[derive(Debug,Copy,Clone)]pubenumMarkupType{Markdown,Djot,}You can also add data to each variant, like so:#[derive(Debug,Clone)]pubenumMarkup{Markdown(String),Djot(String),}This is nice because now the type system prevents you from accidentally using the wrong format, which would be easier if you stored aMarkupTypeand aStringseparately.I did indeed store untagged data previously:pubstructPostItem{//Is this in markdown or already parsed to html?//Wait, maybe it's in djot!pubcontent:String,}To make this harder we should probably create a newtype for html as well:#[derive(Debug,Clone,PartialEq,Eq)]pubstructHtml(pub String);Then to parse the markup you can add aparsemethod toMarkup, that delegates to the right parser:implMarkup{pubfnparse(&amp;amp;self)-&gt;Result{matchself{Self::Markdown(s)=&gt;markdown_to_html(&amp;amp;s),Self::Djot(s)=&gt;djot_to_html(&amp;amp;s),}}}Now posts can holdMarkupandHtmlstructs and we can rely on the compiler to ensure we donâ€™t accidentally mix them:pubstructPostItem{pubcontent:Html,pubmarkup:Markup,//Many other fields omitted..}With the right types in place the rest of the refactoring follows naturally.
Just hide any Markdown and Djot specific implementation behind these types, follow the compile errors, and youâ€™re soon done.
Thinking and designing with types is usually a pleasure.(Yeah, maybe itâ€™s notquitethat simple, but itâ€™s a very helpful approach nevertheless.)See thesource for the websitefor more details.Customized markupFor the blog I have somemarkup transformationsI apply to Markdown.
This includes demoting headers, embedding bare YouTube links, transforming image collections, syntax highlighting, and more.Itâ€™s a bit hacky though.EpigraphsFor example, I want to be able to turn a quote into an epigraph by wrapping it inside a div:&lt;blockquote&gt;&lt;p&gt;This is an epigraph&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;But the CommonMark parser doesnâ€™t process markdown inside html, so Iadded an attribute parserto wrap a quote in an epigraph:&gt;This is an epigraph{ :epigraph }The implementation isnâ€™t pretty, and only works for specific elements such as a blockquote.
But Djot has a built-in syntax for divs, so I can just write this to produce the same epigraph html output::::epigraph&gt;This is an epigraph:::AsidesI still need to do a bunch of transformations to reproduce existing functionality.For instance, I want html output like this:&lt;aside&gt;&lt;p&gt;This is a notice&lt;/p&gt;&lt;/aside&gt;There isnâ€™t a native way to do this (other than inserting raw html,ew).
For my own transformations thedivsystem works well as a starting point, so I can use this kind of input::::noteThis is a note:::And then match on thenoteclass to transform thedivintoaside, and weâ€™re done.InJotdown, like withpulldown-cmark, transformations are made by transforming iterators over events.
Here Iâ€™m looking forEvent::Start(Container::Div, attrs)andEvent::End(Container::Div)(I ignore nesting).
Transforming with iterators instead of an AST structure is awkward, so keeping the transformations as small as possible is nice.ImagesI used the samedivsyntax in Markdown to create collections of images:::: Flex/images/configura14/octree1.png{ height=300 }/images/configura14/octree2.png{ height=300 }:::This would wrap the images in a flex container to display them side-by-side:&lt;/a&gt;&lt;/a&gt;&lt;/figure&gt;I (naturally) used to do this with Regex in a preprocessor step,
and had some fun adding attribute parsing.Now all I do is transform thedivto afigurewith the proper class.
Even something like this with references outside and attributes works, without any special handling on my end::::flex![][one]{height=300}![][two]{height=300}:::[one]:/images/configura14/octree1.png[two]:/images/configura14/octree2.png(Yeah maybe I gloss over the gross implementation a little.)Blockquote citationsQuotes are nice, but I want to be able to add author attribution to them sometimes.The html I want looks something like this:&lt;blockquote&gt;&lt;p&gt;With author attribution&lt;/p&gt;&lt;footer&gt;John Doe&lt;/span&gt;&lt;/footer&gt;&lt;/blockquote&gt;With Markdown, I used custom attribute parsing to add author metadata:&gt;With author attribution{ author=John Doe }I couldâ€™ve done the same thing with Djot, or piggyback on Djotâ€™s general attribute parsing and match on that (the attributes go before the quote, but otherwise looks similar).But I got inspired by an ongoing discussion on the Djot repo aboutadding blockquote attribution supportwhere this clean syntax was suggested:&gt;With author attribution&gt;^ John DoeThereâ€™s no support for this yet, so I had to do the transformation myself.
But on the upside, by passing through theJotdownevents after^during the iteration transformation we can easily support links or other Djot markup in the author field.So this example:&gt;With author attribution&gt;^[John Doe](#)~31/1~Would produce:&lt;blockquote&gt;&lt;p&gt;With author attribution&lt;/p&gt;&lt;footer&gt;John Doe&lt;/a&gt;&lt;sub&gt;31/1&lt;/sub&gt;&lt;/span&gt;&lt;/footer&gt;&lt;/blockquote&gt;Other transformationsThere are other transformations I do with Djot as well:pubfndjot_to_html(djot:&amp;amp;str)-&gt;Result{lettransformed=Parser::new(djot);//Demote headers (eg h1 -&gt; h2) and give them an "a" tag.lettransformed=TransformHeaders::new(transformed);//Convert standalone images to figures.lettransformed=AutoFigures::new(transformed);//Embed raw youtube links using iframes.lettransformed=EmbedYoutube::new(transformed);//Syntax highlighting.lettransformed=CodeBlockSyntaxHighlight::new(transformed);lettransformed=InlineCodeSyntaxHighlight::new(transformed);//Transform divs, such as asides and figures.lettransformed=DivTransforms::new(transformed);//Add a &lt;footer&gt; with author info to quotes.lettransformed=QuoteTransforms::new(transformed);//Warn if any broken links are detected.lettransformed=BrokenLink::new(transformed,context);letmutbody=String::new();Renderer::default().push(transformed,&amp;amp;mutbody)?;Ok(body)}The ones I didnâ€™t bring up in the blog are pretty similar to their corresponding Markdown implementation.
Iâ€™m not going to go through them in detail, seethe source codeif youâ€™re interested.The future is brightDjotis a young project but with the more expressive custom markup it has improved my blogging experience.
But more improvements are upcoming, withongoing discussionson quite a few topics that would remove the need for many of my custom transformations, for example:Native blockquote attributionsAuto block-level figuresCaptions for figures/tablesCustom tags support(convertdivintoaside)While I donâ€™t currently use most of the added features compared to CommonMark, in the future I might start making use of the other types of lists (who doesnâ€™t love a good list?) and footnotes might be a good addition to the more long-form blog posts Iâ€™ve been gravitating towards.Complaints about DjotIâ€™ve seen some people dismiss Djot because of its handling of sublists:Exactly, the sublist newline stuff is a total nonstarter for me. Sorry, I guess Iâ€™ll run a markdown parser that takes an extra second or whatever to run.qbasic_foreverIn Djot you have to surround a sublist with newlines. You canâ€™t write this:-List-This is fine in Markdown, but not in DjotYou have to do this:-List-This is fine in both Djot an MarkdownIt is indeeed more annoying at times, especially if you use the markup for smaller pieces of text, or use it to maintain a todo list with subtasks.
But for more long-form content I donâ€™t think itâ€™s a big deal (which is what Djot targets more I guess).Another complaint Iâ€™ve seen is that Djot doesnâ€™t represent enough of an improvement compared to the different Markdown flavors to overtake them in popularity.
This is a fair takeâ€”but I donâ€™t care if it ever dethrones Markdown/CommonMark/whatever.
Itâ€™s useful for me, and thatâ€™s all that really matters.Published:February  2,2024Revised:July  1,  2024inac95a3bTagged:Blog,Djot,RustPreviousNext</description>
      <pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Smaller fixes</title>
      <link>https://www.jonashietala.se/blog/2024/02/02/lets_build_a_voron_smaller_fixes</link>
      <description>Let's build a VORON TridentLet's build a VORON: Smaller fixesPublished:February  2,2024Revised:May  3,  2024ine5708e2Tagged:3D printing,VORONThis is part 8 of theLet's build a VORON Tridentseries.I’ve been busy.
Busy printing stuff.Which is awesome, because one big worry I had was if I’d actually use the printer or just end up modding and tweaking it until the end of time.But of course, I’ve been slowly working through my large mods-I-want list.
My initial plan was to write one blog post about modding, but for space and sanity reasons I’ve decided to split it up.This post goes through a bunch of smaller fixes and mods I’ve done to the printer, and I’ll leave the more involved mods to later posts.Tweaks &amp; tuningMy plan was to take tuning seriously and go through all the tuning guides to get the printer to produce perfect prints.
But I didn’t have patience for that and I’ve only made some tweaks when the prints had noticeable defects.
Here are the major tweaks I’ve done since the last post:Bed mesh offset in one cornerIt got pointed out to me in theVORON forumthat I my right rear Y extrusion was a bit high.
The Trident has automatic bed leveling, but because the bed is only attached in three positions it can’t compensate for a difference in the rear that only has a single mount in the middle.
If you’re unlucky this might cause issues with bed adhesion.Turns out I’ve had some problems with bed adhesion.
Not a lot mind you, but enough to bother me on some trickier prints.
I’ve seen the offset on the corner go down to-0.26, which is more than the standard0.2layer height I use, so this might be the cause of some of the issues I’ve seen.Before adjusting the right Y extrusion.In thevoron_1_trident_questionschannel on the VORONDesign Discord there was a pinned message on how to adjust this.
I ended up adjusting the front right Y extrusion upwards quite a bit to compensate for this.After adjusting the front right Y extrusion upwards.The mesh still isn’t perfect (and it can sometimes look worse than the adjusted picture above), but it’s now a lot better and importantly the rear corners are much more level.Bulging cornersOne significant print issue I’ve had is bulging in the corners on overhangs:Both edges round upwards and apart from being really ugly, they’ve caused a number of prints to fail when the nozzle has knocked loose pieces from the bed or has caused belts to skip.It’s really ugly.Maybe it was overheating? But it happened consistently, with long layer times, with max fans, and for PLA/ABS/ASA.
Another idea was over extrusion, but I think that should’ve shown up in other places?Then I found theBulgingsection in Ellis’ Print Tuning Guide that made the issue disappear.
These were the changes I made:Enableexternal perimiter firstSet overhangthreshold for bridge flowto 0I also experimented with disabling overhangs specific settings completely (setbridge speed and fanto 0 or the disable checkbox), but I’m uncertain how effectual that was compared to the other two settings.Some of these were specific to SuperSlicer, the slicer I use.These are two prints that show the difference between the settings.
The green is without the changes and white is with the changes.
Apart from the overhangs, the green printout looks pretty good, but the overhangs look terrible.
The white still has some defects, but it’ssomuch smoother.Extruder skippingI had printed for around 400 hours when the extruder suddenly started skipping.
At first it was just minor artifacts, but after a while prints started failing in major ways or refusing to extrude anything at all:My first idea was that I had messed up the tension in the extruder, so it no longer got a good grip on the filament.
(I had some major issues with loading filament at one time, and I started screwing around with everything I could think of.)But alas I couldn’t solve it with a quick-fix, so I had to open up the toolhead.
Which I should have done much sooner, because there were a bunch of broken filament stuck in the gears:One piece of broken filament inside the CW2, together with a bunch of dirt.I really didn’t want to disassemble it because I was afraid of the effort to do so, but in the end it was just a few screws and the whole cleaning process took 10 min.
Building your own printer has some benefits, I should have more faith in the process.2mm PTFE between extruder and hotendThere were a lot of leftovers after the build; nuts, screws, belts, etc.
But also an unused bag with “Teflon Tubing, 4x2mm”, which surely shouldn’t be completely unused?Turns out you’re supposed to use a tube with an inner diameter of 2mm between the extruder and hotend, but I had used the regular PTFE tube that had an inner diameter of 3mm.
This isn’t ideal and requires more retraction (which I didn’t compensate for), and it can cause stringing issues (which I had).Don’t use a tube with an inner diameter of 2mm between the extruder and spool, the filament will get stuck due to friction.First layer woesFor a long time I was really happy with how my first layers looked and I could start a print and it would finish without issue most of the time.But sometimes I had these “blobs” that started collecting:This is some extra filament that has been pushed around and gotten stuck on the print.I couldn’t figure out where it was coming from. Overextrusion maybe, but i didn’t find any issues with it and this only happened in the beginning of the print.And later on I started to getsevereissues with bed adhesion where I felt lucky if a part stuck around long enough for the print to finish.
The first layer started to look garbage as well:The worst part is, I didn’t think I had changed anything.In hindsight me fixing thebed mesh offsetmight have been the cause my sudden problems.I tried a bunch of things; changing nozzle, recalibrating PA and EM, changing filament, and even replacing the extruder (more on that in a future post) yet the issue remained.What finally fixed it was recalibrating thez offsetand tuningfirst layer squishonce more.
I’m not sure why I had to do this again (doesn’t Tap magically solve everything?), but now the first layer is pretty and the bed adhesion problems are almost completely gone.
(Some prints have a tendency to warp a little, but I guess it’s hard to get things perfect.)Much better first layer!ModsThese are some smaller mods from the LDO kit I hadn’t gotten around to installing, and some other small mods that fixed some annoyances I’ve had.HandlesThe kit includes some very nice handles you can install.
But unfortunately they cover up the top panel so you have to remove the handles before you can remove the panel—a gigantic pain.So I ended up printing somesturdy handlesinstead.
They’re really large comparatively, but they get the job done.
I haven’t had that much use for them yet, but I felt obliged installing them since some kind of handles came with the kit.LED mountsThere were no instructions on how to install the LEDs, so I taped them on top of the included extrusions covers.
Turns out you were supposed to print a bunch ofLED mountsto get the LEDs pointing inwards towards the print for better lighting:Before the LED strips were mounted flat.Now they’re tilted inwards and have shields to direct the light towards the build plate.Longer spool holderThe stock spool holder to the left, a longer one I printed to the right.I ran into the surprising issue that some spools were too wide for the stock spool holder (3DJake’s filament for example).
So I replaced it with alonger one.In the future I should probably replace it with atop mounted spool holder, but I got lazy when I saw I didn’t have the required M5 hardware.
Maybe another day.Bowden tube routingI had some issues with the bowden tube getting stuck behind or under the cable chain, so I tried thebowden tube guideto keep it away.
It was difficult to find a route that worked well. Depending on the mount position it had a tendency to cause a bend in the tube that drastically increased the friction on the filament, which I suspect was the cause for some prints failing.I also use theTrident noodlethat’s made to prevent the tube from colliding with the roof of the printer, and this combination works very well.Display mountThe display mounts I got from the print-it-forward service wasn’t compatible with the screen I got, so I had to hold it together with tape.So I tried to find the proper parts to print, but I must be missing something because the screw holes to hold the display cover still don’t line up.
I don’t care to spend more energy on this; it’s a bit weird but tape does the job well enough.At least I got the display cover in an accent color.Improved seal in extrusionsDespite having the Nevermore filter and a HEPA filter exhaust, I could very clearly smell ABS fumes from the printer.
Looking at the extrusions, there were large holes in the blind joints and I suspect that doesn’t help.Therefore I tried to cover up the holes with some Sugru.
It’s better, but I should probably replace the front door too.Are we done yet?It’s true that the printer can now be considered Done™—and it has been done for a while—but I still have some mods I’d like to document before I wrap up this build series.This is
      part 8 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixes←Let's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:February  2,2024Revised:May  3,  2024ine5708e2Tagged:3D printing,VORONPreviousNext</description>
      <pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Exploring the Gleam FFI</title>
      <link>https://www.jonashietala.se/blog/2024/01/11/exploring_the_gleam_ffi</link>
      <description>Exploring the Gleam FFIâ˜Published:January 11,2024Revised:August 30,  2024indb305f3Tagged:Elixir,Erlang,Gleam,RustMy brain is a curious thing.
Iâ€™m on a business trip right now and Iâ€™ve set aside time to finish some important todos I want and need to get done.
But instead of focusing on them, I started playing around withGleamâ€”a young and interesting programming language.My (current) favorite programming languages areRustandElixir.
Theyâ€™re really different from each other, but they work well together as Rust can easily beembedded via Erlang NIFs.
This is useful because one of the drawbacks with Elixir (or rather the Erlang VM that Elixir runs on) is raw computational performance,
something that Rust excels at.Another drawback with Elixir is the lack of typing (althoughimprovements are underway).
This is what drew me to Gleam, which feels like Elixir but with Rust types on topâ€”a fantastic sales pitch.A big drawback with young languages is that there arenâ€™t a lot of libraries out there, so youâ€™ll have to roll your own solutions most of the time.
But the beauty of targeting existing platforms is that you can also leverage their libraries,
which in Gleamâ€™s case means all Erlang and Elixir libraries (or JavaScript, depending on your compilation target).
This is accomplished via Gleamâ€™s FFI, which is quite convenient.Letâ€™s explore.ContentsPrerequisitesErlangElixirRustJavaScriptEnding thoughtsPrerequisitesIf you want to follow along, make sure you have the respective compilers installed.
Iâ€™ll base the examples from a clean new repo:$gleamnew myappErlangAs shown inthe Gleam Bookcalling standard Erlang functions is straightforward.
You declare foreign functions with the@externalkeyword and then call them as normal:importgleam/io@external(erlang,"rand","uniform")pubfnrandom_float()-&gt;Floatpubfnmain(){io.debug(random_float())}That if run will call theuniformfunction in therandErlang module:$gleamrun0.43487935467166317This works for standard libraries, but you can access other Erlang libraries onHexby adding them as dependencies ingleam.toml:[dependencies]base32="~&gt; 0.1.0"Declare and call it like before:@external(erlang,"base32","encode")pubfnencode_base32(x:String)-&gt;Stringpubfnmain(){io.debug(encode_base32("superhidden"))}And Gleam will download and compile the Erlang dependency:$gleamrunCompiling base32===&gt; Fetching rebar3_hex v7.0.7===&gt; Fetching hex_core v0.8.4===&gt; Fetching verl v1.1.1===&gt; Analyzing applications...===&gt; Compiling hex_core===&gt; Compiling verl===&gt; Compiling rebar3_hex===&gt; Analyzing applications...===&gt; Compiling base32"ON2XAZLSNBUWIZDFNY======"If you want to write Erlang code yourself and call that, itâ€™s also very easy.
The gleam compiler will compile and include.erlfiles automatically.For example this filesrc/erlib.erl:-module(erlib).-export([ping/0]).ping()-&gt;io:fwrite("ping~n",[]).Declare and call the function in gleam like before:@external(erlang,"erlib","ping")pubfnping()-&gt;apubfnmain(){ping()}$gleamrunpingYou can also call Gleam functions from Erlang.
With for example this pong function insrc/mypong.gleam:importgleam/iopubfnpong(){io.println("pong")}You can call the Gleam function withmodule:function():ping()-&gt;io:fwrite("ping from Erlang~n",[]),mypong:pong().%Call the Gleam function$gleamrunping from ErlangpongElixirIf you want to include Gleam code into an existing Elixir project, look atMixGleamon how to teachmixhow to work with Gleam code and dependencies.
But if you want to include Elixir code into your Gleam project, you can do that just as easily as with Erlang.Declaring foreign Elixir functions uses the same@externalkeyword:importgleam/io@external(erlang,"Elixir.RandomColor","hex")pubfnrandom_color()-&gt;Stringpubfnmain(){io.println(random_color())}Note that Elixir modules gets anElixirprefix and that weâ€™re still calling external Erlang code as Elixir gets compiled to Erlang.Dependencies are added fromHex, exactly the same as with Erlang dependencies:$gleamadd random_color$gleamrun#3724C9Calling our own Elixir code is just as easy as with Erlang.
Just include it in your source directory, like thissrc/exlib.ex:defmoduleExlibdodefping()doIO.puts("ping from Elixir"):mypong.pong()endendAnd refer to the module asElixir.Exlib:@external(erlang,"Elixir.Exlib","ping")pubfnping()-&gt;apubfnmain(){ping()}$gleamrunping from ElixirpongKeep in mind that:You canâ€™t directly call Elixir macros (they happen on compile time).If you include Elixir youâ€™ll also include the Elixir standard library.Erlang might be a better choice if you want something more lightweight.RustIn the beginning I wrote that you could easily call Rust code from Elixir viarustler.
You can call Rust from Gleam as well, either via Erlang or Elixir.Rustlerrecommends to usemixwith Elixir, but we can do this with Erlang and keep using the Gleam toolchain.First we need to create a Rust project somewhere.
We can create it in the top level of the Gleam repo or in anative/folder or wherever.
For this example Iâ€™ll just leave it at the top:$cargonew rslib --libOn the Rust side Iâ€™ll userustlerto create the NIF:$cdrslib/$cargoadd rustlerAnd inrslib/src/lib.rsweâ€™ll tag the function we want to expose withrustler:#[rustler::nif]pubfntruly_random()-&gt;i64{4//Chosen by fair dice roll. Guaranteed to be random.}rustler::init!("librs",[truly_random]);We want to build this as a dynamic library, so weâ€™ll need to updateCargo.toml:[lib]crate-type=["dylib"]Then build it in release mode:$cargobuild --release...This should generate the library attarget/release/librslib.so.
Yes, my naming choice here sucked, but letâ€™s roll with it.For Gleam to be able to use this file we need to copy it topriv/(relative to the Gleam root, not the Rust project):$mkdir../priv$cptarget/release/librslib.so ../priv/The file layout should look something like this:â”œâ”€â”€ README.mdâ”œâ”€â”€ buildâ”œâ”€â”€ gleam.tomlâ”œâ”€â”€ manifest.tomlâ”œâ”€â”€ privâ”‚Â Â  â””â”€â”€ librslib.so     # The important partâ”œâ”€â”€ rslibâ”‚Â Â  â”œâ”€â”€ Cargo.lockâ”‚Â Â  â”œâ”€â”€ Cargo.tomlâ”‚Â Â  â”œâ”€â”€ srcâ”‚Â Â  â”‚Â Â  â””â”€â”€ lib.rsâ”‚Â Â  â””â”€â”€ targetâ””â”€â”€ srcÂ Â  â””â”€â”€ myapp.gleamUpdate2024-08-30I only tested this on Linux where the.soextension is used but I didnâ€™t test it on Mac or Windows.Iâ€™m told that on Mac a.dylibfile will be generated but you should still copy it to thepriv/folder with the.soextension:$cptarget/release/librslib.dylib ../priv/librslib.soOn Windows a.dllfile will be generated and thatâ€™s also the extension that should be used in thepriv/folder.To include the library weâ€™ll use some Erlang.
Weâ€™ll usesrc/rslib.erlsimilar to before, but withErlang NIFs:-module(librs).-export([truly_random/0]).-nifs([truly_random/0]).-on_load(init/0).init()-&gt;ok=erlang:load_nif("priv/librslib",0).truly_random()-&gt;exit(nif_library_not_loaded).We now load thelibrsliblibrary, declaretruly_randomas a NIF with-nifs(..)and add a function placeholder that will be replaced when the library loads.
librs
&gt; Please note that we need to use the same namelibrsin both the Erlang module and inrustler::init!, otherwiseinit()will silently fail and youâ€™ll get anundefined functionerror.
To tease out the error we can skipon_loadand callinit()manually from Gleam.
{ :notice }With the Erlang code in place whatâ€™s left is to call the Erlang function from Gleam:importgleam/io@external(erlang,"librs","truly_random")pubfntruly_random()-&gt;Stringpubfnmain(){io.debug(truly_random())}And now we can call ourtruly randomRust function!$gleamrun4While Rust is amazing, and itâ€™s great that we can call it from Gleam, there are some drawbacks to be aware of:The glue is verbose as we need to duplicate the function name a bunch of times.Building the library and moving it topriv/isnâ€™t handled by the Gleam toolchain.
Iâ€™ve seen some people use a Makefile to build the library and then copy it topriv/.NIFs can crash the whole runtime.
While Rust is safer than C, it can still bring the whole runtime down and not just a single Erlang process.Calling Gleam code from Rust seems harder.
I found an example ofcalling Elixir or Erlang function from Rust, but I havenâ€™t looked at in more detail.JavaScriptGleam can also compile to JavaScript, and this blog post wouldnâ€™t be complete without a short example.To compile for JavaScript we can addtarget = javascriptto ourgleam.tomlor use the target flag:$gleamrun --target javascriptLike before when we called Erlang and Elixir files, if you add a JavaScript source file insrc/it will automatically get included.
For example thissrc/jslib.mjs:import*as gleam from"./mypong.mjs";exportfunctionping(){console.log("ping from JavaScript");gleam.pong();}And to declare the foreign function, we now use the relative file instead of the library name:@external(javascript,"./jslib.mjs","ping")pubfnping()-&gt;apubfnmain(){ping()}And when run youâ€™ll see that we can call the JavaScriptpingfunction which in turns calls our Gleampongfunction:$gleamrun --target javascriptping from JavaScriptpongYou can inspect the output JavaScript files inbuild/dev/javascript/myapp/, which is very useful when debugging or trying to understand the code Gleam generates.I use the NodeJS runtime out of pure lazyness, and then you have to use the.mjsfile extension.Ending thoughtsI hope this post gives helps you understand how to get started with Gleamâ€™s FFI system.
I havenâ€™t looked into Gleam more than a few days, but given how easy it is to get access to my other favorite languages and their ecosystems, I donâ€™t have to worry that Iâ€™ll be missing out on some crucial functionality if Iâ€™m going to create something real with Gleam.Published:January 11,2024Revised:August 30,  2024indb305f3Tagged:Elixir,Erlang,Gleam,RustPreviousNext</description>
      <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2023 in review</title>
      <link>https://www.jonashietala.se/blog/2024/01/01/2023_in_review</link>
      <description>2023 in reviewPublished:January  1,2024Revised:December 18,  2024in44bdd94Tagged:Yearly ReviewThis is myyearly review#14.
Amazing that I’ve kept up with this for 14 years.Even though it’s not anything advanced, I really like looking back at the year to see what has happened.
Maybe it’s a very light version of areverse bucket list, and I can see that it provides some of the same happiness benefits.2023 Non-Geek AchievementsAll my three kids are happy and healthy.It’s thanks to Veronica, but I’d like to think I’ve contributed something.Wrote17 blog posts!Most of them were written (and published) in the last quarter where I got bitten by the blogging bug.2023 Geek AchievementsI beat FTL on Hard with all ships in the game.I built a VORONand got into 3D printing.Twoof myblogposts got to the front page of Hacker News.I’ve always blogged to write for myself and never because I wanted my blog to be popular, but it was still nice to see some people appreciate it.Irewrote my Neovim config in Lua.I gave the blog asorely needed facelift.I wrapped up my series about theT-34 keyboard layout.2023 MisadventuresWhile I finished the eBook ofmy book, I only made it available for purchase using cryptocurrencies a short amount of time.The reason is that I made it available withmy payment processor, but I ran out of energy so I shut down the server.
I really need to get it together and just upload it somewhere so it’s purchasable normally.Maybe I should just make it available for free, so I can close the chapter on the book project?I didn’t read that many books—at least I don’t remember that I did.Despite me trying to reduce it, the boardgame list of shame grew this year.There’s a complete stop to Kickstarters and buying new games until I correct this mess.Plans for 2024Focus on mental and physical health, with a focus on strength training.Finally complete the book project by putting the eBook widely available and finishing theHow I wrote ‘Why Cryptocurrencies?’series.Finish my planned mods on myVORON3D printer and complete the blog series.Complete my Git rewrite in Rust project, that i left hanging back in 2020.I’m already thinking of postponing this again…
But maybe I can make some amount of progress at least?Start a new long-term project.I’ve promised myself to finish up my ongoing projects before I’m allowed to do this, but we’ll see how that goes.
(Not well I suppose.)Published:January  1,2024Revised:December 18,  2024in44bdd94Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Filters</title>
      <link>https://www.jonashietala.se/blog/2023/12/15/lets_build_a_voron_filters</link>
      <description>Let's build a VORON TridentLet's build a VORON: FiltersPublished:December 15,2023in8da5c32Tagged:3D printing,VORONThis is part 7 of theLet's build a VORON Tridentseries.I can print, but the printer is missing a very important thing that I alluded to in the previous post: filtering dangerous particles and fumes.This is mostly covered by the kit, but I was missing some parts from theprint it forwardand the kit didn’t include a HEPA filter.
Because the printer is in the office and health is super important fixing this was needed so I could start printing some ABS and continue modding the printer.Exhaust coverI’m missing the exhaust cover where the filter goes in a stock VORON.The standard VORON comes with a filter in the back, but the LDO kit doesn’t include the fan for the filter and instead uses anexhaust coverto close the hole.I didn’t receive this part, so the first thing I did was to print that part.
This was just a very temporary measure so I printed it in PLA.Nevermore filterThe Nevermore filter is installed next to the back panel.The LDO kit includes theNevermore filter, which removes VOCs.
I was confused on how to install it as at the time the LDO docs only mentioned how to install it on a 2.4, not on a Trident.
When I brought it up theyfixed itso no big deal.But they wanted me to mount it using a plenum mount, which my parts didn’t have.
I think I received an older version of the Nevermore from theprint it forwardservice so I couldn’t use it.I instead printed out the updated plenum and frame connector myself.
Because the point of the Nevermore is to be able to print ABS safely I did this in PLA as well.
I know it’s not ideal, but it will have to do.
Lazy as I am I’ll run with this and if it breaks I’ll replace it then.I also added some strips of foam tape to the back of the filter to prevent it from scrambling against the back panel.Cutting away parts from the fans was horrible. They broke very easily.I finally got to exercise my (very poor) soldering skills!
It was cute how LDO included a small board so that you don’t have to crimp any cables.HEPA exhaust filterA new HEPA filter. I wasn’t able to color match with the print-it-forward parts…While I have the Nevermore filter, it doesn’t filter Ultra-Fine Particulates.
For that you need a HEPA filter.There were a few solutions with combined carbon and HEPA filter, but since I already have the Nevermore I wanted a standalone HEPA filter.
I found theVoron HEPA Exhaust Filterthat replaces the stock filter that seemed like a good option.With the Nevermore in place I could print the parts using ABS, and they turned out pretty well.For silence I used aNoctua FN-A6x25fan.
In hindsight I maybe should’ve used thePWM variant, if only to make the wiring simpler.
Now I have this ugly looking wiring in the top corner (it uses the Noctua low-noise adapter).I also had to create another cable, which wasn’ttoodifficult:Converted the 3-pin cable to a 2-pin JST connector and extended it.I simply ignoredthe yellow RPM speed signal cable.Connect to a free fan output on the Octopus.Used the 12V selection jumper for the fan output.Klipper setupWith the fans installed you also need to configure Klipper to utilize them.I setup them both as generic fans, so I can control them from the start and end macros:[fan_generic nevermore_fan]##  Nevermore fan - FAN3pin: PD13max_power: 1.0kick_start_time: 5.0[fan_generic filter_fan]##  HEPA filter fan - FAN4pin: PD14max_power: 1.0kick_start_time: 5.0Then inPRINT_STARTI turn on the fans:SET_FAN_SPEED FAN=nevermore_fan SPEED=1SET_FAN_SPEED FAN=filter_fan SPEED=1After the print has finished I don’t want to just turn off the fans immediately, but have them run a bit after the print has finished to clear out any toxic fumes.
I accomplished this with adelayed_gcode:[delayed_gcode _VENT_OFF]gcode:SET_DISPLAY_TEXT MSG="Venting done"SET_FAN_SPEED FAN=nevermore_fan SPEED=0SET_FAN_SPEED FAN=filter_fan SPEED=0That I call inPRINT_ENDwith a timeout:# Turn off fans after 30 minUPDATE_DELAYED_GCODE ID=_VENT_OFF DURATION=1800To prevent the fans from turning off mid-print if I get impatient and start a new print before_VENT_OFFhas been called I also clear the delayed gcode inPRINT_START:# Prevent Nevermore and filter fan from being turned off mid printUPDATE_DELAYED_GCODE ID=_VENT_OFF DURATION=0And now the filter fans turn on and off automatically.Some people run the Nevermore on 50–80% during print and then go 100% at the end, but I don’t know why you can’t run it at 100% all the time so that’s what I do.ReworkedPRINT_START/PRINT_ENDI also rewrote thePRINT_STARTandPRINT_ENDmacros to make a little more sense to me.
Here they are in their entirety:[gcode_macro PRINT_START]gcode:# Fetch data from slicer{% set target_bed = params.BED|int %}{% set target_extruder = params.EXTRUDER|int %}{% set target_chamber = params.CHAMBER|default(0)|int %}# Set temps for bed and extruder without waiting to save some timeSET_DISPLAY_TEXT MSG="Preheating"SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target_bed}SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150SET_DISPLAY_TEXT MSG="Homing"G28                                                     # Full home (XYZ)G90                                                     # Absolute positionG92 E0                                                  # Reset extruderBED_MESH_CLEAR                                          # Clears old saved bed mesh (if any)CLEAR_PAUSE                                             # Ensure that we can't accidentally resume an old pause# Prevent Nevermore and filter fan from being turned off mid printUPDATE_DELAYED_GCODE ID=_VENT_OFF DURATION=0SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"# We're in the center of the bed after full homeM190 S{target_bed}                                      # Sets the target temp for the bed# Heating nozzle to 150 degrees. This helps with getting a correct Z-homeSET_DISPLAY_TEXT MSG="Hotend: 150c"M109 S150                                               # Heats the nozzle to 150c# Turn on fans to help with chamber heatingSET_FAN_SPEED FAN=nevermore_fan SPEED=1M106 S255                                               # Turns on the PT-fan# Waits for chamber to reach desired tempSET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={target_chamber}# Only turn on filter after chamber has been heatedSET_FAN_SPEED FAN=filter_fan SPEED=1SET_DISPLAY_TEXT MSG="Z-tilt adjust"Z_TILT_ADJUST                                           # Levels the buildplate via z_tilt_adjustG28 Z                                                   # Homes Z again after z_tilt_adjustSET_DISPLAY_TEXT MSG="Bed mesh"BED_MESH_CALIBRATE                                      # Starts bed mesh# Heats up the nozzle up to target via data from slicerSET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"SMART_PARK                                              # KAMP parking routineM107                                                    # Turns off partcooling fanM109 S{target_extruder}                                 # Heats the nozzle to printing tempSET_DISPLAY_TEXT MSG="Purge"VORON_PURGE                                             # KAMP purgeG92 E0                                                  # Reset extruderSET_DISPLAY_TEXT MSG="Printer goes brr"[gcode_macro PRINT_END]gcode:# safe anti-stringing move coords{% set th = printer.toolhead %}{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x &gt; 20 else -1) %}{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y &gt; 20 else -1) %}{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}SAVE_GCODE_STATE NAME=STATE_PRINT_ENDSET_DISPLAY_TEXT MSG="Print done"M400                                                        # Wait for buffer to clearG92 E0                                                      # Zero the extruderG1 E-2.0 F3600                                              # Retract filamentTURN_OFF_HEATERSG90                                                         # Absolute positioningG0 X{x_safe} Y{y_safe} Z{z_safe} F20000                     # Move nozzle to remove stringingG0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600   # Park nozzle at rearM107                                                        # Turn off partcooling fan# Turn off fans after 30 minUPDATE_DELAYED_GCODE ID=_VENT_OFF DURATION=1800BED_MESH_CLEARRESTORE_GCODE_STATE NAME=STATE_PRINT_END[delayed_gcode _VENT_OFF]gcode:SET_DISPLAY_TEXT MSG="Venting done"SET_FAN_SPEED FAN=nevermore_fan SPEED=0SET_FAN_SPEED FAN=filter_fan SPEED=0This is
      part 7 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: Filters←Let's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:December 15,2023in8da5c32Tagged:3D printing,VORONPreviousNext</description>
      <pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Printing &amp; Tuning</title>
      <link>https://www.jonashietala.se/blog/2023/11/30/lets_build_a_voron_printing_tuning</link>
      <description>Let's build a VORON TridentLet's build a VORON: Printing &amp; TuningPublished:November 30,2023Revised:January 24,  2024in2e5adfcTagged:3D printing,New Stuff,VORONThis is part 6 of theLet's build a VORON Tridentseries.It’s up and running, and now it’s finally printing time!
Less exciting—but necessary—tuning the printer to make the prints better.Filament shipmentEven though I’ve been building the printer for more than a month, I wasn’t ready for it being time for printing so soon.
I don’t know what filament is good and what I need, so I decided to get a few different brands and colors to try out:3DJAKE niceABS BlackeSUN ABS+ PurplePolymaker PolyTerra PLAArmy Dark GreenandArmy Blue3DJAKE ecoPLA White &amp; BlackSpectrum PLA Dragon RedeSUN eSilk PLA GoldI think I went overboard with the filament order.In hindsight I should’ve waited longer to see what materials I wanted to print, now I kind of regret buying so much PLA.Secondary printer tuningAt this point the next step in the VORON docs ismaking a print.
But I had various issues, so I went through theSecondary printer tuningbefore getting my first successful print.Gantry racking &amp; squaringI’ve already done the gantry racking, yay!Belt tensionI always wondered how tight the belts were supposed to be.
Tuning it by measuring the frequency using an app was pretty nifty, and it was quite painless.It’s around 110Hz, I think?I tried to tune it to 110Hz, but I’ve seen people aiming for 120Hz.Bed meshTo setup a bed mesh you just add something like this to Klipper:[bed_mesh]speed: 300mesh_min: 40, 40mesh_max: 210, 210fade_start: 0.6fade_end: 10.0probe_count: 5,5algorithm: bicubicAnd thenBED_MESH_CALIBRATEwill do it’s job:The bed mesh is situated around 0, nothing unexpected here.I also setupKlipper Adaptive Meshing &amp; Purging(KAMP) using their setup instructions to dynamically adjust the bed to fit the print size.Input shapingThe guide references input shaping, which is included in the LDO kit.NERO 3Drecommended to wait with input shaping until you’ve printed with it a bit, so I did the input shaping after ~5 hours of printing time.Input shaping connected.I didn’t do anything special and just accepted whatever it spat out.First printThe VORON docsmakes the first print seem so simple—just upload the print and eat a bowl of cereal.
And I was looking forward to just hitting print and watching it go brr…
But of course things wouldn’t go so smoothly.Problems I’ve had include but isn’t limited to:Print stopped withHotend not enoughThis happens because the Tap G-code reduces the hotend temperature to 150° when probing to not damage the bed, but then the temperature is too low for printing.To fix it I had to manually set bed and hotend temperatures after Tap and modifying SuperSlicer to provide these values to thePRINT_STARTmacro as detailed ina betterPRINT_STARTmacro.Filament didn’t load.And KlipperScreen complains aboutFILAMENT_LOADnot existing. Sigh.First layer not sticking to the bed.A combination of using the wrong temperature andz_offsetwas to blame.After a few failed attempts, the filament clogs.The filament clogged somehow, and I had to disassemble the toolhead to fix it.Bunch of “Unknown command” errors in the mainsail log.I assume it’s because Klipper wasn’t selected in the “G-code flavor” in SuperSlicer.The print coming loose from the bed after a while.Oh FFS.I struggled with this a fair bit.
I reconfiguredz_offsetwhich seemed to work, but maybe it’s extruding too much filament causing the toolhead to hit the print?After all that trouble I was running into I was expecting for getting an absolutely shit print…
But it’s actually notthatterrible?It’s far from perfect, but the lighting is fairly harsh and it looks better in real-life.
My friends have shown many 3D prints that look a lot worse.Functional printsHigh on adrenaline I set out to do my first functional print: anexhaust coverfor the back of the printer.
I’m going to replace it with a proper filter in the future, but I wanted something to cover the big hole in the back when printing ABS, so I wanted to make a temporary in PLA.But it things can’t go that smoothly:I messed with the z-offset during print, and the result was this mess.The printer made some extremely unpleasant sounds, and I was scared that the nozzle was grinding against the bed.
I tried to tweak the z-offset during print, but I the sound didn’t stop and I ended up destroying the print.The nozzle didn’t hit the bed and it was the stepper motors being super loud… But more on that in a future post.When I re-ran the print and stopped messing with it, the printer spat out a functional print:Surprisingly good quality.Other things weren’t that good:A part needed to mount the Nevermore filter to the extrusion.
It’s hard to see in this image, but the top edge is drifting upwards quite a bit.Simpler models seem to print well, but it struggles with more complex geometry.
While I can probably use this Nevermore mount with some sanding, this level of quality isn’t high enough to for example print parts for a VORON.More tuning is needed.More print tuningEllis’ print tuning guideseems like the go-to guide for tuning your prints.
It contains alotof info, so I won’t write about it too much lest we’ll be here all day.
These are the big things I did:Extruder calibrationThis contains the images on how to measure the extrusion distance I was missing from the VORON docs.
I redid the calibration but with the top panel removed to get a more accurate measure.
Turns out my previous calibration was 10% off. Yikes.First layer squishI wasn’t really sure how to do this, but I think the point is to print one square using one z-offset and then change it a little for the next square to see which produces the best print.
In SuperSlicer I had to enable the “Complete individual objects” setting for it to print one square at a time.My previous z-offset using the paper was pretty damn good, but I ended up accepting a-0.01extra offset (increasing it to-1.050).Pressure advanceI used thepattern method, although there weresomany settings I was unsure about so I don’t know how well it worked out.Still, I got a value of0.04and for some reason I didn’t have any pressure advance setting previously.Extrusion multiplierIt was super difficult for me to tune this as I wasn’t sure what to look for.
I ended up choosing0.98, but it could’ve just as well be1.0.
Apparently I should do this for every new filament? How bothersome.There are more things in the guide, but they feel like issues you should keep in mind when printing and not something you tune for from the start.
With the massive amount of tuning options both in Klipper and SuperSlicer I’m sure this will be a topic I’ll have to revisit many times.Some more printsI printed out another calibration cube and I hoped to have some good comparison pictures here,
but truthfully the difference was really small.
There were some slight improvements, but not something that shows up well in pictures.So here are some other parts I’ve printed:Printer goes brr.Some of the parts for a HEPA filter housing. If you zoom in you can see some stringing and very visible lines.The print lines are quite visible.Despite some artifacts I’m happy with these results,
especially since these were new spools of filament that I didn’t do any tuning or drying for (I don’t have a filament dryer yet).
The prints were absolutely good enough for me to start printing a bunch of mods for the printer.This is
      part 6 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; Tuning←Let's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:November 30,2023Revised:January 24,  2024in2e5adfcTagged:3D printing,New Stuff,VORONPreviousNext</description>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Writing lessons learned after writing a book</title>
      <link>https://www.jonashietala.se/blog/2023/11/25/writing_lessons_learned_after_writing_a_book</link>
      <description>How I wrote 'Why Cryptocurrencies?'Writing lessons learned after writing a bookâ˜Published:November 25,2023Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?,WritingThis is part 3 of theHow I wrote 'Why Cryptocurrencies?'series.A good writer isnâ€™t born; a good writer is createdIt may sound dumb, but one of my reasons for writing a book was to improve my writing ability.
Maybe I couldâ€™ve practiced on the blog instead, but putting things on paper gave it some added weight I donâ€™t think I wouldâ€™ve gotten otherwise.Here are some of my most important writing takeaways Iâ€™ve gotten from the process of writing a book.
These arenâ€™t original by any means, just things Iâ€™ve collected during the process.
Many details are from the excellent bookOn Writing Well: The Classic Guide to Writing Nonfictionthat I canâ€™t recommend highly enough.Writing is a skillRealize that writing is a skill.
A skill can be improved, but it will take conscious effort.Deliberate practiceLike any skill, the best way to improve it is topractice.
Without practice, everything else is meaningless.But itâ€™s not enough to â€œjust writeâ€, you also need to evaluate your progress and try to notice what youâ€™re lacking and where you can improve.Be introspective, think about what youâ€™re doing and be your own critic.
This is an extremely valuable skill, which will helpful no matter what area you want to improve in.It can be difficult, here are some questions I try to ask myself whenever I write:Does the text flow nicely?Where is the red thread?Are you making the case succinctly, or is there lots of fluff?What is the purpose of this section/chapter/paragraph?Can I remove these words?Am I repeating myself?Can I replace any of these words to make it simpler, more succinct, or more correct?Does the text sound good?Are the sentences too short? Too long?Is there sufficient variation in the text?Are youusing the character types; commas, ellipses, hyphens, dashes and brackets?Remove unnecessary wordsMy biggest takeaway fromOn Writing Wellis that if you can remove a word or two from a sentence, itâ€™s probably a good idea to do so.Quite often we use extra words that donâ€™t really add anything of value.We often use extra words that donâ€™t add anything of value.We often use redundant words.Itâ€™s not wise to go overboard, but for me itâ€™s been very helpful to keep in mind.
If Iâ€™m not strict on myself Iâ€™ve found that Iâ€™m very good at adding redundant words everywhere.Keep it simple stupidKISS, a common acronym in software development, is also applicable to writing.
Complexity is an alluring mistress, especially for the bright and motivated,
but using simpler words and sentence structures is often the better way.This is especially true in non-fiction where youâ€™re trying to explain a technical concept.
By keeping things simplerâ€”often simpler than youâ€™d likeâ€”your explanation will be more easily understood by more people.The reader will be tasked hard enough to understand the subject matter at hand, throwing complicated jargon at them will only make understanding harder.Yes, itâ€™s difficult to explain a hard subject in simple terms.If I had more time, I would have written a shorter letterAttributed to far too many peopleBe sure, and make it personalOne common piece of advice Iâ€™d like to push back on is to keep the technical writing dry and impersonal.
The advice is to avoid â€œyouâ€, â€œIâ€, and â€œin my opinionâ€ while hedging your bets with â€œmaybeâ€, â€œthereâ€™s a chanceâ€, and â€œoccasionallyâ€.Itâ€™s much more memorable and interesting to expose your personal opinions and to use strong wording.
If you point out every exception to the rule and add dozens of qualifiers to every statement, you will muddy the water so much that the core message will be drowned out.Instead, focus to deliver the core message to the best of your abilities.
Make it colorful and deliver it with confidence.
Show your personality; make it interesting, make it funny, and make it memorable.
The reader will thank you for it.Consistency is the most important thingIf youâ€™re going to write a larger piece of work like a book, the most important thing to get it done is working on it consistently.Anyone can write when motivation runs high, but what separates the wheat from the chaff is if you write when youâ€™re not motivated.
Itâ€™s exactly like exercising; the people who gets results are those who go to the gym when they donâ€™t feel like it, or who go out for a run even when itâ€™s raining like mad.Itâ€™s comforting to think about very successful authors who only write with the help of inspiration, but I think itâ€™s a trap.A Song of Ice and Fireis my favorite book series, but Iâ€™m sure that if George R. R. Martin had been more focused on writing consistentlyâ€”instead of waiting for inspirationâ€”we wouldnâ€™t be here still waiting for the next book a decade later, worried that heâ€™ll die before he finishes the series.And heâ€™s not alone.The Gentlemen Bastardseries is just as good, but weâ€™ve been waiting a decade for the next book there too.
Although I havenâ€™t read it yet,The Kingkiller Chronicleis another example.Do yourself a favor and turn yourself into an author that grinds out results, not one who waits for inspiration to strike.
The trick is, you can â€œforceâ€ inspiration to come by forcing yourself into writer mode.
And the way to do that is by making it a habit.What worked for me was to allocate 15â€“30 minutes of writing every morning (which sometimes became much more).
Even though I only worked on the book a few hours a week, this consistent workâ€”this habitâ€”worked wonders for me.Rewrite, rewrite, rewriteOne thing that may hinder the writing process is that the output isnâ€™t great the first time.
Most of the time itâ€™s just bad, but often it plainly sucks.
And thatâ€™s hard to handle, because we donâ€™t want it to suck.
We want it to be great!I think the key here is to let go.
Allow it to suck, as long as we getsomethingdown to work with.
Then youâ€™ll move forward and allow yourself to get into writer mode where the words will flow.Itâ€™s only then that the real writing can start:the rewrite.I really think that changing, revising, rewriting, and refactoring is the key to writing well.
Itâ€™s the rewrite that will allow you to:Make the text fluent.Make the writing consistent.Find and fix errors, both large and small.Reduce fluff.Ensure that the core message is delivered as clearly and strongly as possible.In my mind the rewrite is like polishing a gem.
Without it, the gem is not much more than a glittering rockâ€”
you can see the potential, but itâ€™s nothing special.
Yet after the polish it will sparkle and captivate you.The rewrite is essential to good writing.Clarity of thought translates into clear writingClear thinking becomes clear writing; one canâ€™t exist without the other.William ZinsserWriting can be hard sometimes.
You have a plan, you get something down and you try to rewrite and mold it to something good.
But despite doing everything â€œrightâ€, what youâ€™ve written still sucks.
Itâ€™s frustrating.When this happens to me, the problem isnâ€™t the writing itselfâ€”itâ€™s my thoughts.If your thoughts are muddy and unclear, then what you write will also be muddy and unclear.
But if your thoughts are sharp and clear, then the writing will be also be sharp and clear.In practice this means itâ€™s often better to take a step back and organize your thoughts than to force unfinished ideas on paper.It may sound like it runs counter to my previous advice of getting something down and then working with it, but I think they compliment each other.
Rewriting is one way of organizing your thoughts, but itâ€™s not a panacea.Have a plan and an outlineAnother way of organizing your thoughts is to approach writing top-down instead of bottom-up, where you focus on the big picture and then drill down.A good way is to formulate a high-level plan, and creating outlines is a simple and effective way of getting some structure.
This may not be the best approach for a novel, but for the type of technical writing I do creating outlines has served me very well.Organizing a bookOn the highest level the chapter titles can serve to guide you (both the reader and the writer) through the book, and doubly so if you organize them in sections (real or imagined).
For example, even if youâ€™ve never seenmy bookbefore, the three main sections should give you a good idea on what the book is about and the journey itâ€™ll take you through:What is a cryptocurrency?Properties of a cryptocurrencyHow do cryptocurrencies work?Look out for snake oilWhat is money?Are cryptocurrencies money?Better digital paymentsCheaper &amp; fasterâ€œUndesirableâ€ businessesFreezing of merchant accountsUncensorable donationsFor the unbankedA better currencyThe financial crisis, bad loans and bailoutsThe blind leading the blindA defective systemPrivate moneyA global currencyWith this high-level outline all I had to do was to fill it in.
Yeah, thatâ€™s simplifying the reality a little, but itâ€™s actually pretty close to how I wrote my book:I had a bunch of ideas that I turned into chapters.I wrote one chapter at a time (not necessarily in order).I revised the planned chapters over time.I rewrotea lot.It may sound too simplistic and too perfectâ€”surely you cannot plan so well that this is all there is to writing a book?
But remember that this is only a rough plan to guide you, in reality the process will be messy.
Moving, rewriting and throwing away chapters will be necessary.Organizing chapters or blog postsThis approach with first creating an outline also works great inside the chapters or in a longer blog post.I may start with a simple list of things I want to say, but my goal is to turn that into headers and sub-headers.
As an example, these are the headers from the postBattling burnout:Is it burnout, depression or both?No apparent reasonRed flagsSeeking helpWhat was the actual cause?Things that helped meThe only thing that really helped meAre you ever cured?Burnout was quite a difficult subject for me to write about, and I didnâ€™t know how to approach it.
But with an outline I got past the block and could start to chip away at the post.Perfectionism is a blessing and a curseOn one hand itâ€™s good to strive for perfectionism.
Even if you never reach it, the act of trying to make something as good as it can possibly be will increase the quality.But on the other hand, trying to be perfect may be a hindrance.
It may be paralyzing and I suspect itâ€™s a big contributing factor for the famous â€œwriterâ€™s blockâ€, where the writer is severely slowed down or even becoming unable to produce anything at all.Perfect is the enemy of goodI felt this effect after I had put way too much time designing the web version and the physical version of the book.
I think the result was really good; the book looks beautiful and is pleasing to read, but I burned out hard when I had to do it again with the eBook version.
2 years after the book was done, the eBook/PDF are still not available from regular stores, and truthfully I donâ€™t know if Iâ€™ll ever gather the energy to do that.The problem is that my standard was (is?) too high.
I wanted it to look as good as possible, but chasing perfection only led to burnout.Iâ€™m still trying to be satisfied with things that are good enough instead of wanting perfection.
But itâ€™s hard.SummaryTo summarize, these are my main takeaways thattotallycoincidentally corresponds to the headers in this post:Writing is a skill that can be improved.Establishing a writing habit is crucial.Rewriting is very important.Clear up your thoughts to clear up your writing.Outlining the book and chapters helps you and the reader.Donâ€™t strive for perfection.I am by no means an authority on this matter; these are just some lessons that I learned when writing a book.This is
      part 3 of theHow I wrote 'Why Cryptocurrencies?'series.How I wrote a book using PollenHow I made a kick-ass cover for my self-published bookWriting lessons learned after writing a bookâ†How I did the layout for my self-published bookRead the next partPublished:November 25,2023Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?,WritingPreviousNext</description>
      <pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Software</title>
      <link>https://www.jonashietala.se/blog/2023/11/17/lets_build_a_voron_software</link>
      <description>Let's build a VORON TridentLet's build a VORON: SoftwarePublished:November 17,2023in39c7b66Tagged:3D printing,VORONThis is part 5 of theLet's build a VORON Tridentseries.The build continues, now in a little more familiar territory.Firmware flashingTo flash the firmware I had to order a microSD card reader.
With that on hand the flashing wasn’t difficult. TheVORON docswalks you through the installation very well.MainsailI chose to install Mainsail instead of Fluidd simply because I liked the screenshot a little more.
From what I understand they’re very similar and the choice doesn’t really matter.
I flashed it usingpi-imager.It was great to see the display turning on and being able to ssh to the Pi—such a relief!The Raspberry Pi and the display are alive and kicking, although the display is rotated 180 degress.After installing the Octopus firmware on it’s SD card and adding the device to~/printer_data/config/printer.cfgI could start messing around with the Mainsail web interface.[mcu]# This is my serial, not yoursserial: /dev/serial/by-id/usb-Klipper_stm32f446xx_140045000F50535556323420-if00The Mainsail web interface.KlipperScreenIt’s good to see my old friend the Linux login prompt on the display, but that’s not really what we want here.
Instead we should installKlipperScreento be able to control the printer via a user-friendly UI.
I installed it using amanual install, but in hindsight I maybe should’veKIAUH. Oh well.To rotate the screen you edit/boot/config.txtaccording to theLDO docs:# Make sure this line is commented#dtoverlay=vc4-fkms-v3d# Add these 2 lines to the enddisplay_lcd_rotate=2dtoverlay=rpi-ft5406,touchscreen-inverted-x=1,touchscreen-inverted-y=1The display is rotated and uses KlipperScreen.Home AssistantHome Assistant integration with plenty of controls and sensors.Of course, I had to hook up the printer toHome Assistant.
This was easily done using theMoonraker Home Assistantplugin via HACS.Maybe I’ll actually make a functional dashboard with it… Some day.Initial configIt’s not enough to install the firmware, there are quite a few things in~/printer_data/config/printer.cfgthat needs to be changed.
I used theLDO configas a starting point and went from there.
To not bore you to death I’ll try to only document the noteworthy changes I made.And—very importantly—I installed Neovim on the Raspberry Pi I usingsnapd.
While I have the configuration files in a git repo, it’s far easier to ssh and edit the files directly.Be carefulAs advised in theVORON initial startup docswhen testing these things (motors in particular) you should have atestedway of stopping the printer if something goes wrong.
Like if you’re ramming the toolhead against the edge or something.I… Didn’t do this and just saw the “Home” button and thought—I wonder if it moves when I press this?Luckily the XY motors worked as expected (I hadn’t configured Z yet) but it could’ve been very bad.BedThe bed—through the SSR—is connected toHE0, corresponding to thePA2pin (BED_OUTisPA1):[heater_bed]# SSR Pin - HE0heater_pin: PA2HotendThe hotend is connected to the non-standardHE1(since my cable didn’t come with a fork spade to connect it toBED_OUT, as advised in theLDO wiring docs):[extruder]# Heater - HE1heater_pin: PA3sensor_type: PT1000It also took a long time for me to figure out the correctsensor_typevalue.
None of the values in thecommon thermistorsdocumentation worked for the Phateus Rapido, but I found an off-hand comment somewhere thatPT1000was the correct type.TapConfiguring Tap was straightforward, I simply followed the steps in theUpdating your Klipper config for Tapinstructions.The one thing that confused me was this this line aboutPROBE_CALIBRATE:You’ll need to manually calibrate the probe’s Z offset by using PROBE_CALIBRATE.Turns out it’s the process described inconfiguring the Z Offset Adjustmentin the VORON documentation, only substitutingZ_ENDSTOP_CALIBRATEwithPROBE_CALIBRATE. I ended up with this line in the config:#*# [probe]#*# z_offset = -1.195To see if Tap is working I warmed up the enclosure a little bit I ranPROBE_ACCURACY:probe accuracy results:maximum -1.219375, minimum -1.221250, range 0.001875,average -1.220500, median -1.220625, standard deviation 0.000612According to the docsthe standard deviation falls within the expected range of a well-built machine:For well-built machines you can expect to see between 0.0000 and 0.0008 standard deviation.I doubt that I built everything that well, but I’ll take it!I’m a little confused what the negative numbers mean; is myz_offsettoo low, causing the probe values to be negative?
Or are they uncorrelated and this is completely fine?ExtruderIt’s weird.
In some cases you can move mountains and solve the most difficult problems in a flash, but at other times you’ll stumble on the smallest pebble.And I stumbled hard on inserting filament into the extruder.I know I checked it when assembling the Clockwork 2, but by god I couldn’t get it to grab on the filament.
After a long time of fiddling, and considering if I should just disassemble it all, I somehow got it to work.I think it was a combination of the extruder direction being inverted and some filament getting stuck, but I just don’t know.
I’ll file it under user error and forget about it.[extruder]dir_pin: PF0 # Inverted by removing the `!`I don’t understand how you’re supposed to properly measure the amount of filament when calibrating
the extruder, the VORON docs isn’t particularly clear about it.
What I did was to pull it taught and try to measure from there, but I fear it wasn’tthatprecise.Maybe it would be easier without the top panel?The small red mark was 100mm away from the edge of the black holder part before I tried to extrude 100mm of filament. I think this is good enough?[extruder]rotation_distance: 20.41105599   # After recalibrationI hope my first print will look better than this mess?Panel mountingYou may have noticed that the above pictures had panels on them.
That’s right, to be able to heat soak the printer I had to have the panels, so I quickly installed them.It was easier to align the doors with the printer lying down.How are you supposed to get the right polarity and stick the part on the correct spot on the door? Just place the magnet and then push in the part.I’ve been impressed with the build so far, but I’m not impressed with the doors.
The doors doesn’t have foam tape between them and the frame unlike the rest of the panels.I wonder why that is?
I worry that they will scramble against the frame and it won’t make a good seal, which I think could’ve been avoided.
I’ll probably look for mods for the doors; maybe I’ll replace the doors with a magnetically mounted panel or something.SlicerI do feel my 3D printing inexperience when I have to setup yet another thing: a slicer.
There are quite a few options, but I didn’t care to try out them all—I simply wanted to get up and running smoothly.I pickedSuperSlicerbecause it works on Linux, has a customVoron Design profileto import, and seems fairly popular.Viewing the layers is weirdly satisfying.I was initially super confused on how to see the layer preview.
Turns out there was some error with only using the preconfigured Voron v1 250 0.4mm config I selected in the configuration wizard.
Importing theVoron Design profileand selecting it seems to have resolved the issue.What’s left?The next thing is finallyto print something.
Unfortunately I don’t have any filament other than the small sample that came with the LDO kit, so it’s back to waiting for a shipment to be delivered.And after that there are still things left to do:I’m missing some printed parts that I need to print out myself.For example I need a rear exhaust cover (although I plan to add a HEPA filter there) and spacers to mount the handles.Tuning, tuning and more tuning.Prints needs to look good.Mod it.It feels wrong to build an incredibly moddable printer and leave it without any mods.
I’m trying not to keep the “to-mod list” short but I can already sense that I’ll fail miserably.It works, but it’s not done yet.This is
      part 5 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: Software←Let's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:November 17,2023in39c7b66Tagged:3D printing,VORONPreviousNext</description>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Wiring</title>
      <link>https://www.jonashietala.se/blog/2023/11/11/lets_build_a_voron_wiring</link>
      <description>Let's build a VORON TridentLet's build a VORON: Wiringâ˜Published:November 11,2023Revised:January 24,  2024in2e5adfcTagged:3D printing,VORONThis is part 4 of theLet's build a VORON Tridentseries.Dread it. Run from it. Wiring arrives all the same.Itâ€™s time for the part of my VORON build that Iâ€™ve been dreading: the wiring.Itâ€™s scary because I really have no clue what Iâ€™m doing, and mistakes can be very costly and time-consuming.Iâ€™ve taken my time to double- and triple-check everything, and I took lots of pictures.
I ran into some issues Iâ€™ll document here, but this post will mostly be filled with pictures to gawp at.Cable chainsThere wasnâ€™t a ton of instructions on the cable chains, but I felt it went well.I made some big mistakes here that caused major headache later on, butmore on that later.It was fiddly, but not the end of the world.If we make the wires pretty from the start, we can just continue like that?Main powerYes, I guess I shouldâ€™ve connected main power before connecting the motor cables, but the octopus isnâ€™t connected yet so itâ€™s fineâ€¦I triple-checked that I donâ€™t mix colors and I checked again that I connected it to the outlet properly.Note that it says â€œTO 5V PSUâ€ on the PSU cable. I think thatâ€™s a typoâ€¦The green light turns on! Iâ€™m glad it didnâ€™t burn up yetâ€¦Octopus powerAccording to the docs, the SSR should connect toHE0instead ofBED_OUT. Fine.The Octopus has the required power, but I didnâ€™t check if it turns on at this pointâ€¦I mixed the 3 and 4 inputs on the SSR, but luckily I caught it when double or triple-checking.Breakout cablesIâ€™m following LDOâ€™s wiring guide and the breakout cables are next.Wrong hotend cable?When I was about to connect the hotend cable I noticed a problem.In thewiring guideit says that I should connect the hotend toBED_OUT:Breakout PCBCable label (breakout)ControllerCable label (controller)HE0 ****HE0HE0/PA2BED_OUT****The BED_OUT port in the Octopus controller carries more current than the HE ports, this allows you to use super high power hotends such as the Phaetus Rapido.But the cable that I got doesnâ€™t fit:The hotend cable has â€œpinâ€ type connectors.What I want is â€œUâ€ type connectors.(I later found them on Amazon as â€œfork spadeâ€ terminals.)My suspicion is that I got the wrong cable because theV2.4 wiring guidespecifies that the cable goes intoHE0andSSRgoes toBED_OUT, while the Trident has it reversed.I complained about this to 3DJake (where I bought the kit from), who reached out to LDO where I got the response that theyâ€™re sorry, but I can connect the hotend toHE1and change something inprinter.cfgto make it work.Not ideal as I do have the Phaetus Rapido, and according to LDOâ€™sV2.4 errataitâ€™s advisable to switch:It has been reported that the Rapido hotend (by Phaetus) draws a large amount of current during initial heat-up. If you are using this hotend with our kit, please consider swapping the bed and hotend connections at the Octopus side.Iâ€™m not thrilled about it, but I guess I need to find some spade terminals and change the wires later.Full pictureA better overview of the wiring with breakout cables (and other things).RaspberryThe Raspberry Pi uses 5V from the Octopus via some PCBs:The Raspberry Pi is connected.Other small detailsThe major things are done, but there are more things that needs to be fixed.LEDsI got a cute little PCB for connecting two LED strips in the kit.Itâ€™s neat. I like it.(I later moved the LED wire so it goes down in the front instead of behind the belts.)I wasnâ€™t sure how to mount the LEDs, so I added a wire cover below the LED strips to give it a platform to attach on.Controller fanI shouldâ€™ve gotten another PCB mount to mount the fan PCB, but I didnâ€™t get one from the print-it-forward service.
Maybe I shouldâ€™ve mounted the fan PCB with the mount instead of the LED PCB, but I couldnâ€™t be bothered.Some tape to prevent shorts.It was hell to get it mounted. Why didnâ€™t I do this before adding wiresâ€¦?The wire is stuck between the fan and the plastic part, oops.Display mountI didnâ€™t manage to get the display mount to work properly.
The screws didnâ€™t align properly and the display cover constantly fell off.Thereâ€™s a space here that I couldnâ€™t close no matter how hard I pushed.The screw hole is slightly off.I had to use tape to keep it all together:Tape for the cover so it doesnâ€™t fall off.Tape for the sides.It works I guess but I need to print new mounts when I get the printer up and running.
I believe the problem is that I have the 2.1 version of the display, while the mount is for the 2.0 version.The bedI had delayed installing the bed, but with the wiring needing to be done it was time to install the bed.I was a bit worried about applying the magnetic sheet, but I think I managed to do it without any bubbles.The bed is installed and ready.Maybe the Z-endstop is completely unnecessary as Iâ€™m going to run Tap?
Probably, but as itâ€™s already installed I wonâ€™t bother ripping it out now.Missing Toolhead cablesWhenassembling the stealthburnerI couldnâ€™t connect the hotend to the toolhead PCB because the connectors didnâ€™t match, and I also didnâ€™t have a cable from the Tap PCB to the toolhead PCB.
It was time to rectify that.I didnâ€™t do it when building the toolhead because I didnâ€™t have the tools for it.
So I ordered wire strippers, a crimping tool, JST connectors and some wire from Amazon.No, I didnâ€™t have a wire stripper and Iâ€™ve never created a cable before.Crimping was fiddly but after a dozen attempts I think I got it down.After I painstakingly created the Tap cableâ€”with a 3-pin JST on each endâ€”I noticed that the Tap PCB required a smaller connector than the ones I had. Oh noâ€¦ Do I have to orderanotherconnector kit?But luckily the Tap kit came with one such connector.
(Please donâ€™t break it.)So I tried to change itâ€¦ But after trying for some time I noticed that the wires I had were too thick, and didnâ€™t fit this smaller connector.
I nearly destroyed the connector while trying to insert the wiresâ€¦Things arenâ€™t going my way, maybe I need to order (and wait for) new wire?But wait!Remember how I complained about the hotend cables having the wrong connector?
Turns out the Rapido comes with extension cables with the connectors I wanted.
The thermistor extension cable has thinner wires and the same JST connector I haveâ€¦Maybe I could shorten that cable and use the leftover wire for the Tap cable?A shortened extension cable for the hotend thermistor.Behold! My glorious cable!Iâ€™ve spent an embarrassing amount of time and energy just to create this single cable.
It makes mereallyappreciate that the LDO kit comes with pre-made wiring,
I canâ€™t imagine the frustration if I had to create all wiring from scratch (thereâ€™s alotof it).One problem I still have is the excessive wiring coming out from the toolhead, and I donâ€™t really know what to do with it.Too many cables. Should I try to hide it inside the cable chain?Maybe I could try to shorten them allâ€¦
But Iâ€™m not skilled or brave enough to try.Itâ€™s not prettyâ€¦ It sort of ruins the nice looking toolhead donâ€™t you think?Gantry rackingWhen building the printer Iâ€™ve been jumping around a little, and somewhere in the middle of the wiring I decided I should try tosolve the gantry racking.I had noticed that the gantry catches a little when moving it around, and I got a tip from theVORON forumthat I should rack the gantry to try to fix it.And it did solve the issue!
The movement isnâ€™t as smooth as inNERO 3Dâ€™s video, but at least it doesnâ€™t catch anywhere.I did this with the motors and everything connected, which is NOT recommended as it may damage the components.
At one point I saw the display flashing and thought â€œhuh, thatâ€™s weirdâ€, but clueless as I am the implications didnâ€™t register at that time.Yeah I know that NERO 3D said to watch out for it in the gantry racking video, but it had slipped my mind.
Now Iâ€™m really worried that Iâ€™ve screwed myself over in a major way.Lack of range for the toolheadAfter installing the bed and racking the gantry, I noticed a big issue with the toolhead: it doesnâ€™t reach the corners of the bed and the bed doesnâ€™t reach up to the toolhead.The toolhead is at max x, but itâ€™s far from the edge.The toolhead doesnâ€™t reach the edge on the y-axis either.I tried to raise the bed as high as possible, but it doesnâ€™t come close to the toolhead, let alone raising it for tap to function.Turns out I had made a mistake when installing the cable chains, as theyâ€™re all too short and they max out too soon, stopping the movement.There were 4 extra links in the kit, but I didnâ€™t know what to do with them so I forgot about them and took for granted that the three cable chains would work as-is.
Maybe this is assumed knowledge, but when installing themâ€”and before running the wires throughâ€”I shouldâ€™ve checked the range of motion to be sure they were long enough.Now I had to break open the chains and add the extra links afterwards.
This was super annoying because I had to pull more wire to the chains, meaning I had to undo all the wiring work for all the motors and toolhead cables.Opening up the xy cable chains.I added two links to the z chain and one link each to the x and y chains.
For x and y I also had to add some extra space by offsetting them so the chains arenâ€™t flush to the edge of the extrusion holder or toolhead.I had to add some extra spacing on the x and y chains to get the required range of motion.
I wish I hadnâ€™t clipped away the tab, so I could zip tie the cables to it.Itâ€™s all coming togetherAll the wiring is in place.(You may notice an unconnected cable in the upper right, itâ€™s for the Nevermore filter I havenâ€™t built yet).I may clean it up a bit after Iâ€™ve verified that things work.
It may not ber/cablepornneat, but it could be worse.A better overview of the wiring with skirts and all.Let there be lightWith everything prepared I closed my hands, curled my toes, and clenched my ass and turned on the powerâ€¦And the lights are glowing!Huzzah!The lights are glowing, and thereâ€™s no smoke from the Octopus.I disconnected the hotend and Raspberry as a safety measure before turning it on.The Raspberry Pi also has some lights when turned on.The status lights are promising, but I canâ€™t tell for sure before flashing.This is
      part 4 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: Wiringâ†Let's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:November 11,2023Revised:January 24,  2024in2e5adfcTagged:3D printing,VORONPreviousNext</description>
      <pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>I designed my own keyboard layout. Was it worth it?</title>
      <link>https://www.jonashietala.se/blog/2023/11/02/i_designed_my_own_keyboard_layout_was_it_worth_it</link>
      <description>The T-34 keyboard layoutI designed my own keyboard layout. Was it worth it?â˜Published:November  2,2023Revised:November 29,  2024inf19d7b8Tagged:Computer,Keyboard layouts,Keyboards,T-34This is part 5 of theThe T-34 keyboard layoutseries.Seethis postfor a full reference of how the layout looks at the moment.Almost two and a half years ago I embarked on the journey to change keyboard layout.
At first I tried out existing ones, but it didnâ€™t take long before I figured itâ€™s better to develop my ownâ€”and things went downhill fast from there.JCYFPXWOU.RSTHKMNAIRepeat,VGDB/L()_SHRTSpaceNAVESPECQQUZClear#{}=BspcRev RepCtrlEsc SYMDel: SYMCtrlvsplitGuiShiftShiftGui$&lt;-&lt;==&gt;-&gt;|&gt;hsplit&gt;=(Some)combosof theT-34 layout.But now that I havenâ€™t made any changes to the layout for over a year, I think itâ€™s time for some introspection and ask the dreaded question: was it worth it?
And should youâ€”the dear readerâ€”do the same?What were my goals in creating my own?I essentially had two big goals with my layout:Relieve my RSII had started to develop RSI in my right hand that I really wanted to cure.
Especially in the area of my right thumb, I wanted to relieve my right hand in general.I also wanted to reduce pinky usageâ€”particularly for my right pinky that I had broken earlier and felt very weak.Optimized for my usageI had three main use-cases I wanted to optimize for:Vim usageWrite Swedish and EnglishCoding in a myriad of different programming languagesDid I succeed with the goals?For the first I can say that in combination with theFerrisâ€”a split keyboard with 34 keysâ€”my RSI did indeed get a lot better.TheFerris, my keyboard that helps with RSI.As for the secondâ€”if itâ€™s optimized for my usageâ€”I donâ€™t really know how to answer.
When I was in the middle of designing the layout I probably wouldâ€™ve pointed out the low SFB values (Same Finger Bigram), the redirects andgenerated interesting graphsandheatmaps.But now Iâ€™m satisfied with saying that it justfeels really good.You have to be a little crazyItâ€™s quite extreme to design your own layout and I think you have to be a little crazy to do it.
I know I was.There I was; awake in the middle of the night carrying our baby in a harness, standing in front of the computer trying to learn this new stinking layout while ignoring his cute smile, hoping he would fall asleep soon.I was trying to learn theBEAKL 15layout but it just wasnâ€™t working for me.
Maybe I could tweak it a littleâ€”so I did.
Maybe I could tweak it some more? I did that too.Eventually the sleep deprivation took over and I abandoned it and started to design my own layout.And thatâ€™s how I mostly designed my layout: I designed, tweaked and learned it in the middle of the night as I was trying to get our little kid to sleep.I donâ€™t think you have to be crazy to design a keyboard layoutâ€”but it probably helps to overcome the healthy fear of overoptimization and diminishing returns.What could I have done differently?Iâ€™m not motivated to make any large changes or experiments with the layout now, but there are some things I wish I had tried out more:One shotshift on the thumb instead ofE.Theone shotshift seems like such a fantastic feature, but that would require me to moveEaway from the thumb, which would snowball into an entirely different layout.Using a combo forone shotshift is another thing Iâ€™d like to try that wouldnâ€™t be too invasive.Home-row mods.Home-row modsis another very popular feature that would unlock a lot of extra space on the keyboard (as it would allow secondary effects on long-press instead of shifting and reduce the amount of combos I have).I did try it out a little bit, but maybe I could get used to it with more effort?32 keys instead of 34.It would be fairly simple to go down to 32 keys, with only a single key for each thumb.
The idea appeals to me, but I donâ€™t think there are any practical benefits for me to do so.
I might do it in the future if/when I build a new keyboard.More practice.Iâ€™m not close to my old QWERTY speed of +120 wpm simply because I got bored of practicing typing.Would I recommend you to create your own layout?Letâ€™s summonBetteridgeâ€™s law of headlinesthat says:Any headline that ends in a question mark can be answered by the wordno.I wouldnâ€™t go quite that far, but you need to realize that thereâ€™s very real diminishing returns of completely designing your own layout.In thevastmajority of cases it would be good enough to switch to something likeColemak-DHorHands Down, and depending on what youâ€™re after switching to a more ergonomical keyboard would probably suffice.Or maybe not do anything at all. Lotâ€™s of people have been happy with a regular keyboard and QWERTY.When should I make a change?I think it comes down to two things:What benefits are you looking for?How motivated are you?First an important note: changing the layout because you want to type faster will probably not work out.
Chances are youâ€™ve been using QWERTY for many years and the amount of practice you need to catch up to and surpass your QWERTY speed will bestaggering.
Most will burn out long before reaching that point (including me).The biggest benefit I see with an alternative layout is comfort.
If youâ€™re worried about RSI, and you foresee yourself spending a few decades more in front of the computer, then switching layout might be a good idea.Another benefit is if you have some special requirements with your layout.
In my case for example I wanted to be able to comfortably type Swedish on a tiny keyboard, and just usingColemak-DHor something wouldnâ€™t really support that well because I couldnâ€™t fitÃ¥Ã¤Ã¶on the base layer.But with my own layout I could haveÃ¥Ã¤Ã¶easily accessible(by toggling between()_andÃ¥Ã¤Ã¶with a layer).And of course, if you find the idea of designing your own layout interesting or fun, you should totally do it!
I honestly thought it wasreally fun(even though learning it was a pain).A layout is more than alpha characters~+*!#@^.|{}-\`?[]Repeat,%/&amp;()_CancelSymbols are very important for a programmer.Something that people seem to miss with alternative layoutsâ€”even people designing themâ€”is that a layout is much more than where the alpha characters goes.Iâ€™ve spent much more time on where toplace the symbols, how tohandle numbers, what type ofmodifiersI want, anavigation layer, andshortcutsthan the base layer, and thatâ€™s also where most of the benefit of my layout comes from.Symbols for example are very dependent on the programming languages you use, so thereâ€™s lots of benefit to a symbols layer optimized for those. Itâ€™s much more productive to spend time on optimizing symbols placement than to try to improveColemak-DH, which is already pretty darn good.Even simple things like adding anavigation layer(with arrow keys under your fingertips) or moving Escape are hugely beneficial.
And of course, avoiding the gymnastics of pressing Ctrl in the lower left corner with the pinky is a big win.My recommendationIf you want to make a change to your setup, these are my recommendations sorted from least to most effort:Get a programmable keyboard.For example, moving Escape to Caps Lock andbehave like Ctrl when heldare great modifications for a regular keyboard. (You might be able to do that on the OS level too.)Get a more ergonomical keyboard.I think a split keyboard with tenting is a great start.
If you want to go the extra length try to make it smaller.Tweak the big buttons to avoid large and awkward motions.For a Vim user, remapping Escape is a classic.
Ctrl, Shift, Alt, and Enter are also good candidates for moving to a thumb button, acomboor aMod-Tap.Add anavigation layer(ortwoorthree).Start tweaking the symbols and numbers (and other things you can come up with).Use an alternative layout such asColemak-DH,Hands DownorMTGAP 2.0.Make your own completely custom layout.You donâ€™t have to do everything at once and you can try out the different levels to see how painful and time consuming the changes are.How do you even learn a new layout?JCYFPXWOU.RSTHKMNAIRepeat,VGDB/L()_SHRTSpaceNAVESPECTheT-34base layer. Thereâ€™s not a trace of QWERTY left.Say that youâ€™ve decided to learn a new layout. Now what?The simple answer is that you just need to practice.
But here are some tips to make the process more efficient:Donâ€™t look at a reference of the layout and use blank keycaps.Being forced to remember is painful but recall helps you learn faster.Practice in small bursts.Small and frequent sessions are better than few but larger ones.Learn to touch type.Might as well learn it properly from the start.Note that you donâ€™t have to be super strict.
I press the upper corners with my ring fingers instead of the pinky for instance (because Iâ€™m weird and it feels better).If you want to retain the ability to type QWERTY, use a different setup.A different keyboard for a different layout can help keep them separate.
Pressing space with a different thumb is another trick that may help.There are very good online tools to help you learn a layout.
Here are some I like:Itâ€™s important to stress how much motivation matters.
Even though I feel that I want to pick up the practice again when Iâ€™m writing this,
I donâ€™t think that will actually happen as Iâ€™m not really motivated enough.
But if you start using a new layout youhaveto practice, and you have to practice quite a lot at least at the beginning.My practice died off hard a year ago when I got good enough, around 70 wpm.(Some of this was spent practicing numbers and symbols.)FAQYou dodged the question; Was it worth it?Hell yes it was.
The massive amount of nerd points alone is enough.I still want to use QWERTY on a regular keyboardIf you continue using it regularly youâ€™ll be fine.
After 2 years I can still type faster with QWERTY on my laptop than with my own layout on my ergonomical keyboard, and I can use both an English and Swedish layout (symbols move around andÃ¥Ã¤Ã¶are added).How long does it take to learn a new layout?Impossible to say as weâ€™re all different.
The first layout I learned took ~16 hours of practice time onkeybruntil I got up to ~40 wpm and with the second layout it took ~12 hours.
At ~40 wpm I felt I could write without wanting to throw the keyboard through the monitor.Beyond that it depends on how diligent you are with practice.Sounds like a massive effort, I donâ€™t think itâ€™s worth it?If this sounds too much for you, it probably is.I rationalized it by saying that Iâ€™ll spend a few decades more programming, so a big investment now will pay for itself with time as long as thereâ€™s some benefit.(This is indeed the trick on how to waste time on Very Productiveâ„¢ things likerewriting your Neovim setup.)This is
      part 5 of theThe T-34 keyboard layoutseries.The T-34 keyboard layoutThe T-34/0 keyboard layoutThe T-34/1 keyboard layoutThe T-34/2 keyboard layoutI designed my own keyboard layout. Was it worth it?â†This series is completed.View all seriesPublished:November  2,2023Revised:November 29,  2024inf19d7b8Tagged:Computer,Keyboard layouts,Keyboards,T-34PreviousNext</description>
      <pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The killer features of the Steam Deck</title>
      <link>https://www.jonashietala.se/blog/2023/10/24/the_killer_features_of_the_steam_deck</link>
      <description>The killer features of the Steam Deckâ˜Published:October 24,2023inac95a3bTagged:Gaming,Steam DeckContentsKiller feature #1: Sleep modeKiller feature #2: The steam libraryLEGO RPGsOvercooked! 2Forza Horizon 5Teenage Mutant Ninja Turtles: Shredderâ€™s RevengeFaster than LightParkitectGrim DawnTony Hawkâ€™s Pro Skater 1 + 2Killer feature #3: Steam inputKiller feature #4: An open platformKiller feature #5: EmulationMario Kart 8 DeluxeSuper Smash BrosPokÃ©mon SnapPunch OutPokÃ©mon UnboundIsnâ€™t there more to the Steam Deck?In the beginning of the year I gave myself a late Christmas gift and bought aSteam Deckfor myself.
There were two main reasons I decided to buy it:I wanted my kids to play games instead of passively consuming endless amounts of YouTube.I wanted to combat myburnout and depressionby picking up gaming again.And boy did it deliver.
The Deck is probably the most impressive thing I can remember buying sinceâ€¦ I donâ€™t know, maybe my first smartphone?I think it impresses me so much thanks to these five killer features:Killer feature #1: Sleep modeFor me, as a father of three where my gaming time is very limited and can be interrupted at any time, the one truly outstanding feature of the Deck is the sleep mode.It works like this:Press the sleep button, and the Deck will turn off in about a second.Press the sleep button again, and the Deck will turn on and resume exactly where you were, in a second.This has worked perfectly for me for every game Iâ€™ve tried.
And itâ€™s revolutionary.Itâ€™s no exaggeration to say that without this one feature, nothing else couldâ€™ve allowed me to find time to game.
The ability to instantly put it down and go to the screaming baby has been crucial,
and being able to instantly teleport myself back into an immersive gaming experience has been fantastic.If youâ€™re a parent who wants to game, this is the feature youâ€™ve been waiting for.
Even if youâ€™re not a parent this is an amazing feature.If a portable gaming device doesnâ€™t have this, donâ€™t bother.Killer feature #2: The steam libraryThe second feature I want to highlight is access toSteam.
Itâ€™s the largest distributor of PC games by a wide margin, and the amount of games available on the platform should be enough for anyone.And I must mention the Steam sales.
Many games are heavily discounted over the year, and you can even get AAA games for cheap if youâ€™re patient enough.
Contrast this with Nintendo where the games are never on sale.To be sure, the Steam Deck is a handheld and wonâ€™t be able to run the most demanding games and it also runs Linux so it will have compatibility issues with a lot of games.
But the device is surprisingly powerful, and the work Valve has put in to makeWindows games work on Linuxis astounding, so a lot of the games will work outright or with some minor tweaks (by changing theProtonversion or tweaking graphics settings).Just to give you a taste, hereâ€™s a variety of games that are installed on my Deck that all work great:LEGO RPGsLEGO City Undercover. Itâ€™s GTA but for kids!The LEGO games have been popular, although theyâ€™re a bit too difficult at times for my kids.LEGO Star Wars: The Skywalker Saga,LEGO Jurassic WorldandLEGO City Undercoverhave all been very well received.Overcooked! 2As great as the LEGO games are,Overcooked! 2is my favorite game for kids.
The beauty is how it forces you to collaborate with each other in a very nice way.Forza Horizon 5Forza Horizon 5is another game that works great on the Deck.
It hasnâ€™t been played as much as other games because itâ€™s still a bit too difficult, even with driving assist.Teenage Mutant Ninja Turtles: Shredderâ€™s RevengeI went with the boys to watchTeenage Mutant Ninja Turtles: Mutant Mayhemon cinema.
They, and I, loved it.Shredderâ€™s Revengehas also been very well received, but alas, once again, itâ€™s a little too difficult for my young kids.
Or should I say; they havenâ€™t learned to handle defeat properly yet.Faster than LightI rediscovered one of my favorite games of all time, andspent 231 hours to beat it on hard with all the ships.
Make no mistake, this game isreally hard.ParkitectParkitectis an ode to one of my favorite games of all time:Rollercoaster Tycoon.
And I must admit, Parkitect iseven better.Grim DawnPeople were hyping on Diablo 4 so much.
Me being so over Blizzard, I instead played someGrim Dawn.
According to the internet itâ€™s an objectively better game.
Regardless if thatâ€™s correct, the game does work very well on the Deck.(I actually havenâ€™t played it that muchâ€”I didnâ€™t enjoy the ARPG grind.)Tony Hawkâ€™s Pro Skater 1 + 2I have very fond memories of playingTony Hawkgames on the GameBoy Advance and on the PC.
I couldnâ€™t help myself and had to relive those memories.And the game runs like a dream.Killer feature #3: Steam inputYou may have noticed that I listed some games you wouldnâ€™t think worked well on a handheld.Parkitectfor instance heavily relies on the mouse, andFaster than Lightis a decade old game thatâ€™s also mouse based and doesnâ€™t have an gamepad specific mappings.
What gives?WithSteam Inputthe Deck allows you to remap any key or command to whatever input you want.
Combine that with the Deckâ€™s excellent trackpads and you can comfortably play any game (well, maybe not RTS games or FPS games like Counter-Strike).As an example hereâ€™s my configuration for FTL:Some notable features to mention:Right trackpad as a mouse.Buttons for the most common utilities (doors, teleport, hacking, return to stationsâ€¦).Sticks for number rows (weapon and drone selection) andMfor mindcontrol.Shift and control are relegated to back buttons.In FTL there are two pause buttons (space bar and mouse middle click). By pressing them quickly in succession you canmicro pauseand advance the game just a few frames. Iâ€™ve bound a single button on the Deck to do this, with a small delay between.This may seem scary, but for most games you wonâ€™t need to change anything.
But when you do,Steam Inputis a godsend.Killer feature #4: An open platformWhat first got me excited about the Deck was actually that the Deck might represent the first big leap forwards in making Linux a valid gaming platform.
And thanks toProtonI think thatâ€™s absolutely true, but the real value for the Steam Deck owner is that itâ€™s an open platform and you can do what you want with it.Want touse other game stores?Sure!Do you want toinstall native Linux gamesnot on Steam, likeVelorenorClone Hero?They work great!Want towatch a movieinstead of gaming?Launch desktop mode and itâ€™s just a regular computer.Donâ€™t want to bring your laptop, butneed to do some developmenton the go?Just setup your environment and go.
You can program using the virtual keyboard, but it sucks in a major way, so bring a keyboard.My Neovim config running on the Deck. Seethis poston how to install Neovim on the Steam Deck.Do you just want toinstall Windows?Absolutely. Do you want to install it on the SD-card or on the Deck itself?Iâ€™m a strong believer in that you should be allowed to do whatever you want with your device, and with the Steam Deck you can.Killer feature #5: EmulationThe last feature I want to bring up ties into the previous: the Steam Deck is an amazing platform for emulation.Iâ€™m new to emulation, but it was very easy to setup usingEmuDeck.
The device itself is powerful enough to run basically any older game, and even many popular Switch games.You may ask, if Steam already has tons of games, why bother with emulation?Iâ€™ve got a few reasons:Many good games arenâ€™t on Steam (Nintendo, Iâ€™m looking at you).Nostalgia.Experience the classics.Some gaming experiences arenâ€™t replicated well by the newer styles of games.If you look at the many â€œbest games of all timeâ€ lists out there (which I did when I asked myself what have I been missing out on during my years of not gaming) youâ€™ll find that a lot of them are from older systems.For example, maybe youâ€™ve heard ofThe Legend of Zelda?
I have, but Iâ€™ve only ever played a single game (Linkâ€™s Awakening).
This is super unfortunate because some of the Zelda games are rated as the best games in history.But if you want to play through the Zelda series youâ€™d have to collect almost every Nintendo console.Or you can playthe whole series, including the newest Switch games, on the Deck.I admit this is a contrived example because I havenâ€™t done this yet (I plan to play through the most popular ones at some point), so hereâ€™s a list of games that weâ€™ve actually played:Mario Kart 8 DeluxeBoth of my boys (6 and 3 years) love Mario Kart.
The best feature is probably the driving assist, so the younger kid can play even if all he does is press the jump button and shout.Super Smash BrosMario Kart has been our most played game, but itâ€™s quickly being overtaken by Super Smash Bros that my older boy has been playing non-stop for weeks now.But I understand him, itâ€™s an awesome game and it was my favorite Nintendo game when growing up.PokÃ©mon SnapMy oldest is in a PokÃ©mon craze at the moment.
Since he hasnâ€™t learned to read yet the â€œrealâ€ PokÃ©mon games are a bit too much to play by himself, but taking pictures of PokÃ©mon works very well.Punch OutPunch Out is pure nostalgia for me.
Amazing.PokÃ©mon UnboundSpeaking of nostalgia, of course I need to mention PokÃ©mon.
I had difficulty deciding what PokÃ©mon game to playâ€”there are a fewâ€”and then I just happened to discover the rabbit hole of PokÃ©mon ROM hacks.According to my pre-studyPokÃ©mon Unboundis the best ROM hack there is, so thatâ€™s where I started.
But thereâ€™sa lothere to explore.
Maybe Iâ€™ll get there eventually.Isnâ€™t there more to the Steam Deck?Thereâ€™s absolutely more to like about the Deck. For instance:Itâ€™s a handheld you can dock.The processor is very capable given the amount of power it uses.You can connect a lot of things to it; controllers, fight sticks, Wii guitars etc.The trackpads are very good as a mouse replacement.The year of Linux has finally arrived!While nice, they donâ€™t quite qualify for my killer features list.
And most importantly: I wanted to keep it simple and only select five killer features.Published:October 24,2023inac95a3bTagged:Gaming,Steam DeckPreviousNext</description>
      <pubDate>Tue, 24 Oct 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Bed &amp; electronics</title>
      <link>https://www.jonashietala.se/blog/2023/10/22/lets_build_a_voron_bed_electronics</link>
      <description>Let's build a VORON TridentLet's build a VORON: Bed &amp; electronicsPublished:October 22,2023in04fe1beTagged:3D printing,VORONThis is part 3 of theLet's build a VORON Tridentseries.I’ve made a lot of progress on my VORON.
Electronics and other stuff are installed to the degree that I’ve begun wiring, but I’m going to separate the wiring into it’s own post.This will be a short post about bed preparation and installing electronics components.Feedback from the VORON forumI’ve gottensome feedbackfrom the friendly VORON forum on some issues I should take a look at:Verify that the frame is built square (I’ve tried to do so).The front Z motor mounts were swapped.Front Z motor mounts now have the VORON logo at the front.I shouldcheck the gantry rackingto get rid of it catching (I haven’t done that yet, I want to finish up the wiring first).Misaligned extrusionWhen I was going to insert the top cover I noticed that the Z motor didn’t fit into the cutout, and I discovered that the center extrusion wasn’t right in the middle:I have a small memory that I measured it, and the spacing was off by a little, but then maybe I forgot to do something about it?
Just goes to show how my plans of taking the build slowly and trying to be thorough doesn’t prevent me from doing silly mistakes.The buildplateEven though the assembly manual says that you should install the buildplate at this point, I decided to skip it.
I got the tip from Nero3D to only install it at the very end, even after wiring, because it’s heavy and makes the printer more annoying to flip around during the build.These screws were extremely hard to screw down… Maybe I need better tools?Other than the small screws murdering my fingers, installing the final extrusions was straightforward.Bed mount installed.ElectronicsAnd now the part of the build I’ve been most worried about begins; avoiding blowing up the electronic components.Well, that requires wiring so maybe I’ll blow it up in the next post.I couldn’t find theLDO Beefy Raspberry Pi Mountin my printed parts.
But why would I need it, the standard parts work well?The big electronic components are laid out.Again, laying out the components were no big deal.
Embarrassingly, the most trouble I had was locating the microSD slot for the Raspberry Pi (it’s underneath).Next up is the dreaded wiring.This is
      part 3 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronics←Let's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:October 22,2023in04fe1beTagged:3D printing,VORONPreviousNext</description>
      <pubDate>Sun, 22 Oct 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Toolhead</title>
      <link>https://www.jonashietala.se/blog/2023/10/18/lets_build_a_voron_toolhead</link>
      <description>Let's build a VORON TridentLet's build a VORON: ToolheadPublished:October 18,2023in1f29b47Tagged:3D printing,VORONThis is part 2 of theLet's build a VORON Tridentseries.Since the last update I’ve made some good progress:All the motors are installedThe x-axis and belt are installedTap is installedThe toolhead with Stealthburner + Clockwork 2 is also installedPurple means Pretty.I’ve run into a few problems on the way that I’ll try to document, but other than that the build has been really fun so far.
The design of Clockwork, Stealthburner and Core XY is really cool and it’s been very interesting to assemble them to see how it all comes together.X-axis and beltsI didn’t encounter any issue assembling the x-axis or the belts.I’m slightly worried that I messed something up as moving the gantry from front to back has a very slight hiccup in the middle, but it doesn’t come up when I move it from back to front or if I move it slowly.ToolheadUp to here it’s been fairly straightforward.
Just follow theofficial assembly guideand don’t forget to read theLDO Build Notes/FAQ.But assembling the toolhead (or printhead, what’s the difference?) was not so simple and I had to reference several sources:VORON Tap manualandVORON Tap errataVORON Stealthburner manualLDO Voron Stealthburner + Clockwork 2 + LDO Toolhead PCB RevisedLDO Voron Trident 250 Wiring Guide (Rev. A/C)LDO Input Shaper ToolkitVORON 2.4 R2 MPX CBT build series part 16 - Rapido HF hot end unbox and installationThis was confusing and I managed to trip up on several things.TapMy plan wasn’t actually to build Tap from the start, and instead rely on the standard inductive probe.
Even thoughthe kit statedthe probe was included, it wasn’t listed in the parts checklist so I assume it wasn’t included in the kit?I later found it in a bag in the cable box.No big deal.
Instead of building the Klicky probe just to tear it down and replace with Tap later, I decided to build Tap from the get-go.Tap in progress.The first thing that confused me was the printed parts.
Inthe Tap manualthe main printed part had the VORON logo, yet my part did not.
There were some other minor differences, so maybe I got the printed parts from an older revision of Tap?Butthe manualalso didn’t seem updated to the latest version as it wasmissing items from the errata(which I only discovered after assembling Tap).
There were no mentions of the tall reinforcement screws (that I could install afterwards), belt covers (that I didn’t use) or how to install the 2 extra magnets (that now lie unused).I got theHardware Kit + OptoTap rev2.4.1 5v or 24v OPB666N HIGH TEMP + D2HW“kitchen sink” kit, but the amount of unused parts worries me.Still, I got it assembled and it seems to work?Crosses fingers.Tap is mounted and ready to go.Clockwork, mod or no mod?For the top part of the Stealthburner, I did the component prep and then I noticed that the LDO documentation refers toa revisionthat called for using alternative printed parts.Okay, okay.
I redid installed heatset inserts on those parts as well and went to work.
It went well until I had to install the PCB and the printed mount (from the revision) didn’t fit.Alright, improvisation time:I didn’t find how to attach the PCB in the documentation, so I improvised with heatset inserts. I feel so clever!Of course later on I found a plastic part that was made for the job and replaced the mount:This is how the PCB is supposed to be mounted.… And then I found out why it didn’t fit. There was this linein the revision:THIS MOD NO LONGER REQUIRED for V2.4 Rev. C - the kit includes the Stealthburner PCBs and works with the stock parts.I’m not building a V2.4, so I didn’t think it applied to me.
But now I think it was a bad assumption.
I’m building the Rev.C of the Trident, which seems to have the new version of the PCB that fits the standard parts.At first I was going to leave it like this cause why bother, but then I reada note hidden in the wiring guidethat for the new PCB I needed to use aspecific cable coverthat of course wasn’t compatible with the modified parts…So I redid everything.And then I discovered that thespecific cable coverI had was missing the thermistor holder:My printed part doesn’t have this holder.Darn it.But I think (hope) it should finally be finished enough; I can probably tuck the thermistor somewhere to get it to print.Now I think it’s built as it should be?Installing a hotendWhen I was going to install the Rapido UHF hotend that I got I had a small panic.I couldn’t find any VORON documentation on how to install it (the assembly manual only shows another hotend).
From Rapido I got a very nice looking card pointing tohttps://www.phaetus.com/rapido-hotendthat led nowhere.And when I tried searching for it online I found that Rapido UHF actually wasn’t supported!Oh no!No matter how I look at it, this won’t fit? How are you even supposed to attach it? It does say P-RPD but I don’t understand…I was sure I read that the UHF version also contained HF parts, but maybe that was wrong?
Do I need to buy new printed parts from someone?
Or maybe a new hotend?
Buy the Rapido HF instead of the UHF I got?I’m off watching reviews on the newly released Rapido 2.0…Luckily I founda YouTube video showing how to install it:Oooh, you just remove the top part (and don’t install the UHF parts) and it fits!Crisis averted; all is well.Stealthburner assemblyBefore connecting it all.It was slightly scary that you had to break off and cut into a fan—I really didn’t want to mess it up permanently.
But after watchingNERO 3Ddo that I managed to collect the courage to do it as well.When I was going to plug in the hotend I noticed it didn’t connect to the PCB properly:Nope, the cable doesn’t go into that connector.Tap also didn’t have a cable I could just use, so now I had to mess with the wires.
Tough luck, I didn’t have any 2-pin or 3-pin connectors (or extra cable), so I left this until later.That’s a future me problem. Screw that guy.Missing some minor partsAt this point I discovered I’m missing a few things:Printed partfor the input shaper.Maybe I just haven’t found it, but either way it’s not a big deal.
Input shaper seems to be a temporary thing that you should remove after some calibration,
so I guess I can just tape it temporarily.The LDOspecific cable coverI mentioned before.2 Locking Washer, M5Maybe I can find two of these things in the hardware store somewhere?
Ordering these online for only two pieces seems like a hassle.I’ve contacted 3Djake about the washers, maybe they’ll find some replacement parts for me.
But even if they don’t it’s no big deal.I thought I was missing the neopixels and the inductive probe, but they were hiding in a bag in the cable box.How does it feel?Even though I’ve had a fair amount of trouble sorting through documentation and other issues, the progress has felt good.
It’s really fascinating to assemble things like the belt system and the toolhead and see how they come together.This is
      part 2 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startLet's build a VORON: Toolhead←Let's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:October 18,2023in1f29b47Tagged:3D printing,VORONPreviousNext</description>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Let's build a VORON: Build start</title>
      <link>https://www.jonashietala.se/blog/2023/10/13/lets_build_a_voron_build_start</link>
      <description>Let's build a VORON TridentLet's build a VORON: Build startâ˜Published:October 13,2023Revised:July  1,  2024inac95a3bTagged:3D printing,New Stuff,VORONThis is part 1 of theLet's build a VORON Tridentseries.The end goal, as rendered by Autodeskâ€™s online viewerIâ€™m not sure where it came from, but it was suddenly very important that I got myself a 3D printer.
Maybe it was an important insight, but it maybe it was only a fix idea I got that somehow became this all-import thing.Either way, I now have lots of parts for aVORON Trident 250and I figured Iâ€™ll try to document the journey of building it (or failing to).Why a VORON?The first step to building a 3D printer is deciding on what printer to build.
This was roughly my selection process:AnEnder 3seems like a cheap and popular printer, maybe thatâ€™s a good place to start?Hmm, the quality of anEnder 3doesnâ€™t seem that great and the internet says that youâ€™ll spend a lot of time to tweak and modify it until you get something good.ThePrusa MK4has just released, and their printers have historically been really solid.Prusa seems open-source friendly (well, sort-of) but Iâ€™d probably want an enclosure as wellâ€¦There is a Prusa enclosure, but holy crap itâ€™s large and expensive. Maybe thereâ€™s something else that has a built-in enclosure?Damn, thisVORONthing looks amazing and at around the same price range of the Prusa.And thatâ€™s how I ended up wanting aVORON.Now, aVORONis a really cool printer and there are lots of things that drew me towards it:Itâ€™s completely open source.The footprint is small and it comes with an enclosure.You can mod it to your hearts content.You build it from scratch, meaning youâ€™ll get the knowledge of how to mod and repair it (I hope).At this point it didnâ€™t matter that Iâ€™m a complete 3D printer noob and that aVORONis not recommended for beginners.
I wanted one, and settling for something else would just leave me filled with regrets and I wouldâ€™ve just bought aVORONlater anyway.
So I bought the printer I wanted directly instead.I got the 250mm version over the 300 and the 350 simply because itâ€™s much easier to fit in my office and in my storage.
Iâ€™m not planning to make any larger prints so the larger sizes felt unnecessary to me.Now as I said aVORONisnâ€™t a beginner printer, but I did take some countermeasures to hopefully make the build more manageable for me:I Bought the expensive LDO kit as itâ€™s as close to a â€œjust build itâ€ kit you can find.I went with the Trident over a 2.4 because the Trident is supposedly a little easier to build.I also made one choice that probably makes it a little more difficult for myself:Even though the kit comes with the Klicky Mod, I want to useVORON Tapbecause I got this idea that Tap would be better.At the moment Iâ€™m not planning to install Klicky at all, but weâ€™ll see how that goes.As I donâ€™t have a printer I used theprint it forwardservice to buy the printed parts for the printer.What I gotIâ€™ve got a bunch of boxesThese are the items Iâ€™ve ordered:LDO VORON Trident 250Phaetus Rapido Plus Hotend UHFVORON Tap hardware kitPrinted partsI first ordered a kit fromcaribou3d.combut after waiting months without progress I canceled it
and ordered from3djake.cominstead (where I bought the Rapido).But when I tried to cancel the order from caribou3d they told me they couldnâ€™t make a
refund as they had to declare insolvency.
I did get a refund via PayPal, but I still strongly recommend you toavoid caribou3d.Preloading the t-nutsAssembling the frame wasnâ€™t too bad.
I took it easy to make sure I put the extrusions the right place, rotated as they should be.But my big worryâ€”that still isnâ€™t resolvedâ€”is the preloading of the t-nuts.
Apparently LDOâ€™s combination of nuts and extrusions is very tight and you canâ€™t (or itâ€™s super difficult) to insert them after assembling the frame, so you have to insert them before.There is a helpful video, but Iâ€™m still very worried that Iâ€™ve placed one of them wrong or missed some, and I have to disassemble the frame at a later stage.Assembling the frame. I really, really hope that Iâ€™ve placed the t-nuts correctly.Heatset insertsWhat to do with the heatset inserts?
The LDO kit comes with aheatset insert toolâ€¦
But it didnâ€™t fit the soldering iron I had. What to do?Turns out you donâ€™t need it, and you can just use the soldering iron with a regular tip:This works great.
Except that I shouldnâ€™t use this particular part in the build. Oops.Set screwsAnother source of great worry for me was this line in assembly manual:Loose set screws account for the majority of issues that our users report.
Save yourself hours of troubleshooting and apply thread locker to all set screws during the build.And I donâ€™t even know what a â€œthread lockerâ€ is.After some research time it seems I really do want a thread locker, but I live in a really small community and I donâ€™t know where to buy this (except ordering online and waiting for a week).Well maybe nail polish works just as well? So armed to the teeth with fire redlipstickpolish I was ready to tackle the problemâ€¦And I see that thread locker has been pre-applied to the set screws.
Maybe it will pay off with the more expensive kit after all?Greasing the railsGreasing the rails is another thing that bothered me, because grease (and cleaning) wasnâ€™t found in the kits I bought.
My partners little brother came to the rescue and found a NLGI 1 grease (as recommended by the LDO guide) and some break cleaner to clean the rails.Thatâ€™s great, but I also donâ€™t have a syringe so I ended up removing the carriage and applying grease that way.
To my surprise they were full of small balls that had a tendency to jump out at me.The balls jumped out on me. I hope I found them all?(No, I later found some missing ballsâ€¦)At first I applied a bunch of grease on the balls as well, but then carriage moved really slowly over the rails, so in the end I applied a little grease only in the middle.They still donâ€™t move as smoothly as they did when I opened the boxes, I hope itâ€™ll be okayâ€¦Best part of the build so farThis is Lokeâ€™s hand.I donâ€™t want to publish pictures of my kids, so this is what you get.So far the best part has been that both of my boys (5 and 3 years) have been helping me out, and theyâ€™ve been really enjoying being there and helping me tighten some screws.I really want all my kids to build and be creative.
Be it LEGO, sand castles, programming or 3D printers.
So far this project has been promising, and at least the older one is super hyped about the prospect of building his own Nerf guns.
I also want to build some toy robots andâ€”when they get olderâ€”maybe a Quadcopter or two.Where Iâ€™m at right nowThe frame is built and Iâ€™ve added three of the rails.Iâ€™ve had the printer for almost one month and progress has felt slow.This is
      part 1 of theLet's build a VORON Tridentseries.Let's build a VORON: Build startâ†Let's build a VORON: ToolheadLet's build a VORON: Bed &amp; electronicsLet's build a VORON: WiringLet's build a VORON: SoftwareLet's build a VORON: Printing &amp; TuningLet's build a VORON: FiltersLet's build a VORON: Smaller fixesLet's build a VORON: More modsLet's build a VORON: NoiseLet's build a VORON: Major failureLet's build a VORON: Wrap-upRead the next partPublished:October 13,2023Revised:July  1,  2024inac95a3bTagged:3D printing,New Stuff,VORONPreviousNext</description>
      <pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Computer upgrade</title>
      <link>https://www.jonashietala.se/blog/2023/10/09/computer_upgrade</link>
      <description>Computer upgradePublished:October  9,2023inbf28b8dTagged:Computer,New StuffAfter 5 years or so I’ve made a large upgrade to my desktop, and this post contains details and some pictures about the process.It was timeI didn’t really want to do an upgrade right now, but I felt I had to do it.
Sometimes the lag had gotten very noticeable, for example when running multiple Neovim instances with several different LSPs in Rust and Elixir.That was frustrating, but the biggest reason was this ghastly discovery in my liquid cooling loop:If you can’t spot it (no shame on you), there’s a huge ball of gunk that’s stuck hanging down beneath the graphics card, and it almost seems like it’s blocking the liquid from passing through properly (more on that later).Iknowthat you’re supposed to check on your loop once a year or so.
But things just sort of happened.
We moved, I worked and we got three kids.
Sometimes it’s just hard to take time for these things, but now I just had to do it or I might not have a computer left to work on.The new thingsCPU: AMD Ryzen 9 7950XRAM: Kingston 32GB DDR5 5200MHz CL40 FURYMotherboard: ASRock B650 PG LightningFans: 8x Noctua NF-A14 PWM 140mmSSD: Kingston KC3000 M.2 2280 NVMe SSD 2TBWater cooling: New tubing, fitting, a large reservoir and probably something moreTaking apart the computer is a pain, so I decided to do an upgrade as well.
I landed on a Ryzen 9 7950X, a beast of a CPU that should leave me with no slowness complaints (well, as few as possible I guess).
With that I also had to get a new motherboard and new DDR5 RAM memory.The fans were some gravy as some of the old fans occasionally stopped spinning and the SSD was just an impulse buy (it was big, fast and cheap).I redid the water cooling loop a little as well.
The position of the reservoir/pump combo wasn’t good and I wanted to try to get a position for better airflow.Tearing down the loopBuilding the liquid cooling loop was all fun and game 5 years ago, but now it was time to pay.
I had installed a drain, but it failed to drain most of the liquid.
There was something in the tube that blocked it, and the drain was mounted too high so it couldn’t drain the lower radiator properly.Come on little disgusting thing, I know you want to come out.I failed to drain most of the liquid trough the drain, so things got messy.Why couldn’t I be satisfied with air cooling?Rebuilding the loopBuilding a computer isn’t hard, but adding in a custom loop makes the build take twice or thrice as long.But to be completely honest, it’s also a little fun.I usedloop cleaner + superflushto properly clean the system.
Because of the previous gunk, I was worried about dirt in the GPU block, the pump and radiators.
It’s hard to be sure, but I think I got rid of most of it.I was a good boy and added a fill valve to easily fill the loop.How the valve connects to the reservoir.I liked the idea the valve, but the first time I tried to fill up using it the liquid didn’t enter the reservoir properly and things got really messy.At first I thought that the tube had an U-bend in it, but what ultimately fixed it was me replacing the reservoir top so I could open up an air intake.It’s… Not perfectDespite my best efforts of planning the loop, the drain system ended up sucking.
While I managed to drain most of the liquid, there were some parts like the lower radiator and the reservoir where the liquid got stuck, and I had to resort to flipping the computer upside down and shake to get rid of it.Yet again.Plenty of liquid left in some weird places.It’s aliveBuilding a computer is a little scary because you don’t know if it’s going to work when you’re done.
And especially so with this kind of build, where disassembling would be a major endeavor.But it worked!
And it’s glorious!Ah, the beautiful cable management.My 3-year old really enjoys this view.The Noctua fans are amazing.Yes, I replaced all the fans.Published:October  9,2023inbf28b8dTagged:Computer,New StuffPreviousNext</description>
      <pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Language spec in code blocks</title>
      <link>https://www.jonashietala.se/blog/2023/10/06/language_spec_in_code_blocks</link>
      <description>Language spec in code blocksPublished:October  6,2023Revised:June 26,  2024ina308224Tagged:Blog,CSS,Web DesignEven though I just recentlyrestyled the blogand wasn’t going to touch it, there was one thing I wanted to add, but it felt a little bothersome so I skipped it.
It was to display the highlighted language in code blocks:The code spec displays what programming language the code block contains.As it happens, my little girl—the fountain of joy that never stops giving—decided to not sleep last night.
(I can’t really be angry with her, she’s only 10 months and she’s getting sick.)So there I was, carrying her in a harness and trying not to play with her because I just want her to fall asleep.
I usually do this in front of the computer so she can listen to music and fall asleep (her favorite isIn Flames: Only for the Weak).
But that’s also time I can use to to work on weird things, and in this case I reworked the code block display.This is also how I created theT-34 keyboard layout. Another of our kids was awake for 1–2 hours every night for like half a year, so I filled that time by creating my layout.A sleep deprived state is a recipe for doing weird shit.Previously, code blocks were generated like this:&lt;pre&gt;...&lt;/code&gt;&lt;/pre&gt;The problem was that I couldn’t just add adivinside thepretag because I want the code to be scrollable when it overflows:pre{overflow-wrap:normal;overflow:auto;}But then the contents cannot exist partially outside of the tag, since that would be hidden, and scrolling would also move the language spec element.So instead I used anotherdivto wrap everything:&lt;/div&gt;&lt;pre&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;This allows me to use the::beforepseudo-class to insert the language description depending on the class (vimlin this example).
See the relevant styling:.code-wrapper.lang{//Move the language spec to the right.display:flex;justify-content:right;align-items:flex-start;//Use the ::before pseudo-class for the actual language spec.&amp;::before{//Match the code block style.@includefont-size("s");font-family:$code-font-family;color:var(--melange_a_ui);background-color:var(--melange_a_float);//Give the text some surrounding space.padding:var(--space-3xs)var(--space-xs);border-radius:var(--space-3xs)var(--space-3xs)00;//Offset so it partially overlaps the code block and move it toward the middle a little.position:relative;top:1.2rem;left:-2rem;//This ugly looking things tries to remove the height of the child element,//so we get consistent spacing around the code block.margin-block-start:calc(var(--flow-space)-(2ch+2*var(--space-xs)));}//For each class insert the corresponding language text.&amp;.python::before{content:"python";}//etc.}The reason I used a pseudo-class for the language description instead of directly likeviml&lt;/div&gt;is to hide it from other reading modes, such as the RSS feed, Firefox’s reader view or screen readers.
These readers typically remove most or all of the styling, but then the language description would appear in the middle of nowhere without context.
Using a pseudo-class is a bit annoying as I need to insert some CSS for every single language I want to display, but it provides a better experience for people using these readers.I also changed the font to mycustom Iosevkafor the website as well.
Now I’m happy with how things look.Published:October  6,2023Revised:June 26,  2024ina308224Tagged:Blog,CSS,Web DesignPreviousNext</description>
      <pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Giving the blog a facelift</title>
      <link>https://www.jonashietala.se/blog/2023/10/04/giving_the_blog_a_facelift</link>
      <description>Giving the blog a faceliftPublished:October  4,2023Revised:July  3,  2024in5e21dceTagged:Blog,CSS,Web DesignWhen Irewrote the blog in RustI tried not to touch any of the styling, but some things annoyed me:It wasn’t pretty (even ugly in some parts).No dark mode support.Some elements were broken, for instance images or code blocks overlapping the header when it was floating to the side.I wanted to promote my series and projects more.A better landing pageThe old landing page was too simple for my taste.My thinking whenI last updated the stylewas to keep things as simple as possible.
I think I mostly succeeded with that, but I really don’t think the landing page was pretty.So this time I wanted to:Make it prettierSpotlight posts, series and projectsAs it happens I had remade thearchive,projectsandseriespages already, and it just fell out well to simply include some partial contents and shove them into the homepage.I’m sure you could make a bunch of improvements, but the design fulfills my goals at least.Automatic dark modeI’ve been using dark mode when coding for ages, but it’s only recently I tried to switch everything to dark by default.Some sites use a dark mode switcher button, but I think it’s better if the sites detect your preference automatically.
It’s surprisingly easy in CSS usingprefers-color-scheme, and here’s a small example::root{--color-text:black;}@media(prefers-color-scheme:dark){:root{--color-text:white;}}//Then you just use the variables like so:.element{color:var(--color-text);}To test this out, in Firefox (and I’m sure other browsers) you can change your preference and the site will update immediately:You can change dark mode preference in Firefox.I prefer the dark variant, but the light is also quite nice.New colorschemeI recently fell in love with the colorschememelange-nvimfor Neovim.
This was abig dealfor me so naturally I want to use the colorschemeeverywhere.This doesn’t just apply to the code highlighting, but to the colorscheme of the entire blog itself.
Go big or go home.Systematic CSSPeople love to hate on CSS, and maybe I’m damaged but I quite like CSS.
Things have come alongway since I styled my first webpage.
Back then you had to do all types of weird incantations even to do simple things, and IE 6 still found a way to mess it up.While there are browser incompatibilities today, it’s not nearly as bad and the browsers today support a lot of really nice features that makes modern CSS quite neat.Here are some things I utilized this time around:Fluid size scalesSizing fonts is more annoying than one might think.
One thing you’d like to do is to have a slightly larger font for larger screens, and smaller sizes for smaller screens (such as your phone).
It makes it easier to read on both devices, but it’s a bit annoying to setup.Previously I used media queries, but a neater solution is fluid size scales.
I just used some generator I found online and it seems to work well://From https://www.fluid-type-scale.com/:root{--font-size-2xs:clamp(0.51rem,0.03vw+0.5rem,0.53rem);--font-size-xs:clamp(0.64rem,0.12vw+0.61rem,0.7rem);--font-size-s:clamp(0.8rem,0.25vw+0.74rem,0.94rem);--font-size-m:clamp(1rem,0.45vw+0.89rem,1.25rem);--font-size-l:clamp(1.25rem,0.76vw+1.06rem,1.67rem);--font-size-xl:clamp(1.56rem,1.2vw+1.26rem,2.22rem);--font-size-2xl:clamp(1.95rem,1.83vw+1.5rem,2.96rem);}Now it’s not perfect, and on my monitor I feel the jump frommtosis a bit too big, but this is good enough (for now).I also utilize a fluid scale for spacing://From https://utopia.fyi/:root{--space-3xs:clamp(0.31rem,calc(0.31rem+0vw),0.31rem);--space-2xs:clamp(0.56rem,calc(0.54rem+0.11vw),0.63rem);--space-xs:clamp(0.88rem,calc(0.85rem+0.11vw),0.94rem);--space-s:clamp(1.13rem,calc(1.08rem+0.22vw),1.25rem);--space-m:clamp(1.69rem,calc(1.62rem+0.33vw),1.88rem);--space-l:clamp(2.25rem,calc(2.16rem+0.43vw),2.5rem);--space-xl:clamp(3.38rem,calc(3.24rem+0.65vw),3.75rem);--space-2xl:clamp(4.5rem,calc(4.33rem+0.87vw),5rem);}Lobotomized owlIt’s always fun to find weird things that are also very useful.
Thelobotimized owlselector is just that.//Hoot-hoot*+*For a great explanation seeMy favourite 3 lines of CSS,
but in short it enables you to set consistent spacing between child elements.It’s super useful, and I use this mixin for it:@mixinflow($space:false){&amp;&gt;*+*{margin-block-start:var(--flow-space);@if$space{--flow-space:$space;}}}Why didn’t I use thestack + flowas described in the linked blog post?
Honestly, I had forgot about it and only searched for the post now as I’m writing this.
Their way is probably better, but I can’t be bothered to refactor it right now. 🤷Measure to limit text widthA big readability tip is tolimit the line length to 45–90 characters.
I do this usingmax-inline-sizeand a variable to control the length that’s on by default::root{//Measure limits the width of text to be more readable.--measure:60ch;}*{//Limit everything to --measure by default.max-inline-size:var(--measure);}//Opt-out instead of opt-in, makes it a bit more manageable honestly.html,body,div,header,nav,main,footer,precode,pre{max-inline-size:none;}If I want to use a different line length I can just alter--measure, or overridemax-inline-sizeif I don’t want it for some elements.CSS Grid is awesomeI haven’t usedgridthat much previously, but it’s one of these newer features that makes CSS a pleasure rather than a pain to work with.
You can accomplish things that were previously hard to do with just some commands.
Here are some examples of how I use grid:Image gallery: 3-column layoutA 3-column layout with grid.figure.gallery{display:grid;grid-template-columns:repeat(3,1fr);grid-gap:var(--space-3xs);}Tags: variable number of columnsIf you want to fit as many columns as possible, you can use this setup that I use on thetags page:.tags{display:grid;grid-template-columns:repeat(auto-fit,minmax(12em,1fr));}Post: overflow images and code blocksConstraining the width of text is good, but I wanted to allow images and code blocks to extend past that a little if needed. See this image:Most content exists between grid lines 3 and 4, but the image may span between lines 2 and 5, essentially overflowing the article width.In my previous design I used media queries and relative offsets to accomplish it, but with grid it’s easier and fluent.
With this setup you can also allow an image to extend the entire screen (“full bleed”), but so far I haven’t find a use for it.The mainarticleincludes this wrapper:@mixinfull-bleed-wrapper{display:grid;grid-template-columns:1frminmax(0,var(--overflow-size))min(var(--measure),100%)minmax(0,var(--overflow-size))1fr;max-inline-size:none;//Place all content in the main content area by default&amp;&gt;*{grid-column:3;}}This sets up 5 areas: the main middle content, constrained by--measure, the overflow with--overflow-sizeand the rest.
On narrow screens everything except the content collapses to zero width.Then you overridegrid-columnfor the items you want to overflow://For overflowing the article.@mixinoverflow-bleed{width:100%;grid-column:2/5!important;//This resets the --measure constrain I have on by default.max-inline-size:none;}//For items that should span the entire screen.@mixinfull-bleed{width:100%;grid-column:1/-1!important;max-inline-size:none;}Mixins like these are why I prefersassover raw CSS, it makes creating these systems more practical and maintainable.What am I not satisfied with?I quite like sitting and making small tweaks until I like how things look.
Even if the process can be slow I still enjoy it.But I really don’t like how brittle it feels.
I’ve tried to namespace rules, so incss/local/_tags.scssI have rules only for the tags page:article.tags-list{.tags{//...}}But most things are shared across pages, and if I make a change somewhere I may accidentally break some obscure styling somewhere.
Having unit tests for the layout would be nice, but I’m not keen of maintaining a rendering of all pages and doing an image diff to find errors.Of course I could make everything local, but then I’d miss out on the usefulness of the general rules, and the maintenance burden would be even higher.Maybe I’ll just leave the styling alone for the next couple of years until I feel I want to remake everything again?Published:October  4,2023Revised:July  3,  2024in5e21dceTagged:Blog,CSS,Web DesignPreviousNext</description>
      <pubDate>Wed, 04 Oct 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Rewriting my Neovim config in Lua</title>
      <link>https://www.jonashietala.se/blog/2023/10/01/rewriting_my_neovim_config_in_lua</link>
      <description>Rewriting my Neovim config in Luaâ˜Published:October  1,2023inac95a3bTagged:Lua,NeovimThis screenshot betrays just how much productive time was wasted setting this up.ContentsBut why?Just a few plugins or many?Where to start?Structured configurationFavorite new-to-me pluginslazy.nvim: A modern plugin managermelange-nvim: An amazing colorschemevim-cool: Turn off search highlightconform: Format on savenvim-treesitter-textobjectsNeogit: Git managementalpha-nvim: Dashboardflash.nvim: Navigational pluginnvim-colorizer: Colorizer pluginCustom behaviorIs lua worth it?Was the rewrite worth it?Iâ€™ve got tons of things to do; clean the bathrooms, prototype an idea for a SaaS and ponder world peace.
So naturally the procrastination took over and I rewrote my Neovim configuration in Lua.But why?No, but seriously, Iâ€™ve had my Neovim configuration since before Neovim existed and itâ€™s been working fine.
Why would I then rewrite it, and using Lua to boot?My config has collected a lot of cruft over the years, and it was about time to do a cleanup.
So I figured the best way was to do it all from scratch, only adding things from the old config if I really needed them (and if I knew what they were doing there!).I was also curious on how well it would work to configure Neovim using Lua instead of Vimscript, and if there were some new fancy things I was missing.Just a few plugins or many?As is common knowledge, there are these great divides in the developer community.
Issues so great that it makes the Israeli-Palestinian conflict feel like kids fighting in the sandbox.Iâ€™m of course talking about the age-old questions of Vim vs Emacs, if you should use an IDE or a Text Editor andgaspif you should use tabs or spaces.And even inside the Vim community we have our own great question:
should you amass as many plugins as possible, pimping out your Vim so it can be mistaken for an IDE, 
or should you keep it minimalistic, staying true to the Raw Vim experience?So where do I stand in this?
On which hill will I die on?As Iâ€™m writing this Iâ€™m up to 77 plugins, with a bunch more on my â€œplugins to checkâ€ list, so I guess Iâ€™m dying on the â€œuse all the pluginsâ€ hill.If that makes you feel like Iâ€™ve betrayed Bram the creator, then my only defense is this:I tried, but I failed.Where to start?The inspiration for this was ThePrimeagenâ€™s video on0 to LSP: Neovim RC From Scratchthat I watched several months ago.While ThePrimeagenâ€™s video was great as inspiration (look how easy it is!), I donâ€™t think itâ€™s the best configuration to reference.
I instead used other sources:LazyVimis a popular Neovim distro that you can use if you donâ€™t want to configure everything from scratch orâ€”the horrorâ€”anything at all.A distro is absolutely not my thing, but theLazyVimsource was quite useful as a reference for me.Distros may be overkill, a better alternative might be the small configurations that are made to help you get going with your own config.Take a look atkickstart.nvimandTinyVimfor example.There are lots of people who have their configs on GitHub.I usedcatgooseas the config was really clean, including lots of plugins to inspire me.Speaking of plugins,neovimcraftis a good site to find plugins.dotfyleis another great site with plugins, configurations and the fantasticThis Week in Neovimnewsletter.Structured configurationOne of the big problems with my previous setup was thatinit.vimwas huge and it was hard to organize it. I tried using folds and having a logical grouping, but it never felt good.With lua andlazy.nvimyou can organize settings and plugins in different files quite nicely. This is how I did it:I wanted to have a split ofconfig/andplugins/, so~/.config/nvim/init.luajust loads~/.config/nvim/lua/config/init.lua:require("config")Then in~/.config/nvim/lua/config/init.luaI load the configurations and plugin manager:--Setup  and  before loading pluginsrequire("config.leader")--Use lazy.nvim for plugin managementrequire("config.lazy")--Continue with the configuration, possibly overriding settings that some--plugins might set.require("config.options")require("config.colorscheme")require("config.keymaps").init()require("config.commands")Withlazy.nvimyou can split up plugin specifications into separate files:--Basic lazy.nvim setup as copied from the readmelocallazypath=vim.fn.stdpath("data").."/lazy/lazy.nvim"ifnotvim.loop.fs_stat(lazypath)thenvim.fn.system({"git","clone","--filter=blob:none","https://github.com/folke/lazy.nvim.git","--branch=stable",--latest stable releaselazypath,})endvim.opt.rtp:prepend(lazypath)--Load plugin specs from lua/plugins/*.luarequire("lazy").setup("plugins", {defaults={lazy=true,--Default to lazy loading, optional},change_detection={notify=false,--I find the config changed notification super annoying},})This will automatically load any.luafile in thelua/pluginsfolder. For example this islua/plugins/replacer.lua:return{"gabrielpoca/replacer.nvim",opts={ rename_files=false},keys=require("config.keymaps").replacer,}Incredibly nice when you have lots of plugins, and some have large configurations (likelspconfig,treesitterorcmp).One last big thing is I wanted to have all global keymaps in one single file.lazy.nvimsupports adding keymaps in the plugin specification usingkeys={ }option. I accomplished this by simply returning a â€œmoduleâ€ table fromconfig/keymaps.lua:M={}M.replacer={{"rq",function()require("replacer").run()end,silent=true,desc="Make quickfix editable for replacing in",},}--And other plugin keymaps like thisM.trouble={...}returnMNot all keymaps can be defined using thelazy.nvimspecification, in which case I returned a function and called that where applicable. For instance for LSP:M.buf_lsp=function(_, buffer)localmap=vim.keymap.setmap("n","D", vim.lsp.buf.declaration, { silent=true, buffer=buffer, desc="Declaration"})map("n","d", vim.lsp.buf.definition, { silent=true, buffer=buffer, desc="Definition"})--etcendAnd set it up inplugins/lspconfig.luain theon_attachcallback:localon_attach=function(client, buffer)keymaps.buf_lsp(client, buffer)--Will add the keymaps when LSP attaches to the bufferlsp_status.on_attach(client)endOne last thing; for the regular mappings you donâ€™t want to just remap them inconfig/keymaps.luabecause multiple files will runrequire("config.keymaps"), so I wrapped it in an init function:M.init=function()localmap=vim.keymap.setmap("n","p",'"*p', { silent=true, desc="Paste from mouse"})map("n","P",'"*P', { silent=true, desc="Paste before from mouse"})--etcendWhich is whyconfig/init.lualooked a bit weird:require("config.options")require("config.colorscheme")require("config.keymaps").init()--Notice the weird init() call hererequire("config.commands")Itâ€™s true thatkeymaps.luahas grown quite large and isnâ€™t super easy to read. Maybe Iâ€™ll break it out into more keymap files (config/keymaps/lsp.luaetc) in the future, but right now I think itâ€™s nice to have all the maps in one single file.Favorite new-to-me pluginsWhile doing the rewrite I went through my existing plugins to see if they were still relevant, or if I could replace or just remove them. And of course, if I could add some new ones.I wonâ€™t create a list of my favorite plugins, as it would be boring to see yet another list withLSP,treesitterandcmp, Iâ€™ll instead highlight some good plugins that were new to me:lazy.nvim: A modern plugin managerObserve the glory of a modern package managerIâ€™ve been usingvim-plugas my plugin manager since forever. Itâ€™s been working well, but I figured I should try one of these newer managers to see if I was missing something. And boy, did I.lazy.nvimhas some really nice features that I now canâ€™t live without:Split plugin specifications in separate files as I wrote aboutearlier in the post.Specify plugin dependencies.Pin plugin versions.Track plugin versions inlazy-lock.json, so you can identify what plugin version breaks your setup so you can pin it to a known good version.Lazy loading. Itâ€™s nice to have for those rarely used but heavy plugins.melange-nvim: An amazing colorschemeItâ€™s just pleasing to my eyes.The design idea is that control flow should use warm colors and data should use cold colors.
So here, functions are warm yellow and strings and data are colder purple and green.Iâ€™ve been a gruvbox user since I started using Vim almost 15 years ago. Iâ€™ve tried tons of different colorschemes but nothing has ever come close to gruvbox for me. Most of the popular colorschemes are just too blue, or have too little (or too much) contrast or I just donâ€™t like them for some random reason.I had almost resigned to becoming a gruvbox-lifer, unable to ever change colorscheme.And then,melange-nvimappeared. And itâ€™s glorious!
Now after many long years, Iâ€™ve finally switched to a new colorscheme, and Iâ€™m content.(No, switching from the originalgruvboxtogruvbox.nvimtogruvbox-materialand back again doesnâ€™t count.)Also a shout-out tokanagawa(dragon, the dark variant without blue background) which is the only colorscheme Iâ€™ve found that I didnâ€™t eject in horror after 5 minutes, except for gruvbox and melange.Sorrykanagawa. Itâ€™s not you, itâ€™s me.vim-cool: Turn off search highlightForget, this plugin will turn off search highlight when you move your cursor away from it.
Simple, but raises the quality of life alot.conform: Format on saveIâ€™ve usedneoformatbefore, but had some issues where I saved then quickly stared modifying something, but then formating kicked in and removed my changes.WithconformI havenâ€™t had these issues, and configuration was quick and easy and LSP fallback is super sweet. Excellent plugin.nvim-treesitter-textobjectsA common misconception about treesitter is that it only adds semantics to syntax highlighting:BASE and REPEAT are enum members, while the other keycodes are defined as macros.I think thatâ€™s very nice, but treesitter is more than that. And a great example of that isnvim-treesitter-textobjectswhere you can operate on treesitter nodes. I have for example:]fjump to next function.]cjump to next class.]gjump to next function or class.sswap next parameter.iftextobject for inner function. Socifwould delete the function body and enter insert mode.axtextobject for outer comment, to easily delete/change comments.The beauty is that these work on treesitter nodes, so they work equally well across languages for functions likefnmyfun(){},functionmyfun()...endor adefmyfun()do..end. (Given that the treesitter implementation supports these options. Markdown doesnâ€™t have the concept of a function for instance.)Neogit: Git managementmagitis widely regarded as the best Git client/integration there is.
When I used Emacs for work (oh yes, the horrors) I did usemagitand yes it was great (although too slow on Windows).I donâ€™t think I need to say more than thatNeogitismagit, but for Neovim, and it is also great.
(It doesnâ€™t have feature parity withmagityet, but itâ€™s good enough to have replacedfugitivefor me.)alpha-nvim: DashboardMy startup screenIâ€™m going to be honest here: Iâ€™ve always thought that a dashboard was unnecessary fluff and people who used them were just pimping Neovim for the sake of pimping.And now, I also use a dashboard.While itâ€™s something I could absolutely live without, by now Iâ€™d rather have it than not.Okay, saving a keypress by usingfinsteadfisnâ€™t a big deal.
And yeah, showinglazy.nvimstats is probably unnecessary.But having a list of keymaps that I should internalize is actually really nice.
It helps remind me of these cool new keymaps Iâ€™ve added, so they donâ€™t get forgotten for years until my next config rewrite.Yes, the list of keymaps is currently just hardcoded in the dashboard config.
But I would like to implement keymap tracking and use it for spaced repetition.
Maybe even have a floating window on startup that you need to clear every day, similar to â€œflashcardsâ€.
This is a nice idea for a plugin that I may or may not write in the futureâ€¦flash.nvim: Navigational pluginOnce upon a time there wasvim-sneakthat added the motionsto jump to any location by specifying two characters.
It was great, and it spawned a slew of other similar plugins that expanded on the idea.
(Iâ€™m not sure this is completely historically accurate, but it felt like a good narrative.)The plugin Iâ€™ve landed on isflash.nvim.
What I really like about it is the idea of typing as many characters as possible.
Even with sneak I didnâ€™t always arrive where I wanted, so having the option of typing out more things felt good for me.Extra functionality such as doing a â€œremote yankâ€ (search, yank something, then cursor goes back to where it was) and enhancingf/F/t/T//is just gravy.nvim-colorizer: Colorizer pluginWhat are these colors again? Itâ€™s the palette ofmelange-nvimof course!Aftervim-hexokinasegot archived I had a minor panic.
It was a neat little plugin that highlighted colors inline, but without altering the highlight of the colors themselves, which is what all the other colorizer plugins seemed to do.Luckily I foundnvim-colorizerthat does the same, and without having to build an external binary like hexokinase that always managed to break for some weird reason.I love when things just work.Custom behaviorBecoming a PokÃ©mon master by collecting all the plugins is great, but one of the benefits of Lua over Vimscript is that itâ€™s a much nicer language for general programming. While I havenâ€™t really taken advantage of it that much yet, Iâ€™ve made a small addition that worked quite well for me.Iâ€™m trying outneorgas my knowledge base and note taking and Iâ€™ve separated it into four folders:~/norg/projects~/norg/areas~/norg/resources~/norg/archiveI donâ€™t remember where I saw this recommendation, but it made some sense to me at the time.What I want to do with this is either:Open a file in one of these foldersIf no file exists, create and open oneI could make shell scripts and use fzf as a fuzzy finder, but as I kind of live in Neovim I wanted to do this from within Neovim.Usingtelescope(fuzzy finder) andplenary(path helpers) this is what I came up with:--Find files using telescope in a subfolder of `~/norg`.--@param base_folder: string: base folderM.open_norg=function(base_folder)localaction_state=require("telescope.actions.state")localactions=require("telescope.actions")localPath=require("plenary.path")localfolder=vim.fn.expand("~/norg/")..base_folder.."/"require("telescope.builtin").find_files({attach_mappings=function(prompt_bufnr, map)--Creates a file using the telescope input prompt.--Useful to quickly create a file if nothing exists.localcreate_file=function()--It ain't pretty... But maybe it's good enough...? T.Tlocalcurrent_picker=action_state.get_current_picker(prompt_bufnr)localinput=folder..current_picker:_get_prompt()..".norg"localfile=Path:new(input)iffile:exists()thenreturnendfile:touch({ parents=true})actions.close(prompt_bufnr)vim.cmd("e"..file.."| w")endmap("i","", create_file)returntrueend,cwd=folder,})endIâ€™m sure this can be improved upon in many ways, but it serves the purpose at least.is used to create the file, as sometimes telescope finds similar files so creating a new file if telescope is empty doesnâ€™t really work.Another related function I wanted is to create a weekly journal file. There is support for a daily journal inneorg, but I specifically wanted a weekly one.
This is how I made it:--Open a weekly journal in `~/norg/areas/weekly_journal/`.--Create using a template from `~/norg/areas/weekly_journal/template.norg` unless it exists.M.open_weekly_journal=function()localPath=require("plenary.path")--Should probably make this more general in the future.localpwd=vim.fn.expand("~/norg/areas/weekly_journal/")localjournal_file=pwd..os.date("w%W")..".norg"localfile=Path:new(journal_file)ifnotfile:exists()thenlocaltemplate=Path:new(pwd.."template.norg")template:copy({ destination=file, override=false})endvim.cmd("e"..journal_file.."| w")endAs a bonus hereâ€™s how I created a fish alias to start Neovim and call the above functions that are defined in~/.config/nvim/lua/config/norg.lua:aliasep"nvim -c\":lua require('config.norg').open_norg('projects')\""aliasej"nvim -c\":lua require('config.norg').open_weekly_journal()\""The weird mnemonics are the same I use from within Neovim, soepopens telescope in~/norg/projectsfor example.Is lua worth it?One reason why I didnâ€™t convert to Lua until now is that to me it looked fairly verbose.Even though Vimscript isnâ€™t a good programming language, itâ€™s still a DSL specifically for Vim so itâ€™s quite easy to do common things like set options or add autocommands.
And Lua is nice, but it doesnâ€™t support adding a custom DSL on quite that level, so I was worried Iâ€™d have to bend over too much to accomplish things.--Having to specify `vim.opt` isn't too badvim.opt.relativenumber=truevim.opt.number=true--Autocommand creation is slightly more verbose,--but they're also a bit more readable than the Vim equivalent in my opinion.localautocmd=vim.api.nvim_create_autocmdlocalaugroup=vim.api.nvim_create_augroupautocmd("TextYankPost", {callback=function()vim.highlight.on_yank()end,desc="Briefly highlight yanked text",group=augroup("yank", { clear=true}),})--Hide statusline on dashboardautocmd("FileType", {pattern="alpha",group=augroup("filegroup", { clear=true}),command="setlocal laststatus=0 noruler",})--It's true that keymaps are also a more verbose, and having to wrap things--in strings here and there is slightly annoying.localmap=vim.keymap.setmap("n","(","[", { remap=true})map("n","]q",":cnext", { desc="Next quickfix"})map("n","ej",require("config.norg").open_weekly_journal, { desc="This weeks journal"})While the above examples are more verbose than the Vimscript alternatives, it doesnâ€™t feelthatbad.And the upside of Lua is that you donâ€™t have to bash your head in when you battle with Vimscriptâ€™s idiosyncrasies, which more than makes up for the added verbosity during simple configuration.
Easily being able to access the Lua API of important plugins anywhere is also pleasant.You could of course mix Vimscript and Lua, but for me the consistency of having everything in the same language, using the same file structure and the same development environment makes it worth using Lua all the time.Was the rewrite worth it?The million dollar question: was rewriting my entire configuration worth the time I spent doing it?If you view it from a cold efficiency point-of-view, where every minute needs to pay itself back in the future thanks to increased productivityâ€¦Itâ€™s debatable.Maybe if I donâ€™t touch the configuration file for many years, itâ€™ll pay off.
But I admit I spent far too much time on this for it to be considered truly productive time.To be fair, a lot of this time was spent evaluating +100 plugins to see if I wanted to use them or not, and then fiddling with them to see if I could tweak them to my liking.If all you want to do is convert your existing Vimscript config to a Lua config, it would be much faster.
And if you only need to setup LSP or Treesitter or whatever, justlookatanexistingconfigand youâ€™ll get setup in no time.
You can also referencemy config files, but do so on your own risk.
(Seriously, withlspconfig,masonandmason-lspconfigconfiguring LSP doesnâ€™t take that much time.)But letâ€™s be real here.
The joy of fiddling with configurations and tweaking small things until theyâ€™rejust rightwill always be worth it.Iâ€™ve spent far too much time being productive and producing value, it was about time I spent some time alone.Just me and my config.Published:October  1,2023inac95a3bTagged:Lua,NeovimPreviousNext</description>
      <pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>I beat FTL on Hard with all ships in the game</title>
      <link>https://www.jonashietala.se/blog/2023/06/16/i_beat_ftl_on_hard_with_all_ships_in_the_game</link>
      <description>I beat FTL on Hard with all ships in the gameâ˜Published:June 16,2023Revised:October  8,  2023in2ef3ed5Tagged:FTL,Gaming,Steam DeckFor 2023 I wanted to do something different than usualâ€”I wanted to start playing computer games again.
So I gave myself a late Christmas gift and bought aSteam Deck(and like any self-serving gentleman I took care to pitch it as being for my kids) and I started loading it up with loads of emulated games and more modern ones from Steam.But then I saw thatFTL: Faster Than Light, one of my favorite games of all time, had gotten an â€œAdvanced Editionâ€, with new systems and weapons, new ships and a brand new â€œHardâ€ difficulty. Having played the game upon releasea ton, but on the â€œNormalâ€ difficulty, I figured Iâ€™ll try to beat it again but on Hard.And that ruined my plans, as FTL has since then been the only game Iâ€™ve been playing. Itâ€™s so good.But honestly, itâ€™s a bit too good and addicting, so Iâ€™m glad that after 231 hours Iâ€™ve finally achieved my goal of beating Hard mode and I might be able to put it down and play some other games for a change.I didnâ€™t start out doing this, but after a while I figured itâ€™d be fun to take a screenshot of my victories, so future me can look back and relive these memories.FTL ishardIf you havenâ€™t played FTL before I just want to say that the game ishard. Even beating the game once on Easy is a big accomplishment as on Easy this game is more difficult than most games (and Hard is a big step up in difficulty!).But there are plenty of great resources out there if you want to get good at the game. For example:Mike Hopleyâ€™sFTL ships guideandYouTube channelneozar,Crow RevellandHoloshideimIf youâ€™re an older player like me (or even if youâ€™re not),this videoon how to use scrap on Hard in FTL was a big game changer for me. The idea that you shouldnâ€™t focus too much on â€œvalueâ€, but on maximizing your win probability was super helpful for me.Some statsPlaying time: 231 hoursLongest Hard win-streak: 6 (Mantis B, Kestrel B, Fed A, Rock C, Slug A, Engi A)Bear in mind that I started from zero without any ships unlocked (I didnâ€™t play FTL on Steam the first time around, and I didnâ€™t find the save file). The save also got corrupted when I had beat around 2/3 of all ships, so my FTL stats are not complete:Stats from my last save fileIt feels pretty good to have an almost 50% winrate, although itâ€™s not really true as a bunch of those wins were me unlocking ships on Easy (and abandoning the run if I had gotten my achievements).Some notes on shipsMy focus was to just beat the game with all ships, so after I got the victory screenshot with a ship I didnâ€™t replay it again, so my thoughts on any ship might change after future playthroughs.Most fun: Stealth A, Stealth C, Slug A and Slug C.I love the efficiency of the weapons on the stealth ships and that I have to pay more attention as they donâ€™t have shields. Slug ships are just weirdly fun (not Slug B though).Most painful: Rock A, Slug B, Federation C, Mantis BRock A just stinks. Itâ€™s a bad ship, but itâ€™s also not fun. Rocks are slow and missiles being consumables is not a design I like.Boarding with slugs feels super brittle and itâ€™s not so fun to eat early game damage with Fed or Mantis.Biggest achievement: Stealth BIalmostwon with Stealth B on my first try, but I think I needed 8 attempts or something to win with the â€œworst ship in the gameâ€.Weirdly enough I never felt nearly as frustrated as I did with Rock A or Slug B.Easiest win: Lanius BI played the ship twice and won easily both times. Almost felt a bit boring after being so far ahead the whole time.Most stressful win: Zoltan CGot a rough start and played a long time low on hull. But it sure feels good coming back when you think itâ€™s all over.No problem, we just need to find a store.Yes, I managed to turn this around to a win!A memory of my victoriesUnfortunately I only started taking screenshots of my victories after finally winning with Stealth B, so I had to replay around a third of the ships.And if you have a keen eye you might see the â€œFederation Victory (Normal)â€ achievement on the Kestrel. Unfortunately thereâ€™s no Hard achievement, but I did in factbeat it with the Kestrel as well.Published:June 16,2023Revised:October  8,  2023in2ef3ed5Tagged:FTL,Gaming,Steam DeckPreviousNext</description>
      <pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Battling burnout</title>
      <link>https://www.jonashietala.se/blog/2023/03/14/battling_burnout</link>
      <description>Battling burnoutâ˜Published:March 14,2023inac95a3bTagged:Life,Life Hacking,Mental HealthMamma Mia! Here we go againâ€¦Once again, Iâ€™m finding myself trying to recover from burnout, and after about a year Iâ€™m finally feeling more like myself.Even though Iâ€™ve been here before, itâ€™s a difficult thing to recognize and avoid, so Iâ€™m writing this to maybe help you or my future self.ContentsIs it burnout, depression or both?Signs of burnoutSigns of depressionNo apparent reasonRed flagsSeeking helpWhat was the actual cause?Things that helped meThe only thing that really helped meAre you ever cured?Is it burnout, depression or both?I find itâ€™s difficult to pinpoint exactly what Iâ€™ve been through.
The first doctor I met diagnosed me as suffering from â€œextreme stressâ€, without mentioning depression.
The psychologist I met next didnâ€™t think I had any signs of depression either, but the one after that (that I worked with for a few months with KBT) thought I showed clear signs of depression as well as being burnt-out.Signs of burnoutDoing a little research of my own, I clearly displayed the three clusters of burnout:Emotional and physical exhaustionCynicismLower productivityThis to an extent that it effected my work- and personal life, but not so much that I couldnâ€™t get out of bed.Signs of depressionI donâ€™t recognize all the symptoms of depression, but I did display some of them:Negative outlook of the futureDepressed moodDiminished pleasureEasily agitatedGained weightThese werenâ€™tthatserious, and I never had the really serious signs like suicidal thoughts, but it did feel like the symptoms were getting worse and Iâ€™m sure if I didnâ€™t do anything about the underlying causes then it would eventually spiral out of control.Still, I consider burnout to be the primary issue, with the depression following along like an added bonus.No apparent reasonIâ€™ve had large difficulties to accept the burnout because if I try to distance myself from the problem and look at it objectively from a distance, it doesnâ€™t make sense that I would become a victim.
I have all these great benefits that Iâ€™ve worked at a long time trying to obtain:A great family, with three amazing kids that I love with all my heart.Low stress from work.It seems if you read about burnout online, everything seems to circle around too much stress from work. Either too long hours, too many responsibilities, bad bosses, bad co-workers, too tight deadlines or a combination of it all is always the culprit.But I just canâ€™t relate to any of that.Few and flexible working hours.Apart from having flexible working hours, so as long as Iâ€™m there for some meetings I can basically decide when I should work.
Itâ€™s super nice to be able to take an extra hour of sleep if I woke up too early with the kids, or take an hour to do some weight lifting.I also donâ€™t work too many hours. Iâ€™ve been working 80% (32h / week) since more than a year back, and Iâ€™m good at not exceeding that.I work remotely.Barring a handful of yearly trips, which Iâ€™ve been wanting to do because of social reasons, Iâ€™ve been working remotely since 4 years now.
And there are some massive benefits to it, like being able to work without disturbance from my home office, using my home gym thatâ€™s right next to my office and avoiding a commute.Iâ€™m able to work professionally in Rust.Rust is a favorite language of many programmers, but finding a non-crypto Rust job is very difficult.
But here I am with a Rust job.
(My employer started some projects in Rust and I started working on those.)Good salary.While I could absolutely push my salary higher if I was motivated enough to switch jobs or start my own consulting business, I earn more than enough for my current needs.It feels like the other stories about burnout always have this obvious reason for people hitting the wall (like working 80+ hours a week), but I just canâ€™t find an easy explanation for me.â€”Maybe itâ€™s just too difficult to realize it yourself when itâ€™s all happening?
I thought I was getting over it, but maybe Iâ€™m still in itâ€¦?Red flagsWhile it was (and is) difficult for me to see the cause, I did notice some of the big red flags signalling that I was getting, or already was, burnt-out:Things werenâ€™t funEven my favorite hobbies lost their appeal.I became more cynicalâ€”Itâ€™s not worth doing thisâ€¦â€”It makes no differenceâ€¦â€”This wonâ€™t help anyoneâ€¦Lack of energyDespite the previous point, I still wanted to do lots of things, but I didnâ€™t have the energy to do them.Difficulty falling asleepEven though I was constantly tired, it got harder and harder to fall asleep.More easily irritatedGetting annoyed and even angry at trivial things.I didnâ€™t make any progress on my side projectsMind you, programming in some way has been my main hobby for over a decade.Work performance droppedI didnâ€™t get any comments from co-workers, but I felt that I wasnâ€™t nearly as productive as I was 3-6 months previously, let alone a year or two ago.When I list them like this it might seem like it should be easy to notice them, but itâ€™s really not.
They creep up on you and itâ€™s hard to see them when youâ€™re in the middle of it yourself.
(Itâ€™s easier to see faults in others after all.)The first time I thought that maybe Iâ€™m becoming burnt-out is when I was watching some fantastic TV-series (Better Call SaulandMoney Heist).
They were so good that I often thought about themâ€”even dreamt of themâ€”and I couldnâ€™t wait to see the next episode.
Yet after the amazing Better Call Saul episode with Nacho (season 6 episode 3, you know which one if youâ€™ve seen the show) I just couldnâ€™t make myself to see the next episode.Itâ€™s a weird feeling when youknowyou love something, but you feel completely drained of joy when you think about doing it, but I canâ€™t describe it any other way.This can be difficult to recognize, but I did remember the same feeling of joylessness from my previous burnout episode around 8 years ago.Seeking helpBut even if I noticed some of the red flags, and I did try to make some small changes, the real wake-up call was when I was flying home from a work trip and I got this extreme headache.
It was more extreme than I had ever had (and Iâ€™ve had occasional migraine attacks for years), so much that I thought I was getting a stroke or something.
While the pain dissipated in a few minutes, I felt sick the whole day after.I didnâ€™t have a strokeâ€”it was declared as â€œonlyâ€ a migraine attackâ€”but it was clear I had to take it seriously.
So I did what everyone recommends: I sought professional help.And Iâ€™m glad I did, because without it I probably wouldâ€™ve crashedmuchharder.The company I work for took it seriously and was incredibly helpful and were very supportive throughout the whole process.
They reduced my workload, made it clear that that I could take as much time off as needed and importantly they never made me feel guilty.Admitting that I had a problem was a difficult thing.
I really wanted to hide that I went on sick leave from my partnerâ€”a very clear vote for fleeing over fighting.
Maybe if I didnâ€™t tell anyone I could continue fooling myself that everything was fine?But I didnâ€™t hide it, and she was also very supportive.
How could I ever have thought otherwise?What was the actual cause?While the root cause wasnâ€™t external stress, such as work pressure, now I think it wasinternalstress coming from me pressuring myself.One big part of it is all my different projects Iâ€™ve got going.
Having projects to work on has always been a source of enjoyment and pride.
Itâ€™s not that I seek fame or recognition, itâ€™s the simple and wonderful feeling of accomplishment and satisfaction of creating something that drives me.Unfortunately, I have too many large and unfinished projects that started to stress me out because they werenâ€™t finished, and as my productivity slowed down they stressed me out even more.Here are of some of my ongoing software development projects:Finish my book:Why Cryptocurrencies?Ionlyneed to restyle the e-book and allow people to buy it from my site.
The physical book has been done over a year ago.Release the first version ofBitPalI wanted to allow people to buy my book about crypto with crypto, so I started working on my own self-hosted solution.Itâ€™sso closeto being â€œdoneâ€; Iâ€™ve already done 90% so itâ€™s only the last 90% left now.Finish my git implementation in RustIâ€™ve worked through one-third ofBuilding Git(but with Rust instead of Ruby), and I would really like to continue with the fun branching and rebasing stuff.Rewrite the site for our grappling clubIâ€™d like to have member account, track billing and have some notification system for when training sessions are canceled.
Simple stuff.
If we ignore the idea of tracking attendance and topics of each session, so we can plan an adaptive spaced repetition curriculum to optimize learning.And yet, Iâ€™m stuck on getting the styling and layout on the page right.While creating things is important to me, something else thatâ€™s even more important to meâ€”and part of my identityâ€”is improving my skills.
Itâ€™s not about reaching some goal, but I relish the feeling of learning something new or being able to do something I previously could not.Hereâ€™s a few things that Iâ€™m working on:Programming skillsLearning new languages, tools and new ways of solving problems in a faster or simpler way.Strength trainingI used to think that squatting is easy.
But the more I learn about it, the harder it seems.GrapplingI donâ€™t train that much (1-2 times a week), but still the learning and research continues with tons of hours of instructionals available.Memory trainingThe main goal was to supercharge language learning by making it easier to learn lots of new words.
Honestly though, it was years since I last worked on it.It shouldnâ€™t be like this, but I feel sad or bad when Iâ€™m not trying to improve at something.And what stresses me out even more are the things Iâ€shouldâ€be doing, but havenâ€™t started yet. For instance:Make a roguelikein RustCreate a board gameLearn Korean, Japanese, Finnishâ€¦Listen to hundreds of hours in my podcast app (not including audiobooks, I use Audible for those)Finish dozens of programming books on my to-read listFinish dozens of fiction books on my to-read listFigure out a product I want to develop and selletc â€¦Each of these items I list arenâ€™t that stressful by themselves, itâ€™s the combination of many small stressors that over time has caused me an awful amount of stress.Things that helped meWhile I did receive help from work, my family and from professionals, itâ€™s important to realize that in the end youâ€™re the only one who can solve your problems. So hereâ€™s a list of things that I did that I think were helpful:Be kind towards myselfI try to reduce the expectations on myself, and I try not to beat myself up if I donâ€™t do everything as quickly as Iâ€™d like to.But honestly, itâ€™s really hard.Go outside and walkI didnâ€™t like it when they told me I should go out and just walk, but honestly it was super helpful.Physical exerciseExercise has really helped me every time Iâ€™ve been feeling down, and this time is no different.Do things I used to enjoyItâ€™s important to break the downward spiral, and forcing yourself to do the things that you used to enjoyâ€”that you intellectually know you still enjoyâ€”is the best way that Iâ€™ve found.RestWhen your energy is low you need to stop and recharge.The only thing that really helped meWhile all of the above were helpful in the long run, the only thing thatreallyhelped me break the further decline wastaking time off.If started with a 100% sick leave for 3 weeks, followed by a 50% sick leave for 4 weeks and then a 7 weeks long summer vacation.
The point was to focus on my recovery, so of course I was forbidden from working on my projects and endeavors too.Iâ€™m convinced that even if I did everything else right (walking, trying to enjoy life etc) I wouldnâ€™t have managed it without this break. Iâ€™ve read the opinion that theonlything that can cure a bad burnout is removing yourself from the stressful environment. Iâ€™m not sure Iâ€™d go that far, but it sure felt that way for me this time.Are you ever cured?Itâ€™s now been a little over a year since my big wake-up call on the flight home, and itâ€™s only now that I feel Iâ€™m myself again. Iâ€™m finally making progress on my projects again, and I can dodeep workto a satisfactory degree again.The healing process has been slowâ€”much slower than I couldâ€™ve thought.
Even though it took around a year last time to recover too, a year is a damn long time.
A lesson Iâ€™ve learned (or having to re-learn) is that doing everything you can to avoid a burnout will pay off in the long run.But the worst part is: will you ever truly get rid of it?
Or is the burnout forever etched into your brain, just waiting for an opportunity to make your life miserable again?Most people, including myself, keep repeating the same mistakesWilliam ShatnerPublished:March 14,2023inac95a3bTagged:Life,Life Hacking,Mental HealthPreviousNext</description>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2022 in review</title>
      <link>https://www.jonashietala.se/blog/2023/02/15/2022_in_review</link>
      <description>2022 in reviewPublished:February 15,2023Revised:April  6,  2024in1ee35daTagged:Yearly ReviewA bit late, but it’s time for myyearly review. It’s something I like doing for myself and it’s nice to see that despite a tough year I’ve done some good things.2022 Non-Geek AchievementsWe got our third child!This time we got a girl to complement our two boys, and I love them all more than anything. I wouldn’t trade them for the world.Wrote4 blog posts.2022 Geek AchievementsRewrote the blog in Rust.Wrote more Rust (thanks to my job).Wrote some Typescript (again due to my job).Started home automation withHome Assistant.It started with us installing solar panels, and I wanted to get some pretty graphs from it to see how it performed.Pretty graphs in Grafana. Even though it’s cold and snowy, we still produce some energy.But it all went downhill from there…The core of my zigbee network connecting some lamps, plugs, switches and controls in our home.
There are now 52 connected devices, and it will continue to grow.There are stilltonsof things I want to implement, fix and play around with.
I think it’s best not to think of smart-home as some sort of money or time saver, but more as a hobby that might have some positive effects.Books I rememberTheGentlemen Bastards Series.Disgustingly evil and I’ve got another book to eternally wait for (like the now 12 year wait forWinds of Winter).The Power of HabitandAtomic Habits.After reading these books I’m convinced that habits is the most powerful tool we humans have, and I need to be more conscious about them going forward. The Power of Habit is the more inspirational book, while Atomic Habits gives the blueprint of how to establish the habits you want.Boardgames I rememberSpirit IslandI’ve never played a boardgame solo before, as I always identified boardgames with social interactions.
But there’s really no difference between playing a boardgame alone, versus playing a computer game alone.
And I had an extremely good time playing Spirit Island.Great Western TrailIf you put me on the spot to name my current #1 boardgame, I’d have to give it to Great Western Trail.
Such an amazingly well designed game.ObsessionObsession is quite an unique game, and it might be the game I’m most glad of having in my collection.Clinic Deluxe EditionA very thematic and chunky game about managing a hospital. I haven’t played it a lot, but I can’t wait to play it again.NetrunnerMany years ago I used to play a ton of Netrunner and went to tournaments and stuff, and to this day Netrunner has given me the best boardgaming memories of all time.Unfortunately it became a bit too much and I got burnt out fromthe Mumbad Cycle meta, so I took a break to focus on other things, and then Fantasy Flight stopped developing the game. A sad ending to a great game.Or so I thought. The fan organizationNull Signal Games(previously Nisei) has continued to support the game and has continued to release new cards for Netrunner, keeping the game alive and well.This is super exciting, and in many ways their releases are even better than Fantasy Flights (less useless cards, more coherent releases and less game-breaking interactions). So I bought all the new cards (I kind of regret selling my complete collection a couple of years ago) and I hope I get to play with them sometime.RadlandsA quick and fantastic two player card game. If a lifestyle game like Netrunner is too much, Radlands is the perfect alternative.CarcassonneandDragominoTo my eternal joy, my oldest kid has been enjoying gaming more and more, and both me and him have been loving Carcassonne and Dragomino.2022 MisadventuresGot depressed and burnt-out.I’ve been meaning to write a post about this, but I haven’t had the energy for it yet.
I think it’s enough to say that this defined 2022 for me, and even though I was on sick leave for “only” two months, I still haven’t fully recovered my energy and productivity despite the first serious symptoms revealing themselves over a year ago.Plans for 2023Spend more time with my kids.After all, there is nothing more important.Reduce the boardgame list-of-shame that (I think) consists of 12 games that I own but have never played.A more daunting task than it might seem as it’s been very hard to get time for gaming, and I’m waiting for something like 10+ crowdfunding games to arrive in 2023. Oops.More focus on health, both psychological and physical.After being sick you realize how important your health is, which is something I’ve gotten new appreciation for.EstablishDeep Workas mykeystone habit.After becoming convinced that controlling your habits is the best thing since sliced bread, I’ve decided that the big productivity focus of 2023 is focused on habits, and specifically creating the habit of Deep Work (or the hyper productive flow state that hopefully all programmers recognize).Finish the digital version ofmy book.The plan was to finish it last year so I could move on to other projects, but if I don’t finish it now it might never be done. Therefore I’ll dedicate the spring to finally finalize it.Play games instead of doom scrolling on the phone or lazily watch TV.As I’m writing this I’ve had mySteam Deckfor around a month, and it’s absolutely amazing.Published:February 15,2023Revised:April  6,  2024in1ee35daTagged:Yearly ReviewPreviousNext</description>
      <pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The current T-34 keyboard layout</title>
      <link>https://www.jonashietala.se/blog/2022/09/06/the_current_t-34_keyboard_layout</link>
      <description>The current T-34 keyboard layoutâ˜Published:September  6,2022Revised:November 27,  2024in9939c84Tagged:Computer,Keyboard layouts,Keyboards,T-34ContentsLegendLayersBaseSwedish overlayNavigation layerWorkspace layerWindows layerNumbersFunction keysSymbolsOne-handed ShortcutsSpecial symbolsModifiersCombosNeighbour combosSplit combosCombos over keyboard halfsNumbers and symbolsLong pressLeader sequencesCAPSWORDNUMWORDRepeat keyMore infoIâ€™ve been documenting my own keyboard layoutin a seriesfor a while now. But as the layout is constantly changing itâ€™s been difficult to piece together how the layout currently looks like, so this post tries to show how the layout looks right now in itâ€™s entirety.If you want to read about the background and philosophy about the layout, please see theoriginal T-34 post, and to see itâ€™s evolution please refer to theT-34 series. The layout is implemented usingQMKand thecode is on GitHub.The layout is made for a small 34 key keyboard, I use theFerriswith flat choc keycaps to easily presscombos.LegendShift / Layer highlightLayer (one shot / down)Modifier (one shot / down)Dead keyManagementLayer (down)Modifier (down)SpecialActive key for layerLayer (toggle)Modifier (implicit)LegendLayersLayersare the meat and potatoes of any layout for a smaller keyboard, and mine is no different.BaseJCYFPXWOU.RSTHKMNAIRepeat,VGDB/L()_SHRTSpaceNAVESPECBase layer.Therepeat keyis used to output the last pressed key. I shift keys usingauto shift(seelong press) andCAPSWORD. The lettersZandQ, together with a bunch of other keys, are oncombos.Swedish overlayÃÃ„Ã–Swedish overlay.When I want to write Swedish I activate this layer that replaces()_withÃ¥Ã¤Ã¶, or I usecombosfrom any layer.Navigation layerGui Jâ†â†‘â†’HomeGui WGui EGui RPgUpCtrlShiftTabâ†“CtrlCtrlTabGui Kâ†â†“â†‘â†’EnterPgDnEndSpaceNAVWNAVNavigation layer.Gui-W,Gui-EandGui-Rare used to switch between monitors andGui-J/Gui-Kto switch windows inxmonad.Ctrl+ arrow is used to switch windows in Vim. Tabbing is for switching tabs in Firefox.Workspace layerJCWER6402K315789HLSpaceWNAVWorkspace layer. All keys have an implicitGuimodifier.This is used for all window and workspace management inxmonad. Some common operations are also on thenavigation layer.Windows layerShiftTabTabWindows layer. All keys have an implicitAltmodifier.This is purely to enable window switching usingAlt-TabandCtrl-Alt-Tab, without releasingAlt.NumbersJ+*!PX@uRepeat6402K3157,ShiftG8/9()_SpaceNAVCancelNumbers. The darkened keys turn offNUMWORD.While I can activate the number layer persistently (usingleader sequences) I typically usecombosfor single digitis (like0), orNUMWORDfor larger numbers (like1984).NUMWORDmakes the number layer smart, so it will deactivate when certain keys are pressed (colored dark gray in the image). Itâ€™s used to type numbers in text or code and for relative movement in Vim, where17Jwould move 17 lines down and then turn off the number layer.@uis there to easily activate macros in Vim. For example7@uin the number layer would run theumacro 7 times and then turn offNUMWORD.Function keysF6F4F10F2F12F11F3F1F5F7F8F9SHRTSPECFunction keys.Symbols~+*!#@^.|{}-\`?[]Repeat,%/&amp;()_CancelSymbols.Similar to the numbers layer, there arecombosthat are used to output standalone symbols. Thecombosfollow the layout of the symbols layer, and combos with same-side thumb. SoSpace+ left-hand key orE+ right-hand key outputs a symbol, regardless of what layers are activated.Some common symbol sequences, like-&gt;, exists ascombosand others, likeâ€ƒ!=â€ƒ, aslong press.One-handed ShortcutsCtrl QCtrl WCtrl ECtrl RCtrl TCtrl ACtrl SCtrl ACtrl FCtrl GCtrl ZCtrl XCtrl CCtrl VCtrl BSHRTFUNShortcuts.To give access to common QWERTY shortcuts using the left hand, for programs where I have my right hand on the mouse/trackball. (Long pressstill shifts them.)Special symbols~â€˜â€™^Â¨â€œâ€Â´`â†â†“â†‘â†’FUNSPECSpecials (with â†â†“â†‘â†’ symbols, not arrow keys).Some of these aredead keys, to add diacritic to any letter. To getÃ©I doÂ´thene, and the operating system will merge them together.ModifiersGuiCtrlShiftAltRightAltModifiers.I typically uselong pressfor shift andcombosfor other modifiers, this layer is a fallback for when those arenâ€™t enough.CombosCombosis another fantastic tool that I (ab)use a lot. Simply put it allows you to press multiple keys at once and acts as an additional keyâ€”very useful for smaller layouts.Note that combos are layer independent, and work the same regardless of what layers are activated. The base layer is shown in the graphics for reference.Neighbour combosThese combos are made by keys next to each other, either horizontally (pressed with two fingers) or vertically (pressed with one finger in the middle of two keys).JCYFPXWOU.RSTHKMNAIRepeat,VGDB/L()_SHRTSpaceNAVESPECQQUZClear#{}=BspcRev RepCtrlEsc SYMDel: SYMCtrlvsplitGuiShiftShiftGui$&lt;-&lt;==&gt;-&gt;|&gt;hsplit&gt;=2-key neighboring combos.Some combos have a separate hold behaviour; for instance holdingEscapeactivates thesymbols layer, allowing me to output[]easily.vsplitsplits a window vertically in Vim andhsplitsplits it horizontally, andClose Windowcloses a window in Vim (q).Clearresets all states; sets thebaselayer, releases modifiers, stopsCAPSWORDandNUMWORD, and clears other persistent states.JCYFPXWOU.RSTHKMNAIRepeat,VGDB/L()_SHRTSpaceNAVESPECCtrl WCtrl WTab MODEnterClose WindowSWE3-key horizontal combos.SWEactivates theSwedish layer, and if prefixed with()_it will replace that withÃ¥Ã¤Ã¶and vice versa. So for example if I typedhall(I would pressSWEto gethallÃ¥, with the Swedish layer activated.Ctrl Wis used to close tabs in Firefox.NAIRepeatSave VimA 4-key horizontal combo.Save Vimis a 4-key combo that saves the buffer in Vim.Split combosThese split combos uses the ring and index finger.SHNI"'Combos for the quotes"and'.TADL;WINCombos donâ€™t have to be on the same row, these angled combos are fairly comfortable.VDL)AltLeader KeyOne-shotAltand theLeader key.Combos over keyboard halfsTASpaceNAVECAPSWORDNUMWORDTappingT+Aonce activatesCAPSWORD, tapping again makes it persistent (CAPS LOCK), and a third tap to deactivateCAPS LOCK.TappingSpace+EactivatesNUMWORDand tapping them again activates thenumber layerpersistently.Therepeat keyworks with the above, making them easier to double-tap.Numbers and symbols~+*!|{}-\3157%https://9ÃÃ„Ã–SpaceNAVNUMWORDCombos usingSpaceand another key.#@^6402Ã‰`?[]8&amp;()_NUMWORDECombos usingEand another key.Combos with a thumb key is used for digits or standalone symbols, with the logic ofsame-side thumb+key=symbolandopposite-side thumb+key=digit. The placements follow thenumbers,symbolsandSwedishlayers. Both thumbs activatesNUMWORD.Long pressMost keys have a different behaviour when tapped compared to a long press. Most commonly I use this to produce shifted keys (calledauto shift). So to getAI press and holdauntil it turns up.There are a bunch of special cases as well (mostly on top of [combos]):TapLong press_/\#Double, e.g__"'=`0.Triple, e.g"""|&amp;=Double with spaces, e.g||!â€ƒ!=â€ƒ(with spaces)?{:?}#{:#?}%%{}([{Close and move cursor between@@u(paired withqucombo for Vim macro execution)Leader sequencesI use the combol+)as theleader key. This will wait for a sequence of key presses (in contrast to combos where keys must be pressed at the same time). This is used with mnemonics for rarely used outputs:Leader sequenceActionl+),cCaps lockl+),t,nToggleNumber layerl+),t,sToggleSymbols layerl+),t,cToggleCaps lock escape swapCAPSWORDCAPSWORD is a â€œsmart caps lockâ€. It works like a regular caps lock, except it automatically turns off after certain keys are typed (most commonly space).It will not turn off on these keys:a-zÃ¥Ã¤Ã¶_-BackspaceandRepeat.NUMWORDNUMWORD is a â€œsmart layerâ€. Itâ€™s similar toCAPSWORD, except itâ€™s for thenumbers layerinstead of caps lock.It will not turn off on these keys:0-9%+*-_.,:=xBackspaceRepeatReverse RepeatandEnter.Repeat keyThe repeat key simply repeats the previous key. So to typefallI can typefalRepeat, using four different fingers instead of pressingltwice. It can also repeat things likeCtrl-corDelete.Thereâ€™s also a reverse repeat key that â€œreversesâ€ the last pressed key. The idea is that if you pressedPageUpa bunch, but went too far, you could pressReverse Repeatto outputPageDown.SeeT-34/0for the introduction of therepeat keyandreverse repeat keyfor some more information about them.More infoWhile I try to keep this post updated,reading the codewill always give you a more up to date reference. If youâ€™re interested inwhythe layout looks like it does, I try to write the motivations in theT-34 series.November 27, 2024Update the graphics to use embedded svgs generated from the source code.November  3, 2023Add@uto number layer for easier execution of Neovim macros (e.g.17@u)October 24, 2022Add the Windows layer to enable windows switching usingAlt-TabandCtrl-Alt-Tab.MovePgUpto the home row pinky on the navigation layer.Use theQWERTYlayout for the shortcut layer on the left side.August 28, 2022Anotherlarge updatethat swapsAOandIU, reduces inner thumb key usage, makes layers accessible via home-row combos, reworks the symbols, and more.December 15, 2021This updatemoves the repeat key, adds a shortcut layer, and moves modifiers to combos.September  5, 2021A major updatedocumented in this postthat introduces the repeat key, moves around keys on the base layer, reworks the symbols layer, and more.Published:September  6,2022Revised:November 27,  2024in9939c84Tagged:Computer,Keyboard layouts,Keyboards,T-34PreviousNext</description>
      <pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Rewriting my blog in Rust for fun and profit</title>
      <link>https://www.jonashietala.se/blog/2022/08/29/rewriting_my_blog_in_rust_for_fun_and_profit</link>
      <description>Rewriting my blog in Rust for fun and profitâ˜Published:August 29,2022inac95a3bTagged:Blog,Hakyll,Haskell,RustContentsBackgroundProblems with my previous setupWhy Rust?Why reinvent the wheel again?Implementation detailsDelegate the hard thingsMarkdown transformationsPerformance improvementsSanity checksHow did it go?BackgroundIâ€™ve usedHakyllas my static site generator for around 9 years now. Before that I think I usedJekylland also more dynamic pages withMojoliciousin Perl andKohanain PHP, but I canâ€™t be completely sure as the git history doesnâ€™t go back that far.But all good things come to an end and Iâ€™ve now migrated to my own custom site generator written in Rust.Problems with my previous setupThese are the main annoyances I wanted to solve with this rewrite:It was starting to get slow.On my crappy laptop a full site rebuild took 75 seconds. (Not compile, just to generate the site.) I only have 240 posts so I donâ€™t think it should be that slow. While there is a good caching system and a watch command that only updates the changed post during editing, it was still annoyingly slow.Several external dependencies.While the site generator itself is written in Haskell, there were other dependencies apart from a number of Haskell libs. My blog helper script was written in Perl, I usedsasscto convert sass,pygmentsin Python for syntax highlighting, ands3cmdfor uploading the generated site to S3.Itâ€™s annoying to install all these and to keep them up-to-date, it would be great to just have a single thing to worry about.Setup problems.Related to the previous point, sometimes things just break and I have to spend time to debug and fix them. This is especially frustrating when I have some good idea of something to write about, just to find out that I have some issue with my site generator.You might think, what could possibly go wrong?Well, sometimes I update some packages that might break things in weird ways. For example:After GHC is updated itcan no longer find cabal packages.When I run the Haskell binary on I get this:[ERROR] Prelude.read: no parse(Only on my desktop, it works fine on my laptop.)Or this Perl error:Magic.c: loadable library and perl binaries are mismatched (got handshake key 0xcd00080, needed 0xeb00080)(Only on my laptop, it works fine on my desktop.)When Hakyll changed Pandoc arguments between versions,breaking code rendering in my Atom feed.I know that these are all solvable, but I just want something that just worksâ„¢.Mental overhead with Haskell.I kind of like Haskellâ€”especially the purely functional parts of it, and I am a fan of the declarative approach Hakyll takes to site configuration. Take the generation of static (i.e. standalone pages) for instance:match"static/*.markdown"$doroute   staticRoutecompile$pandocCompiler streams&gt;&gt;=loadAndApplyTemplate"templates/static.html"siteCtx&gt;&gt;=loadAndApplyTemplate"templates/site.html"siteCtx&gt;&gt;=deIndexUrlsEven if you donâ€™t understand the$and&gt;&gt;=, I still think itâ€™s clear that weâ€™re finding files from thestatic/folder, sending them topandocCompiler(to convert from markdown), to some templates and then de-indexing urls (to avoid links ending withindex.html).Simple and clear!But I havenâ€™t used Haskell in years, and the overhead for me to add slightly more complex things to the site is quite large.For example, I wanted to add next/prev links to posts, but then I had to spend some time relearning Haskell and Hakyll. And even then the solution I came up with was super slow because it was a linear search to find the next/previous posts, but I couldnâ€™t figure out how to do this properly with the way Hakyll is setup.Iâ€™m sure you can do it in an efficient manner, but for me it was too much effort for such a small feature for me to bother.Why Rust?I enjoy using Rust, and itâ€™s important for a hobby project like this.Rust is quite performant and transforming text is a task it should be good at.Cargo is fire and forget. As long as you have Rust installed, it should be enough to just docargo buildand it should just workâ„¢.Why reinvent the wheel again?I wanted to write my own static site generator as a fun and interesting project. It shouldnâ€™t bethathard and it would give me complete control over the site, which should give me a bit more flexibility than if I used an existing site generator.(Yes I know that projects likecobaltallows you to make any kind of transformation, using whatever language you want, to your pages.)Implementation detailsIâ€™m not going to describe everything I did here, take a look at thesource codeif youâ€™re interested.Delegate the hard thingsAt first I was worried that it would be hard to replicate all the features I enjoyed with Hakyll, like the templating engine, the syntax highlighting for numerous languages or thewatchcommand that automatically regenerates any pages you edit and acts as a file server so I can view the post in the browser during the writing process.Turns out that itâ€™s easy if you let existing crates handle the hard parts. Here are some of the libraries I used to good effect:terafor a templating engine.Itâ€™s more powerful than what Hakyll provides, as it can do things like loop:Posted in {% for tag in tags %}{% if loop.index0 &gt; 0 %}, {% endif %}{{ tag.name }}&lt;/a&gt;{% endfor %}.&lt;/nav&gt;&lt;/div&gt;pulldown-cmarkfor parsing Markdown.Itâ€™s really forCommonMarkwhich is a standard, unambiguous syntax specification for Markdown.While fast, it doesnâ€™t support as many things asPandocdoes, so I had to extend it with some more features. More on that later.syntectfor syntax highlighting, supporting Sublime Textâ€™s grammars.yaml-front-matterto parse metadata from posts.grassas a Sass compiler purely in Rust.axumto createa static file serverused to host the site locally.hotwatchto watch for file changes, so we can update pages whenever a file is updated.scraperto parse the generated html. Used in some of my tests and for some specific transformations.rust-s3to upload the generated site to S3 storage.Even with these libraries the Rust source files themselves contained over 6000 lines. In some cases Rust can be verbose, and my code is really not beautiful, but writing this project was still more work than expected. (Isnâ€™t that always the case?)Markdown transformationsWhile it would be easy if my posts were just standard markdown, over the years Iâ€™ve included various features and extensions that my markdown parsers of choicepulldown-cmarkdonâ€™t support. So I had to code them myself.PreprocessingI have a preprocessing step that I use to create figures with multiple images. Itâ€™s a generalized processing step that takes the form:::::::I use this for different kinds of image collections, such asFlex,FigureandGallery. For example this:::: Flex/images/img1.png/images/img2.png/images/img3.pngFigcaption goes here:::Would be transformed to:&lt;figcaption&gt;Figcaption goes here&lt;/figcaption&gt;&lt;/figure&gt;And how did I implement this magic? Using Regex of course!uselazy_static::lazy_static;useregex::{Captures,Regex};usestd::borrow::Cow;lazy_static!{staticrefBLOCK:Regex=Regex::new(r#"(?xsm)^# Opening ::::{3}\s+# Parsing id type(?P\w+)\s*$# Content inside(?P.+?)# Ending :::^:::$"#).unwrap();}pubfnparse_fenced_blocks(s:&amp;amp;str)-&gt;Cow{BLOCK.replace_all(s,|caps:&amp;amp;Captures|-&gt;String{parse_block(caps.name("id").unwrap().as_str(),caps.name("content").unwrap().as_str(),)})}fnparse_block(id:&amp;amp;str,content:&amp;amp;str)-&gt;String{...}(The image and figure parsing is more verbose, so letâ€™s skip that shall we?)Extending pulldown_cmarkIâ€™ve also extendedpulldown-cmarkwith transformations of my own://Issue a warning during the build process if any markdown link is broken.lettransformed=Parser::new_with_broken_link_callback(s,Options::all(),Some(&amp;amp;mutcb));//Demote headers (eg h1 -&gt; h2), give them an "id" and an "a" tag.lettransformed=TransformHeaders::new(transformed);//Convert standalone images to figures.lettransformed=AutoFigures::new(transformed);//Embed raw youtube links using iframes.lettransformed=EmbedYoutube::new(transformed);//Syntax highlighting.lettransformed=CodeBlockSyntaxHighlight::new(transformed);lettransformed=InlineCodeSyntaxHighlight::new(transformed);//Parse `{ :attr }` attributes for blockquotes, to generate asides for instance.lettransformed=QuoteAttrs::new(transformed);//parse `{ .class }` attributes for tables, to allow styling for tables.lettransformed=TableAttrs::new(transformed);Demoting headers andembedding bare YouTube linksis something I used to do before, and were fairly straightforward do implement. (It might have been better to embed YouTube links in a pre- or post-processing step though.)Pandoc had support for adding attributes and classes to arbitrary elements, which was very useful. So for instance this:![](/images/img1.png){ height=100 }Would be transformed into this:&lt;figure&gt;&lt;/figure&gt;I used it all over the place, so I reimplemented itâ€¦ in less general and hacky manner.Another feature I used in Pandoc that wasnâ€™t supported was evaluating markdown inside html tags. So this would no longer render correctly:&lt;aside&gt;My [link][link_ref]&lt;/aside&gt;At first my plan was to do this with the generalized preprocessing step, but then Iâ€™d lose track of link references. So in this example:::: AsideMy[link][link_ref]:::[link_ref]:/some/pathlinkwould not be turned into a link as we would only parse inside:::.&gt;Some text{ :notice }That would call anoticeparser, which in this case would create a&lt;aside&gt;tag instead of a&lt;blockquote&gt;tag, while preserving the parsed markdown.While there are existing crates that adds code highlighting using [syntect], I wrote my own that wraps it in a&lt;code&gt;tag and supports inline code highlighting. For example â€œInside row:letx=2;â€ is produced by:Inside row:`let x = 2;`rustPerformance improvementsI didnâ€™t spend that much time into improving the performance, but two things had a significant impact:The first thing is that if you use [syntect] and have custom syntaxes, you really shouldcompressSyntaxSetto a binary format.The other thing was to parallelize rendering usingrayon. Rendering is the markdown parsing, applying templates and creating the output file. Rayon is great is this task is limited by CPU and itâ€™s very easy to use (if the code is structured correctly). This is for instance a simplified view of the rendering:fnrender(&amp;amp;self)-&gt;Result&lt;()&gt;{letmutitems=Vec::new();//Add posts, archives, and all other files that should be generated here.forpostin&amp;amp;self.content.posts{items.push(post.as_ref());}//Render all items.items.iter().try_for_each(|item|self.render_item(*item))}To parallelize this all we need to do is changeiter()intopar_iter():userayon::iter::{IntoParallelRefIterator,ParallelIterator};items.par_iter()//This line.try_for_each(|item|self.render_item(*item))And thatâ€™s it!Admittedly, my performance improvements are quite minor, and the big performance gains comes from the libraries I use. For instance my old site used an external [pygments] process written in Python for syntax highlighting, while I now have a highlighter in Rust thatâ€™smuchfaster, and can easily be parallelized.Sanity checksOne thing that always bothered me with the site is how easy it was to make a mistake. For example linking to a non-existent page or image, or not defining a link reference at all with[my link][todo], and forgetting to update it before publishing.So in addition to testing basic functionality like the watch command, I also parse the whole site and check that all internal links exists and are correct (so it validatessome-titlein/blog/my-post#some-titletoo). I also check external links, but thatâ€™s with a manual command.During generation I also take a hard stance andpanicearly and often, just to reduce the risk that something weird slips by.How did it go?In the beginning of this post I listed some issues I had with my previous setup, so letâ€™s see if I managed to improve them?PerformanceOn my crappy laptop a full site rebuild (not including compilation time) now takes 4 seconds. An 18x performance improvement is not too shabby Iâ€™d say. Iâ€™m sure this could be improved furtherâ€”for example I userayonfor file IO while async would be more beneficial, and I donâ€™t have a caching system so I regenerate all files every time I build. (During watching itâ€™s smarter though.)Please note that this is not to say that Rust this much faster than Haskell, instead see it as a comparison of two implementations. Iâ€™m sure someone could make it super fast in Haskell.A single dependencyNow Iâ€™ve got everything in Rust, with no external scripts or tools I need to install and keep working.Cargo â€œjust worksâ€As long as I have rust on the system,cargo buildis just rock solid. I think this is low-key one of Rustâ€™s biggest strengthsâ€”the build systemjust works.You donâ€™t have to manually hunt down missing dependencies, sacrifice a child to make it cross-platform or pull your hair out when the build system automagically pulls down an update that breaks everything again. You just lean back and wait for your code to compile.I had an easier time with RustWhile I did find it easier to implement things likeseriesor prev/next links (which arenâ€™t live yet as I havenâ€™t styled them properly), I donâ€™t think it means that Rust is simpler or easier than Haskell, it just means that I personally had an easier time to grok Rust than Haskell.The biggest reason why probably comes down to practice. While Iâ€™ve been using Rust a fair bit lately, Iâ€™ve barely touched Haskell since I started using it for this site around a decade ago.Iâ€™m sure that if I donâ€™t use Rust for 10 years and you ask me to use it again, Iâ€™ll struggle a fair bit as well.Overall, Iâ€™m quite pleased. It was a funâ€”albeit a larger than I had anticipatedâ€”project that also removed some of my annoyances with this site.Published:August 29,2022inac95a3bTagged:Blog,Hakyll,Haskell,RustPreviousNext</description>
      <pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The T-34/2 keyboard layout</title>
      <link>https://www.jonashietala.se/blog/2022/08/28/the_t-342_keyboard_layout</link>
      <description>The T-34 keyboard layoutThe T-34/2 keyboard layoutPublished:August 28,2022Revised:November 25,  2024in4fe6ab0Tagged:Computer,Keyboard layouts,Keyboards,T-34This is part 4 of theThe T-34 keyboard layoutseries.Seethis postfor a full reference of how the layout looks at the moment.The T-34/2 layout.Generated with theQMK Heatmap Generator, with all layers and combos.It’s been 6 months since my last update on theT-34keyboard layout, and I’ve made some changes I’d like to document here.As seen in the heatmap above, the layout seems quite decent. There’s still an issue withjandkbeing too prominent (because I’m a Vim jk-spammer). I don’t have a good fix for it layout wise—maybe ajandmswap—but mainly I think I “just” need to get better Vim habits.There’s also a hand imbalance, but I don’t feel it’s an issue for me as I have problems with RSI on my right hand, so having the left hand do a little more work is even a positive.LegendSwap AO and IU (again)BaseIn mylast iterationI hadiuon my middle finger andaoon my ring finger. That was far from optimal as the ring finger is stronger, andaois much more common for me. It was just an oversight after I swappedRepeatto the home-row (from whereois now) but it has now been corrected.I’ll also say that I’m still not convinced thatRepeatis worth it here. Avoiding double taps feels good, and repeating things likeCtrl-cis fantastic, but I could see that removingRepeat, movingoto the home-row and making space for an extra key is the better choice.Reduce inner thumb key usageAnother big change I’ve made is to reduce the inner thumb key usage (where I fold my thumb to reach theSHRTandSPECkeys). This was a big issue for my right thumb where I’m suffering from RSI (I probably read too much manga on my mobile phone).ShortcutsWhileT-34/1had symbols and mods on the thumbs (only used for multiples, as I have single combos for them all) I now only have rarely used keys under the layers there:Shortcuts under the left thumb.The shortcuts are there to give me one-handed access to common shortcuts. There are some duplicates there as I could for instance doCtrl-ceither from the shortcut layer or do aCtrlcombo thenc, but meh.SpecialsSpecials under the right thumb (with ←↓↑→ symbols, not arrow keys).I’ts mostly used to add accents likeéorè, but it’s very rarely used.Home-row combos for ctrl and layer accessI’ve also reworked the combos to give access to the symbol layers and to add a one-shotCtrlon home-row:Horizontal combos with nearby keys.Ctrlis super common, so it should have prime real estate on the home-row. Ivastlyprefer one-shot over keys I need to hold down, and it’s super comfortable to type things likeCtrl-nandCtrl-o.SYMbeing a hold is fine as I only use it to output multiple symbols. It’s almost exclusively used for{}and[].Some combos now use 3 or even 4 keys. That’s fine as they’re “big” keys that I tend to slam a bit more, so in a weird way having some more resistance feels better in some cases…Not pictured above,;is triggered byt+dwhich is a bit weird, but it works.The modifier layer exists as an escape hatch, if I ever have to type weird modifiers likeAlt:ModifiersSymbolsAnother consequence of the change is that the two symbol layers (thatused tohavecallum style modson the opposite side) are now combined into a single layer:SymbolsA small change I did to the symbols layer is to swap%and!, because%{},&lt;%and%&gt;are common sequences in Elixir.I did try to have%{}as a long press on%, but for some reason I didn’t really use it. Rolling feels more satisfying.Swap thumbs for number and symbol combosPreviously the easy access logic for numbers and symbols was:ComboOutputleft thumb+keysymbolright thumb+keydigitBut despite struggling for many months, I still couldn’t get used to it and I still made mistakes regularly. So now I’ve changed to this:ComboOutputsame side thumb+keysymbolopposite thumb+keydigitFor some reason, this is easier for my brain.Even easier ÅÄÖI still really like the Swedish overlay (replacing()_withåäö), but I’ve added some extra finesse to it:When switching, if the previous key is one of()_then backspace and replace it withåäö(and vice versa).I find that I’m often in the wrong layer, so if I type for instancefooå, I can just switch off the Swedish layer and I’ll getfoo(. In theory it’s good, but it doesn’t come super fluidly for me yet.Combos with the opposite thumb now always outputåäö, which is in line with the combo swap mentioned above.This means I always have access to()_andåäöwith the same combo, regardless of what layer I’m on.Instant leader keyAleader keyis a function that triggers after a sequences of keys. So for instance I pressLeader, thentand finallynto toggle the number layer. I use these sequences with the combol+)as my leader key:SequenceActionl+),cCaps lockl+),t,nToggleNumber layerl+),t,sToggleSymbols layerl+),t,cToggleCaps lock escape swapI don’t use QMK’s version, as I couldn’t get used to the timeouts, but auserspace implementationthat resolves instantly.A failed experimentAs I findpandxto be the worst keys on the board (barring the folding thumb keys), I tried to have them ash+kandm+acombos…But it felt so much worse. Maybe there’s a way to modify the layout to remove those two keys, but this is not the way. And it’s not something I care to explore further at the moment.More heatmapsTheQMK Heatmap Generatoralso provides heatmaps for the individual layers, which gives another way to analyze the keymap compared to an indiscriminate keylogger I’ve used before.Note that I did not take these heatmaps into account making this version of the keymap.Base layer (this includes virtually all combos too).Can you feel thej/kabuse?Swedish layer (only ÅÄÖ are changed from base).In contrast to the base layer, which is used for programming a lot, the Swedish layer is only used for writing normally, and I think it looks decent.Symbols layer.Note that this is only used to write multiple symbols in a row, like%{}or#[, as single symbols are typed with thumb combos.(And arrows like-&gt;and operations like||are typed in other ways, so there aren’t that much usage for this layer.)Numbers layer.Note that this is only used together withNUMWORD, and single digits are typed with thumb combos—such as0that in Vim moves the cursor to the beginning of the line.A typical usage for me is to jump around in Vim with relative line numbers, which explains the high frequencies ofjandk:ActivateNUMWORD, then4jwould move the cursor 4 lines down to.collectand turn off the number layer.Navigation layer.I switch windows in Vim withCtrl-LeftorCtrl-Right, which is something I do all the time.Maybe there’s an argument for removing the arrows on the left, placing the tabs (switching tabs in Firefox) in a better position?Workspace nav layer.This is basically switching between workspaces0to9and the three monitors. It’s weird how I don’t use workspace3, although it should be in a good position finger placement wise.There are some more layers, but I cut them out because the heatmaps were totally uninteresting to me.As usual, thefirmware QMK codeis on GitHub.This is
      part 4 of theThe T-34 keyboard layoutseries.The T-34 keyboard layoutThe T-34/0 keyboard layoutThe T-34/1 keyboard layoutThe T-34/2 keyboard layout←I designed my own keyboard layout. Was it worth it?Read the next partPublished:August 28,2022Revised:November 25,  2024in4fe6ab0Tagged:Computer,Keyboard layouts,Keyboards,T-34PreviousNext</description>
      <pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2021 in review</title>
      <link>https://www.jonashietala.se/blog/2022/01/10/2021_in_review</link>
      <description>2021 in reviewPublished:January 10,2022ine70aaecTagged:Yearly ReviewA new year is always a good time to review the past year. Funny how this is alreadythe 12thyearI’ve done this kind of quick review… Time sure flies.2021 Non-Geek AchievementsStarted strength training using a strength coach fromKabuki.I got inspired by the bookPeakthat makes the case for the efficiency of having an experienced coach guide your skill development, and I decided to try out the virtual coaching. I get help with designing a program and checking my form and so far it’s been great.Wrote8 blog posts.Started the re-read ofThe First Lawseries and the other books in the universe.The stand-alone booksBest Served ColdandThe Heroesare seriously great (haven’t gotten toRead Countryyet).2021 Geek AchievementsIself-published a book!It’s so real I can hold it in my hand.Got funding forBitPal, an open-source project I’ve been working on.Wrote a bunch of Rust.Bought a bunch of Rust programming books too, but the only one I’ve read yet isProgramming Rust, which was very good.Wrote a lot of Elixir.Also read a bunch of Elixir books.Elixir in Actionwas fantastic.Wrote some C, Python, Typescript and probably something else too.Started using a (very)custom keyboard layouton a 34-key split keyboard.The base layout of my keyboard layout T-34/1Did some web design.The bookThe Non-Designer’s Design Bookis great for design-fledglings like me.Boardgames I rememberVital Lacerdais famous for designing thematic and very complex Eurogames. Some hate them, others maintain that they’re the best things since sliced bread, and I lean towards the latter.I bought and played three of them:On Marsis very complex with a lot of rules (it took me ~30 min to explain them, even though I skipped a bunch and came prepared). Still, it’s an absolutely amazing game and it was the highlight of the year for me.The Galleristis also on the complex side, but I still find it very approachable. Also an amazing game and it’s right up there with On Mars for me.I only playedVinhosonce. While it’s undoubtedly a very good game, it has taken a step back compared to the two other Lacerdas. I’d like to play it more.Food Chain Magnateis easily one of my favorite games of all time, and I got to play a game with the new milestones from theKetchup expansion. And what can I say? It was great, and if you want more variation to the game the expansion is fantastic.My kid is now 4 years old and at long last he’s old enough to play some decent board games. Both me and him likedAnimal Upon AnimalandRhino Hero, which are fun enough to play with adults as well!New mangas/manwhas I rememberTired of unoriginal OP MCs? Want a smart MC and clever story?ThenSSS-Class Suicide HunterorOmniscent Reader’s Viewpointmight be for you! (I hear the light novels are amazing too.)Maybe you still want awesome action, but avoid the common tropes?Then check outLegend of the Northern Blade.Perhaps your thing is regression stories?I lovedThe Beginning After the EndandVolcanic Age.Or a satisfying combination of fighting and humor?Murim Loginis half-part hilarity and half-part awesomeness.2021 FailuresMy book project wasn’t completely finished.I still need to finish the e-book and make it available for sale.Did not advanceBitPalinto a useable state.This is my open source cryptocurrency payment processor I’ve been working on. Unfortunately, it’s still not in a state where I’d be comfortable for others to use. Apart from the missing documentation, the web interface is still work-in-progress and there are some breaking changes to the API I’d like to make.Plans for 2022Be with my kids.They’re in a lovely age right now.Finish my book project for real.This includes making the e-book, some blog posts about the process, integrate with BitPal to sell digital copies and everything else to completely wrap-up the project.Exercise &amp; health focus.I will eat healthier.I will continue working with my strength coach.I will exercise up to 5 days a week (weight lifting + grappling).(I’m working on converting these toSMART goals. We’ll see how that goes, maybe I’ll make another post about them, but maybe not.)Published:January 10,2022ine70aaecTagged:Yearly ReviewPreviousNext</description>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The T-34/1 keyboard layout</title>
      <link>https://www.jonashietala.se/blog/2021/12/15/t-34-1</link>
      <description>The T-34 keyboard layoutThe T-34/1 keyboard layoutPublished:December 15,2021Revised:November 25,  2024in4fe6ab0Tagged:Computer,Keyboards,Keyboard layouts,T-34This is part 3 of theThe T-34 keyboard layoutseries.Seethis postfor a full reference of how the layout looks at the moment.This is the revision of theT-34keyboard layout that I use as my primary driver. I’ve used this particular version without any major changes for almost 3 months, so I’d say it’s a good improvement over the last revision.There are two large changes fromT-34/0: swappingoandRepeatand preferring modifiers on combos overcallum-style mods.Swap O and RepeatI do like theRepeatkey, and although I tried to find a good place for it, having it on the same finger asa,(and.is not ideal. Even thoughaaand((aren’t common, havingafollow a double consonant—such as in the Swedish wordfalla(to fall)—is.So I tried to swapoandRepeat, placingoon the top row andRepeaton the home row, but on the little finger:Base layerBecause I don’t press.with the pinky,Repeatis only shared with a single key:_, which is great!Of course, there are some trade-offs with it:When I code and type names like__MODULE__orcall_fun, I sometimes have SFB with the pinky (which is very uncomfortable). Adding a long-press to_for__helps a little.You might wonder then why I don’t swap,and_? Two reasons:,is much more common than_, and I would instead get SFB from things likefall,, which is not a good trade-off.On my Swedish layer,_is changed toö, but I still want,when I type Swedish soöwould get a very weird position.Repeatis stillon the top rowon the numbers layer, which breaks symmetry and hurts learning.My right pinky is by far my weakest finger, and sometimes I want to pressRepeata lot of time in succession (to repeatCtrl-nfor instance).Movingoaway from the home row is unfortunate as it is one of themost common keys. It’s not the end of the world though asRepeatis alsoquite common, theaobigram isn’t that problematic, and rollingiois still okay. It also makes theouroll great.But all-in-all, after 3 months of feeling it out, I think this change is a large improvement.ModifiersAnother thing I’ve been slightly annoyed with is mods. I’ve been usingcallum-style mods, where you essentially press the inner thumb key and then a mod on the home-row. There are no timings here, so you can tap them as quickly as you can.This does feel great timing wise, but for me the tucking of the thumb to reach the inner thumb key feels awkward and uncomfortable. Especially for my right thumb, where I’ve been having pain issues for the last year or so.(And when I sayinnerthumb keys, I meanSHRT RSYMandMOD LSYM, notSpaceandEwhich are super comfortable.)Modifiers on combosSo I started thinking of alternatives, and as I have a hard-on for combos and I use them everywhere, why not place mods on combos?I did use a keylog when I started creating the layout, but it didn’t tell me much modifier wise;Shift,CtrlandGuiall had about the same amount of usage, and for some reasonAltwas never registered. Instead, I used mydotfilesand usedthe forcefelt out a modifier ranking:Ctrl. Even though I use Vim, where you preferjandkoverCtrl-nandCtrl-p, I do have a lot ofCtrlkeybindings I use on a daily basis.Gui. I useGuias my window manager prefix (to change windows, workspaces, open a terminal etc). A dedicated mod key isn’t as important as I havededicated navigation layers, but still.Ctrl+Shift. Although I’ve tried to reduce other key combinations, I still use it occasionally (copy/paste from terminal for instance). This really isn’t required, but it’s a small quality of life.(Confession time: as I’m writing this post I realize that myCtrl+Shiftimplementation is completely broken and has never even worked. Guess it wasn’t so important after all.)WhileShiftwas (slightly) the most used modifier in my keylog, I’ve moved on toauto shiftso it’s not at all important. There’s still some usage for it, for instance toShift+ mouse select in file browsers, so it’s good to have especially on the left side.Everything else. I don’t useAltin any Vim command, but it still needs to be available (to open the browser menu for instance). Ideally I’d like to freely combine mods in weird ways if some program requires it.I already have a lot of combos, so it was a bit of a struggle to find good positions, but here’s what I ended up with:TheCtrlcombo isslightlyawkward with the home/bottom split, but it’s not too bad. Maybe it would be better as a home-row combo, but I’m very happy with the combos I have there…Other mod combinationsI still have the same modifier setup on the right-hand side, allowing me to easily make whatever modifier combination I need:Mods &amp; symbolsCommon shortcutsWith mods out of the way, we can now have a shortcut layer on the left side:Shortcuts &amp; symbolsThe idea is to have the common shortcuts reachable with the left hand so I can use mouse-required software conveniently. I only really need the keys that are on the left-side in qwerty and on the right side in my layout (w,e,aandx), but I added others as well to make them slightly easier.Am I thrilled about the layout of the shortcuts? No, but it has worked well enough for it’s purpose.As forRepeat, it takes the same place on the pinky as on the base layer, and^takes the top row as the old combo location has been taken by a modifier.Future experimentsWhile I haven’t made any changes to the layout for a while, I’ve been keeping notes of ideas I get of or things that annoys me. And here are the big things I’d like to try when I have the time and energy to play with:Swap num/sym thumb combos.I currently haveleft thumb+key=symbol, but I’m still tripping up sometimes as the symbol layers are triggered with the opposite thumb (holdright thumb=left side symbols). Therefore I’d like to tryopposite side combo=symbolto see if my brain parses it better.More advanced tap/hold combos.I still don’t like the inner thumb keys, so I’d like to try activating layers by holding combos instead. Just some ideas:TapHoldTabCtrlEscapeSymbols on the right:Symbols on the leftEnterCtrl;Mods on the right hom-rowNote that these are all home-row combos, and this change would almost completely free up the inner thumbs for other (less used) things.Try outpandxas combos.They’re in the worst spot (well, except the inner thumb keys) so I’d especially like to movepaway from it. And as I already use combos for most things, why not trypandxas well?Instant leader keys for options.I do have separateSPECandOPTlayers, for things toggling a persistent numbers layer or to typeé, but I use them so rarely that I tend to forget their positions.Aleader key, is a nice idea as you can use several keypresses to trigger a single function. For instance you can have:SequenceActionLeadertnToggleNumber layerLeadertcToggleCaps lockSo to toggle numbers you only have to remember the mnemonicToggleNumber to remember the sequenceLeadertn.I have triedQMK’s leader keybefore, but with little success. It’s based on timeouts, which I for some reason found really difficult to consistently trigger (and they took a lot of memory too).But there is auserspace leader sequencethat I’d like to try instead, which seems like it would solve the timing issues I had.If you’re interested, theQMK code is on GitHub. But beware, there be dragons.This is
      part 3 of theThe T-34 keyboard layoutseries.The T-34 keyboard layoutThe T-34/0 keyboard layoutThe T-34/1 keyboard layout←The T-34/2 keyboard layoutI designed my own keyboard layout. Was it worth it?Read the next partPublished:December 15,2021Revised:November 25,  2024in4fe6ab0Tagged:Computer,Keyboards,Keyboard layouts,T-34PreviousNext</description>
      <pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The T-34/0 keyboard layout</title>
      <link>https://www.jonashietala.se/blog/2021/09/05/t-34-0</link>
      <description>The T-34 keyboard layoutThe T-34/0 keyboard layoutPublished:September  5,2021Revised:November 25,  2024in4fe6ab0Tagged:Computer,Keyboards,T-34,Keyboard layoutsThis is part 2 of theThe T-34 keyboard layoutseries.Seethis postfor a full reference of how the layout looks at the moment.This is an update to theT-34keyboard layout I’ve been using for a solid number of weeks. While there are more changes I’d like to try, I’m quite pleased with these changes so I figured I might as well immortalize them before I explore further. (And I do have a bunch of big changes I want to experiment with.)The repeat keyThe big change to the layout is theRepeatkey. The concept is simple: when you press it you repeat the last pressed key.The first usage I’m aware of is theISRTlayout which the repeat key to lower the same finger usage. So for example to type “call” you’d typecalRepeat, avoiding the double click onl. It’s not as bad as pressing a key on the home-row and then a key on the top-row with the same finger, but it’s still annoying (especially with the pinky).So how common is theRepeatkey? I tried to use my code corpus to see:The green bar represents the frequency of each character and the red bars the frequency of a repeated character.ℛis the sum of all the double characters.While theRepeatwould be useful, it does not qualify into the top 10 and so it does not out competeSpaceoreas a thumb key. (Spaceisn’t listed in the graph sodcomes in at 10th place.)But it’s usefulness isn’t only in minimizing SFB, as it can easily repeat difficult keys as well. For instance I have many two- or three-key combos, and double tapping them arenotpleasant. I tried to solve this by holding them down to simulate double or triple taps, but with a repeat key I can just docombo+Repeat. Feels good!Or I can repeat modded keys. For instance to exit Elixir’s REPL IEx you need to doCtrl-ctwice. I don’t like to hold down layer keys (I use one-shot layers and mods instead) so to typeCtrl-cI pressMod,Ctrl,c, with no pauses. To do this twice I would either need 6(!) keypresses, or using hold:Mod,Ctrl(hold),c,c. With the repeat key it’s 4 taps, without any holds:Mod,Ctrl,c,Repeat.Of course you can repeat whatever you like, such asCtrl-Shift-TaborShift-Gui-c(close window in XMonad) as well.SoRepeatseems like a good idea—as long as we can find a nice place for it.Base layerLegendBase layerThe changes from theprevious version:Introducing theRepeatkey caused a bunch of changes to the layout:Introduce theRepeatkey itself.Swapa/Repeatandi/u.This was a change I made even beforeRepeat(with.in it’s place). It was a suggestion from/u/phbonachion Reddit, asuandiwas much more common so they should go on the stronger middle finger.This doesn’t hold as much withRepeat, but havingRepeaton the middle doesn’t work well as it’s awkward to presslwith the index and thenRepeatwith the middle, which is the most common double bigram.Rotate.,,..is the more common, so it goes in the more convenient spot.Move"and=to combos, and place/on base.It’s true that"is more common than/, but now takes a relatively convenient combo on the home-row./is used a lot in paths, which caused a bunch of issues with it’s previous three-key combo placement.To make room forRepeat, I had to move another symbol away from base. I chose to move=to a combo, as it’s not that common (I have other solutions for=&gt;,!=etc), and the combo is still convenient for the main use-case of = .Repeatalso takes care of==nicely.The big decision point is where to placeRepeat, the other changes more or less fall out afterwards.Easiest would be to place it on a primary thumb—but it’s not even close as frequent asSpaceoreis. It might work on a secondary thumb, but that requires me to rework my mod and symbol setup, which I’m not keen to do. Moving to the secondary thumb key is also quite slow, making it unsuitable forRepeatas I need to be able to press it quickly.Repeatis also not quite frequent enough to warrant a position on the home-row for me, but it should be in the home-box (as in not on the edges).I think I found a decent position sharing finger witha)and.(yes I press.with the ring finger). It’s not perfect, as words such asfalla(to fall) cannot be typed comfortably withRepeat, and I have to double tappingl(or worseRepeatthena, which my brain wants to do). Still, neithera,.,u,inor(are commonly followed byRepeat, so in practice it works out decently well.There’s another change I made that’s unrelated toRepeat, that aims to fix some issues I complained about in myprevious writeup:Rotatey,k,j,p.To havejandk(up/down in Vim) in slightly better positons and to fix the troublesomesysandbjpairs. Unfortunatelypgets shafted a bit.CombosI’ve added or altered some ofthe combosas well:I’ve added aqucombo asqis almost always followed byu, and I moved theqcombo off to the side."is now a home-row combo (mirroring the'combo on the right-hand side) and;got the three-key combo as it’s slightly harder to press than the combo for".=is now a combo on the top row instead of on the base layer. Looks a bit weird at first glance, but it’s surprisingly convenient.I’ve been playing around with aReverse Repeatkey (see below).Reverse repeatOne use-case I have withRepeatis to typeW(shifted w) repeatedly. In Vimwjumps to the beginning of the next “word” andWto the beginning of the next “WORD” (a WORD jumps over special characters such as-or_). For code I find thatWis super useful, but usingauto shiftto repeatedly type shifted characters isincrediblyannoying (hold down until the shifted variant appears). Therefore I useW(auto shift)RepeatRepeat…But sometimes I jump too far, so I’ll go back withB(again using auto shift). Or I’ll doCtrl-d(half screen down) and I correct withCtrl-u, orPgDnand correct withPgUp, orCtrl-oandCtrl-i, or … You get the point.This is how the idea of theReverse Repeatkey was born. It’s a key that moves in the opposite direction ofRepeat(mostly in Vim context). So instead ofPgDnRepeatRepeat(oops, too far)PgUpI’ll doPgDnRepeatRepeatReverse Repeat.Here’s a list of some of these “repeat pairs” that I’ve found useful:AB PgUpPgDnCtrl-fCtrl-bCtrl-uCtrl-dCtrl-oCtrl-iEasily my most used pairCtrl-nCtrl-p*#WB{}Gui-kGui-jThis may sound fine and dandy, but if I’m completely honest, it’s absolutely nothing groundbreaking. I might use it once per day or something—and when I do it feels great—but it would be easy to live without.SymbolsThe changes tothe symbolsare to move@,.,,,",/,=andRepeatmirroring the changes to the base layer.Left mods &amp; symbolsRight mods &amp; symbolsNumbersThe changes tothe num layerare again to mirror the changes to the base layer.Num layer, gray keys turns of the NUMWORD temporary layerIn Vim you can type20kor13jto move up 20 lines or down 13 lines. Having the number layer turn off afterkorjis therefore very convenient.xdoes not turn off the layer, so you can easily type800x600or similar.I won’t list it here, butjandkare also moved in theworkspace nav layer.Tap holdI am a happyauto shiftuser, where you hold down a key until the shifted variant appears. While I use theqmkfirmware, I have my own “tap hold” implementation with some extra features:Variable per-key timing.The standard implementation has one timing for all keys, which I found was super annoying as my pinkies are slow—leading to a high timeout setting to avoid accidental shifts—but then shifting would be annoyingly slow with the other faster fingers.Right now I use a 100 ms timeout for the index and middle finger, but a 135 ms timeout for the pinkies.The other big feature is a customizable hold action.While auto shift only shifts the underlying keycode, you could send whatever you want. I currently use it to simplify the input of some programming constructs:TapHold | || One hold saves 4 key strokes for these common operators&amp; &amp;&amp; = == ! != @@uVim: Execute macro stored inu(matching thequcombo)?{:?}Rust debug print#{:#?}Rust debug pretty print%%{}A map in Elixir(I previously used this feature only to input double or triple symbols.)Interopability with CAPSWORD/NUMWORD,Repeatand the ability to shiftåäö.What do I dislike?pis intheworst spot on the keyboard, and it’s not that rare to deserve such a bad position. (In fact I might ditch that key position completely, as it’s the only position I have to move my entire hand to reach.)Havingspacecombo all symbols is a bit weird as the left mod only covers symbols on the right side, and it messes up my head. I’m considering to change so thatspace+ key on the left = number andspace+ key on the right = symbol, and the reverse fore.Repeatbeing on the same column asaand5isn’t ideal. The next thing I’m going to try is turning aRepeaturoll intoRepeata.The!combo is a bit awkward as the index and thumb come very close together.And now, with this post out of the way, I can start the next round of experimentation.If you’re interested, theQMK code is on GitHub(now using the 34-key Ferris).This is
      part 2 of theThe T-34 keyboard layoutseries.The T-34 keyboard layoutThe T-34/0 keyboard layout←The T-34/1 keyboard layoutThe T-34/2 keyboard layoutI designed my own keyboard layout. Was it worth it?Read the next partPublished:September  5,2021Revised:November 25,  2024in4fe6ab0Tagged:Computer,Keyboards,T-34,Keyboard layoutsPreviousNext</description>
      <pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The T-34 keyboard layout</title>
      <link>https://www.jonashietala.se/blog/2021/06/03/the-t-34-keyboard-layout</link>
      <description>The T-34 keyboard layoutThe T-34 keyboard layoutâ˜Published:June  3,2021Revised:November 25,  2024in4fe6ab0Tagged:Computer,Keyboard layouts,Keyboards,T-34This is part 1 of theThe T-34 keyboard layoutseries.Seethis postfor a full reference of how the layout looks at the moment.ContentsThe journey is long and full of perilMy preferencesSome armchair analysisSymbolsDigitsLettersThe layoutBase layerCombosWhat about shift?Mods &amp; symbolsWhere are the digits?NavigationFunction layerSwedish overlayOptionsSpecials34 keys are plentyIs this the perfect layout?How did you implement this?A couple of months ago I started looking into ergonomical keyboards; mainly split keyboards with much fewer keys, like the36-key Gergoplexand the44-key Kyria. I may write another post about the reasons why, but long story short I started getting pain in my thumbs, fingers, wrist and forearm, and I thought it was time to do something about it.Because my new shiny layout has been unchanged for more than a week, Iâ€™ve clearly found my Ultimate Layoutâ„¢ and itâ€™s time to immortalize it with a blog post!â€¦ Best get comfortable, this is a long post.T-34/57 prototype. Because any self-respecting layout needs a nameâ€”and tanks are awesome.(To be completely transparent, Iâ€™ve made a few changes to it during the time it has taken me to write this post. And Iâ€™m sure, the tweaking will never stop.)The journey is long and full of perilWhen you start looking at it, there aretonsof good and interesting layouts. For exampleDvorak,Workman,Colemak Mod-DH,Hands Down,MTGAP 2.0, BEAKL (many variants) and many othersâ€¦They all have their pros and cons, and which one you prefer is highly subjective. At first I choseBEAKL 15, mostly because I liked the discussion on the now defunct BEAKL forums, and I had some strain on my right pinky that I wanted to minimize.Although the layout felt much better than QWERTY, after trying out a bunch of modifications, Iâ€™ve since moved away from BEAKL. At around 50 WPM I got increasingly annoyed at the high same finger usage (called SFU) and I found that I wanted to use my pinkies more than BEAKL was designed for, which could be used to address the high SFU.The breaking point came when I read an article about the benefits ofE on one of the thumb keys, which made me abandon BEAKL and try something else.My preferencesThe keymap is optimized for me and my quirks:Comfort above speed.For me I can comfortably reach 34 keys (2 thumb keys per hand), and I use very light choc keys that makes combos very comfortable.Minimize pinky movement.Iâ€™ve always used my ring finger to press keys above the home-row pinky. Maybe I have short pinkies, I dunno. Itâ€™s also why I use a 5-column layout instead of a 6-column layout.Optimized for programming and Vim usage.A vast majority of time is spent programming in Vim.I type mostly English, but it should work well with Swedish too.I find it hard to put it in numbers how difficult/easy I think certain keys are, but itâ€™ssomethinglike this:A relative effort grid, lower is better. Right pinky and thumb have a bit of RSI.My RSI isnâ€™t that inhibiting. Just going down to 5 columns and two thumb keys fixes most of my issues. Pressing the top outer keys with the ring finger feels good.Some armchair analysisBecause it gives you the illusion that the layout is backed by science.God I miss the showSymbolsThe problem with trying to optimize for programming is that it variesa lotdepending on the language.Take for example three of my own projects: a WIP Rust implementation of Git (following the excellent Building Git), a crypto payment processor in Elixir, and thesource code for my book(mostly English, but with some Racket and other codey things):Symbol frequencies from a Rust, an Elixir and a book project.While thereâ€™s a general trend here, we see some massive outliers. Like how-is incredibly overrepresented in the bookâ€™s source (because the Racket convention iskebab-caseand I use---to represent an em dashâ€”) or how;is very common in Rust but almost non-existent in Elixir.What should we do then? We can try a keylogger to see what symbols weâ€™re typing. Hereâ€™s the results, together with a dataset of all my personal projects I could find (labeled â€œCodeâ€):Symbol frequencies during a keylog session and from a random collection of personal projects (mostly in C++).Itâ€™s not perfect either, as I didnâ€™t run the keylog as long as I should, and I only used a small selection of languages at that time.  The big outliers that come from Vim are:(I save a lot with:w),.(repeat last action),/(regex search) and$(end-of-line). I donâ€™t know why'is overrepresented in the keylog, itâ€™s not something I use a lot in Vim.One might wonder, where do the symbols appear? Are they mostly next to characters, or next to other symbols? Hereâ€™s a table of where the symbols end up, and what symbol bigrams they appear (ignoring double symbols like||), using the Code source:CharCountNext to letterNext to symbolCommon bigrams,22093031.22%12.23%),",},],_,_16904886.21%4.89%_,(__})15861424.11%29.00%);()),")])}))}).(15859866.06%19.71%()("(:!((&amp;(%?(({([:13258043.62%12.95%{:(::/`:[:.12981872.88%5.98%)."10561824.83%27.41%",")(""]"%=730901.95%13.92%&lt;=&gt;==&gt;{6906823.20%28.68%{:%{#{]{{}({}6906020.28%24.41%},}))}{}]}_}-6707637.11%13.43%-&gt;;5591417.22%24.83%);];&gt;5417815.33%33.62%-&gt;|&gt;&gt;==&gt;/4929636.72%10.94%:/[4404246.64%28.06%[]][[:([]4399828.92%48.22%],[]])][]{]}"]];#3545612.57%17.64%#{&lt;3282831.43%19.31%&lt;=`2915827.60%20.64%`:'1857270.55%15.70%|178203.69%21.87%|&gt;+1773614.71%6.87%?1671222.64%24.49%?(%1666026.81%39.81%%{(%"%&amp;1506828.36%16.44%(&amp;@1407648.70%5.52%*1389613.02%14.72%\1023635.55%29.35%!981234.80%40.13%!($422636.63%25.01%~259632.16%17.41%^143624.23%41.23%Note that it it tracks letters on both sides of the symbol, which is why,is only next to a letter 31% of the time (itâ€™s almost always next to a space).And a plot of how common the bigrams themselves are:Symbol bigrams, for bigrams seen over 1000 timesSo what observations can we draw from this imperfect dataset? Here are some thoughts I have:Parens()are very common. Iâ€™d expect it if it was Lisp, but they seem very common even in Rust. Theyâ€™re also neighbours with many other symbols, making them a high priority.The symbols_,.,'are almost always next to an alpha character, meaning they donâ€™t have to be placed next to other symbols, and can be optimized to be easily reachable from the base layer. Iâ€™ll add,to this class as well.Brackets{}and[]arenâ€™t super common, but they do combine with many other symbols (mostly other types of brackets). Ifare used in a symbol bigram then itâ€™s mostly in arrow form, like-&gt;or&gt;=.Computation symbols like=,+and*are mostly surrounded by space, and theyâ€™re less used than I wouldâ€™ve thought.Interestingly,"and_have traditionally been on a shift layer, but here theyâ€™re much more common than their counterparts'and-.DigitsTypically digits followBenfordâ€™s lawthat says that lower numbers are more common. How does that hold up for us?Digit frequenciesFairly well Iâ€™d say. Again, the keylog displays some different results, mainly because I tend to use workspaces1,2,8and9more on a traditional keyboard (accessed withGui+ number). This can be ignored when designing the layout as I can use whatever digit is convenient.LettersLetter frequencies from the code and keylog corpus, and a large English and Swedish datasetOptimizing letters is an area where layouts have focused a lot of attention on. Some notes from my own data:Code basically follows English, which makes sense as youâ€™re mostly typing English words.There are some differences with Swedish, most notablykandrare more common (and some extra vowels of course).My Vim usage makes some unusual keys quite common. Apparently Iâ€™m aj/kspammer (up/down)â€”which isnâ€™t a good habit to have as there are more efficient ways to move vertically.wandb(forward and backwards a word) and:w(save) are used a lot. I also seem to mistype a bunch asuis very common (undo).On one hand you might want to place these keys in better positions, but on the other hand theyâ€™re often typed with a pause, after Iâ€™ve had time to think for a second or two, so it might not be important enough to warp the entire layout.The layoutOn to the actual layout then. Illustrations are inspired bythe darnedest thing.LegendBase layerBase layerThere are two different ways you can make decisions: you either take a strictly logical approach, using the left half of your brain, or you let your subconscious decide as you go by feeling, letting the right half of your brain run the show.Itâ€™s common to use a program to optimize the layout, letting the computer explore tons of layouts very quickly. I did not go this route, as I found it difficult to write down my exact preferences. Instead I based my layout onRSTHD, which is a well optimized layout, and tweaked it whenever I ran into things that annoyed me.Feel the force!YodaThese are the most notable changes Iâ€™ve made to RSTHD:eon other thumb. Feels much better to avoid having â€œhereâ€, â€œthereâ€ and similar combinations on the same hand.qandzmoved away to combos in favor of more symbols.Swapdandpas I dislike the center column and lower index is good.Swaplandwto placelon that good lower index.kis in a better spot as itâ€™s much more common in Swedish, and I use it a lot with Vim. As a bonus it makesckvery nice to type, again common in Swedish.Ireallylikeeon the thumb and I donâ€™t think Iâ€™ll ever want to give it up. The low SFU and the consonant/vowel separations also feels very good to me.And the rationale for choosing the symbols:(and)some of the most common symbols, so they got prime real estate that letâ€™s me type()quickly. As a bonus I can use them as a prefix for a lot of things in Vim. For instance)d(next LSP diagnostics),)q(next quickfix) and)s(next spellcheck error). (Nah, I never used()for their original purpose.)_is also very common, and is almost always next to letters insnake_case, so having it on base is awesome. And it doubles as a Vim prefix, for example_d(goto definition) and_h(show help of thing under cursor).Which of.and,to prioritize is a good question. I put.in a better position as itâ€™s used as â€œrepeat last actionâ€ in Vim.Some of the most common symbols that donâ€™t usually stand next to other symbols are moved to home-row combos. I find theyâ€™re easier to type than moving my fingers off home-row, so:,/,', and;were moved off base."is very common. Iâ€™ve also had/here, but I havenâ€™t fully decided which I prefer yet.=is on base as it makesâ€ƒ=â€ƒvery comfortable, which is the primary usage for it. It also makes it easy to pair with the different symbols, such as+,-and~.This feels quite goodâ€”especially(,)and_.CombosA combo (sometimes called a chord) is when you press down two keys at the same time to produce something else. For instance if I presscandkat the same time I getq. With the light choc switches I use this feels very nice, even pressing three keys or vertical combos with two keys using a single finger.I use it for lots of things. For instance:Hide the least common charsqandz.â€œBig keysâ€ on home-row:Tab,EnterandEscape(perfect for Vim!).Delete things:DeleteandBackspace.Symbols like:,'and$.Special things, like saving in Vim (:wq&lt;br /&gt;).Hereâ€™s a table (because I wasnâ€™t happy with the visualization I tried to make):Top LeftResTop RightResc+kqx+w#{ â†“ }â€ƒâ€ƒk+fzâ€ƒâ€ƒâ€ƒâ€ƒ,+uBackspacec+k+fDeleteâ€ƒâ€ƒw+,+uCtrl + W(backspace word)Home Leftâ€ƒâ€ƒResâ€ƒâ€ƒHome Rightâ€ƒâ€ƒResâ€ƒâ€ƒt+hEscapen+a:s+tTabâ€ƒâ€ƒa+iEnters+ â€ƒâ€ƒh;n+ â€ƒâ€ƒi's+t+h/n+a+iVim saveBottom Left  â€ƒâ€ƒRes  â€ƒâ€ƒBottom Right  â€ƒâ€ƒResv+gVim vsplitl+(^â€ƒâ€ƒ(+)$v+g+pVim closel+(+)Swedish layerMixedRest+a(left + right ring)CAPSWORDSpace+e(left + right thumb)NUMWORDThe rationale here is that home-row combos are very easy to type, so the common keys likeEnterand:go there. Split combos with the index and ring finger are slightly more awkward to type, but still good.Having related functionality close to each other makes it a little easier to learn, so^(goto first non-space char in line) and$(goto last char in line) pairs nicely. They, and the other combo-able symbols, are mostly stand-alone so thereâ€™s minimal switching between layers to type them.There are also vertical combos with the common arrow combinations you often see in programming:Vertical symbol combosDepending on the language, symbols like&gt;=,=&gt;,|&gt;and-&gt;are common, but often difficult to type. Combos solve this really well.Also, splitting windows in vim is something I do a lot. Horizontal/vertical splits are laid out to match the split direction, and theyâ€™re grouped next to closing a window. (Why is saving vim on the right side then? Because);is very common. Itâ€™s not perfect I know.)What about shift?Where to place shift was one of the most difficult decisions for me. I considered these options:One-shot shift, where you press and release shift and the next letter will be shifted, is great. But it doesnâ€™t vibe well witheon the thumb (and no outer column).Home-row mods, where you press and hold a regular key to turn it into shift. Many people love it, but I found it difficult to coordinate between left/right (as you often want to hold with the opposite hand).Auto Shift, where you just do a long press to get an uppercase letter. Itâ€™s convenient for single letters, but many people who have tried it says it messed up their rhythm.I wanted to use one-shot shift, but I just couldnâ€™t get it to work well witheon the thumb. I got the fiddly home-row config to work, and I think I could learn to live with it, but for me auto shift felt better.Sure, itâ€™s harder to type quickly with auto shift, but I want to maximize comfort over speed, and auto shift feels like the option requiring the least amount of effort. I do have one-shot shift keys, but on a separate layer, which I use for some shortcuts (more on that shortly).Typing multiple uppercase letters in a row does suck. Thatâ€™s why I also use â€œCAPSWORDâ€, which is a smart caps lock that turns itself off after space or some other special characters. It makes it super easy to type variables likePOST_LIMITfor example.Mods &amp; symbolsI have modifiers combined with the other symbols, across two layers:Press left button for mods on the left and symbols on the rightPress right button for mods on the right and symbols on the leftInstead of home-row mods, I have mods on a separate layer. (Some refer to it ascallum-style mods, from the person who invented/popularized it.) While you need to press one key extra to accessCtrlfor instance, there are no timings here so itâ€™s very quick and it feels surprisingly good.  Iâ€™ve kept same-side mod activation because thatâ€™s what I started with, and I donâ€™t feel a need to change it.Some shortcuts, likeCtrl+a, are impossible to press left-handed (when I use the mouse/trackball), so Iâ€™ve added them here.I tried to place the symbols ordered by frequency, in some kind of logical groupings. There are very few symbol bigrams I have trouble typing. I find itâ€™s mostly holding downLMODto type[]or similar. Iâ€™ve also kept the position of the symbols from base layer, so I donâ€™t have to switch layers if I type bigrams like]((but truthfully, it almost never comes up).While I can use the layer switches as one-shot for the symbols, I also have combos withSpace+to produce symbols from the base layer, for exampleSpace+a=[. I now use that exclusively, and relegate the layer switch for the symbol bigrams (because I dislike having to move the thumb).One last annoyance is double- or triple-tapping symbols, particularly with the pinky, for things like||. I got around it by adding long press for them, similar to what auto shift does:TapLong press|&amp;+*-_/\#Double symbol"'=`Triple symbolWhere are the digits?Here they are:Num layer, the dark gray keys turns off NUMWORDYupp, I use numbers on home-row (and the low index, which is the next best key apart from the thumbs). Theyâ€™re laid out prioritizing lower digits, slightly de-emphasizing index fingers as theyâ€™re responsible for two digits. Separating even from odd numbers made sense from an optimization aspect, but it also made it easier to learn.What makes this special is that the layer switch is smart, similar to CAPSWORD as the layer turns off on space (which I call NUMWORD). So if I want to writeifx==3dothen I typeif x == 3 doand the layer turns off after the space.What aboutk,jandG? Those are for easy navigation with Vim. So13kmeans â€œ13 lines aboveâ€ and127Gmeans â€œline number 127â€. Naturally, the layer turns itself off, so it doesnâ€™t interfere with my next commands. I use it all the time and itâ€™s fantastic.NavigationNavigation, both two handed and one-handedNavigation is the only â€œhold key downâ€ I have. Vim-like arrows on the right side (but I try not to use them in Vim, as jumping with the NUM layer is more efficient).Ctrl+ arrow is used to switch windows in Vim andGui+w/e/rswitches between my three monitors (itâ€™s here because itâ€™s so common).Navigation on the left hand is great when I have the right hand on the mouse; initially I didnâ€™t have arrows here, but I found myself missing them.Ctrl+TabandCtrl+Shift+Tabswitches tabs in Firefox.I also have a workspace navigation layer, used exclusively for workspace manipulation:Workspace nav layer. All keys haveGuiimplicit.Gui+ number switches to that workspace;Gui+k/jswitches between windows; and if youShift(long press) you move the current window there.Having a separate layer for this isnâ€™t strictly needed, but it feels much more convenient.  I tried the regular one-shot mods and home-row mods on the number layer, but I just didnâ€™t like it that much. I also tried a smart layer or a simple layer switch (where I had to exit the layer explicitly), but I prefer having to hold down a key so I know that Iâ€™m in the workspace layer.Function layerFunction keysNothing special going on with the function keys. Having them on the same positions as numbers makes them easy to learn, which is important for me as I almost never use them.Swedish overlaySwedish overlayAs a Swede, I do type Swedish from time to time. But I never type code and Swedish at the same time, so it made sense to have a Swedish mode that I can toggle, for example when I need to write an email or similar.It replaces(,)and_, as theyâ€™re mostly used in code, andÃ¥Ã¤Ã¶are practically never used next to the vowels, making the layout very pleasant for Swedish as well. The layer is is activated withl+(+)(and deactivated with the same keys).  I can still access the symbols with the one-shot layer on the left thumb or with combos likeSpace+Ã¥=(.OptionsOptionsI have some runtime options I might occasionally want to access:On a regular keyboard and on my laptop Iâ€™ve hadEscapeandCaps Lockswapped (to make it easier to press in Vim). I can toggle it on the keyboard so I can use it there as well.I donâ€™t currently have anything that differs between Windows and Linux I donâ€™t think, but things like window switching works differently. When I go back to working on Windows Iâ€™ll probably make use of this.NUMtoggles a regular number layer, that donâ€™t deactivate onSpace, which I  use when I practice number typing.SpecialsSpecial charactersThereâ€™s plenty of room here for rare, but useful, symbols. Such as the arrow symbolsâ†‘and dead key modifiers.The pink keys are called â€œdead keysâ€. A dead key is a sort of prefix to modify a symbol, so to typeÃ£you press~(dead) +a. The^combo is also turned into a dead key on this layer.You might say itâ€™s ridiculous to have this kind of layer, but I think itâ€™s very easy to learn with the keys staying in logical positions (dead`has the same position as the normal`for instance).34 keys are plentyIf youâ€™re not into tweaking layouts it might sound crazy with only 34 keys (and maybe it is), but I still think thereâ€™s plenty of space here:With layers you multiply your available space, making it easy to have arrows, numbers, function keys and symbols right under your fingers.Combos will in practice give you access to even more keys than a regular keyboard.Multi function keys, with long press or double clicks (which I donâ€™t even use), combined with combos and layers gives you more available space than youâ€™ll ever need.I could easily fit much more functionality into my layout if I needed to. The constraint isnâ€™t spaceâ€”itâ€™s your ability to learn and get proficient with a complex layout. (And I donâ€™t think itâ€™sthathard to learn a new layout, but thatâ€™s a topic for another day.)Is this the perfect layout?Oh, thatâ€™s funnyâ€¦There are always things that could be done better. Here are some things that currently annoy me:As I press the outer top keys (yand,) with my ring finger, â€œsysâ€ is terrible to type as itâ€™s three letters in a row with the same finger.Iâ€™ve tried to address this by movingyandj, but everything Iâ€™ve tried so far has created larger problems. So maybe Iâ€™ll shove in a combo to produce â€œsysâ€ and call it a day?bjis crazy annoying. It gets worse if I program in a codebase that usesObjectall over the place.jis in the worst spot, even though I use it a lot in Vim.Triedjas combos, but I liked that even less. At first I actually used theNAVlayer, but I got annoyed at the extra layer switch and I had some misfiring due to timing issues.Iâ€™m not 100% content with the symbols layer, and Iâ€™ll probably try to move some symbols around a bit.And there are a bunch of things that arenâ€™t optimal, but at this point Iâ€™m hitting diminishing returns, so Iâ€™ll try to avoid changing things unless itâ€™s something that really bothers me.How did you implement this?I use QMK andmy keymap is on GitHub.This is
      part 1 of theThe T-34 keyboard layoutseries.The T-34 keyboard layoutâ†The T-34/0 keyboard layoutThe T-34/1 keyboard layoutThe T-34/2 keyboard layoutI designed my own keyboard layout. Was it worth it?Read the next partPublished:June  3,2021Revised:November 25,  2024in4fe6ab0Tagged:Computer,Keyboard layouts,Keyboards,T-34PreviousNext</description>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why Cryptocurrencies? is now available in print</title>
      <link>https://www.jonashietala.se/blog/2021/05/31/why_cryptocurrencies_is_now_available_in_print</link>
      <description>Why Cryptocurrencies? is now available in printPublished:May 31,2021Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?Today is a big milestone for me, as this marks a big milestone in the biggest personal project I’ve undertaken.My book ‘Why Cryptocurrencies?’ is released in print today! It’s my attempt to explain what cryptocurrencies are and what problems they solve, in a simple and approachable manner.I’ve been working on the book in the openon GitHubandthe first recorded commitis from Dec 19, 2018, with a chapter outline. 1237 commits later, and a bunch of work outside that, and the book is now Done™. (Only a year after myblog post saying it was done…)If you want to check it out, you canread it online for freeor you canbuyit from wherever you buy your books.What’s next?I need to check the formating for the eBook, so it looks ok on as many platforms as possible. And then work on myself-hosted payment processor, which I’ll use to sell the eBook on my site for crypto. (I’ll be sure to make it available on various eBook platforms too.)I’m planning to write a couple of blog posts detailing how I made the book and some lessons or tips I have for aspiring writers:How I made an online book with Lisp.How I worked with a designer to create the cover.How I did the interior layout for my self-published book. (planned)Converting my online book to epub. (planned)Writing lessons learned after writing a book. (planned)I self-published a book—was it worth it? (planned)After that, I can finally archive the book project as done.Published:May 31,2021Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How I made a kick-ass cover for my self-published book</title>
      <link>https://www.jonashietala.se/blog/2021/05/10/how_i_made_a_kick_ass_cover_for_my_self_published_book</link>
      <description>How I wrote 'Why Cryptocurrencies?'How I made a kick-ass cover for my self-published bookâ˜Published:May 10,2021Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?This is part 2 of theHow I wrote 'Why Cryptocurrencies?'series.If you want to publish a book, one of the most important things to consider is the coverâ€”after all, we judge the book by the cover.And I did it the universally recommended way:I hired a designer.Simple, right?But real talk; itâ€™s not exactly that simple and I did a bunch of work to get a cover that Iâ€™m very happy with (scroll down if you just want to see the cover). This post is an attempt to gather the things I did, and I hope itâ€™s helpful for you if you want to create a cover for your own book.PreparationsBefore contacting a designer I compiled a document with things that the designer might need. It contained these things, in as much detail and clarity as I could give:Idea(s) for the coverThe feeling I wanted the cover to invokeThe art styleTarget audienceImages used in the bookExample of book covers in the genreInformation on the book, such as print or ebook and the book dimensionsYou might think this is overkill, but all the designers I contacted were deeply impressed by it, and I was told it was immensely helpful in producing the cover and saved us a lot of time.I had a pretty clear idea of what I wanted for the cover. It was a complex illustration, which is much more expensive than a simpler cover, but I liked the idea too much to throw it away. This is how I described it in the initial design document:While it should be clear that itâ€™s a book about Bitcoin you should also be able to look at the cover and identify some of the topics I bring up in the book. Something that reveals more details and references the more you look at it.My idea is to have a picture of a city street, with shops and signs on both sides. Something like this:And in the middle should be a person with a mobile phone that shows an image with a Bitcoin logo. The person is confused and doesnâ€™t know where to go and what the different things on the street are.I like the cyberpunk aesthetic, but the cover should of course be less messy.And then a long list of ideas for what could be seen on the street. We scrapped most of them, even some of my favorites such as an S&amp;amp;M couple walking on the street, but they helped guide the process from beginning to end.The point of this exercise is to give the designer the tools to create a cover that matches what you want. The designer hasnâ€™t read your book, so you must somehow transplant whatâ€™s in your head into theirs, and I think a design document like I created is a pretty good start.Hiring a designerI looked for designers in two places:Recommendations from reddit viar/selfpublish(a subreddit focused on self-publishing)Contacted people who uploaded cool illustrations on reddit, and asked if they designed coversI contacted a bunch of them, and ultimately choseBrad Larkfor two reasons:I liked his art-style (otherwise I wouldnâ€™t even have bothered)He proposed an iterative process, where I paid in increments instead of a large clump sumThe others I contacted wanted to be paid everything upfront, or half before we start and half when we finish. Iâ€™d be totally fine with that approach too, but they asked for $2,500 or $3,500 while Brad wanted an initial $350 and then weâ€™d work from there. Avoiding the large initial investment was the decider for me. (The final cost landed at $1,754, which included the front, the spine, the back, typesetting and print setup.)Now you might wonder, is a cover really that expensive?No, you can get a standard cover much, much cheaper (and it might very well be the better financial decision for you).  But complex illustrations like the one I wanted are very time consuming, and thus, expensive.Working with the designerDonâ€™t think that weâ€™re done just because weâ€™ve prepared an initial guiding document. Most of the effort was spent giving feedback and planning the next iteration, with +70 emails going back and forth until we arrived at the end result (longemails, some as long as the initial design document itself!).Like with software development aniterative and incremental processbeats out astatic waterfall-like processevery time. It works by the designer providing a sketch (or several), and we give feedback and plan for the next iteration where the designer continues to improve until we arrive at something weâ€™re happy with.(Incidentally writing a book is also an iterative process, but more on that in a later blog post.)I think an iterative process is so important, that if your designer doesnâ€™t want to work this way, then you should find someone else.How to give feedback is an art in itself, here are some concrete things I focused on when receiving a sketch or a draft:What did I like?What didnâ€™t I like?What am I unsure about?And for the above,whydo I feel this way?Concrete next actions to take (one of the most important lessons Iâ€™ve learnt from theGetting Things Done methodology)For example â€œI like the birdsâ€ isnâ€™t as good as â€œI like the birds because they give a nice dystopian feelingâ€, which lead to us adding a bunch more details that strengthened the dystopian cyberpunk vibe.But sometimes itâ€™s very difficult. In the first drafts, I didnâ€™t like the person in the middle. I couldnâ€™t really explain whyâ€¦ Maybe it didnâ€™t feel finished? But when pressed I had to settle with â€œI donâ€™t knowâ€.Donâ€™t worry about hurting feelings or settling on something youâ€™re not completely satisfied with; the designer should be a professional and as long as youâ€™re respectful and your feedback is focused on concrete things, there shouldnâ€™t be any issues.Email communicationBecause all our communication was over email, I wanted to dedicate some time to the art of writing effective emails (which with the prevalence of remote working might be one of the most important skills you can focus on).I have some simple rules I try to follow, and theyâ€™ve proved to be very effective:The purpose of the email should be very clearIt should be clear for any reader if the email is specifically targeting themIt must be clear what actions needs to be taken, and by whomWhile the first two arenâ€™t very relevant for this case, the third is very important. After the email, the designer should know what changes should be made and have received enough information to move in the right direction (but follow-up emails and clarifications should be expected).Concretely after receiving a new draft, I would write an email looking something like this:Hey, some good progress here and Iâ€™ve left some feedback and a plan for the next iteration.What I likeI think the stance/posture of the person is good, and the confusion is very clear.â€¦What Iâ€™m unsure aboutI appreciate the â€œinsert cardâ€ sign on the toilet, without it there wouldnâ€™t be much point. But is it readable?â€¦What I dislike and what we should changeToo much neon. I think Iâ€™d like more details on other elements that are more in the dark/grungy/depressing/dystopian style? Maybe like the sky or the street? The colored windows work well here, and so does the sidewalks.â€¦Ideas for next iterationA bankIn true cyberpunk fashion banks and megacorps are evil. I donâ€™t know how to convey this well though?â€¦Concrete steps for next iterationRework the â€œdislikesâ€ mentioned aboveNeon (make it more gritty)â€¦Add some street level shopsâ€¦Yes, this kind of email can be very long, but itâ€™s important not to be verbose. Write enough to get your point across, but not more. Sometimes a â€œI paid the invoice, could you please confirm?â€ is good enough.From the first to the second iterationWhile we did four iterations, the transformation from the first to the second was pretty impressive.The initial sketchMy initial reaction to the initial sketch wasâ€¦ Not that good. Iâ€™m not sure what I was expecting, but it was somethingmore.Still, I took a long hard look at found a number of things I did like, and a long list of things I wanted to change and add, and had a long email conversation of how to proceed. After what felt like a long wait (but in reality wasnâ€™t) the next sketch felt completely different:After extensive feedback and a number of brainstorm/planning back and forthsImpressive!I guess the lesson here is that itâ€™s fine to feel disappointed at first, but an iterative process and effective communication can do wonders.The end resultThe final coverThe cover looks great in real life tooOverall, Iâ€™m super happy with the cover and Iâ€™ve gotten a ton of praise for it. Iâ€™m not sure if it was a wise financial decision to spend that much on a cover, as itâ€™s likely I wonâ€™t sell enough books to cover the cost, but I canâ€™t complain about the end result.Still, there are some things I wouldâ€™ve done differently. We did a last round that included adding a title on the front, on the spine and text to the back of the book. But the text layout is something I couldâ€™ve done myself, especially as Iâ€™ve done some adjustments afterwards myself.The book itself? Itâ€™s calledWhy Cryptocurrencies?and I plan to release it at the end of May. Itâ€™s also available toread online for free.This is
      part 2 of theHow I wrote 'Why Cryptocurrencies?'series.How I wrote a book using PollenHow I made a kick-ass cover for my self-published bookâ†Writing lessons learned after writing a bookHow I did the layout for my self-published bookRead the next partPublished:May 10,2021Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Getting the book into my hands</title>
      <link>https://www.jonashietala.se/blog/2021/04/22/getting_the_book_into_my_hands</link>
      <description>Getting the book into my handsPublished:April 22,2021Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?Around a month ago I placed an order for a reference copy of my upcoming bookWhy Cryptocurrencies?. I took the cheapest shipping option at IngramSpark, without tracking and, apparently, without customs declarations as it got stuck in customs for several weeks.But it’s here now!It’s here! It’s real!There’s something special of having worked on something for more than two years and finally getting the result in your hands. Somehow, it makes it all feel real.Also, while my parents, my girlfriend and her parents know that I’ve been writing a book, they were quite surprised and impressed when I showed it to them. I think that’s a good sign?Irrefutable proof that I made this bookI was very worried that the images in the book would be blurry. They’re supposed to be at least 300 PPI, but I had accidentally made some of them in 72 PPI. The images are hand-drawn using a digital pen inKrita, so they weren’t vector based either, which in hindsight might have been a good idea. I tried to upscale the images, but on the computer some of them looked a little blurry, so I was sure I had to recreate them.But I didn’t have to worry, the images looks good. Some even looks great!My camera skills don’t do the images justice—they look very good in real lifeYes, flexing like this is the real reason I have a split keyboardOne funny thing about IngramSpark is that colored books cost almost the same as black-and-white books. So we can get some sweet syntax highlighting as well:It’s really annoying that publishers of many programming books only publish in black-and-white. It’s unfortunate that this is theonlyexample of syntax highlight in the entire book, but it does look great. My next book, if I ever write one, will be full of code examples so I can show traditional publishers how a programming book should look like.So does this mean that the book will finally release?While I don’t have to rework the images, which would’ve been a large time sink, there are minor adjustments I need to do. I also need to re-read the book from cover to cover, to ensure that it looks as good as I can possibly make it.The plan was to release in April, but due to the shipping delays I don’t have time to make these changes, so I’ll have to postpone it into May.Pre-order or read the book here!Published:April 22,2021Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Coinparty hackathon, take two</title>
      <link>https://www.jonashietala.se/blog/2021/01/12/coinparty_2021</link>
      <description>The Coinparty hackathon, take twoPublished:January 12,2021Revised:January 21,  2021in86864cbTagged:Coinparty,CryptocurrencyIn DecemberI declaredthat I would enter aBitcoin Cash hackathonand I was excited to give my procrastination a kick in the balls. Unfortunately the hackathon was postponed to January just an hour later. Maybe the organizers didn’t think my project was exciting enough or something? Oh well.It’s January and I want to give it a try again! This time I got my friend to join me, but otherwise the project is the same.The article I wrote last timeis still relevant, so you should go read that.Link to the devpost pagewhere we’ll try to post some updates.Published:January 12,2021Revised:January 21,  2021in86864cbTagged:Coinparty,CryptocurrencyPreviousNext</description>
      <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2020 in review</title>
      <link>https://www.jonashietala.se/blog/2021/01/04/2020_in_review</link>
      <description>2020 in reviewPublished:January  4,2021Revised:January  5,  2021in70ddb77Tagged:Yearly ReviewAnd so 2020 has come to an end. On a global scale it’s been quite a horrible year, and for me personally it’s been both good and bad. Luckily we haven’t been directly affected by COVID too much, but it’s still been very disruptive. Either way asI’ve done for years nowit always makes me feel better to do a little yearly review, as when I sit down in write it down I’ve always done more things than I first realize.2020 Non-Geek AchievementsWe got another child.They’re both so wonderful and I wouldn’t trade them for anything.Read or listened to some books.DuneandBad Bloodare the ones I remember the most.Read a bunch of light novels.There are many good ones, and to be honest I don’t remember all the ones I read.Second Coming of GluttonyandReturner’s Magic Should be Specialare two of my all-time favorites.Started a Grappling club.2020 Geek Achievements“Finished”my book.Although there’s a bunch of things left until I can truly call it complete, I’ve finished all the chapters at least.Wrote some Rust.Wrote some Racket. Used it togenerate the online version of my book.Wrote a little Elixir.Mostly I read and worked through a bunch of Elixir books.Programming Elixir,Programming Phoenix,Programming EctoandReal-Time Phoenixwas my summer reading andElixir in Actionhas entertained me during the winter holidays.Even though I haven’t finished Elixir in Action yet, it’s probably my favorite and if you’re looking for a good Elixir resource I’d suggest you start with it.Wrote a little C.Wrote a little Python.Started working professionally in Rust.I’ve come into the mindset of personal development and steering my software development career to focus on technologies that I find interesting and think are really good is something I want to prioritize. Having a job that pays me to work on Rust fits perfectly.Built some custom keyboards: theGergoPlexand theKyria.Got up to 40-50 wpm on an alternate keyboard layout.Based onBEAKL 15, with some modifications.However as I’m writing this I’ve moved on to yet another layout. The jury is still out on that one.2020 FailuresDid not finishbuilding git.I did go through the first part using Rust, but I ran out of steam just as it started to get really interesting with implementing branching and merging. I do need to get back to it some day.Did not train grappling that much.COVID didn’t kill me or my family, but it as good as killed my biggest hobby.Did not actually finish the book.It’s easy to blame COVID or getting another child, but the truth is as the project’s nearing completion I’ve been running out of steam. Writing a chapter was easy, but proof-reading it and polishing it is harder. Uploading a chapter online was easy, but formating it in InDesign is harder.Realistically there’s not that much left, but it still feels like walking in mud. Maybe that’s just how it feels with big projects like these? I’m certainly a starter, not a finisher.Did not blog that much.I want to blog more and do more big articles, but that will have to wait until my book project is completely done. My writing energy isn’t enough to do them both.Plans for 2021Take the COVID vaccine.Grapple more.Finish the book project.Completely migrate to the new keyboard and the new layout.Read more books.Focus on personal development and/or another project.Published:January  4,2021Revised:January  5,  2021in70ddb77Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>An Elixir based payment processor for the Coinparty hackathon</title>
      <link>https://www.jonashietala.se/blog/2020/11/30/an_elixir_based_payment_processor_for_the_coinparty_2020_hackathon</link>
      <description>An Elixir based payment processor for the Coinparty hackathonPublished:November 30,2020Revised:July  1,  2024inac95a3bTagged:Coinparty,CryptocurrencyBitcoin Unlimited is hostinga Bitcoin Cash hackathon this Decemberand it seemed like a good opportunity for me to explore how to program against Bitcoin Cash, and it gives me an excuse to build something real withPhoenixand Elixir. (While an event like this might help combat my procrastination, I should really work on finishing my book, so this in itself is also procrastination.)Therefore I’d like to integrate BCH payments into a simple website made with thePhoenix Framework, with the possibility of extending it to a generalized cryptocurrency payment processor (if it’s sufficiently useful).I’m also doing it myself because after entertaining my two kids, my girlfriend and spending time at work there’s not that much time for the hackathon, so I figured it’s best if I focus on something small and do it in my own pace.My use-caseEver since I started working onmy book about cryptocurrenciesI’ve been planning to sell the digital version on my site, payable with cryptocurrencies of course.To make it as accessible as possible I want to support different cryptocurrencies and sell it in a pay-what-you-want scheme (but more than 0). As you can send really small amounts of money this would allow people in poor countries to buy the e-book, people who otherwise would’ve been priced out.It would also act as a good introduction for people who have received small amounts of cryptocurrency tips. For instance it’s common on Reddit to tip &lt; $1 of Bitcon Cash viachaintip, but it’s harder to find anything useful to do with that amount of money.When looking for a payment processor or a library to help me out, I have a few requirements:Easily integrated to a site made with thePhoenix FrameworkSupports multiple cryptocurrenciesOpen-sourceFreeNo minimum payment limitNo KYC/AMLReceive payments directly to my own crypto wallet(s)I should be able to verify payments via full nodes on my own hardwareIf you handle higher value payments or have high privacy requirements this is a must, but for my simple use-case I don’t really have to. I justwant to.I couldn’t find an existing solution that fits all my needsTurns out this is surprisingly hard. While it’s possible my DuckDuckGo and Google skills have failed me, I couldn’t find anything that fit my needs and they all require me to compromise on something. For instance:BitPayIf I was a normal merchant I might prefer to get my payments in fiat, but it doesn’t work with my requirements at all.PayButtonMakes it very easy to accept Bitcoin Cash. Just add a few lines of JavaScript and you’re done. But it doesn’t allow you to run your own node.bchwalletDoes nearly everything technical I want to support, I’d just have to integrate it into my site in some way. Unfortunately it only supports Bitcoin Cash.(I might use this under the hood, but I haven’t done enough research to know if I need to or if I can just interface with a node directly.)BTCPayServerMany say this is the gold standard of accepting cryptocurrency payments. It does everything I want (and more!). Writing a custom integration shouldn’t be too hard either.Although “BTC” in the name might lead you to believe that it only supports Bitcoin, it does support a number of other cryptocurrencies, such as Litecoin, Monero and even Bitcoin Gold…But it doesn’t support Bitcoin Cash.Why?  It seems the maintainer hasbought into the “BCash” propaganda:I have my response. no support for it. And I will not accept PRs until all BCash wallets stop considering Bitcoin addresses as valid. (Not an help desk) Then finally I will accept PRs on the condition that the name “Bitcoin Cash” never appear. (BCH or BCash only)Note the double standard of supporting Bitcoin Gold and Bitcoin Plus even though they both consider Bitcoin addresses as valid and they both have “Bitcoin” in their name, which is also usedin their documentation.And then there’s professional comments like these:The market has spoken!Sigh.CryptoWooThis is a nice plugin that supports a variety of different cryptocurrencies, and it would fit except it’s not open-source, it’s not free as I want to support XMR and it only works in WooCommerce.NOWPaymentsEasy integration and supports lots of coins, but they have a minimum payment amount of $3-5, they have KYC/AML and I can’t use my own nodes.Why is this important?Now my little use-case isn’t important in the grand scheme of things, but at the same time it is. So let’s take a step back for a sec to see why.People are currently gushing over Bitcoin’s price again and are asking the questionwhen will cryptocuriencies win?At $50,000 per coin? At $100,000? Or perhaps at *gasp* $1 million?I think this misses the mark, and it’s not ambitious enough.The end goal isn’t a fiat price, it’s not having to care about the fiat price.I want to be able to receive my salary, pay my bills and buy the stuff I need using crypto, without having to go back to fiat. In short I think cryptocurrencies win when they’re as widely accepted as PayPal or VISA.And to get there we need as many merchants as possible to accept crypto. Which means it must be as easy as possible to accept them for your business; regardless if it’s in-person or online, what tech is used to build your website or whatever requirements you might have.That’s why it’s so important to remove friction of any kind from the process of accepting payments. And that’s why even my little project is important.A simple plan for the hackathonGiven that I don’t have a lot of time, and I haven’t programmed against cryptocurrencies before and I’ll also use a language and framework I have little experience with, it makes sense to have a modest goal.My goal is simply to accept BCH payments in a small demo website, and verify them using my own full node.Growing to a fully fledged projectIf it makes sense to do so I might develop the project further after the hackathon, and I do have a tentative plan on how to do that:Refactor it out into an Elixir libraryTo make it easy to include it into a new Elixir/Phoenix website. It would be great if I could do this during the hackathon as well.REST APIOn top of the library we can build a REST API so that we can integrate payments into other frameworks or e-commerce stores that don’t use Elixir.DocumentationA boring—but very important—part of any API or service is documentation. People think that features is what differentiates the good from the bad, but frequently I find quality documentation is the decider.More integrationsI’ll start with an integration for Phoenix, because that’s what I prefer. But there are tons of general frameworks such as Ruby on Rails, Django and Laravel, or e-commerce stores like OpenCart and WooCommerce. The goal must be to support the popular ones to make it as easy as possible to start accepting payments.And it should be easy to write your own custom integration if native support is missing or include a small JavaScript snippet à la PayButton or Stripe.Self-hosted and public serversIt should be easy to spin up a server of your own, so you have full control of the payment processing. But everyone don’t want or need to do this, and for them we should have public servers they can connect to.Support more cryptocurrenciesThis is important as merchants would otherwise be forced to integrate multiple payment processors for the different cryptocurrencies they’d like to support. This is very cumbersome and they might instead opt to use BTCPayServer—that lacks Bitcoin Cash—or skip cryptocurrency support entirely.The fight for adoption isn’t a zero-sum game between competing cryptocurrencies—it’s a fight to convince the rest of the world that they should start using cryptocurrencies.Under these larger goals there are many details missing. Enhancing 0-conf security using double-spend proofs is one example, supporting different payment protocols is another.While this project could grow massively in size, I will start small and expand if it’s valuable to do so. But the plan for the future is here.Shoot for the moon. Even if you miss, you’ll land among the stars.— Norman Vincent PealePublished:November 30,2020Revised:July  1,  2024inac95a3bTagged:Coinparty,CryptocurrencyPreviousNext</description>
      <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>An update on my book 'Why Cryptocurrencies?'</title>
      <link>https://www.jonashietala.se/blog/2020/10/09/an_update_on_my_book_why_cryptocurrencies</link>
      <description>An update on my book 'Why Cryptocurrencies?'Published:October  9,2020Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?Five months ago Igloriously declared that “my book was done”. Since then I’ve been working hard to finish the book.Sorry that’s a bit of a lie, I’ve had a nice long vacation where I didn’t work on the book and I’m also on part-time parental leave. And believe me there’s not a lot of time left over with two kids pulling for your attention.Although they won’t be finished this year, I’ve made some good progress on the e-book and on formating the physical book and the goal is to have them ready some time next year. The plan is to release the e-book (PDF and epub) as pay-what-you-want for cryptocurrencies on my site while releasing it as normal on Amazon and similar.I’ve also done a re-read of the book to make a bunch of fixes, so if you haven’t read the book yet now might be a good time. It’scompletely free to read online.Because I started the book almost two years ago (yikes!) there are some new events that I’ve added:As a response to COVID-19,the FED has printed an extreme amount of money in a very short time, displaying the problem with unsound money for all to see.Lebanon became to second country to experience hyperinflation in 2020(Venezuela didn’t escape theirs).The U.S. court declared that the mass surveillance program exposed by Snowden was illegal.The extradition hearing against Assange, where the U.K. will decide if they should deport him to the U.S.,is a complete farce. For example the U.S. managed to convince the judge that any reference to the torture in Guantánamo couldn’t be mentioned, so key witnesses were blocked from testifying and evidence were censored.Yet I feel that nothing has really changed. The argument for cryptocurrencies are the same as two years ago, and they’re only growing stronger.Published:October  9,2020Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>ghc 8.8.3 cannot find cabal 3.0.0.0 packages</title>
      <link>https://www.jonashietala.se/blog/2020/05/09/ghc_cannot_find_cabal_packages</link>
      <description>ghc 8.8.3 cannot find cabal 3.0.0.0 packagesPublished:May  9,2020in1437eeeTagged:Haskell,Xmonad,Void LinuxI’ve been using cabal to manage my Haskell dependencies for years, but when I last updated my system it suddenly stopped working. I installed my dependencies withcabal install xmonad, and checked that it’s installed under~/.cabal:$ ls .cabal/bin/xmonad@But still when I go to compile my xmonad config file ghc says it cannot find it:Could not find module ‘XMonad’And indeed when I runghc-pkg listit does not list xmonad. That’s weird.$ cabal --versioncabal-install version 3.0.0.0$ ghc --versionThe Glorious Glasgow Haskell Compilation System, version 8.8.3Apparently this isa known issue(including the “blame game” if it’s a cabal or a ghc issue, but that doesn’t make it any less annoying for us who just want it work). Theghc issueis still open.Fortunately there’s a solution.We can manually specify a package db for ghc-pkg so it’ll find our cabal modules:$ ghc-pkg --package-db ~/.cabal/store/ghc-8.8.3/package.db list...xmonad-0.15xmonad-contrib-0.16...And to make it permanent we can symlink thepackage.dbfile as a ghc config:$ mkdir -p ~/.ghc/x86_64-linux-8.8.3/$ ln -s ~/.cabal/store/ghc-8.8.3/package.db ~/.ghc/x86_64-linux-8.8.3/package.conf.dThe name of the folderx86_64-linux-8.8.3may differ, this one worked for me.And nowghc-pkg listshould find xmonad and compiling with ghc should find our missing cabal modules.Published:May  9,2020in1437eeeTagged:Haskell,Xmonad,Void LinuxPreviousNext</description>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How I wrote a book using Pollen</title>
      <link>https://www.jonashietala.se/blog/2020/05/03/how_i_wrote_my_book_using_pollen</link>
      <description>How I wrote 'Why Cryptocurrencies?'How I wrote a book using Pollenâ˜Published:May  3,2020inac95a3bTagged:CSS,Pollen,Programming,Racket,Self-publishing,Why Cryptocurrencies?This is part 1 of theHow I wrote 'Why Cryptocurrencies?'series.ContentsConfiguring vimConfiguring PollenThe markup languageSidenotesLocal markupTable of contentsHostingUnsolved annoyancesI wrotean online bookusingPollen, a static site generator inRacket.An earlier postcontains my first impressions of it, but as the book is now completed I think I can summarize some implementation details in more detail with this post.Ireallylike the markup language and the usage of X-expressions. You do need to write code yourself for a bunch of things, but if you want a more complex markup for your site itâ€™s a trade-off Iâ€™d make every time.If you want to use Pollen yourself thePollen documentationis pretty good and you can also view thesource code of my bookif you want more details on anything.Configuring vimFirst off I do my writing and coding in vim (or ratherneovim). I use plugins for Racket and Pollen (but truthfully I donâ€™t remember what they do, syntax highlighting perhaps?) and I also have two keybindings for two special chars I donâ€™t normally use:" Plugin handling using vim-plugPlug'https://github.com/wlangstroth/vim-racket'Plug'https://github.com/otherjoel/vim-pollen.git'" Easy insertion of special charsimapÎ»imapâ—ŠPollen markup usesâ—Šextensively so having an easy way to insert it is very important. And in Racket instead of writing lambdas(lambda(x)...)you can write(Î»(x)...). Itâ€™s not necessary but I thought, why not?Configuring PollenThePollen documentationdoes a decent job of walking you through initial setup, thereâ€™s just a few gotchas I ran into.I wanted to turn three dots into a single character â€œâ€¦â€ and also remove/index.htmlfrom links, while doing the default paragraph expansion and converting quotes and dashes to their special chars as described in the Pollen docs. I ended up with these decoding functions:(define(ellipsesx)(string-replacex"...""â€¦"))(define(de-indexifyx)(string-replacex"/index.html"""))(definestring-proc(compose1smart-quotessmart-dashesellipsesde-indexify))(define(std-decodeargs)(decode-elementsargs#:txexpr-elements-procdecode-paragraphs#:string-procstring-proc#:exclude-tags`(figurepre)))The paragraph expansion is sometimes messed up, but I customized it by ignoringfigureandprewhile marking some tags as blocks:(defineblock-tags(append'(imgtabletbodytrdtdddl)default-block-tags))This isnâ€™t perfect, and for example when creating image figures I had to callstd-decodeto parse caption text correctly.After a while I also wanted to organize my Racket files into a subfolder, and to get Pollen to recognize this I had to tell it to add them to the watchlist to have them reload the code automatically:(modulesetupracket/base(requirefile/glob)...(definerkt-files(glob"rkt/*.rkt"))(definecache-watchlistrkt-files))The markup languagePollenâ€™s markup language can at first look extremely cumbersome, but I ended up liking it. Just prefix withâ—Šand youâ€™ll automatically create html elements:â—Šul{â—Šli{First item}â—Šli{Second item}â—Šli{Third item}}You can also specify attributes such as classes, which is quite handy:â—Šdiv[#:class"my-class"]{...}But the real power of the markup language is how easy it is to create your own tags. Just define regular Racket functions and provide them in pollen.rkt like so:(provide(all-from-out"rkt/tags.rkt"))Here are some examples of tags Iâ€™ve implemented:CodeNon-highlighted code is simple and is provided by:(define(code.args)`(pre(code,@args)))But for a more interesting example say that you want to include an external file and highlight it like so:â—Š(code-hl"python3""scripts/gambling.py")I implemented this by by calling out topygmentize:(define(code-hllangpath)(definecmd(string-append"pygmentize -f html""-l"lang""path))(string-&gt;xexpr(with-output-to-string(Î»()(systemcmd)))))There is an implementation in Pollen that does something similar, but itâ€™smuchmore complex. The simple one has worse performance, but since I only have a single instance where I highlight code itâ€™s good enough for me.QuotesI use quotes heavily throughout the text, either as a standalone or wrapped in an epigraph (just used to italize quotes that begins a chapter):â—Šepigraph{â—Šqt[#:author"Attributed to Michael Cassius McDonald"]{There's a sucker born every minute}}Producing:&lt;blockquote&gt;&lt;p&gt;Thereâ€™s a sucker born every minute&lt;/p&gt;&lt;footer&gt;Attributed to Michael Cassius McDonald&lt;/span&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/div&gt;Thereâ€™s a large list of arguments to customize the quote, but thatâ€™s a little overkill to go through here.LinksAt first I used a very simple tag for links:In the textâ—Šlink[my-link]{link text}.â—Š(definemy-link"https://some-url")Later on I started separating links into regular links, book references and internal chapter references. This so I could mark when I had accessed external links, format book references in different ways and to generate alt-text for existing chapters easily. In practice link definitions looks like this:(define1984-book(book-ref"https://www.goodreads.com/book/show/40961427-1984""George Orwell""1984"))(definepublic-key-cryptography(ch-ref'cryptography.html#:ref"public-key-cryptography""Public-key cryptography"))(defineblock-0(x-ref"2019-10-25""https://blockchair.com/bitcoin/block/0""Bitcoin block 0"))And used like this:â—Šbook-qt[1984-book]{...}â—Šem{Thoughtcrime}, as explored in the bookâ—Š(book-link1984-book), ...It usesâ—Šdef[public-key-cryptography]{public-key cryptography}which allows ...For example Satoshiâ—Šlink[block-0]{left a message}in the first ever Bitcoin block:I could have gone much further with more link handling options, but I only really started branching out after I had written most of the book and going back to fix it is too much effort for no gain.SidenotesI wrote a post aboutTufte style sidenotes and marginnotes in Pollenin an earlier post, but Iâ€™ve since then changed them from being hidden on smaller screens until you click them, to placed beneath the text instead of to the side.On a wider screen sidenotes are placed to the right.If the sidenote doesnâ€™t fit, itâ€™s instead placed below.Now it would be fairly easy (or at least itâ€™s possible to style it in such a way with a lot of trial and error) to just move it to the right if it doesnâ€™t fit. But notice that on the narrower screen the sidenote is placed below the last paragraph!I wanted to be able to customize the placement on the narrower screen as I wanted, while the floating sidenote should be as close to their reference as possible. I solved it, but itâ€™s not very prettyâ€¦My first thought was to insert two sidenotes, and setdisplay:noneto hide one of them. But this would break screen readers or simplified readers that removes much of the styling, such as the â€œreader viewâ€ in Firefox. So I opted for a more complex solution of manually modifying the top margin for each sidenote.In practice it means I insert a sidenote usingâ—Šsn{my-ref}, which by default inserts it below the current paragraph. If I want to manually place it somewhere else I useâ—Šnote-pos[#:top-9]{my-ref}. So for example:First paragraph.â—Šsn{my-ref}Second paragraph.â—Šnote-pos[#:top-9]{my-ref}The text for the sidenote is given byâ—Šndef["my-ref"]{Sidenote text here}, which can be paced anywhere in the source file.Thereâ€™s a bunch of sidenote specific styling, but the important parts are given by:.side-space{/*Serves to take up space. Inline content from the chapter is floated on top.*/width:420px;}@media(max-width:$sidenote-float-width-1){.sidenote{display:block;margin:1em4em1.4em4em!important;}}@media(min-width:$sidenote-float-width){.side-space{display:block;}.sidenote{float:right;clear:right;/*Approximate adjustment for notes at the last line of a paragraph.*//*Will get overridden by local styles.*/margin-top:-2em;margin-bottom:4em;margin-right:-420px;width:380px;position:relative;display:inline-block;}}And margins are overridden by.The actual implementation ofâ—Šsnandâ—Šndefhas grown surprisingly large and I went through the old version in theprevious post, so Iâ€™ll skip it here. The implementation has changed a little but not in any major way. You can always find thelatest code on GitHubif youâ€™re interested.Local markupAnother very powerful feature is that you can easily create custom markup for individual pages. For example in the chapterWhat is money?when giving a number of examples of money I wanted to add custom styling, like this:I wanted to have an image associated with each example, alternated from left to right. I also wanted to give each example a title with an associated timeframe.This is the tag I came up with:â—Š(define(moneytitle#:imgimg#:date[date#f] .text)(definexdate(cond[(and(list?date)(not(null?date)))`(div((class"date")),@date)][date`(div((class"date")),date)][else""]))`(div((class"example"))(img((src,img)))(div((class"txt"))(div((class"header"))(h3,title),xdate),@text)))Which can be called like this:â—Šmoney["Dogecoin"#:date"2013"#:img"images/doge.png"]{Dogecoin is a cryptocurrency, while created as a "joke currency", it quickly gained popularity as a tipping tool online. You can still find merchants who accept it today for things like domain names, web hosting, VPNs or games.}To produce this html:&lt;h3&gt;Dogecoin&lt;/h3&gt;2013&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Dogecoin is a cryptocurrency, while created as a â€œjoke currencyâ€, it quickly gained popularity as a tipping tool online. You can still find merchants who accept it today for things like domain names, web hosting, VPNs or games.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;So easy! So powerful! So great!Of course you couldâ€™ve done this manually in for example Markdown, but with 10 different examples thatâ€™s a ton of copy-pasting making any changes to the htmlreallyannoying to make. I couldâ€™ve also written a callback in for example Hakyll (the site generator I use for this blog) that I could then call from my markup file, but having the code embeddable right next to the markup is much nicer and more performant.I use local custom markup all over the place, another example is styling transcripts of a Youtube video:The timestamps should be aligned in a certain way and have a horizontal bar.We could be as explicit as we were with the money example, but here I wanted it to be simpler and to auto detect the timestamps. So I can write it like this:â—Šdiv[#:class"transcript-wrapper"]{â—Štranscript{02:34  He's got an RPG [Rocket Propelled Grenade]?02:35  All right, we got a guy with an RPG.}Except now we know it's not an RPG but a camera held by a Reuters journalist.â—Štranscript{03:45  All right, hahaha, I hit [shot] 'em......04:55  Oh, yeah, look at those dead bastards.05:00  Nice....06:57  Come on, buddy.07:01  All you gotta do is pick up a weapon.}After killing a bunch of people they're looking at an injured person crawling on the ground wanting him to pick up a weapon---so they're allowed to kill him.This can be accomplished by writing a bit of lisp code in the tag that splits the strings on the double spaces:â—Š(define(transcript.rows)(define(make-rowrow)(if(string=?row"\n")""(let((cols(string-splitrow"")))`(div((class"row"))(span((class"time")),(carcols))(span((class"txt")),@(cdrcols))))))`(div((class"transcript")),@(mapmake-rowrows)))(Yes I know that the â€œâ€¦â€ row will generate a...&lt;/span&gt;and a&lt;/span&gt;element, but it doesnâ€™t affect the appearance.)Table of contentsPollen have automatic support for tracking table of contents, called a pagetree. Itâ€™s not something I use for two reasons:I wanted to be able to display chapters not written yetI wanted a second layer in the chapter hierarchySo it could look like this:(definetoc;; This replaces the previously hand-made pagetree in index.ptree.;; String entries gets removed and are treated as planned chapters.`(eli5.html(about_the_book.htmlacknowledgements.htmlhow_to_use.html"Completely free""About me, the author")(what_is_a_cryptocurrency.htmlproperties_of_a_cryptocurrency.htmlhow_do_cryptocurrencies_work.html...Where I have a main section with a number of chapters inside and denote an unfinished chapter with the planned title. The functions that transforms this into output is also custom,see the sourceif youâ€™re curious.One annoyance I have is that titles of chapters are also defined with Racket code:â—Š(define-metatitle"For the unbanked")This means I cannot automatically fetch the chapter title (for a better alt-text when linking to chapters) because it might cause a circular dependency as it has to load the whole chapter!My extremely ugly workaround was to define links and their alt-text manually:(definefor_the_unbanked(ch-ref'for_the_unbanked.html"For the unbanked"))Yes this means Iâ€™ll duplicate the post title, but I added chapter alt-text after the book was already done, so I didnâ€™t bother doing it a better way.HostingIâ€™ve hosted my blog as a static webpage on Amazon S3 for years. It has worked well so being lazy I did the same with the book. Iâ€™ve described how to easily set it up with SSLin an earlier post.To update the site I use an old Perl script that shells out tos3cmdto upload data. It will generate commands like:s3cmdsync -M -m text/css --acl-public --add-header="Cache-Control: max-age=60"\_site/css s3://whycryptocurrencies.com/Although Iâ€™ve started to prefer Python for my scripts, I still have fond memories of when I wrote most of my scripts in Perl. There are things you can criticize Perl for, but itâ€™s still one of the most fun programming languages Iâ€™ve used.Unsolved annoyancesThere are some things that doesnâ€™t work as I want them to, but that I didnâ€™t bother fixing.Lack of routing controlI complained about it infirst impressions post, but it still bothers me that chapters ends with/private_money.htmlinstead of/private_money. But removing it completely would have me rewrite the auto reload system, so I have to live with this admittedly small annoyance.SlowRegenerating the book is pretty darn slow. I also have to clean the cache when I add or change Racket functions outside of chapters, which happens more often than Iâ€™d like.External styling scriptI wanted to useSassfor styling and at first I tried to create amain.css.pfile that pipes out tosassc, which is the way to generate arbitrary files with Pollen. I use this approach when I generate the xml feed, but I couldnâ€™t get the reload to work properly so I just used an external script for it:#!/bin/bashsasscsass/main.scss--stylecompressed&gt;css/main.cssecho"created: css/main.css"inotifywait-eclose_write,moved_to,create-msass/|whileread-rdirectory events filename;dosasscsass/main.scss--stylecompressed&gt;css/main.cssecho"updated: css/main.css"doneIt usesinotifywaitto issue a command when files in thesass/folder change. It can be found in theinotify-toolspackage.And thatâ€™s it I think for the large part? Iâ€™m sure I missed something, but feel free tocheck out the source codeif youâ€™re curious about anything.This is
      part 1 of theHow I wrote 'Why Cryptocurrencies?'series.How I wrote a book using Pollenâ†How I made a kick-ass cover for my self-published bookWriting lessons learned after writing a bookHow I did the layout for my self-published bookRead the next partPublished:May  3,2020inac95a3bTagged:CSS,Pollen,Programming,Racket,Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Writing a Pollen lexer in Pygments</title>
      <link>https://www.jonashietala.se/blog/2020/04/30/writing_a_pollen_lexer_in_pygments</link>
      <description>Writing a Pollen lexer in PygmentsPublished:April 30,2020Revised:September 24,  2023in263c30eTagged:Pollen,ProgrammingAfter writing afew blog postsabout Pollen I started getting annoyed that I didn’t have syntax highlighting for the code snippets. So I did a bit of fooling around with Pygments, and it turns out writing a custom lexer isn’t that unreasonable, so here’s how I did it.Pollen markupPollen’s rules are pretty simple as it’s basically just some extra syntax for embedding Racket in a text file:Comments starts with◊;You can insert variables with◊|my-var|Run arbitrary Racket code with◊( ... )There’s an extra construction that transforms◊fun[arg1 arg2]{some text}to◊(fun arg1 arg2 "some" text"), which is useful when you want to send a bunch of interpolated text to a function. (I use it everywhere inmy book.)So the end goal is to be able to highlight this type of code:◊; A link can just be a standard reference◊(define dune-audible "https://www.audible.com/pd/Dune-Audiobook/B002V1OF70")I'm ◊strong{really} looking forward to the upcoming Dune movie!◊div[#:class "extra-sand"]{I also recommend the Dune audiobook ◊link[#:ref dune-audible]{on Audible}.}Setup and parsing commentsThe simpestPygmentslexer might look like this:frompygments.lexerimport*frompygments.tokenimport*importreclassPollenLexer(RegexLexer):"""Lexer for Pollen"""name='Pollen'aliases=['pollen']filenames=['*.html.pm']tokens={'root':[(r'.',Text)],}Which if placed inpollen.pycan be run on a filepollen.html.pmlike this:python3-m pygments -l pollen.py:PollenLexer -x -f html pollen.html.pmThat produces html output. Right now it doesn’t do anything interesting, as it only returns aTexttoken for everything, so let’s change that shall we?I would like to support highlighting comments:◊; Standard commentRegular text ◊; Trailing commentWhich should be pretty straightforward. We just need to add a single clause to the root state that matches everything from◊;to the end of the line:tokens={'root':[(r'◊;.*?$',Comment),(r'.',Text)And comments are highlighted!python3-m pygments -l pollen2.py:PollenLexer -x -f html pollen.html.pm&lt;pre&gt;&lt;span&gt;&lt;/span&gt;◊; Standard comment&lt;/span&gt;Regular text◊; Trailing comment&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;That’s hard to read so I’ll embed the output from now on:If you’re reading this but don’t understand why it works you might want to lookupregular expressions in Python, in this post I’ll assume you’re familiar.Embedding variablesLet’s move on to embedding variables via◊|var|.A first attempt could be like this:'root':[(r'(◊\|)(\w+)(\|)',bygroups(Name.Variable.Magic,Name.Variable,Name.Variable.Magic)),Which splits out highlighting into three groups;◊|,varand|and gives them different tokens using the specialbygroupsconstruction. The tokens you choose are slightly arbitrary, but should generally follow the advice inPygments tokens reference. I choseName.Variable.Magicinstead of something likePunctuationbecause I wanted them to stand out more.This works, but there are two changes I’d like to make. The immediate problem is that we now only match against characters with\w+, but a Racket variable can contain a bunch of different symbols. This is for example perfectly valid:(definea2-!+*#2)(printa2-!+*#)If we look at theexisting Racket lexerthey have defined a variable like this:valid_symbol_chars=r'[\w!$%*+,&lt;=&gt;?/.\'@&amp;#:-]'variable=r'[A-Z]%s*'%valid_symbol_charsWhich we can steal and copy to our class and use when we build our regex:(r'(◊\|)(%s)(\|)'%variable,bygroups(Name.Variable.Magic,Name.Variable,Name.Variable.Magic)),To make this work out of the box we also need to add the regex flags:flags=re.IGNORECASE|re.MULTILINEThe other thing I want to do is introduce another state. It’s not strictly needed in this case, but as◊can be followed by different cases it makes the lexer easier to follow. Like this:'root':[(r'◊;.*?$',Comment),('◊',Name.Variable.Magic,'post-magic'),(r'.',Text)],'post-magic':[(r'(\|)(%s)(\|)'%variable,bygroups(Name.Variable.Magic,Name.Variable,Name.Variable.Magic),'#pop'),],Now what happens when we parse the◊we mark it asName.Variable.Magicand the push the statepost-magiconto the stack. Important to note is that we don’t replace the existing state, so the stack will now havepost-magicon top androotbelow.Then when we try to parse the next character,post-magicis responsible to match against it. The new thing there is the magic'#pop'variable that pops from the stack, so after we’re done matching◊|var|we hand back control toroot.This should now be able to highlight embedding variables:I unfortunately didn’t figure out how to debug the state transitions in an easy manner. If we mess up Pygments will inserterrclasses but you can also play around with different colored tokens during development, for example lettingrootreturn aKeywordtoken so you can see that we return to the right state.Highlighting Racket codeOur next step is to try to highlight Racket code inside◊( ... ).I thought this was going to be really hard, but Pygments supports this in various ways. The way I chose was to delegate the lexer of different parts to the existingRacketLexer.First the import:frompygments.lexers.lispimportRacketLexerAnd the case is simply:'post-magic':[...(r'(\()(.+)(\))',bygroups(Name.Variable.Magic,using(RacketLexer,state='unquoted-datum'),Name.Variable.Magic),'#pop')The interesting line isusing(RacketLexer,state='unquoted-datum')which delegates the lexer toRacketLexer, starting in stateunquoted-datum. How did I figure out which initial state to start in? I tried toread the codeand make an educated guess…But we also need to ensure we use the regex flag of allowing the dot to match newlines as well, otherwise we won’t match multiline racket expressions:flags=re.IGNORECASE|re.DOTALL|re.MULTILINEAnd all embedded Racket code is highlighted:Recursive bracketsNow lexing◊var[arg1]{text args}is a bit more involved, but builds on the concepts we’ve already seen.First let’s support the simpler◊var{text args}case.Matching◊varis straightforward:'post-magic':[...(r'%s'%variable,Name.Variable,('#pop','curly-start')),],We could do more here, but we’re preparing for the future where we can also match against an optional[...]after the variable, so we’ll delegate to another state.('#pop','curly-start')essentially means we’ll replace the current statepost-magicwith the newcurly-startstate.'curly-start':[(r'\{',Name.Variable.Magic,('#pop','curly-end'))],Here again we could’ve done more, but we want to be able to do recursive matching inside{ ... }as well. This is what thecurly-endstate does:'curly-end':[(r'\}',Name.Variable.Magic,'#pop'),include('root'),],include('root')does what you might expect it to do: it copies all cases from ourrootstate into thecurly-endsate. This to avoid code duplication.And this can indeed highlight◊var{ ... }recursively!To support an optional[ ... ]we can add another state beforecurly-endthat either matches against square brackets or curly brackets:'post-magic':[...(r'%s'%variable,Name.Variable,('#pop','post-var')),],'post-var':[(r'(\[)(.+?)(\])',bygroups(Name.Variable.Magic,using(RacketLexer,state='unquoted-datum'),Name.Variable.Magic),('#pop','curly-start')),include('curly-start'),],We’ve already seen these things before. The only thorn in my side here is that we use a non-greedy match(.+?)to match between brackets, but we used a greedy(.+)earlier. I don’t have a good answer for this… This could probably be improved some way.But hey! Think positive! It works for the cases I need. For example:The resultPutting it all together we can now highlight the code we looked at in the start of this post:And this is the complete lexer:frompygments.lexerimport*frompygments.tokenimport*frompygments.lexers.lispimportRacketLexerimportreclassPollenLexer(RegexLexer):"""Lexer for Pollen"""name='Pollen'aliases=['pollen']filenames=['*.html.pm']flags=re.IGNORECASE|re.DOTALL|re.MULTILINEvalid_symbol_chars=r'[\w!$%*+,&lt;=&gt;?/.\'@&amp;#:-]'variable=r'[A-Z]%s*'%valid_symbol_charstokens={'root':[(r'◊;.*?$',Comment),('◊',Name.Variable.Magic,'post-magic'),(r'.',Text)],'post-magic':[(r'(\|)(%s)(\|)'%variable,bygroups(Name.Variable.Magic,Name.Variable,Name.Variable.Magic),'#pop'),(r'(\()(.+)(\))',bygroups(Name.Variable.Magic,using(RacketLexer,state='unquoted-datum'),Name.Variable.Magic),'#pop'),(r'%s'%variable,Name.Variable,('#pop','post-var')),],'post-var':[(r'(\[)(.+?)(\])',bygroups(Name.Variable.Magic,using(RacketLexer,state='unquoted-datum'),Name.Variable.Magic),('#pop','curly-start')),include('curly-start'),],'curly-start':[(r'\{',Name.Variable.Magic,('#pop','curly-end'))],'curly-end':[(r'\}',Name.Variable.Magic,'#pop'),include('root'),],}Published:April 30,2020Revised:September 24,  2023in263c30eTagged:Pollen,ProgrammingPreviousNext</description>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Minor site updates</title>
      <link>https://www.jonashietala.se/blog/2020/04/29/minor_site_updates</link>
      <description>Minor site updatesPublished:April 29,2020Revised:October  5,  2023inc96b99cTagged:Blog,Hakyll,HaskellAs it happens I got a little tired of the syntax highlighter Pandoc uses so on a whim I started looking at moving to Pygments as my highlighter. With some searching around I found ablog postabout just that! That’s lucky because while I like Haskell, I’ve neverreallygrocked it and I’ve only dabbled enough with it to (mostly) make things work like I want to.Often I’ll get stuck longer than with any other language just trying to understand WTH is happening. See this snippet for example:responseLength&lt;-read.U8.toString.fromJust&lt;$&gt;(S.lines&gt;=&gt;S.read) isWhat did.do again? And the&lt;$&gt;and&gt;=&gt;have something to do with monads…Even though I figured it out after a while, getting stuck on surface level things like this really makes me wonder if it wouldn’t be better to just rewrite the site in some other language.Or put more effort into actually learning Haskell. Maybe the next time…Highlighting code via PygmentsThe core idea of the Pygments implementation is to reroute all parsing of code elements out to a separate process. For speed reasons it’s implemented as a long running process instead of calling out to the shell all the time.I didn’t come up with the approach, but I did some changes to it. One of them was to highlight both code blocks and inline code. The core transform function gets called by overriding the pandoc compiler:pandocCompiler::Streams-&gt;Compiler(ItemString)pandocCompiler streams=dopandocCompilerWithTransformM defaultHakyllReaderOptionsdefaultHakyllWriterOptions(pygments streams)The transformer simply walks over blocks, matches against code and passes the content to the pygments process instreams.pygments::Streams-&gt;Pandoc-&gt;CompilerPandocpygments streams=walkM (generateCodeBlock streams)generateCodeBlock::Streams-&gt;Block-&gt;CompilerBlockgenerateCodeBlock streams (CodeBlock (_, classes, keyvals) contents)=doletlang=unpackLang classes keyvalscode&lt;-highlightCode streams lang contentsreturn$RawBlock"html"$pack$renderHtml$H.pre$hCode lang codeThe thing I added was a clause to walk over inline elements as well:generateCodeBlock streams x=walkM (generateCodeInline streams) xgenerateCodeInline::Streams-&gt;Inline-&gt;CompilerInlinegenerateCodeInline streams (Code (_, classes, keyvals) contents)=doletlang=unpackLang classes keyvalscode&lt;-highlightCode streams lang contentsreturn$RawInline"html"$pack$renderHtml$hCode lang codegenerateCodeInline _ x=return xUpdated gruvbox syntax highlightingPygments use a different markup, so I had to update my gruvbox inspired css scheme. It’s not perfect, and the choices are arbitrary, but I think the output is fairly good. If you’re interested the stylesheet itself, see the sources forgruvbox.scssandcode.scss.Git commit hash in post footersAnother pretty cool idea I got from the blog post was embedding a git commit hash in the footer of each post. It’s probably not particularly useful, but it was a fun idea nonetheless.This is how it looks when embedded. Clicking on it takes you to the history of the post file.The idea is to usereadProcessandunsafeCompilerto launch a git process to retrieve info. Something like this:gitTag::String-&gt;ContextStringgitTag key=field key$\item-&gt;doletfp=(toFilePath$itemIdentifier item)gitLog format=readProcess"git"["log","-1","HEAD","--pretty=format:"++format,"--date=format:%b %e, %Y",fp]""unsafeCompiler$dosha&lt;-gitLog"%h"message&lt;-gitLog"%s"date&lt;-gitLog"%ad"...And add it to post contexts:postCtx tags=mconcat[ siteCtx,gitTag"git"...]Again, not my idea.Published:April 29,2020Revised:October  5,  2023inc96b99cTagged:Blog,Hakyll,HaskellPreviousNext</description>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>My book 'Why Cryptocurrencies?' is done</title>
      <link>https://www.jonashietala.se/blog/2020/04/29/my_book_why_cryptocurrencies_is_done</link>
      <description>My book 'Why Cryptocurrencies?' is doneâ˜Published:April 29,2020Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?My first commit on my bookWhy Cryptocurrencies?is from Dec 19, 2018, and now about 17 months later and 1006 more commits Iâ€™m finally done!Well, Iâ€™m done with the online version at least. I still plan to create an e-book, a PDF and a paperback and who knows how long that will take? It would be great to have a physical copy in my hands in 2020, but as Iâ€™ve never done these things before I donâ€™t know if thatâ€™s a realistic expectation or not. Especially as I only work on it a little here and thereâ€”we did get our second kid in February after all!Anyhow itâ€™savailable online for freeand Iâ€™m actually quite proud of what Iâ€™ve accomplished. It doesnâ€™t really matter if itâ€™s not successful and if I wonâ€™t get financially rewarded for the time Iâ€™ve spent, because I did my best and I think it came out nicely.A screenshot of the chapter â€œWhat is money?â€I didnâ€™t track exactly how much time I spent writing, I find it difficult to track my time on such a granular level, but Iâ€™ve tried hard to write an hour every weekday before work. I even started working 80% at my job so I could focus on writing a bit more and to be home with my family more.And on that note working 1â€“2 hours less, which if you work from home and donâ€™t have to commute can turn into 2â€“3 hours, isabsolute gold. I honestly donâ€™t know if I could ever go back to working full-time with a 30 min commute as I did before, the difference in quality of life is just so great.At first I tried to work 4 days a week, and use the fifth to focus on writing, but I didnâ€™t really feel it worked well for me. Sure I was very productive the day I focused on my project, but then I had to wait a whole week until I could do it again, and then it felt quite difficult to get my mind to it again. Of course I couldâ€™ve written before or after work as well, but my brain is just exhausted after working 8 hours so in practice it was too difficult to keep up.It workedmuch betterto always do something, even if itâ€™s just small and if I just spent 30 min or even 15 min each day writing, I felt like I could go much further than when I tried to write in big batches. I know this isnâ€™t unique and â€œwrite a little every dayâ€ is a very common advice for writers, and for good reason Iâ€™d say.As a final note on word count: I never counted how many words I wrote each day, how many I had written and I never had a target I was aiming at. I just tried to write down what I had to say, without padding it too much or cutting my message short.As I wrote my book inPollen, which mixes text with markup and source code, itâ€™s not so easy to get a reliable word count. When counting the output html files withsed"s/&lt;[^&gt;]*&gt;//g"eli5.html|wc-cI come up with these numbers:31578 how_do_cryptocurrencies_work.html29690 uncensorable_donations.html29602 private_money.html26867 a_defective_system.html25799 financial_crisis.html23652 voting.html23361 what_is_money.html21181 challenges.html19292 protection_against_government_confiscation.html17044 timestamping_service.html16843 global_currency.html16628 for_the_unbanked.html16595 cryptography.html16401 the_blind_leading_the_blind.html15534 cashless_dystopia.html15415 cheaper_faster.html15151 are_cryptocurrencies_money.html14922 swiss_bank_account_in_your_pocket.html13174 darknet_markets.html12088 undesirable_businesses.html11909 tokens.html10850 separation_of_money_and_state.html9837 provably_fair_gambling.html9733 uncensorable_twitter.html8868 properties_of_a_cryptocurrency.html8641 freezing_of_merchant_accounts.html8418 about_the_book.html7507 look_out_for_snake_oil.html6403 extensions.html4383 about_me.html3885 brave_new_world.html3849 eli5.html3138 bitcoin_whitepaper.html2933 how_to_use.html2696 better_currency.html2396 free.html2360 better_digital_payments.html2186 what_is_a_cryptocurrency.html1323 index.html1309 acknowledgements.html845 appendix.html712 error.html514998So according to this the book is514 998words long. Thatâ€™sâ€¦ really a lot. Advice on the internet seems to suggest around 100 000 words is the upper recommended limit for most, so I have a hard time believing Iâ€™m doing this correctly. This way of counting overestimates it, but I havenâ€™t bothered to figure out how much. I guess Iâ€™ll see when I try to actually make a book or a PDF out of it.How much source code did I write? Thatâ€™s also difficult to say, as some of it is mixed in the chapter files, but for the pure code files this is the result:&gt;wc-l **.rkt...1735total&gt;wc-l **.scss...1702totalSo around 1735 lines in Racket and 1702 lines in Sass. Kind of interesting how the styling corresponds to almost as much code as the layout formatting does.My experience with the technologies I used has been quite positive, but I plan to write about it more in detail in a future post.Published:April 29,2020Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2019 in Review</title>
      <link>https://www.jonashietala.se/blog/2019/12/25/2019_in_review</link>
      <description>2019 in ReviewPublished:December 25,2019in8b66924Tagged:Yearly ReviewAsis traditiona quick rundown of the year is due. It’s been good to do as it makes me reflect on the past year, and see that I did indeed do some things, and to look ahead a little.2019 Non-Geek AchievementsPlayed around with Isidor.It’s hard to describe how happy a kid can make you.Read a bunch of books.I like the idea of tracking all the books I read. But I hate the actual tracking part, so I don’t actually know what books I did read.The Big Short,Permanent RecordandA Little Hatredare some I read recently, and they’re great.Regular grappling training.Since we moved, I’ve only been training grappling very rarely. But now I train Submission Wrestling here once a week. Iloveit.Built a small home gym.It’s a real luxury.2019 Geek AchievementsStartedwriting a book.So far I’ve written around 80% of the planned chapters, so I guess there’s only around 80% of the work left. I’ve managed to produce a bunch of words:&gt; wc -c *.html.pm | sort -n402050 total(It’s an overestimation, but it gives a rough estimate.)Did some memory training.I had a goal of becoming better at memorizing things. Like a deck of cards or better at learning a new language. I haven’t done a lot, but it clearly works (although the training is very mentally draining).Wrote aQR code generation in Rust.Wrote some Racket.Assembled myErgodox Infinity.Built a bunch of Lego.2019 FailuresI wanted to have come further with the memory training.Plans for 2020Adjust to a new family member, expected in February.Finish my book.I can at least finish the writing part, and probably produce a pdf/ebook/epub or whatever digital format is the fashion nowadays. The ultimate goal is to get a physical book in my bookshelf, but I have no idea how long that process might be.Complete enough of the memory training to start learning a new language.Go through the bookbuilding git.Read some books.Books I didn’t read in 2019 that I want to read in 2020.And then some books I want to re-read:A Song of Ice and Fire seriesAssumingthe new Game of Thrones book gets released in 2020…The books in the First Law WorldI regret I didn’t re-read the books before I read A Little Hatred, which is the first book in the new trilogy in the world. The other books are to be released in November 2020 and 2021, and Joe Abecrombie did a good job by writing the story of the whole trilogy before even realising the first book.DuneI should prepare for the movie that’s coming in 2020 by re-reading the classic book, which I don’t really remember other than it being very good.This is a whole lot of books for me, as I don’t usually read that much. Maybe I need to stop reading so much manga, or lower my expectations a bit. I should be happy if I go through even a third of this list.It was a pretty good year. Looking forward to an even better one next year.Published:December 25,2019in8b66924Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A friendly game of Twilight Imperium</title>
      <link>https://www.jonashietala.se/blog/2019/12/11/a_friendly_game_of_twilight_imperium</link>
      <description>A friendly game of Twilight Imperiumâ˜Published:December 11,2019in779b3efTagged:Gaming,Twilight ImperiumA few weeks ago I played my first game of Twilight Imperium (Fourth Edition). It wasfantastic.We were six players, most had played the third edition before. As I was quite hyped before the game, I had read up on the rules, watched a letâ€™s play or two and listened toa podcast dedicated to the game.(This is a bit of a play recap, so if you donâ€™t know anything about the game you might be confused.)The setupWe had a standard map, so everyone had a decent pie slice. We randomized the places and I got one with a clear path to Mecatol Rex, but I didnâ€™t think I would ever get there.The map.Each player could choose between two random factions, my choice was between The Universities of Jol-Nar and The Mentak Coalition. I was fairly lucky, since before the game I had a few factions I wanted to play (Jol-Nar, Hacan, the Barony and Nekro Virus), and besides many people say Jol-Nar is a pretty good faction, so the choice was easy for me.The other chosen factions were The Embers of Muaat and The Yin Brotherhood, who were my neighbours, and The Naalu Collective, The Barony of Letnev and The Nekro Virus. I was thinking the Naalu would have a good shot, since the person who plays them is a bit of a power gamer (I do have a little power gamer in myself as well).The beautiful starting units of The Muaat.The Muaat playerâ€™s reserve units.Ready for action.Early gameWe went through the rules and then we went out for lunch. As the shady person that I am, I spent some time trying to convince my Muaat neighbour we should be trade buddies, and maybe even trade support for the throne (to give each other a victory point, which weâ€™ll lose if we attack each other).He was a little reluctant, but we did establish a pretty great trade relationship. Each of us picked Trade several times, and we always traded everything we could. We didnâ€™t trade support for the throne, but we did trade a ceasefire.Instead I traded support for the throne with my other neighbour, the Yin Brotherhood. And I also gave him the faction promissory note, which I sold to anyone who wanted it. I heard the phrase â€œfeed everyone, which will feed yourselfâ€ in the podcast, which I tried to embrace as much as I could.Movements during the first round. Iâ€™m yellow, the Yin is purple, the Barony red, the Naalu black, the Nekro Virus green and the Muaat is blue.Altogether I had afantasticearly game. I had made peace with both of my neighbours, and I was getting a ton of money.  I even scored a few early points, keeping me in the lead or tied with the leader.Mid gameMy good luck continued. I kept getting more money while avoiding conflict, and I had built up a pretty sizeable fleet. I was a bit confused though, because I had heard on the podcast that rushing to Mecatol Rex was a common strategy, and several people in our group even said that they wanted to take it early. But none had done this so far.So thatâ€™s what I did. And I had a big enough fleet to hold it, probably for a couple of rounds. I did make a mistake thoughâ€”I left the planet closest to Mecatol empty and my neighbour, my friend and ally, parked a stupid looking ship there. Which I of course couldnâ€™t attack without losing a victory point (grumble, grumble).I was really scared of holding it, because I was spreading myself fairly thin and I was expecting people to build up their death balls and root me up. So I started reinforcing it with PDSâ€™s and built more units via a space dock I placed there.All the while I was still trading, and making good deals. I also got the tech where I get four trade goods whenever anyone activates my system, and I had an open deal to anyone that they could activate a system of mine and I would give them three of the trade goods (keeping one for myself). With this I was able to have the biggest death ball on the board, sitting on Mecatol Rex.By this time I had made a deal with the Naalu for their promissory note (which Iâ€™ve heard isextremelygoodâ€”game winning good) for my promissory note, telling him I would be researching War Suns. I was thinking I shouldnotgo for War Sunsâ€¦ But I was sitting pretty on Mecatol, thinking I could build a bigger death ball than anyone and then cruise to victory. So this is what I did, I built a War Sun and I felt I had a huge lead.Late gameMy main worry was the Yin flagship. Which, if youâ€™re not familiar, will blow upeverythingwhen it dies. So even if we were allies for now, if I ran away with the game too much he could just decide to say fuck it and nuke my fleet (which he after the game admitted was his plan all along). This is why I was actually planning to move away with my fleet, and just leave some ships and a ton of ground troops to defend it.But the Naalu guy appeared to save me. He went for a suicide mission to kill the flagship (earning a victory point) and made me relax. In a funny trade he then gave the Yin enough resources to rebuild the flagshipâ€¦ But I figured I had a small window to breath in.Of course, then the real disaster struck. I didnâ€™t know this, but thereâ€™s an Agenda that players can vote on, and if it passes thereâ€™s a 50% chance everything on Mecatol Rex will be wiped out. And it popped up, and of course everyone voted for it to pass. Andof coursemy death ball got completely destroyed, and I lost control of Mecatol.(Itâ€™s my eternal regret that I didnâ€™t take a picture of this amazing moment.)Itâ€™s pretty cool that something like this can happenâ€¦ But I wasnâ€™t very happy at that time. In fact I was quite unhappy (fucking idiotic game!!), and it seemed like the game had slipped out of my hands.I struggled on, and somehow, I was still in the game. My fleet was growing, and I had Dreadnaughts with great upgrades, and I could even reclaim my planet next to Mecatol from my â€œallyâ€ who had parked there for most of the game (we still had each otherâ€™s support for the king though). Disappointingly for me we had only a single research objective, but I was still tied for the lead.The last round came around, and I stole the Naalu zero initiative token. The Naalu however couldâ€™ve still won with Imperial (which he had taken many times during the game, something I shouldâ€™ve prioritized more) but the Nekro used an action card to force him to change (which he btw stole from me). This was quite upsetting to the Naaluâ€”who really hates kingmakersâ€”so he decided to take over his home planet, for revenge I assume, instead of taking my home planet.Action during the final round.In the end I had a small chance of victory: to take control over four hazardous planets, and I had only three. I tried to stall out, but was running out of command counters, so I had to take a shot. I took a system across the board, to get me my four planets, but the Naalu guy could still attack me and kill me. (If I had planned better I couldâ€™ve taken an extra planet from the same system, but I had only a single infantry.) He thought he could attack me later, so he did something else first. But I had an action card to place one of his tokens there, making him unable to attack that system.I thought Iâ€™d won, but I told him my winning condition (BIG mistake) so he made a last ditch effort to take back one of my hazardous planets. I managed to defend, thanks to a research I had which we both had forgotten about. And thanks to the Naalu token I was allowed to score first and snag the win. The token really was game winning.The really good thing about this game was that 3-4 people couldâ€™ve won this round, and it all came down to initiative order. Very close game, andextremelyfun (it wouldâ€™ve been fun even if I didnâ€™t win mind you).The state of the galaxy at the end of the game.The ending score. Jol-Nar at 10, Barony and Naalu at 8, Muaat and Yin at 6 and Nekro Virus at 5.Iâ€™m so looking forward to the next time I get to play this game.Published:December 11,2019in779b3efTagged:Gaming,Twilight ImperiumPreviousNext</description>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>We moved away from the city</title>
      <link>https://www.jonashietala.se/blog/2019/10/18/we_moved_away_from_the_city</link>
      <description>We moved away from the cityâ˜Published:October 18,2019in1dfca7bTagged:Life,Life HackingWhen me and my girlfriend Veronica moved to LinkÃ¶ping to study at the University the plan was never to stay there permanently. We just moved there to study but the longterm plan, if you can have one at that stage, was always to move back to the north of Sweden where we came from.After 8 years in LinkÃ¶ping weâ€™ve now lived a little more than a year in a small community in the north of Sweden, so hereâ€™s some of the experience of moving away from the city out to â€œnowhereâ€.Getting a remote jobWe liked LinkÃ¶ping more than we thought, so when we were finished with our studies after five years we stayed and found some work. Veronica started teaching at a school nearby and I got a job as a software developer, at the place I had interned twice before.Before I was finished with school and before starting to look for work the boss at the company contacted me and wanted to hire me. At least I hadnâ€™t made a fool out of myself during my time there. As the plan was still to eventually move north again I made this clear from day one and asked about the possibility of remote work. While it wasnâ€™t something they usually allowed, we agreed that if I worked 2 years locally and showed I was capable it should be possible.Taking the promise in good faith, and as I liked my time there, I accepted the offer. After all I could always try to find a new job if the remote option wasnâ€™t on the table when we decided to move.When the time finally came for us to plan our move up north, it wasnâ€™t just for me to start working remotely (as you might expect). While I had proven to be capable, and I got the support of the bosses, it was still hard pressed for me be allowed to work remotely. There were a lot of bureaucracy which almost made it all fall out in the sand. I even started looking for other companies and I was super clear that I would leave if we didnâ€™t reach an agreement before a certain date.In the end we came to an agreement that I would stay with them (we also discussed the possibility of me starting a consultancy business), but I could work from home. Before me moving I had also tried out working remotely during December and working from home one day a week.It was very important for me to find a remote job, since there are no on-site jobs for a software developer here. The only other options would be to change my profession or to start my own software company. Neither appealed to me at the time. Veronica is a teacher and she didnâ€™t have any problem getting hired.Working remotelyIâ€™ve only been working remotely for a year, so my thoughts on this might very well change. Iâ€™m also theonlyone working truly remotely, although we do have offices all over the world and we communicate a lot via mail and audio calls.These are the mostpositivethings about remote work for me:Fewer interruptionsOne of the things I hate more than anything is when youâ€™re working intensely, achieving a valuable flow-state, and you get interrupted for trivial reasons. My favorite is someone coming to ask if I â€œsaw the email he sent.â€ Thereâ€™s no possibility of them coming to disturb me when theyâ€™re at least a thousand km away.Yes thereâ€™s still possible to get disturbed by digital notifications, but they can be managed by turning them off, hiding them or ignoring them.Zero commuteI never realized how much time went to commuting. Even though Ionlyhad 30 min to work, thatâ€™s still 1 hour of every day or 5 hours per week almost wasted. Now I have less than a minute from my bedroom to my office.Of course itâ€™s still a benefit to go out and take some air before you start to workâ€”but I also have that option. Sometimes I go with my kid to kindergarten which gives me that small physical movement and fresh air thatâ€™s so beneficial for you.My own officeHaving my own office is amazing, not only because I can be alone, but because I can do with it whatever I want. For example the standard at work is to have two computer screens, but here I can have as many as I wantâ€”I have three.Thereâ€™s no noise in my office, while in LinkÃ¶ping there were always people talking (and sometimes dogs barking!) or people playing loud music. Instead I can fill it with whatever music I want, without having to wear headphones all the time, or just enjoy the silence when Iâ€™m trying to solve a difficult problem.I can fill my shelves with Lego buildings and I donâ€™t have to organize my desk just because someone else wants me to. Not to mention mysmall home gymright outside the office.FreedomWhen you work in an office you canâ€™t really do whatever you want. For example some might be offended if you show up to work with pyjamas pants. (Veronica almost goes nuts if I use sweat pants, let alone pyjamas pants.) Although Iâ€™ve never done the classic â€œwork without pantsâ€ I have enjoyed working in pyjamas pants :)While you might be able to workout continually during the day on-site, itâ€™s mostly relegated to doing some push-ups sometimes or going to the gym during lunch. I can do a few weightlifting reps, work a bit, then do some reps more and spread out my workout during the day. It also doesnâ€™t matter if I get all sweatyâ€”thereâ€™s nobody to take offense.Finally while it shouldnâ€™t be frowned upon to take a short nap during your break (thereâ€™s even a dedicated resting room at the office in LinkÃ¶ping) it can be looked down upon if you do. Well thereâ€™s nobody here to judge me if I do take a power-nap or build some Lego during my breaks.And of course there arenegativesto remote work:Less social interactionsEven though Iâ€™m definitely an introvert, and donâ€™t really enjoy social events, I really do miss the social aspect of working in an office. I know itâ€™s always being brought up in these â€œpros/cons of remote workâ€ postsâ€”yet I still didnâ€™t really understand it until I experienced it myself.In LinkÃ¶ping I used to play fighting games with a coworker during our afternoon break, something I do miss now. But also the small things like cracking a joke or just nodding to people you pass in the corridor are valuable.Self-control is more difficultWhile I find it easier to find time for focus time, or deep work time, I also find itâ€™s more difficult to have 100% focus on work when working from home. Itâ€™s just so easy to be distracted by one of my hobbies or something at the house like the dishes.Mostly itâ€™s the less interesting tasks, or less challenging tasks, that I have more trouble focusing on than the hard problems. If I work at the office then I donâ€™t really have much to distract me, other than going to a coworker for a chat, but at home there are simply more possible distractions.Knowledge isolationWhile it doesnâ€™t bother me that much I do feel more isolated now. I donâ€™t really know whatâ€™s going on at the office, or with the company at large, or what other people are up to. I assume this is one reason why people say to look for companies where everyone work remotely, not just a few.Itâ€™s important to consider these points within the context of my work. In lines with theideas of deep work, that you should focus on the tasks that provide the most value and prioritizing focus time on them, I have tried to position myself as someone who can focus on the problems at hand with few distractions.For example I donâ€™t coordinate people, which requires a lot of interactions and running around trying to get a hold of people. I will of course help people if I can, but if you want my help I do require you to have done some work to try to narrow down the problem. Otherwise itâ€™s easy to spend hours trying to replicate the problem, or even getting their setup up and running, only to find it was a different problem entirely.This kind of work, with a big emphasis on focus time, mashes well with my perceived strengths and weaknesses of remote work. I donâ€™t think it would work well if I was a manager, who would fill the day with shallow work (itdoes notmean less important work, itâ€™s just a different type of work) and relied more on being â€œin the knowâ€.Iâ€™m also not working remotely 100%, I do travel to LinkÃ¶ping about once every second month for a week at a time. Although itâ€™s not so nice to be away from Veronica and Isidor a whole week it absolutely helps offset the lack of social interaction at work. Iâ€™m not even sure I would like to work completely remote, unless I could offset it with social activities on my free time.  And of course I do talk to people at work tooâ€”I talk daily with the guy Iâ€™m working on this project with for example.All-in-all I do feel the benefits of working remotely outweigh the negatives for me.The benefits of movingGiven the prerequisite of having work, I feel two major benefits of our move:The cost of livingThe house in the towns of Sweden have risen dramatically the last years, starting around the time we moved to LinkÃ¶ping. But where we live now the house prices are stupid low, so low that people donâ€™t even build new houses because theyâ€™re not valuable enough to get a good loan to build them.We bought our house for, I kid you not, 1/10th of what a colleague of mine bought a smaller house for in LinkÃ¶ping (a while away from work). With the rising house prices itâ€™s almost worth 15x by now. Granted itâ€™s a much newer and fancier house, but thatâ€™s still a lot of money. And itâ€™s not like we bought a shitty house eitherâ€”itâ€™s older but itâ€™s in good condition.We live near our parentsBecause we have our 2-year old son Isidor, itâ€™sextremelyhelpful to live near our helpful parents. They help us fetch Isidor from kindergarten, take him for walks, babysit him when needed and just generally help us in various ways.When talking to other couples who donâ€™t have their parents they always remind me what a luxury this is. Theyâ€™re probably right.Veronica also didnâ€™t like the weather in LinkÃ¶ping and prefers the colder climate here in the north and likes the slower tempo of a smaller community. Iâ€™m personally not too bothered and I would like it either way.What weâ€™re missing from the cityI liked LinkÃ¶ping more than I thought I would. Before moving there I always thought I never wanted to live in a city, yet now I think I might even get comfortable in a larger city. There are a couple of things we miss:More activitiesIn a city there are more clubs, more workshops, easier to find people to join my weird hobbies and thereâ€™s just more things happening. For example I started training Brazilian Jiu-Jitsu in LinkÃ¶ping, but thereâ€™s nothing similar near us now. I used to play a lot of Android Netrunner (a collectible card game) and boardgaming, but thatâ€™s also much more difficult to organize here.For kids there are just tons of sports and other hobbies in a city. When we were little kids either did ice-hockey, football or basketball. Nothing much has changed on that front.FriendsAs we lived in LinkÃ¶ping for 8 years we had made friends there that we now moved away from. I guess this is just how it is when you move, but itâ€™s still something I miss.RestaurantsMaybe you could say this is an activity, but itâ€™s worth singling out as both I and Veronica misses the option to go out and eatâ€”we both love food after all. We didnâ€™t do it that often, and we do it much less now when we have kids, but itâ€™s still nice to have the option. Here we have a hamburger place, a pizza joint and a fancier restaurant a little bit outside. Otherwise weâ€™d have to drive at least an hour to find a nice restaurant.Hospitals are far awayBecause of cost savings the hospitals have been centralizing into the big city hospitals. We do have one here, thatâ€™s too small to be called a hospital, where you can get help for some things. But if thereâ€™s something bigger we need to travel either one or two hours. For example when giving birth weâ€™re looking at a 2 hour trip by car (or 1.5 hour if youâ€™re in a hurry!)There are other things that weâ€™re missing out on, like all the clothes stores downtown orreallyfast internet. But those are minors that I really donâ€™t care much about.Do I like it here?Yes, I do like it here. I could imagine myself staying in LinkÃ¶ping, but it made sense for us to move and it still does. So far the pros outweigh the cons, and I donâ€™t expect that to change.Published:October 18,2019in1dfca7bTagged:Life,Life HackingPreviousNext</description>
      <pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Food vacation in Japan</title>
      <link>https://www.jonashietala.se/blog/2019/07/18/food_vacation_in_japan</link>
      <description>Food vacation in JapanPublished:July 18,2019inc5ed540Tagged:Life,FoodMe and my friend spent 2 weeks in Japan and had a great time. I wasn’t planning on taking a lot of pictures, but I ended up sending a bunch back home as a ways of keeping my family up to date. When I look back most of them are about food… So I’ll turn this into a post about the various foods we ate in Japan!Breakfast and dinner at an Onsen.Japan has this supposedly famous breakfast, it’s more like a dinner than what we in Sweden call breakfast. And sure enough we got to eat our bellies full. I don’t usually eat breakfast, but this was actually pretty nice. Maybe it was because we slept almost 12 hours after our trip?We also had dinner with a lot of different courses (I only took one picture though). It was also very good but I don’t really know what we ate…What I ate at aMaid café. The ketchup is supposed to beYotsuba, but I don’t see it.And of course we had to visit aMaid café. The whole experience as extremely weird… Unfortunately the food wasn’t that great either, it was the only time I was disappointed of the food in the whole trip (except the worthless airline food).Wagyu. Japanese beef.We ate some kind of local meat—Wagyu—at a fancy restaurant. It wasextremelygood. We ate a lot of great food during our trip but this was my favorite. Of course it was expensive, but you should still consider it if you ever go to Japan.Yakiniku, meat we got to grill ourselves.My friend was really hyped to go to an all-you-can-eat place where you grill your meat yourself. And for good reason—it was amazing. I love meat, and the meat was great, and I enjoyed the process of grilling the meat. Also a must if you ever go to Japan IMHO.Shabu-shabu. A hot pot where we dumped meat and vegetables then fished them out and ate them.Another similar concept is Shabu-shabu. Instead of grilling the meat you drop it into a pot with boiling water and fish it up after a few seconds. It was also very good, but not as great as Yakiniku.Assortment of sushi and sashimi.Of course we had to eat sushi. I don’t remember how many times, but we ate it several times in different forms. This was the fanciest setup I came across.Some kind of meat explosion. It wasn’t done in the middle but we had a small stone we could finish it off with.Different meals with puffer fish.Rice bowls with sashimi on top (don’t know the correct term). We also took some dishes we could grill ourselves.As you can see we grilled our own food (more or less) several times. I really liked to interact with the food and of course how you can decide yourself how well you want your food grilled.And we tried another famous Japanese food:Fugu—the puffer fish that’s deadly if you don’t prepare it correctly. It was kind of underwhelming to be honest, they weren’t all that tasty.Yakitori. Skewered chicken.Skewered chicken was also really, really good. My favorite type was absolutely the one with chicken skin. It wassooogood. Unfortunately you could easily eat very many of them…Conveyorbelt sushi.Another concept I loved was conveyor belt sushi. You have a bunch of plates going around and you can just grab one whenever you want. You can also order specific sushi if you don’t see the ones you like.Conveyor belt sushi can be dangerous. Each plate had about 2 sushi pieces, you can see my tower to the left and my friend’s to the right. I ate 30+ sushi pieces, which is more than double what I normally eat.Of course I do have a love-hate relationship with it. On one hand it’s great that you can eat as much as you want, and only your favorite pieces, but on the other hand your wallet and stomach will complain if you have poor impulse control—just like me.Having a screen where you can order drinks or food was quite common.We ate a bunch more food which I didn’t capture with my camera. For instance:RamenBurritos (not Japanese but still very good)Some kind of Vietnamese foodIn summary I’ll conclude the food in Japan was great.Published:July 18,2019inc5ed540Tagged:Life,FoodPreviousNext</description>
      <pubDate>Thu, 18 Jul 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>My MCU movie ranking</title>
      <link>https://www.jonashietala.se/blog/2019/04/25/my_mcu_movie_ranking</link>
      <description>My MCU movie rankingPublished:April 25,2019in13df80bTagged:MoviesI did theMCU Movie Re-Watchagain this year in preparation for Avengers: Endgame. I wasn’t a huge MCU fan before doing the same re-watch for Infinity War, but after that I became one.For fun I tried to rank the movies as I saw them, this is some sort of accounting my rankings and how they changed compared to last year. I did see Endgame yesterday, but I won’t be spoiling it here (other than I thought it was very good).S-rankThe creame of the crop. The films I never get tired of.MovieRank this yearRank last yearchangeAvengers: Endgame1--Guardians of the Galaxy25+3Avengers: Infinity War34+1Iron Man41-3Captain America: The Winter Soldier53-2Yes I’m ranking Endgame as #1. It might very well be me coming from it fresh and I haven’t settled on it yet.Guardians of the Galaxy jumped up for a very simple reason: It’s the movie with the greatest re-watch value. I just love everything about it.Iron Man and The Winter Solder went down a few pegs, but they’re stillverygood movies. They have quite a different feeling than the others.A-rankAlso very good movies, but not in the same league as the above.MovieRank this yearRank last yearchangeAnt-Man and the Wasp6--Spider-Man: Homecoming710+3Thor: Ragnarok812+4Doctor Strange96-3Ant-Man107-3Black Panther112-9These are all pretty close to me and could easily be rearranged.Although the Ant-Man movies don’t perform very well on the box office compared to the other MCU movies I absolutely love them. They’re just sofun.Both Thor: Ragnarok and Spider-Man have a very high re-watch value. In contrast Black Panther didn’t hold up well compared to when I saw it at the cinema last year. The anticipation hype probably made me appreciate it more than usual.I do love Doctor Strange, he’s probably my favorite hero together with Iron Man. When looking at it now it feels weird it’s only ranked 9th.Rank BGood movies which are only missing something a little extra.MovieRank this yearRank last yearchangeCaptain Marvel12--Guardians of the Galaxy 2139-4Captain America: Civil War14140The Avengers: Age of Ultron1513-2The Avengers1611-5Captain America: The First Avenger178-9GotG 2 is in a bit of a weird spot. It depends heavily on your mood when you’re watching it: it can be amazing or it can fall a little flat. It does have some fantastic moments.I also didn’t know how to rank Captain Marvel. Don’t get me wrong—it was a good movie. But I didn’t get the “oh my god nerdgasm” feeling (well I did get it a little). When I re-watch it it’s ranking will probably change.When I look at the ranking lists of others the duo Civial War and The Avengers are often very highly rated. But I personally don’t quite get the hype, they’re good but not very good.The First Avenger has some cool moments but I honestly zoned out a bit at the end. Not a good sign.Rank COkay movies.MovieRank this yearRank last yearchangeIron Man 31815-3Iron Man 21918-1Thor2016-4It’s a little strange. I love Iron Man the character but there are problems with his 2nd and 3rd movies. Everything including Iron Man—and of course Justin Hammer—is great but the villains are lackluster and there’s just something missing.Similarly Thor didn’t age very well.Rank DWatchable but not something I’d choose unless for a special occasion.MovieRank this yearRank last yearchangeThe Incredible Hulk2119-2Thor 2: The Dark World2217-5I really don’t think they’re bad movies. But there’s nothing really noteworthy in them either. They’re mostly boring.ObservationsIt’s natural that movies with high re-watch value tend to rise in the rankings. But it got me thinking—do good movies have high re-watch value? Can you identify good movies by looking at how re-watchable they are?GotG, Thor: Ragnarok and Spider-Man surprised me this time of how much more I enjoyed to see them again compared to the other films. Maybe that’s a good indication of their quality?Another thing that stands out is how much your mood and the watching experience contributes. For example I was ecstatic after having seen Black Panther, Infinity War and Endgame at the cinema. That will of course have a huge effects on their rankings. In contrast I was kind of tired and zoned out while watching some of the other movies, like The First Avenger.Lastly I’ll note that the MCU really embodies the phrase “the whole is greater than the sum of its parts”. While they might not be the best individual movies I’ve ever seen, the whole experience of 20 interconnected movies really elevates everything a notch or two.I’ve never been as hyped for a movie as I was for Infinity War and Endgame. It was almost ridiculous and I never thought they could live up to my expectations. But they exceeded it.Can’t wait for my next re-watch.Published:April 25,2019in13df80bTagged:MoviesPreviousNext</description>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>I'm writing a book: Why Cryptocurrencies?</title>
      <link>https://www.jonashietala.se/blog/2019/04/17/im_writing_a_book_why_cryptocurrencies</link>
      <description>I'm writing a book: Why Cryptocurrencies?Published:April 17,2019Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?I decided to write a book. It’s called “Why Cryptocurrencies?” and I will be uploading chapters as I complete them. It’s available toread online for free. I’ve only uploaded the introductory parts but I’ve got a bunch more planned.Why write a book you ask? Well, why not?I wanted to have a side project I can work on. It’s something I can use to improve my writing, even more than on this blog. And it’s been on my bucket list forever. Now just felt like a good time to try my hand at it.Cryptocurrencies is such a misunderstood topic where everyone seem to have an opinion, but the focus seem to only be on the speculative side. Unless of course they’re dismissed outright. All without an understanding of what they are and what they can do.This is what the book is about. To explain what they are and how they can be useful. Time will tell if I manage to contribute anything to the subject or not.Published:April 17,2019Revised:February 17,  2024in490c42fTagged:Self-publishing,Why Cryptocurrencies?PreviousNext</description>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Picking up rust by writing a QR code generator</title>
      <link>https://www.jonashietala.se/blog/2019/04/17/picking_up_rust_by_writing_a_qr_code_generator</link>
      <description>Picking up rust by writing a QR code generatorPublished:April 17,2019Revised:April 17,  2019in02554bcTagged:RustI wanted to pick uprustagain after having used it many years ago. After around 5 years or so I didn’t really know where to start?Approaches to picking up a languageWhen learning, or as in this case re-learning, a programming language there are different approaches. For example:Read book(s).Solve different kinds of programming puzzles.Follow a tutorial while following along with your own code.Make a small game.Using it in a real project.I’ve read a lot of programming books and in general it’s a very good tool to learn new things. For rust you could for example readThe Rust Programmaing Language, which is a pretty good introduction.During my university time I did a little competitive programming, so you’d think I’d love the idea of solving programming puzzles. For example viaAdvent of Code,Project Euleror doingkatas. But truth be told—I’m not that into such puzzles. I prefer making “real” projects that does something useful for me.As a sidenote katas in classical martial arts is a waste of time if you want to get good at fighting or self defense. You need to train against resistance in as realistic scenarios as possible, like you do when sparring. Coding katas are more useful but I personally don’t enjoy them.Following a tutorial, like the excellentwriting an OS in Rust, can be amazingly useful. Both for learning a language but mostly for learning about a specific domain—like learning about operating systems.Personally though after programming for several years, and having used so many languages, I prefer to just pick up a language and try to create something in it.A QR code generatorBy chance I found a thoroughQR code tutorialand it got me thinking, is it a good starter project?It’s big enough to let me explore many of rust’s features.It’s limited in scope.I get to learn how QR codes work, which is something I’ve been curious about.There’s a tutorial, so in theory I just have to implement it.There are tons of reference implementations I can compare to if I get stuck.Seems pretty good! SoI made one.This is how you can produce a QR code in a string representation:externcraterqr;userqr::{Qr,StringRenderer};fnmain(){letqr=Qr::new("HELLO WORLD").unwrap();lets=StringRenderer::new().render(&amp;amp;qr);println!("{}",s);}Or generate an svg:externcraterqr;userqr::{Qr,SvgRenderer,Color,ECLevel};fnmain(){letqr=Qr::with_ecl("HELLO WORLD",ECLevel::Q).unwrap();lets=SvgRenderer::new().light_module(Color::new(229,189,227)).dark_module(Color::new(119,0,0)).dimensions(200,200).render(&amp;amp;qr);println!("{}",s);}There’s also a simple cli for the above tasks:&gt; cargo run --features cli -- "HELLO WORLD"██████████████        ██    ████████████████          ██  ████    ██  ██          ████  ██████  ██    ██  ████  ██  ██████  ████  ██████  ██  ██████████  ██  ██████  ████  ██████  ██  ████  ██    ██  ██████  ████          ██    ██    ██  ██          ████████████████  ██  ██  ██  ██████████████████  ██████  ████████  ████    ██████  ████  ████  ████████  ██        ████████  ████████  ██  ████      ██    ██████  ████  ██      ██  ████      ████████  ████████████████  ██████  ████████████      ██    ██  ████████████████    ████    ████    ██████████          ██  ██  ██    ██    ██  ████████  ██████  ██  ████  ██    ██      ████████  ██████  ██  ██  ██████      ██  ████  ██████  ██    ██        ██        ██████          ██  ██████    ██████    ██████████████████    ██  ██              ██You can customize the svg output there as well:&gt; cargo run --features cli -- "HELLO WORLD" -t svg --bg '#e5bde3' \--fg '#700' --width 200 &gt; hello_world.svgThedocumentationand overall code quality should be fairly good but as this was just a learning project I don’t plan on extending it with new features.Published:April 17,2019Revised:April 17,  2019in02554bcTagged:RustPreviousNext</description>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Easy setup of a static site on Amazon S3 with SSL</title>
      <link>https://www.jonashietala.se/blog/2019/04/03/easy-setup-of-a-static-site-on-amazon-s3-with-ssl</link>
      <description>Easy setup of a static site on Amazon S3 with SSLPublished:April  3,2019in0467533Tagged:BlogI’ve been hosting my site on Amazon S3 for a while now but I never activated SSL for it. I just never got around to it, probably the usual procrastination.When I had to setup a new site for another project I chose to host on Amazon as well. Although there are many other free options, why switch when it’s working? This time I activated SSL as well—and documented it. It’s all quite easy.Host a static site on S3First we need tocreate a bucket on S3, it’s straightforward. When you’re done activate static website hosting:Make sure to add the Index document.I use acrappy scriptto sync my site, but there are many other tools. You could also upload files via theS3 consoleto get started. When you’ve uploaded a site you can visit the Endpoint to confirm that it works. For example:http://whycryptocurrencies.com.s3-website.eu-north-1.amazonaws.com/Custom domainThis is a really crappy url, so let’s use our custom domain. Add a CNAME record pointing to the Endpoint. It might be a good idea to add a redirect from www to @ (or vice versa). This is how it might look onnamecheap:Here I redirect from www to @, but it really doesn’t matter which way.After waiting for the settings to update, which can be annoying for someone as impatient as myself, you can then visit the site from your domain.For examplehttp://whycryptocurrencies.com, but without SSL support.CloudFrontTo enable SSL we need a CloudFront distribution. Don’t worry, it’s also free and might come with other benefits.Start bycreating a distribution. Make sure to create a web distribution and go through these options:Origin domain name
Select your S3 bucketRedirect HTTP to HTTPSCompress objects automaticallyAlternative domain names, input your domain. Likewhycryptocurrencies.comUse the default cloudfront SSL certificate for now, we’ll change this laterDefault root object:index.htmlWhen it’s deployed, wait for it, we can test access by visiting the address under Domain Name. For me that washttp://d29jm6e61zesqa.cloudfront.net.You will get redirected to a https address but we need to update our custom domain to point to the cloudfront address. Like so:When the settings have updated and we visit our domain we will get a “Insecure Connection” warning because the SSL certificate we’re using is only valid for cloudfront endpoints, not our own domain. Fixing this is the final step.Enable SSL via AWS Certificate ManagerAt first I thought I had to uselet’s encryptto create a SSL certificate. They are great but all guides I could see involved a bunch of command line work, which you had to do regularly to renew your certificate. But there’s an easier way directly in AWS, which is also free.If we go back to our CloudFront distribution end Edit the General settings we’ll see the SSL Certificate settings:Click on the “Request or Import a Certificate with ACM” to get to theAWS Certificate Manager(or just lick the link).Make sure to input both your domain and a subaddress wildcard as domain names. I usedwhycryptocurrencies.comand*.whycryptocurrencies.comfor example.It doesn’t matter if you use DNS or email validation.  If you choose DNS validation you’ll be asked to add a new subdomain with a CNAME value. Like so:_c20fab3bbd32430576cfdcdd43b090d1 is the subdomain with the value _7e714a15b4afabada0784649c5eac502.hkvuiqjoua.acm-validations.aws.… And we’ll need to wait again until it’s validated.Finally we just need to tell CloudFront to use the new certificate. Go back and edit the General settings choose the Custom SSL Certificate option:And we should be done! Nowhttps://whycryptocurrencies.comshould give a valid cert and http should redirect to https.Remember how I said we need patience? When I did all these steps firefox kept warning me about a bad SSL cert and I couldn’t for the life of me see where I went wrong. After a while I gave up and went to bed, but the next day it all magically worked. Turns out I didn’t have enough patience.You know some say sleeping solves your problems? In this case it literally did.Published:April  3,2019in0467533Tagged:BlogPreviousNext</description>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Default audio card in linux</title>
      <link>https://www.jonashietala.se/blog/2019/03/16/default_audio_card_in_linux</link>
      <description>Default audio card in linuxPublished:March 16,2019in857c294Tagged:Void LinuxThere are a bunch of posts about making your audio work by default in Linux but none that just worked for me.I had three separate problems:Getting soundPlaying sound from multiple sources at the same timeAudio card getting different numbers on rebootGetting soundHere I followedthis excellent guide, here’s a summary:Firstly identify card number and device number:~&gt; aplay -l**** List of PLAYBACK Hardware Devices ****card 0: Audio [TEAC AI-101 Audio], device 0: USB Audio [USB Audio]Subdevices: 0/1Subdevice #0: subdevice #0card 1: Generic_1 [HD-Audio Generic], device 0: ALC1220 Analog [ALC1220 Analog]Subdevices: 1/1Subdevice #0: subdevice #0card 1: Generic_1 [HD-Audio Generic], device 1: ALC1220 Digital [ALC1220 Digital]Subdevices: 1/1Subdevice #0: subdevice #0card 2: Generic [HD-Audio Generic], device 3: HDMI 0 [HDMI 0]Subdevices: 1/1Subdevice #0: subdevice #0card 2: Generic [HD-Audio Generic], device 7: HDMI 1 [HDMI 1]Subdevices: 1/1Subdevice #0: subdevice #0card 2: Generic [HD-Audio Generic], device 8: HDMI 2 [HDMI 2]Subdevices: 1/1Subdevice #0: subdevice #0card 2: Generic [HD-Audio Generic], device 9: HDMI 3 [HDMI 3]Subdevices: 1/1Subdevice #0: subdevice #0card 2: Generic [HD-Audio Generic], device 10: HDMI 4 [HDMI 4]Subdevices: 1/1Subdevice #0: subdevice #0card 2: Generic [HD-Audio Generic], device 11: HDMI 5 [HDMI 5]Subdevices: 1/1Subdevice #0: subdevice #0But to test withspeaker-testwe need info from theaplay -Lcommand:~&gt; aplay -LnullDiscard all samples (playback) or generate zero samples (capture)sysdefault:CARD=AudioTEAC AI-101 Audio, USB AudioDefault Audio Devicefront:CARD=Audio,DEV=0TEAC AI-101 Audio, USB AudioFront speakerssurround21:CARD=Audio,DEV=0TEAC AI-101 Audio, USB Audio2.1 Surround output to Front and Subwoofer speakerssurround40:CARD=Audio,DEV=0TEAC AI-101 Audio, USB Audio4.0 Surround output to Front and Rear speakerssurround41:CARD=Audio,DEV=0TEAC AI-101 Audio, USB Audio4.1 Surround output to Front, Rear and Subwoofer speakerssurround50:CARD=Audio,DEV=0TEAC AI-101 Audio, USB Audio5.0 Surround output to Front, Center and Rear speakerssurround51:CARD=Audio,DEV=0TEAC AI-101 Audio, USB Audio5.1 Surround output to Front, Center, Rear and Subwoofer speakerssurround71:CARD=Audio,DEV=0TEAC AI-101 Audio, USB Audio7.1 Surround output to Front, Center, Side, Rear and Woofer speakersiec958:CARD=Audio,DEV=0TEAC AI-101 Audio, USB AudioIEC958 (S/PDIF) Digital Audio Output...Now we can test:speaker-test-tsin-f800-Dfront:Audio-c2#No sound for mespeaker-test-tsin-f800-Dsysdefault:Audio-c2#This works!Now we know thatcard 0: Audio [TEAC AI-101 Audio], device 0is the card we want. Try this in~/.asoundrc:pcm.!default {type plugslave {pcm "hw:0,0"}}ctl.!default {type hwcard 0}If we instead have for examplecard 1, device 2then we usehw:1,2andcard 1.Dospeaker-test -t sin -f 800to test or something else like youtube.Sound from multiple sourcesDirectly fromthe same guide:pcm.!default {type plugslave.pcm "dmixer"}pcm.dmixer  {type dmixipc_key 1024slave {pcm "hw:0,0"period_time 0period_size 1024buffer_size 4096rate 44100}bindings {0 01 1}}ctl.dmixer {type hwcard 0}Make sure to use your card and device numbers.Different card numbers after rebootAfter reboot the card number changed, it changed between 0, 1 and 2.There were various suggestions online but most didn’t work. I found one suggestion somewhere that said I could just use the card name. I randomly tried something that worked!card 0: Audio [TEAC AI-101 Audio], device 0: USB Audio [USB Audio]The name of the card is “Audio” and the~/.asoundrcbecomes:pcm.!default {type plugslave.pcm "dmixer"}pcm.dmixer {type dmixipc_key 1024slave {pcm {type hwcard "Audio"device 0}period_time 0period_size 1024buffer_size 4096rate 44100}bindings {0 01 1}}ctl.dmixer {type hwcard "Audio"}Much simpler than messing around with udev to get the card to always occupy the same card number, especially since I often turn on and off the amplifier.Published:March 16,2019in857c294Tagged:Void LinuxPreviousNext</description>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The ASIC pit of despair</title>
      <link>https://www.jonashietala.se/blog/2019/03/13/the_asic_pit_of_despair</link>
      <description>The ASIC pit of despairPublished:March 13,2019ind3e5170Tagged:CryptocurrencyMonero has once againchanged the POWto brick ASICs following confirmation that85% of Monero’s hashrate were ASICs.Recurring hard forks to brick ASICs is a very dangerous game and what better to illustrate this than with an xkcd-style plot?You’re safe on the edges but how do you bridge the gap?Published:March 13,2019ind3e5170Tagged:CryptocurrencyPreviousNext</description>
      <pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Tufte style sidenotes and marginnotes in Pollen</title>
      <link>https://www.jonashietala.se/blog/2019/03/04/pollen_sidenotes</link>
      <description>Tufte style sidenotes and marginnotes in PollenPublished:March  4,2019Revised:April 29,  2020in94ae8ecTagged:Programming,Pollen,RacketWhen evaluating PollenI complainedabout markdown/pandoc’s lack of sidenote handling. I have solved it for Pollen but felt it deserved it’s own post.A caveat: I generatedTufte CSSstyle sidenotes and marginnotes which made it more complex than if I had simply generated “standard” sidenotes. If you want to adapt this yourself I’m sure you can simplify the code to fit your needs.So in Pollen markup I want to be able to write this:Lisp is a pretty nice◊sn{cult}language.◊ndef["cult"]{Some may say it's the language to rule them all.}To generate this:Lisp is a pretty nice&lt;/label&gt;Some may say it's the language to rule them all.&lt;/span&gt;language.The order of◊snand◊ndefshouldn’t matter.By having the sidenote span right in the middle of the text it allows us totoggle it without javascript. This appeals to me as a heavy noscript user but it has a significant drawback: you cannot have block level tags likedivorpinside aspan.You also cannot use anasideinstead of aspandirectly here as you cannot have it inside a paragraph tag.Tufte has both sidenotes and marginnotes which we can implement in a general way. This is the markup:This has a sidenote with numbers.◊sn{note}This has a marginnote without numbers.◊mn{note}◊ndef["note"]{The note itself}These are the Pollen tags with their markup difference:(define(mnref-in)(note-ref#:label-class"margin-toggle"#:label-content"⊕"#:span-class"marginnote"#:refref-in))(define(snref-in)(note-ref#:label-class"margin-toggle sidenote-number"#:label-content""#:span-class"sidenote"#:refref-in))We’ll get to thenote-refdefinition in a little bit.We can use the same markup for sidenote and marginnote content. The idea is to store the content in a map and look it up and insert it into the markup later.;; The note ref -&gt; definition map(definenote-defs(make-hash));; The tag(define(ndefref-in.def)(defineid(format"nd-~a"ref-in))(defineref(string-&gt;symbolid))(hash-set!note-defsrefdef)"")Simple enough right? If we want to apply post-processing, like adding paragraphs, we need to do some more work. Especially since we cannot haveptags inside thespan! I solved this by instead wrapping paragraphs with a span I style like paragraphs. This is the actual code:(define(ndefref-in.def)(defineid(format"nd-~a"ref-in))(defineref(string-&gt;symbolid));; Because p doesn't allow block elements;; and span doesn't allow p elements;; use a special span .snp element to emulate paragraphs.;; This is workaround is required as we want to inject a whole sidenote;; inline to use the checkbox css toggling to avoid javascript.(define(wrapxs)(list* 'span'((class"snp"))xs))(definecontent(decode-elementsdef#:txexpr-elements-proc(λ(x)(decode-paragraphsxwrap))#:string-procstring-proc))(hash-set!note-defsrefcontent)"")Herestring-proccan contain smart quotes expansion or whatever extra decoding you want to use.Now to another problem: we want to have refs before defs and vice versa. This means we might parse the references before we’ve registered the definitions. We can solve this by making a decode pass in the root tag and marking refs with a special symbol which we replace. This can be made very general:;; Register symbols which gets inline replaced;; by function return values.(definereplacements(make-hash))(define(register-replacementsymf)(hash-set!replacementssymf))(define(replace-stubsx)(let((f(hash-refreplacementsx#f)))(iff(fx)x)))Which is used like this:(register-replacement'sym-to-replace(λ(x)"REPLACED"))(define(root.args)(definedecoded(decode-elementsargs#:entity-procreplace-stubs)))Whererootin Pollen allows you to transform the whole document.And now we can get back to our reference tag:(define(note-ref#:label-classlabel-class#:label-contentlabel-content#:span-classspan-class#:refref-in)(defineid(format"nd-~a"ref-in))(defineref(string-&gt;symbolid))(define(replaceref)(definedef(hash-refnote-defsref#f))(unlessdef(error(format"missing ref '~s'"ref)))`(span(label((class,label-class)(for,id)),label-content)(input((id,id)(class"margin-toggle")(type"checkbox")))(span((class,span-class)),@def)))(register-replacementrefreplace)ref)It’s basically just registering a replacement function which returns the markup:`(span(label((class,label-class)(for,id)),label-content)(input((id,id)(class"margin-toggle")(type"checkbox")))(span((class,span-class)),@def)))Are we done? Almost. This would create markup wrapped in a span, like:&lt;span&gt;&lt;/label&gt;Some may say it's the language to rule them all.&lt;/span&gt;&lt;/span&gt;The replacement function can only return a single element so we had to wrap it in something. In this particular case it’s not a big deal but it is indeed a general limitation of Pollen tags. Is it something we can get around?Yes it is. We can add a special symbol in the markup:`(splice-me;&lt;- instead of span(label((class,label-class)(for,id)),label-content)(input((id,id)(class"margin-toggle")(type"checkbox")))(span((class,span-class)),@def)))And then do an extra post process step to replace it with it’s content, inline:;; A splicing tag to support returning multiple inline;; values. So '((splice-me "a" "b")) becomes '("a" "b")(define(splice-me?x)(matchx[(cons'splice-me_)#t][else#f]));; Expand '(splice-me ...) into surrounding list(define(expand-splicesin)(if(list?in)(foldr(λ(xacc)(if(splice-me?x)(append(expand-splices(cdrx))acc)(cons(expand-splicesx)acc)))'()in)in))(define(root.args)(definedecoded(decode-elementsargs#:entity-procreplace-stubs));; Expand splices afterwards(txexpr'rootempty(expand-splicesdecoded)))We need to do it afterdecode-elementssince it doesn’t support such a transformation.And we’re done! It wasn’t very straightforward to implement Tufte style notes but with Pollen you do get the ability to do it.Published:March  4,2019Revised:April 29,  2020in94ae8ecTagged:Programming,Pollen,RacketPreviousNext</description>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>First impressions of Pollen</title>
      <link>https://www.jonashietala.se/blog/2019/03/03/first_impressions_of_pollen</link>
      <description>First impressions of Pollenâ˜Published:March  3,2019Revised:April 29,  2020in94ae8ecTagged:Programming,Pollen,RacketAfter having consumedPractical TypographyI took a look at the library he wrote to create books for the web calledPollenwritten inRacket. Iâ€™ve only used it a little but I feel I can give my first impressions of it.What I likeThe first thing I really like is Pollen enables powerful text transformation using X-expressions. Theyâ€™re like regular lisp S-expressions which models your document as a tree where transformations are easy.For example this expression:`(blockquote"Everyday life is like programming, I guess. If you love something you can put beauty into it."(footer(span((class"author"))"Donald Knuth")))Corresponds to this html:&lt;blockquote&gt;Everyday life is like programming, I guess. If you love something you can put beauty into it.&lt;footer&gt;Donald Knuth&lt;/span&gt;&lt;/footer&gt;&lt;/blockquote&gt;Complex transformations really should be done with structured data, like X-expressions or ASTs in compilers, and not on raw html. Itâ€™s easier and less error prone.Secondly I actually like Pollenâ€™s markup. It is more verbose than markdownâ€”or othersâ€”but not unbearably so:â—Šh1{Pollen markup}A link toâ—Šlink[my-site]{my site}.â—Šul{â—Šli{First item}â—Šli{Second item}â—Šli{Third item}}â—Š(definemy-site"http://jonashietala.se")#Markdown markupA link to[my site][my-site].*First item*Second item*Third item[my-site]:http://jonashietala.seWhat it gives you is flexibility to freely define your tags however you want.See for example how I handledembedding youtube linkson this site. I basically run a regex on the html to convert bare links (surrounded by a paragraph!):https://www.youtube.com/watch?v=NIbr-mLi4DUTo&lt;/div&gt;&lt;/div&gt;In Pollen you simply define a tag that returns the video-wrapper directly, so the markup is simple without magic:â—Šyt{https://www.youtube.com/watch?v=NIbr-mLi4DU}Of course youcoulddo string replacements as well if you want to, like if you want to convert â€œ---â€ to â€œâ€”â€ or â€œ...â€ to â€œâ€¦â€. But Pollen allows you to leave that to when it makes sense.Another consequence is youâ€™re not limited to the features supported by your chosen markup. For instance if you want to add a footer in a quote with author and source links in markdown you need to drop down to raw html.An example thatâ€™s bothered me quite a bit is sidenotes. Markdown doesnâ€™t support sidenotes. Neither does pandoc extended markdown, it only support footnotes but thatâ€™s not what I want. So my choice is to either create pandoc extensions myself or settle for raw html. With pollen you have full power to implement them in exactly the form you want.The drawback here is you have to implement the functionality yourself.What I donâ€™t likeOther static site generators allow you to route input files to output files. For example this site has post files like:posts/2019-03-01-home_office_renovation.markdownWhich are routed to:blog/2019/03/01/home_office_renovation/index.htmlTo generate pretty urls. Youâ€™re also not limited to one output file or even an input file, youâ€™re in full control.Pollen however has a one-to-one mapping of input and output files. So I cannot have apostsdirectory with all my posts so I can list them in any easy manner but I would have to replicate the folder structure if I want to have any control over the output urls. This is bothersome.Another annoyance is output files are generated in the same directory as your input files. So while Hakyll collects outputs in a_sitedirectory, making it very easy to deploy a site, Pollen pollutes the base directory:site.html.pm    &lt;- input file in Pollen markupsite.html       &lt;- generated output fileThis probably bothers me much more than it should. I want order and cleanliness.Finally Pollen doesnâ€™t handle dependencies very well. For example to update the output file I need to update the exact input file, even if the input file uses data from other files. Which it will do in for example table of content files.I had some trouble integrating sass for my css files. I used a system command which combines all .scss files to a single .css output file. I managed to get Pollen to do the generation for me but I couldnâ€™t get it to track dependencies properly (so if I change any .scss file I want the .css to always regenerate).In the end I just threw together a simple script usinginotifywaitwhich calls sassc when a .scss file change:#!/bin/bashsasscsass/main.scss--stylecompressed&gt;css/main.cssecho"created: css/main.css"inotifywait-eclose_write,moved_to,create-msass/|whileread-rdirectory events filename;dosasscsass/main.scss--stylecompressed&gt;css/main.cssecho"updated: css/main.css"doneThis touches on my final annoyance with Pollen. Pollen only regenerates files when you ask for them. So you need to switch to the browser, refresh and Pollen only then starts creating your file. This usually takes a second or two but thatâ€™s long enough to be very annoying.Instead I want all my files to regenerate as soon as I save the file. This is howinotifywaitand to my knowledge all good static site generators including Hakyll work.Where Pollen makes the choice power over simplicity with itâ€™s markup language it makes the opposite trade-off with the file handling. I wouldâ€™ve liked it better if it chose power in both cases.Should you use it?The drawbacks I see are all related to file management and the benefit is the powerful markup.If youâ€™re happy with the features markdown provides there are plenty of better alternatives. There are dirt simple site generators if you just want a site with minimal effort. Then there are libraries like Hakyll where you need to program a bit but you get more power.But if you require a more powerful markup language than what the alternatives like pandoc flavored markdown (which has a number of extensions compared to regular markdown) and youâ€™re willing to put in work to make it the way you want it then Pollen is a good choice.If I were to write a bookâ€”which is Pollenâ€™s reason of existanceâ€”I would probably choose Pollen. Maybe Iâ€™d try to improve the file handling or maybe learn to live with it.Will I migrate this blog to Pollen? While I would love the markup Iâ€™m not sure the effort is worth it. I would absolutely have to improve the file handling before I even consider it which probably means I wonâ€™t be bothered.Published:March  3,2019Revised:April 29,  2020in94ae8ecTagged:Programming,Pollen,RacketPreviousNext</description>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Home office renovation</title>
      <link>https://www.jonashietala.se/blog/2019/03/01/home_office_renovation</link>
      <description>Home office renovationPublished:March  1,2019in06123d7Tagged:Home officeWhen we moved back to our childhood community and bought a house I had one pretty big requirement: I had to have a home office as I need to work remote. There simply isn’t any software development work for me here.So the later part of 2018 and early 2019 we’ve renovated an old storage room in the basement and made it into a home office. The storage area itself was moved into an old boiler room with more efficient shelving.I haven’t done any renovation project before and I can’t believe how long it took. It was just 1 room! Or 1.5 if we’re being honest.Unfortunately I didn’t take enough progress pictures and the before pictures were taken with some shoddy mobile camera. Hopefully you can get the idea anyway.This is the entrance. You enter from a dead end corridor.My first thought was to tare down the wall to make a large room. Unfortunately it’s a supporting wall made of concrete.It comes with a nice color scheme and the distribution board.The walls had some cracks and holes after we ripped out the shelves. The distribution board annoyed me as it takes up a whole wall which might have been perfect for shelves or a whiteboard.We got help from Veronica’s sister’s boyfriend who’s a painter to take care of the walls. I was planning to put up a whiteboard but we opted to wait and see where to best place it.These are the only in-progress pics I have. We’re in the middle of gluing the ceiling plates.For the ceiling I got some sound dampening plates (is the plate the right word? They’re quite soft) which we glued to boards we nailed to the ceiling. I wasreallyworried when we were putting them up that they would look misaligned or weird but they actually turned out very well.Ceiling with LED lights.I got some high quality LED panels for lighting. Lighting is important as you can get headache if you sit in a room long periods if it’s poorly lit or poor quality lights. I had some mounts as well but they didn’t really work so we just hung them up on some wires. Not as pretty but I really don’t notice it.The distribution board is hidden away nicely behind an IKEA kitchen cupboard.Here the renovation is done. Naturally the computer is the first thing up.A green broadloom on the floorWe didn’t bother to remove the existing glued carpet and instead just added a carpet on top. Work smarter not harder.For now I have two desks. When there’s space it gets filled quickly.I bought a new desk from Kinnarps so I can alter sitting and standing. I’ve been using it for about a month now and while I should change more often I do stand a few hours per day.My old desk also fits which is excellent for my hardware projects, LEGO builds or just as a place to offload stuff.Yes it’s a bit of a man-cave as well as an office.What to do with an inefficient corridor? A home gym!Now having a home office and a man cave is a luxury, it really is. But having a home gym right next to it takes it to a whole new level.Usually the last 2-3 hours of a whole day of programming were much, much slower and heavier than the first very productive hours for me. Going to the gym over lunch often gave me energy to push through the latter half of the day with relatively high productivity and without tanking my energy levels.What I can do now is even better. I can work, then do a quick set as a break, then work etc. This keeps my energy levels and productivity high throughout the day.Published:March  1,2019in06123d7Tagged:Home officePreviousNext</description>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Regex substitution with unicode in Haskell</title>
      <link>https://www.jonashietala.se/blog/2019/01/25/regex_substitution_with_unicode_in_haskell</link>
      <description>Regex substitution with unicode in HaskellPublished:January 25,2019in86639b5Tagged:Hakyll,HaskellWhileremaking the siteI noticedmy automatic embedding of bare youtube linkssometimes didn’t work. The culprit was unicode in the document which the regex library couldn’t handle.Apparently while this would be supported by default by almost all modern languages it’s not the case with Haskell. I tried several regex libraries which either didn’t support substitutions or couldn’t handle unicode properly.As usualothershavehadthis before me. This is the most elegant working solution I could find:importqualifiedText.Regex.PCRE.LightasRLimportqualifiedText.Regex.PCRE.HeavyasRH--Find and replace bare youtube links separated by &lt;p&gt;&lt;/p&gt;.youtubeFilter::String-&gt;StringyoutubeFilter txt=RH.gsub rx replace txtwhererx=RL.compile"&lt;p&gt;\\s*https?://www\\.youtube\\.com/watch\\?v=([A-Za-z0-9_-]+)\\s*&lt;/p&gt;"[RL.utf8]replace=\[g]-&gt;"&lt;div class=""&gt;\\\\\\&lt;/div&gt;\\&lt;/div&gt;";Which is to say it’s not very elegant but it does get the job done.Published:January 25,2019in86639b5Tagged:Hakyll,HaskellPreviousNext</description>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Site restyle and update</title>
      <link>https://www.jonashietala.se/blog/2019/01/25/site_restyle_and_update</link>
      <description>Site restyle and updatePublished:January 25,2019Revised:June 26,  2024ina308224Tagged:Blog,Web DesignI’m not sure how I got started but I recently read an excellent book about typography:Butterick’s Practical Typography. It’s free and there’s a sectionTypography in ten minutesif you want the important bits.He makes a pretty good case forwhy it matterswhen he points out the vast majority of a webpage is text. Despite this it seems focus is on color schemes, images and effects. As I was already leaning towards minimalistic sites over bloated crap I decided to do a makeover of this site after reading the book.Problems with my previous siteI was pretty happy with the site I had. But as I looked closer there were issues.Butterick lists5 anti-habitswebsites do and I managed to tick four out of five ant-habits:Tiny font size for body textHuge size for headingsRelied on system fonts like Arial and GeorgiaHuge block of eye catching color for header and footerThe only one I managed to avoid was having page edges crammed with wads of navigational links.The site also wasn’t responsive so it looked like shit on mobile and had very long lines on bigger screens making it hard to read.Text improvementsThe major changes were naturally to correct the big anti-habits and other no-nos the book brings up.Old post style vs new post styleWhen comparing the old post style with the new we can pick out some noticeable changes:The body text is larger to make it easier to read.Margins are larger to keep lines at 2-3 alphabets—an easy way to gauge how long lines should be.Headers aren’t enormous compared to everything else yet easily identifiable.Tighter whitespaceIf you look closely enough you can also see the fonts are different.Century Suprais the new body text replacing Georgia andConcourseis used for the date and navigation links. They are both professional fonts made by the author ofPractical Typography.I didn’t know this before, and it bothered me, but take a look at the old post. Some of the numbers are off centered, 5 is slightly lower than the others for example. They’re numbers in an old style some fonts support.Century Suprasupports it as well via a setting which I haven’t turned on.Now here’s the kicker: the fonts cost $239. And still I bought them.Are the free fonts so bad? Absolutely not and Butterickagrees. I do like the fonts but the main reason I bought them was to support the book. The book is completely free and instead he’s trying to make money by selling fonts. I want to support him and if I get something good in return then great.Responsive layoutI’m not really a web designer so this was my first time trying to make a responsive design.Flexboxcombined with some media queries made the process pretty straight forward.Reading the site on a phone should now resize the font from 22px to 16px—or something in between—and re-flow the layout. I tried a multi-column layout for thehomepageandprojects pageto better utilize space on wider screens which turns into a single-column on smaller screens.The old home page vs the new home pageI’m not completely happy with how the tags are laid out but it will do for now. I do think the homepage is an improvement at least.Changes to code displayWhile I was looking to change font for my main text I started looking at programming fonts as well. It’s a huge rabbit hole I might write more about in the future.For the site I changed the default coding font from Consolas —which is proprietary to Windows— toHack. As a bonusHackis completely free and hackable.I use dark background color personally but I’m not a fan of it on websites as they draw too much attention from the body text. The colorI had usedfrom the gruvbox theme was also quite eye catching so I chose a softer one. After updating pandoc I found a couple of new highlighting classes as well.Old code vs new codeSee thesourceif you’re curious.Other changesI did a bunch of other things as well while I was at it. Such as adding game images to theprojectspage, correcting html5 markup and rewrote the styling in sass.One annoyance I never bothered to fix was tag links generated links with mixed case and spaces. Now instead of/blog/tags/Yearly Reviewwe get/blog/tags/yearly_review. It can be accomplished in Hakyll by using a custom route:tagRoute::RoutestagRoute=(customRoute$(map toLower).(replace"""_").toFilePath)`composeRoutes`gsubRoute"tags/"(const"blog/tags/")`composeRoutes`dropIndexRoutePublished:January 25,2019Revised:June 26,  2024ina308224Tagged:Blog,Web DesignPreviousNext</description>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2018 in review</title>
      <link>https://www.jonashietala.se/blog/2019/01/24/2018_in_review</link>
      <description>2018 in reviewPublished:January 24,2019Revised:March  4,  2019in45f9a49Tagged:Yearly ReviewA new year and a lingering feeling of not having done enough during the year. A fast review of the year usually makes me feel better.2018 non-geek achievementsWas on parental leave for about 7 months.It was great although I’ve been crawling up the walls a little the last month.Moved to a small village or society far from Linköping. But kept the job.Wrote5 blog posts.2018 geek achievementsRead through the bookPractical Typographyand restyled this site to try and internalize the concepts.Read a lot of manga and light novels.I’ve tried to keep lists of what I read and watch but I just can’t do it consistently so I’ve stopped trying.2018 failuresI didn’t write much at all during the year.No time for hobby projects.Read very little.Plans for 2019Gonna start working remote full time, with occasional travel.Make an effort to write more. Both shorter posts and longer articles.Spend time on side projects and improving skills.Try to get consistent grappling training. It’s asmallhurdle there’s no submission wrestling or BJJ here.Published:January 24,2019Revised:March  4,  2019in45f9a49Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>HandCash handles require trust and are insecure</title>
      <link>https://www.jonashietala.se/blog/2018/09/22/handcash_handles_are_centralized_and_insecure</link>
      <description>HandCash handles require trust and are insecurePublished:September 22,2018Revised:January 19,  2019ine017e55Tagged:CryptocurrencyTheHandCashwallet has recently become a popular Bitcoin Cash wallet in large part thanks to their $handle concept. It’s basically a username you use instead of the normal Bitcoin Cash address, similar to how domain names abstract away IP addresses.  For example instead of sending BCH to my addressbitcoincash:qr6nm0wrkqata3klatmeuzqkjjvu725rkslzsahs8fyou can instead send it to$treeman. Much more user friendly, right?Third party trustHowever there are problems. The $handle to address mapping is kept on the wallet developers’ own centralized servers. This means they could reroute all payments to any handle to some other address (unless the sending wallet has already cached the address).This is a huge risk and central point of failure which in my opinion doesn’t belong a decentralized payment system. When you pay to a $handle you’re basically trusting them not to steal your payment and that their servers are secure. The whole point of a cryptocurrency is to remove reliance on a third party which is reintroduced by $handles.They’ve said they’ll open up the handle API so other wallets could use them but we should instead come up with a decentralized username system. Or try to find other ways of communicating addresses instead of having to type them in manually. For example via NFC (which HandCash also has) or QR codes (which have been used since forever).A side note on the trust issue:the HandCash wallet itself is also closed source. I would never use a closed source wallet to store my coins and neither should you.No checksum or identificationWhat happens if you type$tremaninstead of$treeman? You will send your payment to someone else.The Bitcoin Cash address has a checksum built in, similar to credit card numbers, social security numbers and virtually everything else you usually type in by hand. For good reason since it’s very common to fat finger and mess up. This isn’t something handles can provide.Instead of checksums some systems they require confirmation with the receiver’s identification. For example Swish, a popular Swedish payment system, allows you to send a payment connected to a phone number. They then display the receiver’s name before you confirm the payment.You could think it’s possible modify handles to do something similar. Maybe I could attach my name to$treemanso you know you’re sending it to me? But where Swish uses Sweden’s national identification system BankID Bitcoin Cash should be a permissionless and trustless system. There is nothing preventing someone from attaching my name to$tremanand pretending to be me. The problem is similar to look-alike domains which is fundamentally hard to solve in a decentralized handles context.  Compare it with normal addresses where it’s practically impossible to generate look-alike addresses.ConclusionWhile I like the idea of simplifying addresses and making them more user friendly there are large problems with HandCash handles. Having to trust a third party for handle resolution and them being less safe to type makes them much less secure than normal addresses and should only be used for small amounts.Instead we could focus on alternatives to avoid having to type anything at all. For example QR codes, NFC or bluetooth could help bridge the gaps. The one example where I still find friction is when sending coins from my desktop wallet to my phone wallet which I work around by copying my address and saving a email draft and visually inspecting it before sending.Published:September 22,2018Revised:January 19,  2019ine017e55Tagged:CryptocurrencyPreviousNext</description>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Bitcoin Cash needs a Specification</title>
      <link>https://www.jonashietala.se/blog/2018/07/30/bitcoin_cash_needs_a_specification</link>
      <description>Bitcoin Cash needs a SpecificationPublished:July 30,2018in6e7f7c3Tagged:CryptocurrencyI’m not a Bitcoin developer, I’m just some guy looking in from the outside. Lately there’s been a bunch of heated debates between the different Bitcoin Cash developer teams. Something that stood out from all the noise was problems with communications and a lack of specification for new proposals. Thinking about it there’s no specification at all.A full specificationSince Satoshi released the Bitcoin protocol it’s been specified by the reference client andBitcoin Core is still referred as such. It’s argued that this is by design as it would avoid accidental hard fork splits if a bug would deviate from the consensus rules. The drawback is that a flaw could bring the whole network down.After the split to Bitcoin Cash there’s no longer a reference client. Instead there are several different clients that follows the consensus rules. This makes the network more durable as it’s less probable that a flaw could exploit all clients and instead the risk for an accidental hard fork is higher since clients may have small bugs in their consensus rules. Therefore a lot of importance needs to be placed on making sure the different clients use the same consensus rules and bugs there are discovered.This makes the lack of a specification baffling. It’s easier to find higher level bugs in a specification and clients can focus on implementing the spec instead of trying to match their implementation with each others.It also makes it harder to create new clients. Today the best option is to just fork the code of an existing implementation and modifying it. Of course this includes importing all technical debt and potentially crappy implementations to your client. It also constrains you to use C++, if you want to create a new highly-reliable client using Erlang then you have a bunch of reverse engineering and converting to do.Therefore there should be a full specification of the Bitcoin Cash protocol. It should be so complete you should be able to create a new client with the spec as a reference without having to read the code of other implementations.Improvement ProposalsIt’s hard to develop software with a single team and harder to develop software with multiple teams. It’s much harder if improvements and changes doesn’t come with a specification and essential details can only be found by examining reference code implemented in an unfamiliar code base.In the case of consensus changes this is very dangerous and small but important implementation details are easily missed. It not only makes the changes harder to implement for the different developer teams but it’s also much harder to do security reviews for.  Importantly it makes discussions, feedbacks and reviews of the changes themselves difficult for the different developer teams.Even optional features, like block relay networks, would benefit. Otherwise we’ll run into issues like some clients implementing Xthin and others implementing Compact blocks instead due to missing specs and design flaws. It would be much better if all clients would work together and utilize the same infrastructure.Due to communication challenges between teams perhaps it might be time to collectively work on Bitcoin Cash Improvement Proposals, similar to theBIPS of Bitcoin Core, where features could be discussed? Naturally all proposals should require complete specs.It’s of course not this straight forward in practice. There will always be discussions, both internal and external, in other channels but it’s still important to have a public process like this where feedback and scrutiny can be collected community wide.It would be hugely beneficial for the development of Bitcoin Cash if the different developer teams could agree on some common process.Published:July 30,2018in6e7f7c3Tagged:CryptocurrencyPreviousNext</description>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2017 in Review</title>
      <link>https://www.jonashietala.se/blog/2018/07/28/2017_in_review</link>
      <description>2017 in ReviewPublished:July 28,2018Revised:December 20,  2019inee962a5Tagged:Yearly ReviewIn contrast toprevious yearsI haven’t kept up with the blog. For good reason I’d say since we got a child in October! It really alters your perspectives and other things suddenly feel a little less important and of course there’s less time to do other stuff.A little late and incomplete perhaps but at least I’ll try to have an unbroken streak of reviews.2017 Non-Geek AchievementsGot a kid!Wrote6 blog posts.2017 Geek AchievementsPicked my first lock.Studied a little Korean (haphazardly…).2017 FailuresNo hobby programming.Didn’t read enough books.Plans for 2018Take care of Veronica and Isidor.Parental leave.Move to a house in another part of the country.Write some more.Read some more.Train some more.Published:July 28,2018Revised:December 20,  2019inee962a5Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Bitcoin's security isn't binary</title>
      <link>https://www.jonashietala.se/blog/2018/07/28/bitcoins_security_isnt_binary</link>
      <description>Bitcoin's security isn't binaryPublished:July 28,2018in08f4deaTagged:CryptocurrencyI’d like to address a misconception that’s at the core in many Bitcoin discussions lately: Bitcoin’s security isn’t binary. In fact security in general isn’t black and white. It’s a trade-off being secure enough for your threat model vs the cost and feasibility of your protection.Consider having your front door locked for example. You could consider your home secure if your door is locked and insecure if it’s open but that doesn’t say what you’re secure against. It’s missing context. It might prevent opportunistic thefts but a more determined attacker could instead break a window, pick the lock of the door or simply break down the door itself. Maybe you live in a neighborhood with lots of thefts and you might want an alarm system, a dog or iron bars over your windows.At the same time it might not be practical to go all out and get the best protection possible. You might not want to give up your life and move to a bunker where your friends can’t visit and a private security force may be slightly too expensive.In practice locking your door is good enough for many people. Some people do more and there are many options for them including private security for celebrities. That’s okay since threat models and feeling of security is different for everyone. This is the case for Bitcoin as well. Some sell houses for Bitcoin and have high security requirements while others sell coffee and have less. Unfortunately people, including developers, don’t acknowledge that Bitcoin is more fine grained than “secure” and “insecure”.Double spend protection &amp; ConfirmationsAn essential security feature of Bitcoin is double spend protection. It solves it using Proof-of-Work where each block containing a set of transactions is expensive to make and each block build on the previous block. If you want to reverse a transaction to double spend it you need to redo the work of all blocks until you find the transaction. This makes a transaction deeper in the blockchain, with more confirmations, more secure than one with less confirmations since an attacker would need more work to reverse it.This maps well to different security requirements. One confirmation is good enough for small value goods but exchanges might want to wait six confirmations instead, which has been the default recommendation for the paranoid a while.A double spend attack was used in the wild to reverse transactions 22 blocks deep in Bitcoin Gold in May. Bitcoin isn’t as easily attacked since there’s not enough mining power mining other coins that can simply be temporarily rerouted for the attack but it demonstrates the attack nicely.At the time of writing a miner is rewarded 12.5 BTC for each block found, approximately $80 000. For an attack to be worth it the double spends need to outweigh the costs of leaving out potential mining profits. This makes all but very large sums safe enough to accept with a single confirmation.If you want to learn more I heartily recommendthe whitepaperwhich is quite easy to read.0-confTransactions without a single confirmation, abbreviated 0-conf, by definition aren’t included in the blockchain and don’t get the double spend protection confirmed transactions do. That makes them completely insecure and should never be used, or that’s what some opponents tell you.Firstly all physical goods purchased online have an inherent delivery delay. The worst that can happen if you accept a 0-conf transaction that gets double spent is you have to cancel the order. Instead if you wait for a confirmation, which on average takes 10 min but might be up to an hour, you introduce an annoying wait time for your customers.But what’s really annoying is when you want to buy things in physical stores. It might be okay to wait for a confirmation email for some online purchases but it’s completely unacceptable to have to wait 10-60 min for your coffee until your transaction is confirmed (this example is always brought up). Someone could indeed double spend and steal a coffee. That’s bad but it’s actually not too different from what already have today. VISA allows charge backsup to 120 daysandcharge back fraudis a common problem for merchants. If you accept cash you risk getting counterfeit bills and you always run the risk of plain old shopliftig.Some claim it’s very easy to double spend 0-conf.Here’s a tweetfrom Core developer Peter Todd:Why opt-in RBF doesn’t change zeroconf security; its already trivial to send an easy to doublespend tx.That’s only true if you naively accept 0-conf. There are strategies you can use to minimize the risk of a double spend which defeats trivial double spend scripts Peter is referring to. For example:Silently sample random nodes to increase the confidence that the transaction has been propagated through the networkWait a few seconds and look for double spendsRequire a fee that’s probable to be accepted in the next blockUse external identification like security cameras or ID cards to dissuade fraudFor high risk transactions instead wait for confirmationsResearch on how to improve 0-conf is ongoing. See for example:Double-spending Prevention for Bitcoin zero-confirmation transactionsMisbehavior in Bitcoin: A Study of Double-Spending and AccountabilityWith these heuristics accepting 0-conf is a viable alternative for some merchants. It’s not completely secure but it’s not completely insecure either. After all the competition isn’t much better and the benefits are huge, waiting a couple of seconds vs 10 min. It’s also completely up to the merchant’s discretion if she wants to use it or not.Despite this Bitcoin Core developers have treated 0-conf as insecure and have adopted policies that actively makes it worse. Full blocks, where all transactions compete in fees to be included, makes 0-conf unreliable because fees cannot be predicted with confidence. In December fees grew to $60 but it simply wasn’t a priority to increase the block size so one can assume full blocks fits the developers’ plan for Bitcoin and 0-conf does not.They also adoptedRBFin the Bitcoin reference client Bitcoin Core. It’s a convenient method to alter the feeand outputsof an unconfirmed transaction. As it’s implemented in the reference client miners and wallets naturally supports it. In other words they made double spending more user friendly than before instead of adopting policies that would make 0-conf more secure “because it’s already insecure”.SPV &amp; full nodesJonald Fyookball wrote a goodarticle on SPV security, I suggest you read it if you haven’t already.In short an SPV wallet avoids the need to download and store the whole blockchain just to be able to send and receive transactions. Basically all mobile wallets work this way. An SPV wallet is indeed less secure than a full node but it’s not completely insecure (again, security is on a spectrum).What an SPV wallet does for you:Ensures your transactions are in a blockIt tracks the Proof-of-Work of the blocks, i.e. follows the longest chainWhat it doesn’t do for you:Validates transactions inside a blockThis means a miner can create a block with transactions that sends any number of coins from any address. That sounds bad, but realize that:You can only fool the SPV wallet if you provide the longest chainThe miner must pay the POW cost of creating the block(s)So to fool you the miner must, at least temporarily, outproduce the rest of the network. This isn’t possible in the long run if the core security assumption of Bitcoin holds: that a majority of miners are honest.But it’s theoretically possible and thus businesses like exchanges and payment processors would still want full nodes for the extra security.Satoshi agrees:Businesses that receive frequent payments will probably still want to run their own nodes for more independent security and quicker verification.Most SPV users are normal people who mostly use wallets to pay for things (SPV wallets are just as secure for the sender). If everyone had to download the whole blockchain just to use Bitcoin on the phone then I’m afraid Bitcoin wouldn’t be practical as a payment system at all.Despite SPV wallets being quite secure running a full node is presented as a requirement for everyone. Core developer Luke-Jrdoesn’t even consider SPV wallet users “actual users”:Running a full node makes you an actual Bitcoin userHere’s Luke-Jr’s responseto the question “Should I use a full node as my main wallet?” on the bitcoin stackexchange:If you’re not using a full node for your wallet, you’re not using Bitcoin, and won’t get the benefits Bitcoin provides over fiat currency. You might as well be using PayPal in that case, except with a random anonymous person in place of a regulated company…So, always use a full node.That everyone should use a full node is used as an argument against raising the 1MB block size limit because there may be some people somewhere who can’t store or download the data required. Despite this making Bitcoin unable to scale past 7 tx/s and fees of $60 pricing out the very people who have the most difficulty running full nodes.Hard forks &amp; SegWitA common defense in these discussions is “But always prioritizing security over all else is good”. Except it’s not consistently prioritized.I bring you the case of SegWit, a solution to thetransaction malleability problem. Jaqen Hash’ghar wrote agreat article (2016)of the whole ordeal. I recommend it although it’s a bit long.To make a long story short SegWit was deployed as a soft fork instead of a hard fork. A hard fork would have been cleaner but it requires all nodes to upgrade and people must agree with the change otherwise the coin would have split into multiple coins (like the Bitcoin and Bitcoin Cash hard fork split). This was deemed extremely unwanted since consensus would be hard to get (maybe there’s some parallels to the black and white security approach but that’s not the point I’m trying to make).Instead a soft fork circumvents the problem by allowing nodes to continue working as before except they won’t recognize the new features. This was used to implement SegWit as a hack where non-upgraded nodes will view segwit transactions as anyone-can-spend transactions.Peter R gave a good talk of why this is a theoretical security regression (slides):Click to view on YouTubeThis regression was pointed out by others likePeter Todd:In its current form, segregated witnesses makes validationless mining
easier and more profitable than the status quo, particularly as
transaction fees increase in relevance.Granted it’s only a theoretical weakness that probably won’t cause any problems, but it’s a clear example of a binary thought process that in this case doesn’t prioritize security.ConclusionThere are many examples where features of Bitcoin are discarded as “insecure” without a nuanced discussion about risks and rewards. This binary thinking is actively harmful and must be called out.Published:July 28,2018in08f4deaTagged:CryptocurrencyPreviousNext</description>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>OP_RETURN based tokens are fundamentally flawed</title>
      <link>https://www.jonashietala.se/blog/2018/07/28/opreturn_based_tokens_are_fundamentally_flawed</link>
      <description>OP_RETURN based tokens are fundamentally flawedPublished:July 28,2018in08f4deaTagged:CryptocurrencyTwo new Bitcoin Cash token solutions have recently been suggested:Simple Ledger Protocol: A token system for Bitcoin CashIntroducing Colored Coins: a Bitcoin Cash token implementationBoth are improvements over Tokeda as they allow permissionless transfers. However all commit toOP_RETURNwhich unfortunately is fundamentally flawed.No true SPV wallet supportDespite claims of being “SPV friendly” true SPV wallets cannot validate the transactions. Instead they need choose betweenReduced SPV wallet securityUse light wallet based validationTrusted 3rd parties validationIn some combination.
The whole point of SPV is to gain transaction security without trust and without validating the whole (or parts of) the chain. This removes the bases of SPV security in some ways and to be frank calling them “SPV friendly” is disingenuous.I am also confused over scaling concerns for on-chain proposals while they’re missing for proposals that suggest turning SPV wallets to light wallets. It’s frankly much, much easier to grow the blocksize and let the few miners and full nodes handle the brunt work than to require SPV wallets to collect, scan or store more data. Functioning SPV wallets is the key to (trustless) scaling in Bitcoin Cash and must be treated as such. Of course we must assume popular tokens may be used proportional to BCH so they have the same scaling requirements.Alternative consensus modelSinceOP_RETURNcan contain both valid and invalid token transfers full nodes are used to keep track of all tokens. Put in another way instead of miner consensus we have consensus by full nodes. Or as reddit user insette eloquently put it:muh full node IS the consensusWhy does it matter? Well what happens when nodes disagree? Naturally this problem is what Bitcoin originally solves with POW, often referred to as Nakamoto Consensus.
For example if there’s a security issue or bug in one wallet/node implementation a silent consensus divergence can occur. Compared to a Bitcoin hard fork this may not be immediately evident.How should upgrades be done? What if the issuer wants to reverse some transactions and releases their ownOP_RETURNinterpretation implementation? What if this happens to several tokens, how should we follow the consensus of everything at the same time?
If a divergence does happen how can we decide which state is correct? “The issuer decides” isn’t good enough since two users may have had problems trading amongst themselves.Not to mention malicious actors who can try to attack the network in various ways. Defrauding users or destabilizing the network is much easier with shaky consensus.Fear of the Hard ForkWhat is this, 2017? Arguments that a Bitcoin Cash token scheme should avoid consensus changes are exactly like the arguments that brought us SegWit instead of a regular blocksize increase. I thought we were past things like that.Yes changes needs to be done carefully but let’s take a step back. We’re talking about foundations for tokens potentially worth a whole lot of money. Great care must be used regardless of solution. Suggesting to rush an off-chain solution because a hard fork one can’t be ready this autumn is disingenuous and irresponsible.ConclusionWork on these proposals probably started a while ago and people are understandably reluctant to set them aside, nobody wants their work to be wasted (I don’t believe it is but it may feel like it if it’s not adopted). Yet I think token schemes based onOP_RETURNis a dead end and we should focus our energy on miner validated and fully SPV capable tokens. Thus far only GROUP fits the bill.To once again quote Counterparty contributor insette:But I’m just saying, there are technical reasons why OP_RETURN protocols suck, and there are also technical reasons why Ethereum doesn’t suck.Published:July 28,2018in08f4deaTagged:CryptocurrencyPreviousNext</description>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Top ten activities that make me happy</title>
      <link>https://www.jonashietala.se/blog/2017/06/24/top_ten_activities_that_make_me_happy</link>
      <description>Top ten activities that make me happyPublished:June 24,2017in956d7f8Tagged:Life Hacking,GoalsRecently we finally moved out of our old apartment and into a new larger apartment and it’s awesome. It’s no more than a year old and feels very fresh compared to the old one. It’s also larger with an extra room, dishwasher (!) and closer to the city centrum and everything is basically better. The move also showed me just how easy it is to collect stuff and things; I had a lot of things hidden away in a small storage room/closet in the old apartment.Now I like to buy stuff, I like to collect things and I love the feeling of opening packages and the smell of “new”. But when looking at the amount of forgotten stuff I have you’ve got to wonder: how much happiness do you get from the stuff? And what actually makes you happy?This is what I believe (rightfully or wrongly) to be the top ten activities that makes me happy, in no particular order:Do stuff with Veronica (walk, talk, …)A calm regular evening with VeronicaTraining (currently BJJ and power lifting)Play games (boardgames, cardgames or computer games)Hang out with friendsMake thingsSolve problemsEat and enjoy good food and drinksRead books, manga or other storiesWatch quality tv series, movies or other videos (includes streams of different kinds)These activities notably do not require a large amount of stuff or money. Maybe it’s a good idea to prioritize these things instead of collecting more stuff.Published:June 24,2017in956d7f8Tagged:Life Hacking,GoalsPreviousNext</description>
      <pubDate>Sat, 24 Jun 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Habits to start</title>
      <link>https://www.jonashietala.se/blog/2017/03/09/habits_to_start</link>
      <description>Habits to startPublished:March  9,2017in5062bc5Tagged:Life Hacking,GoalsI haven’t been feeling quite as forward or as energetic lately. There are no set plans, habits or goals for this spring and I don’t have a clear vision of what to do currently but it also feels… fine? Maybe I will cruise in a lower gear for a while and rev up when my mood changes. In the meanwhile I have habits I’d like to cultivatesometime.Daily HabitsHeadspace either on mornings or eveningsRead a book ~15-min before sleepFlashcards with Anki for exampleListen to talk to me in korean podcastCold showerWeekly HabitsStudy BJJ videos/instuctionalsStudy korean (workbooks etc)Hobby project a little every weekendPublished:March  9,2017in5062bc5Tagged:Life Hacking,GoalsPreviousNext</description>
      <pubDate>Thu, 09 Mar 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>(Fake) Bittman Chinese Chicken</title>
      <link>https://www.jonashietala.se/blog/2017/01/23/fake_bittman_chinese_chicken</link>
      <description>(Fake) Bittman Chinese ChickenPublished:January 23,2017inc1d08d0Tagged:The 4-Hour Chef,FoodLesson 6! I went to Cervera and bought a holder to allow me to steam chicken.I broke the recipe on multiple fronts: chicken wings instead of chicken breasts, mushroom soy instead of tamarin, roman salad instead of baby bok choi (where the heck do you find that…) and I even forgot to season with salt and lemon… But the chicken itself turned out really well. Still got a 7 from both me and Veronica.Next time I will use actual chicken breasts and I won’t forget the salt. As usual I will include something more, more salad perhaps.Published:January 23,2017inc1d08d0Tagged:The 4-Hour Chef,FoodPreviousNext</description>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Zucchini Crabcakes</title>
      <link>https://www.jonashietala.se/blog/2017/01/22/zucchini_crabcakes</link>
      <description>Zucchini CrabcakesPublished:January 22,2017in15394eeTagged:The 4-Hour Chef,FoodWith a tiny bit more planning I made a dinner out the lessons 4 and 5 as the crabcakes were only supposed to be an appetizer:Crabcakes: Surprisingly delicious. Both me and Veronica gives them a 7.Zucchini: While I thought they passed Veronica said “Zucchini is not my thing” and promptly gave it a 2. Yikes.Published:January 22,2017in15394eeTagged:The 4-Hour Chef,FoodPreviousNext</description>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Coconut Cauliflower Curry Mash</title>
      <link>https://www.jonashietala.se/blog/2017/01/17/coconut_cauliflower_curry_mash</link>
      <description>Coconut Cauliflower Curry MashPublished:January 17,2017inf0a9978Tagged:The 4-Hour Chef,FoodIt’s time for lesson 3. I made the mistake of not planning for something to augment the mash with, but a simple salad had to do:It was okay. Girlfriend gave it 5/10 and I gave it a 6/10, a higher rating would be possible if there was something else to eat it with.Published:January 17,2017inf0a9978Tagged:The 4-Hour Chef,FoodPreviousNext</description>
      <pubDate>Tue, 17 Jan 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The 4-Hour Chef: Scrambled Eggs</title>
      <link>https://www.jonashietala.se/blog/2017/01/14/the_4-hour_chef_scrambled_eggs</link>
      <description>The 4-Hour Chef: Scrambled EggsPublished:January 14,2017in8b033b4Tagged:The 4-Hour Chef,FoodI’ve been listening toThe Tim Ferriss Showa while now and he and his guests often inspire me to make changes and start doing new things. I got introduced to Josh Waitzkin’s excellentThe Art of Learningand the meta skill of learning has since then fascinated me. So when I got wind of Tim’s book about learning (and coincidentally also about cooking) I managed to get it for Christmas.The 4-Hour Chefcontains a framework for learning a new skill fast. Exactly what that entails, or if it even works, I might get into another time. For now I will focus on doing some of the cooking lessons in the book. I will do the basic lessons and then reevaluate if I should continue, if I even make it that far. Anyway he suggests to photograph and document the food you make and so I present to you the Scrambled Eggs I made this morning:It was actually very good. Seasoned with Onion (should have been garlic!), Cumin and Mint.Published:January 14,2017in8b033b4Tagged:The 4-Hour Chef,FoodPreviousNext</description>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2016 in Review</title>
      <link>https://www.jonashietala.se/blog/2016/12/27/2016_in_review</link>
      <description>2016 in ReviewPublished:December 27,2016Revised:December 29,  2016ina19c6a7Tagged:Yearly ReviewSee theprevious reviews.2016 Geek AchievementsPlaced 2nd in Linköping’s Regional in Netrunner.Won a couple of smaller Netrunner tournaments.Got Veronica to playGame of Throneswith us. She beat us and she loved it!Programmed a little bit ofElixirand a tiny bit of front end web development.Built acustom keyboard.2016 Non-Geek AchievementsGot engaged.Achieved 1-Dan in ITF Taekwon-do.Started trainingBrazilian Jiu-Jitsuwith Veronica.Got in to the habit of doing powerlifting 2-3 times a week.Read8 books and 10 mangas.Wrote10 blog posts.Played a bunch ofPandemicwith Veronica and others.Very goodco-op boardgame.Got other boardgames, among others:Food Chain MagnateandTerraforming Mars.Went toPraguewith Veronica, very nice vacation.2015 FailuresDidn’t read enough books.Practically no hobby programming.Plans for 2016Take care of Veronica.Go on vacation with Veonica, possibly a couple of smaller ones.Learn how to cook.Learn more korean.Train more.Prioritize personal develoment.Published:December 27,2016Revised:December 29,  2016ina19c6a7Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2016 Read Books</title>
      <link>https://www.jonashietala.se/blog/2016/12/27/read_books</link>
      <description>2016 Read BooksPublished:December 27,2016Revised:April  7,  2024in3c574f1Tagged:Read BooksYeah so I managed to not read a single fiction book this year. To compensate and make myself feel better I’ll add in some new mangas I’ve read, but I may may have missed some.FictionCricketsNon-FictionGetting to YesRelax into StretchThinking, Fast and Slow59 secondsThe Hard Thing About Hard ThingsThe Design of Everyday ThingsWinning Through IntimidationProgramming PhoenixMangaDeath NoteReread.Ghost in the ShellTokyo GhoulThe Promised NeverlandMight be my current favourite? Simply amazing.KingdomReread.Grand BlueOnani Master KurosawaDon’t let the title put you off, it’s a surprisingly deep manga.One Punch ManMy Hero AcademiaTokyo GhoulandTokyo Ghoul:rePublished:December 27,2016Revised:April  7,  2024in3c574f1Tagged:Read BooksPreviousNext</description>
      <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Autumn 2016 Goals Retrospective</title>
      <link>https://www.jonashietala.se/blog/2016/12/17/autumn_2016_goals_retrospective</link>
      <description>Autumn 2016 Goals RetrospectivePublished:December 17,2016in906428bTagged:Life Hacking,Goals,HabitsEarlier this yearI set out some goals I wanted to accomplish this autumn. I accomplished a few things and I failed others.Exercise and HealthEat more strict LCHF for 1 monthokTrain BJJ or MMA for 1 monthok2 months of lifting at the gymokPowerlifting100 kg deadlift 5x5ok75 kg bench 5x5failed85 kg squat 5x5okSide split with both feet besides the yoga matfailedHobby ProjectsBuild a 3x3 LED cubeokGo throughProgramming PhoenixandProgramming ElixirpartlyConstruct acustom keyboardokCreate a usable budgeting tool on par with my currently used systemfailedThe only habits I successfully started was to take daily D-vitamine supplements and I went to the gym three times a week, on average.Lessons learnedWhile I did accomplish a few things I did not complete them all. I failed the bench press as I overestimated how much I could take, which is understandable as I didn’t really know where my baseline were. In the future I would need to get that before throwing numbers around. I didn’t increase the side split as I never got in the habit of proper stretching, maybe because I wished to but I didn’t reallywantto achieve it. The hobby programming again got left behind as I just didn’t have the energy left after work to motivate myself.I guess I will try to do something similar next year, but then be more selective of my goals and focus more on the habits, the process, than of the goals themselves. The ones I did accomplish were easier and had a clear path to victory (go train X times).As far as the habits go I never outlined a strategy for actually starting them. It goes without saying that I would fail almost all of them. I’m currently trying to start meditating viaHeadspaceand the strategy I have now is focus on one goal at a time and when I’ve accomplished it 21 times I consider it ingrained and I can focus on the next one.Published:December 17,2016in906428bTagged:Life Hacking,Goals,HabitsPreviousNext</description>
      <pubDate>Sat, 17 Dec 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Doing some online Personality tests</title>
      <link>https://www.jonashietala.se/blog/2016/12/11/tests</link>
      <description>Doing some online Personality testsPublished:December 11,2016in22d9d07Tagged:LifeFor some reason I’ve done a couple of personality tests the last month, mostly to satisfy my own curiosity.The Braverman TestInspired byCharles Poliquin’s visit on The Tim Ferriss ShowI tried out theBraverman testto determine my neurotransmitter type. The point Charles makes is that the type of training most suited to you is determined by your neurotransmitter type, which can be found using the Braverman test.This is my result:Dominant Nature     DeficienciesDopamine:       28          2Acetylcholine:  22          3GABA:           28         11Serotonin:      20          8I couldn’t find any good references to what the ranges mean but I think it means I have a balanced dominant nature and slight GABA and Serotonin deficiencies. According tothis articleI’m an Earth type:The earth-type athlete has a balanced neurotransmitter profile — they are stable and consistent. These are the guys and gals that show up to the hill every day ready to go. They are well-rounded athletes and thrive on stability, consistency, and routine. They are very sensitive to variations in routine; and if they partied too hard the night prior, you will hear about it and their performance will suffer.While earth types can stay on the bike or board for a full season without needing to switch things up, they need to vary intensity and volume in their approach. This means going on longer, mellower rides for a couple weeks and then going on shorter, balls-to-the-wall ventures for a little while, striking a balance that won’t lead them to burn out. Too much intensity and volume at the same time will lead to straight exhaustion.Which seems to match my experience well. Going forward I will continue with the same routine focusing on 4 big exercises (squat/bench/chins/deadlift) but I will have a 3-4 week period focusing on volume followed by 3-4 weeks focusing on heavier more intense training.WhatCharles saysabout Earth types also rhymes well. Especially the part about cold and sleep:If you overtrain an Earth person, they’ll come down with a cold. They are generally very particular about the quality and quantity of their sleep. They are the ones who will piss and moan during a squat workout about missing an hour of sleep.ADHDMy girlfriend Veronica came home one day from work after a seminar about ADHD. At first she was drawing parallels to her students but it ended with her drawing parallels to me. I’ve had this imagine in my mind about a kid with ADHD who can’t control what to say, can never be still and acting out but that’s not necessarily true.I tried to fill outa test(Swedish) and reading about ADHD online. It seems everything fits really well, for example:Hard to finish tasks.Difficulty to remember appointments, meetings and other things. I’m constantly looking for my slippers, keys and other stuff.Avoid starting a task requiring a lot of thought. I’m always procrastinating.I can’t sit still without touching, poking or working with something. It’s even really hard to watch a TV show (even if I love it) without doing something at the same time. This is a really big problem for me.Constantly feeling overactive.I’ve always had problems doing careless mistakes, especially when doing “easy” or “boring” tasks.Hard to keep concentration on people when they’re speaking.I’m sensitive sound, overly so.Problems falling to sleep, it’s hard to relax even when I’m tired.And many other…Now it doesn’t really mean anything. It won’t change who I am or anything but it certainly explains a lot about why I do things and why I’m uncomfortable with things others seem to have no problem with. In the end it’s opened my eyes a bit and made me think about what I do more which is great.AspergerAfter talking about ADHD at work we naturally discussed other disorders like psycopath and asperger. I’m fairly sure I’m not a psycopath, I do feel empathy and remorse and I don’t think I’m especially egoistic nor exhibit overly antisocial behavior, but I may be a bit further on the asperger spectra.For fun I tried out anaspergers testand I scored a 28. According to the site that means:26-31 gives a borderline indication of an autism spectrum disorder. It is also possible to have aspergers or mild autism within this range.As I don’t recognize myself, and Veronica agrees, I don’t think I have autism or asperger but I still scored higher than I was expecting.Published:December 11,2016in22d9d07Tagged:LifePreviousNext</description>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Building the GH60</title>
      <link>https://www.jonashietala.se/blog/2016/10/12/building_the_gh60</link>
      <description>Building the GH60Published:October 12,2016Revised:June 19,  2024in6ff6161Tagged:Keyboards,Computer,GoalsI’ve finally completed my first custom made keyboard. I’m still missing stabilizers and some smaller screws to hold it all together but I’ve been using it the last days and I thought I’d share.The hardwareSeveral years ago I joined thegeekhack forumand I joined in a few group buys. I ordered some cool keycaps and I also entered theGH60 Group Buywhich sold plates, stabilizers, PCBs and switches so you can build a more minimalistic keyboard. Unfortunately the group buy crashed and burned and it’s long overdue with the creators vanishing and leaving the group buy with not enough money. I did get my two PCBs and my switches but I’m still waiting for my plates and stabilizers… Which may never arrive.I did source a 60% plate frommassdropand I usedCherry MX Greenswitches which is a harder clicky cherry variant.PicturesMy beautiful solder jobIn all it’s gloryYou can see the plate mashed between the switches and the PCBA full view of the switches from the topThe beautiful keycapsThe white doesn’t shine through at all when you’re at the keybord, the photo isn’t representative.FirmwareI tried out both thetmk_keyboardandqmk_firmwarefor my keyboard. qmk is basically the same as tmk but with extended features (which I don’t think I’m currently using?).The code is available on github:https://github.com/treeman/qmk_firmwareDependencies:dfu-programmeravr-binutilsavr-gccavr-libcAnd then to flash the firmware press the reset button on the PCB and do:makedfu-programmeratmega32u4 erasedfu-programmeratmega32u4 flashdfu-programmeratmega32u4 startI’m currently using a fairly standard qwerty layout and I’ve moved down Escape in place of Caps Lock as I use Vim at a daily basis. I’ve also included a function key which if pressed will allow F1-F12 and arrow keys. Holding down Caps Lock (now Escape) also works as a function key. Holding caps lock works remarkably well, I can see why many Emacs users remap it to Ctrl.Then I use the rightmost modifiers, which I’ve never even pressed?, to set up a numpad layer and a mouse layer. The mouse layer doesn’t work well however… Not enough control over the movement sadly.#defineBASE0#defineFUN1#defineNUMPAD2#defineMOUSE3constuint16_tPROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS]={/*0: Default layer* ,-----------------------------------------------------------.* |  `|  1|  2|  3|  4|  5|  6|  7|  8|  9|  0|  -|  =|BSP|DEL|* |-----------------------------------------------------------|* |Tab  |  Q|  W|  E|  R|  T|  Y|  U|  I|  O|  P|  [|  ]|     |* |------------------------------------------------------|    |* |Esc/Fn|  A|  S|  D|  F|  G|  H|  J|  K|  L|  ;|  '|  \|Ret |* |-----------------------------------------------------------|* |Shif|   |  Z|  X|  C|  V|  B|  N|  M|  ,|  .|  /| Fn|Shift |* |-----------------------------------------------------------|* |Ctrl|Gui |Alt |          Space         |Alt |    |Mous|NPad|* `-----------------------------------------------------------'*/KEYMAP_HIETALA(GRV,1,2,3,4,5,6,7,8,9,0,MINS,EQL,BSPC,DELETE,\TAB,Q,W,E,R,T,Y,U,I,O,P,LBRC,RBRC,\FN4,A,S,D,F,G,H,J,K,L,SCLN,QUOT,BSLS,ENT,\LSFT,NUBS,Z,X,C,V,B,N,M,COMM,DOT,SLSH,FN0,RSFT,\LCTL,LGUI,LALT,SPC,RALT,NO,FN3,FN1),/*1: Function layer* ,-----------------------------------------------------------.* |Lr0| F1| F2| F3| F4| F5| F6| F7| F8| F9|F10|F11|F12|   |   |* |-----------------------------------------------------------|* |     |   | Up|   |   |   |Hom|PgD|PgU|End|PgU|   |   |     |* |------------------------------------------------------|    |* |      |Lef|Dow|Rig|   |   |Lef|Dow|Up |Rig|PgD|   |   |    |* |-----------------------------------------------------------|* |    |   |   |   |   |   |   |Hom|PgD|PgU|End|   |   |      |* |-----------------------------------------------------------|* |    |    |    |                        |    |    |    |    |* `-----------------------------------------------------------'*/KEYMAP_HIETALA(FN2,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,TRNS,TRNS,\TRNS,PGDN,UP,PGUP,TRNS,TRNS,HOME,PGDN,PGUP,END,PGUP,TRNS,TRNS,\TRNS,LEFT,DOWN,RGHT,TRNS,TRNS,LEFT,DOWN,UP,RGHT,PGDN,TRNS,TRNS,TRNS,\TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,HOME,PGDN,PGUP,END,TRNS,TRNS,TRNS,TRNS,\TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS),/*2: Numpad* ,-----------------------------------------------------------.* |Lr0|   |   |   |   |   |   |   |  *|  *|  *|  -|  +|   |   |* |-----------------------------------------------------------|* |     |   |   |   |   |   |  -|  7|  8|  9|  +|  +|   |     |* |------------------------------------------------------|    |* |      |   |   |   |   |   |  .|  4|  5|  6|  ,|  ,|  /|    |* |-----------------------------------------------------------|* |    |   |   |   |   |   |   |  0|  1|  2|  3|  .|   |KP Ent|* |-----------------------------------------------------------|* |    |    |    |                        |NLCK|    |    |    |* `-----------------------------------------------------------'*/KEYMAP_HIETALA(FN2,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,PAST,PAST,PAST,PMNS,PPLS,TRNS,TRNS,\TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,P7,P8,P9,PPLS,PPLS,TRNS,\TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,PDOT,P4,P5,P6,COMM,COMM,PSLS,TRNS,\TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,P0,P1,P2,P3,PDOT,TRNS,PENT,\TRNS,TRNS,TRNS,TRNS,NLCK,TRNS,TRNS,TRNS),/*3: Mouse mode* ,-----------------------------------------------------------.* |Lr0|   |   |   |   |   |   |   |   |   |   |   |   |   |   |* |-----------------------------------------------------------|* |     |   |MUp|   |   |   |   |   |   |   |   |   |   |     |* |------------------------------------------------------|    |* |      |MLe|MDn|MRh|   |   |MLe|MDn|MUp|MRg|   |   |   |Bt1 |* |-----------------------------------------------------------|* |    |   |   |   |   |   |   |ScL|ScD|ScU|ScR|   |   |  Bt2 |* |-----------------------------------------------------------|* |    |    |    |          Bt1           |    |    |    |    |* `-----------------------------------------------------------'*/KEYMAP_HIETALA(FN2,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,\TRNS,TRNS,MS_U,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,\TRNS,MS_L,MS_D,MS_R,TRNS,TRNS,MS_L,MS_D,MS_U,MS_R,TRNS,TRNS,TRNS,BTN1,\TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,TRNS,WH_L,WH_D,WH_U,WH_R,TRNS,TRNS,BTN2,\TRNS,TRNS,TRNS,BTN1,TRNS,TRNS,TRNS,TRNS),};constuint16_tPROGMEM fn_actions[]={[0]=ACTION_LAYER_TAP_TOGGLE(FUN),//Fn momentary or toggling.[1]=ACTION_LAYER_TOGGLE(NUMPAD),//Toggle numpad.[2]=ACTION_LAYER_SET(0,ON_BOTH),//Back to base layer, safety escape.[3]=ACTION_LAYER_TOGGLE(MOUSE),//Toggle mouse layer.[4]=ACTION_LAYER_TAP(FUN,KC_ESC),//On hold trigger Fn overlay. On tap act as esc.};Naturally things will change but this is what I’m rolling with for now.Published:October 12,2016Revised:June 19,  2024in6ff6161Tagged:Keyboards,Computer,GoalsPreviousNext</description>
      <pubDate>Wed, 12 Oct 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Weekend Tournaments</title>
      <link>https://www.jonashietala.se/blog/2016/09/06/weekend_tournaments</link>
      <description>Weekend TournamentsPublished:September  6,2016in46d90a3Tagged:Gaming,Netrunner,Game of ThronesThis weekend was filled by playing cards. On Saturday I hosted a small Game of Thrones tournament and on Sunday the local Netrunner community hosted a small summer kit tournament.Game of ThronesWe’ve had a similar tournament once before when me and my girlfriend invited two of our friends and had a small 4 person tournament. The last time I was the only one with any cards and I had made 4 decks which we then drafted. Quite surprising to us my girlfriend Veronica the tournament and even admitted it was a fun experience. This time one of our friends Filip and I had practiced a bit and we even went to a regionals before while Veronica hadn’t played at all since the last tournament and the other friend barely knew the rules.The tournament was a success and we had a good time. I managed to eek out a win against Filip but extremely surprisingly Veronica managed to beat us all once again. I’m still in shock and I’m still not sure how it all happened…Again. But I’m very proud of her of course! And this time she exclaimed howfunit all was, several times during the day! I’m sure it was funkilling,burningandkilling us some more…NetrunnerBefore this tournament I and after mylatest tournament reportI actually had two more tournaments; the regionals in Linköping and the ANRPC finals I qualified for. I was going to and actually stated a writeup but I was kind of tired of card gaming in general at that time. I simply had played too much. In the regionals I just barely made the cut and somehow ended up 2nd. For the ANRPC finals I did the classic error of taking two completely new decks and predictably crashed and burned. I did log therunnerandcorpdecks for the regionals but didn’t for ANRPC, they were a classic Dumblefork and some sort of rush Argus.This small 6 person tournament was the perfect thing for me to reinvigorate my interest in netrunner. I had a great time.With MWL destroying the runner love of my life and with asset spam being rampant I was forced to choose a new runner. CtM punished me hard on jinteki.net so I decided topack the hate. I was very close to choosing a killing corp but I decided to try tochange my corp deckwhich went quite well during the regionals.I did a ton of mistakes when I played and especially my corp wasn’t feeling all too great but somehow I managed to win the tournament! We also streamed the games I think 3 out of my 5 games got streamed. They should be uploaded to Youtube in time.Published:September  6,2016in46d90a3Tagged:Gaming,Netrunner,Game of ThronesPreviousNext</description>
      <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A small LED Cube</title>
      <link>https://www.jonashietala.se/blog/2016/08/26/a_3x3x3_led_cube</link>
      <description>A small LED CubePublished:August 26,2016in22aca72Tagged:Life Hacking,Goals,HardwareAs a follow up of myhobby project goalsthis autumn I have now completed the smallest goal there. I got started a little with soldering by constructing a small 3x3x3 LED cube.Although extremely hard to see in this picture it actually worked without a hitch! It’s not the prettiest job ever but it was quite meditative to work with actually. Now I’m just waiting for the plate to arrive so I can start working on my keyboard.Oh and the reward for accomplishing this subgoal was to go to black belt academy, a Taekwon-do training camp last week. I like the idea of having clear goals and rewards to work against.Published:August 26,2016in22aca72Tagged:Life Hacking,Goals,HardwarePreviousNext</description>
      <pubDate>Fri, 26 Aug 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Goals for Autumn 2016</title>
      <link>https://www.jonashietala.se/blog/2016/08/12/goals_for_autumn_2016</link>
      <description>Goals for Autumn 2016Published:August 12,2016in3f9e7b1Tagged:Life Hacking,Goals,HabitsEvery once and a while I like to redo my priorities and set new goals for myself.I recently read the book59 secondswhich among other things presented a way of structuring goals I will try out. In short you should divide your main goal into 5 subgoals with a date of completion, a reward upon completion and you should specify why and how you can accomplish it. You should describe the main goal and also list the benefits for completing the goal and for best effect you should also go public with your goals.Exercise and HealthThe goal is get stronger, get more energy and in general get a more healthy lifestyle.Eat more strict LCHF for 1 monthI can achieve this because I’ve done it before. The problems are when there are unhealthy snacks available but focusing on how bad I feel after giving in. Focusing on better alternatives like dark chocolate, wine or various meet will help.This will be achieved by: Aug 28The reward will be: MassageTrain BJJ or MMA for 1 monthMe and my girlfriend are planning to try out BJJ together. If she likes it continuing with it should be easy for me to continue training. If not I will continue with either BJJ or MMA as I’m pretty hyped to explore some other martial arts styles which hopefully will offset the potential motivation problem.This will be achieved by: Oct 2The reward will be: Gi or training gear2 months of lifting at the gymI will go to the gym 3 times a week during lunch and buy salad next door for lunch and I will train for ~45 min. It’s something I’ve done before and I felt good about it. The biggest problem here is to get in the habit and after that it should run smoothly.This will be achieved by: Oct 30The reward will be: New training shorts100 kg deadlift 5x5, 75 kg bench 5x5, 85 kg squat 5x5I have reached comparable results before and with dedicated training I should be able to go beyond previous results. By getting in the habit of going to the gym reaching these weights and reps should be straightforward. One problem is that I might be planning to train too much but by not training to failure but for more energy and focusing more on consistency should alleviate that issue. Another one is that my grip is very weak after the injury but even before that. It can be combated with the grip trainer at work.This will be achieved by: Nov 27The reward will be:undecidedSide split with both feet besides the yoga matI’ve had a problem with my groin for who knows how many years and it’s time toget a routine to combat it. The theory I have now is that I’ve been far too eager and I’ve started training too hard too fast. By focusing less on the high kicks in Taekwon-do and training other styles more and by not pushing myself during the stretching sessions the pain should recede slowly. The plan is to use limbering or very light stretching every day and once a week focus solely on stretching. Here again the issue is to get in the habit but I wouldreallylove to be able to train fully without pain. The goal is just a slight increase in flexibility which I’m using to get a concrete goal to aim for.This will be achieved by: Dec 25The reward will be:undecidedBenefitsHappier about myself.More energy in my life.Remove the dissatisfaction I’ve had the last years about not having exercised enough.Hobby ProjectsThe goal is to get going with some hobby projects.Build a 3x3 LED cube.The goal is to get started with soldering. Should be a small project and an hour here or there should be enough to see it through.This will be achieved by: Aug 10The reward will be: Taekwon-do training campGo throughProgramming PhoenixandProgramming ElixirI think I want to learn more about web development and I’ve heard a ton of good stuff about Phoenix and Elixir. I’ve had a lot of problems completing sideprojects before but going through books hasn’t been that big of an issue.This will be achieved by: Sep 15The reward will be: New walletConstruct a custom keyboardToo long have I had two GH60 PCB and a bunch of keycaps lying around. I’m still missing a plate but with that (and possibly stabilizers) I have all that it takes to finalize it. The soldering and the assembly shouldn’t be too though and a custom keyboard is something I’ve wanted for a long time. I’ve had problems finishing side projects but if I get all parts I should be able to at least start the project. With it started and with all parts on my desk I should be forced to finish it.This will be achieved by: Nov 30The reward will be: Netrunner world championship decksCreate a usable budgeting tool on par with my currently used systemI’ve been using a fairly crap spreadsheet to track my expenses and loosely track my investments into cryptocurrencies and I had an idea to create a website to track them and to budget for the upcoming months. It serves a practical use but it’s also an excuse for me to learn Phoenix, Elixir and general web development. That’s a fairly powerful motivator but it may not be enough. By making it an explicit goal and a deadline hopefully I will finish this one. The danger here is that the deadline is too far away and that I don’t prioritize the project.This will be achieved by:  Dec 20The reward wil be: Extra investment in cryptocurrenciesBenefitsExpanded knowledge is good both for my profession and to satisfy my own curiosity.The satisfaction of completing projects and creating things is wonderful.I’ve been wanting a custom made keyboard for a long time.Habits to startI’ve been usingHabitica(previously HabitRPG) to help establish habits and it’s been working wonderfully well for me when I’ve used it. For a couple of months I’ve had a break from it but I will try to use it again to try to establish a few habits.Daily habitsExploratory limbering once a dayCold shower once a dayGrip strength every day at workRead a book 15 min every day (before sleep)Anki flashcards every day (occassional refill)Take D-vitamin supplementsWeekly habitsGym 3x a weekMartial arts (BJJ/MMA) 2x a weekIsometric stretch once a weekPublished:August 12,2016in3f9e7b1Tagged:Life Hacking,Goals,HabitsPreviousNext</description>
      <pubDate>Fri, 12 Aug 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Slackware installation notes</title>
      <link>https://www.jonashietala.se/blog/2016/07/29/slackware_installation_notes</link>
      <description>Slackware installation notesPublished:July 29,2016Revised:July  1,  2024inac95a3bTagged:SlackwareIt seems like it’s been ayearlyrecurrencereinstalling slackware from scratch. This time it happened during my vacation when I was mucking around with trying to compile erlang with wxWidgets support and somehow a make clean started to remove / and I only noticed it too late… Not sure how it happened but I had changed things in the make and config files. Oh well no data lost just annoyances.This process was done with Slackware 14.2 and roughly details what I’ve done so I can retrace my steps in the future.Up and runningBootingEven with only a laptop with windows installed hope is not lost. The almighty alien has agreat tutorialcreating an usb boot loader from windows. At first I tried to extract the contents of usbboot.img usingIZarcbut it reported it as empty butWinimageworked fine. The rest went smoothly.PartitionsI used a split of/,/usr/local/,/home. The partitions on my laptop looks messy as I’ve kept some factory windows partitions.$df-hFilesystemSize  Used Avail Use%Mounted on/dev/root50G   27G   21G  57%/devtmpfs2.9G     0  2.9G   0%/devtmpfs2.9G  1.1M  2.9G   1%/runtmpfs2.9G  688K  2.9G   1%/dev/shmcgroup_root2.9G     0  2.9G   0%/sys/fs/cgroup/dev/sda550G   93M   47G   1%/usr/local/dev/sda7148G  2.0G  139G   2%/home/dev/sda2187G   88G   99G  48%/mnt/wincgmfs100K     0  100K   0%/run/cgmanager/fsWirelessCan be found in/extra/wicdin the slackware release.installpkg...chmod+x /etc/rc.d/rc.wicd/etc/rc.d/rc/wicdstartwicd-cursessbopkg/slackpkgUse slackpkg to update official Slackware packages.slackpkgupdateslackpkgupdate gpgThe vast majority of packages I install can be found onSlackbuilds. Many unnamed dependencies can simply be found here.sbopkgmakes it a lot easier to use.EnvironmentTo quickly get up and running use xfce andstartx.Bothfishandneovimcan be installed from slackbuilds. Make sure to set fish as login shell as well as the default shell for both root and user.dotfilesStorehttps://github.com/treeman/dotfilesin~/dotfilesand symlink from there as needed.XmonadInstallghcandcabal-installfrom slackbuilds and then use cabal to install the rest:cabalinstall cabal-installcabalinstall xmonadcabalinstall xmonad-contribUse sbopkg to install conky (make sure to manually include lua support) and nitrogen.Clonehttps://github.com/robm/dzenand editconfig.mk, choose option 7 (XPM, XFT, Xinerama). I’m not 100% I need to do it for the laptop or if this only was needed to support Xinerama but I did it this way anyway.When started uselxappearanceto set a prettier look for firefox and other gui.  Seeprevious postabout prettifying fonts.DevPerlUse cpan as root whenever missing packages are found:cpaninstall CPANcpaninstall Modern::Perlcpaninstall DateTimeBlogThebloguses Hakyll.cabalinstall missingHcabalinstall hakyllAlso setup~/.s3cfgto allow syncing.PhoenixDownload the erlang-otp slackbuild andfind the latest version.Installlatest Elixirfrom source.Follow theinstallation guideand install the dependencies.Published:July 29,2016Revised:July  1,  2024inac95a3bTagged:SlackwarePreviousNext</description>
      <pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Long Term Goals Update</title>
      <link>https://www.jonashietala.se/blog/2016/07/18/long_term_goals_update</link>
      <description>Long Term Goals UpdatePublished:July 18,2016Revised:January 23,  2019indc7d7c4Tagged:Life HackingDuring my vacation I suddenly got a bunch of “life crisis” type thoughts in an almost panic inducing intensity. They were mostly thoughts about not having accomplished anything and that the future looks bleak and meaningless and it’s not worth to do anything. As usual they are mostly illogical and they usually subside fairly quickly. But they got me thinking of what I want to do with my life and what some of my larger goals are. Makingyearly reviewsis a great way of combating the “I haven’t done anything” thoughts.I’ve written about somelong termgoalsbefore. Let’s revisit them.I want to have kids(No change)Still the most important long-term goal.Write a Book(No change)Having written a book feels like a big accomplishment I’d like to have on my list.Contribute to a popular open-source project(Completed)I made some contributions torustin 2014.Black belt in Taekwon-do(Completed)Yes! I achieved 1-Dan this June.Write my own Programming Language(Abandoned)It would be cool to write my own programming language, but in the grand scheme of things this doesn’t feel as important. I’m just not motivated enough to start up it as a big project.Own a Snooker table(Abandoned)Looking back this looks like a fairly stupid materialistic goal. Snooker is awesome but does it really warrant being one of my long term life goals? Not a chance.One can argue about the definition of a long term goal vs a short term goal. Generally it’s something I wish to have on my list of stuff I’ve done during my life.I would also like to add two new goals I’ve been thinking about lately:Learn a new languageAnd I don’t mean another programming language, maybe Korean or Finnish.Freedom over my work/life balanceI think this is a big point for me. I value freedom very highly and I see no bigger gain than to have control over your work.What I should do is to expand on my goals and think about why I want them andhowI should accomplish them. For now though this quick overview is enough to calm down my anxious thoughts.Published:July 18,2016Revised:January 23,  2019indc7d7c4Tagged:Life HackingPreviousNext</description>
      <pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Recent experiences with Netrunner tournaments</title>
      <link>https://www.jonashietala.se/blog/2016/03/31/recent_experiences_with_netrunner_tournaments</link>
      <description>Recent experiences with Netrunner tournamentsPublished:March 31,2016Revised:April  7,  2024in3c574f1Tagged:Gaming,NetrunnerAfter a bit of a hiatus after theWinter Kit Tournamentthe 16th January I participated in three tournaments during February - March. After each of these tournaments I started a writeup of them but they fell off my mind a bit but consider this my break with my blogging hiatus.Store Championship ÖrebroAfter more than a month with no Netrunner I was stoked and in high spirits as we went to the friendly meta of Örebro the 20th Feb. I decided to try out two of the currently most popular decks:bootcamp glacier is here to stayandThe 2-Armed Ice Feast(sometimes called Dumblefork) and I don’t think I made any changes to the decks at all. I’ve always liked Blue Sun so I was excited to try a competitive variant and I loved the “Looking 4 Job” variants of Whizzard before.On to the games. We were only 8 people and I was matched up against Niclas who used practically the same decks as I did. I was quite nervous as he’s pretty awesome and he basically smashed me in both games. The second game I faced a relatively new players where I won the games comfortably and the third I lost two fairly close games against Peder’s MaxX and NEH FA (he did play better though). The last games I won another close Whizzard game but lost my corp game dueApocalypse(From Nasir!) catching me with my pants down.I found out the hard way that the bootcamp glacier wasn’t the easiest to pilot (as suggested in the comments) and the dumblefork deck didn’t play the same as the previous Whizzard decks I’v played. Serves me right playing new decks on a tournament.In the end I finished second to last, officially my worst tournament placement, and I must admit I was quite disappointed. I’d like to think I don’t care about loosing, but I think that’s wrong, I very much want to win and I do play Netrunner competitively when I do go to these tournaments. Another thing which made my disappointment a lot worse was that I missed out on the wonderfulLeela Playmat. Maybe I’ll get another shot at it during the Store Champ in Linköping but for that I should probably do myself a favor and prepare a bit.But I did get 3 copies of our lord and saviourJackson Howard!ANRPC Qualifier ÖrebroOnly a week later we went to yet another tournament in Örebro. This time it was a player organized tournament where the top 3 qualified for a finals tournament in Stockholm but there were a ton of other things to win as well.As this seemed to a quite competitive event with players coming in from Stockholm and the surrounding area and considering my poor performance from last week I had lowered my expectations a lot. I had set my sights on simply not getting crushed and as long as I put up a good fight I’d be happy.As the decks the previous work out for me (I can hardly fault the decks) I decided to go back to myNoise buildwhich has served me well before. The tweaks I did to the build after the most wanted list was simply to cut a clone chip and the shards. I decided to throw in a Trope as an attempt to prevent running out of cards. During the day it was only useful once and as of this writing I’m leaning more towardsBigBoy Noisewith Levy/Peddler/Inject. I complained a bit (half jokingly) about missing the kill from my corp deck during the previous weekend and I got inspired by theCanadian Graveyarddeck d1en used to win stimhack league with. Imade some tweaksusing other shells and I was good to go!During this week I also tried outhttp://www.jinteki.net/which is an unofficial online version of the game. There has been other clients (OCTGN) but I’ve always been reluctant to use them as I didn’t want to spend too much time playing… Well that’s done and I’m caught now. The interface is quite good if you already know the game and I used to practice with the decks a little bit and they seemed to perform ok.I also got my friend Filip to come to his first tournament this weekend after we played a couple of games to refresh the rules during the week. I’m still pretty impressed as he basically agreed to come even without knowing the game basically at all. I gave him a standard Foodcoats list (minus global food, no dupes) and a vamp Jesminder. Sadly he didn’t win any games but the opposition was tough and he didn’t go to time and he said he had fun (apparently as he has now bought a core and some expansions!).The GamesAfter the tournament I made some notes about the games I played but they aren’t super exhaustive and it’s been a while since they happened, but here’s a quick summary at least. There were 5 rounds without a cut and some of my games were streamed (but I haven’t seen them uploaded yet).Round 1Got a bye. Sigh. Sure I want to win but I want to play (and win) more… At least Frida (who didn’t participate) played a game with me to ease my pain, thank you! I also think my prospective opponent arrived just as we was starting our round, but I got the bye anyway.Round 2As I had apparently won my first round I got to face fellow Linköping player Harald and on stream for the first time! I distinctly remember looking at my shaking hands at the beginning of the games. Turns out I get nervous playing Netrunner on stream, scared of making mistakes and dumb plays. These games I didn’t mess up too badly as I managed to kill the too passive runner with the combo Hiro/Neural/Ronin and as Noise I got a good start against his NEH fast advance allowing me to close out the game.Round 3Played against a Chaos Theory who siphoned me down, won the psychich field psi game (dodging the kill) and checked all my advances/unadvanced cards. I was too greedy installing a Hiro after the runner clearly checked everything. Noise has a pretty good matchup against RP and he did get a pretty good setup, but so did I and I sat back and milled challenging the remote during advance (caprice foiled me) but I stole enough from R&amp;amp;D and archives to win shortly after.Round 4Second game on stream and I faced another accomplished player. I got a great start as IG against his Whizzard and I managed to keep up my assets and my money. I started to score out as he was a bit too passive but I ended the game with my new favourite combo Hiro/Neural/Ronin dodging the I’ve Had Worse. Then I faced EtF, my most dreaded opposition against Noise. After he made an opening remote I ran it, clicked through the Turing and trashed(!) the Adonis. Then I tried out my luck with Medium but no such avail and after that he rushed me out. In retrospect I handled the game very poorly… I’d like to watch the video whenever it’s available but hopefully it’s not too cringeworthy.Round 5Still on the top table and my third streamed game I faced off against another player I know is very good. This time it was my turn to play against a Noise with my IG, which was a first. I don’t really remember the game (need videos!) but I think he got a lot of accesses and I remember feeling heshouldhave seen enough to win the game. We even checked the deck if I had enough agendas in there (most hidden in R&amp;amp;D) but alas I got the win by running him out of cards. Then I faced another NEH FA. I think I got a good start with some medium action and I got clot online but he managed to claw back. At the end of the game a small crowd had assembled as we slowly went to time. During my turn I milled, checked archives (up to 5 points) and made a last ditch attempt at HQ and finding the 1/5 chance for victory. Two from my view intense games and I’m looking forward to the video, if not to see the games from the other perspective.Somehow I managed to win the tournament and apparently I’m going to play in the Stockholm finals, which is great because it means more Netrunner! I still feel like I don’t deserve it as I got an unnecessary bye the first round… The guy who got punished for coming late actually came in 3rd in the end, which is pretty baller, and it makes me feel a little bit better at least.Winter Kit tournament in LinköpingOriginally planned to be a store championship but as the dates collided with other store champs in the area we couldn’t get enough players we moved it forward. As it happens I had bought a winter kit so we used it as prize support for a 7 people tournament Mars 12th.Filip didn’t get enough of netrunner the last time but the decks I provided didn’t really fit his aggressive play style. So I gave him a modifiedFury Roaddeck (which is also a variation of what d1en used) an all out Blue Sun Kill deck (Government Takeover/Punitive/Cerebral/Janus/Scorch/) to better fit his playstyle. We also play tested them a little before the tournament.I was planning to bring my standard Noise and a fast advance Order of Sol deck to the Store Championship as a bit more competitive decks, but after the tournament was changed to a winter kit tournament I opted to try out something else.Pitchforkis a cool deck and I don’t play that much Shaper so it seemed like a good idea to try it out (modification to allow Filip to get his Fury Road deck). A couple of months ago I tried a slightly janky/stupid/awesomeBiotech killdeck I had lots of great fun with so it was time to play some fun jank!This time I got another of my friends, Erik, to come to his first tournament. Some time ago I convinced him to buy a core set and he put it to use during the tournament and he said it was more fun than he was expecting!I don’t have any notes from this tournament but there were a few moments that stood out. “Why do you play THAT card” when I flipped a Data Mine and in general heads were shaken that day which was great fun. The best thing was a turn 2 corp win against andromeda who made dirty laundry on psychic field on the 3rd click… and I won the psi (alwayschoose The Brewery). I played Filip and he played great, he even got a Government Takeover scored as I was too afraid to run it (I still won though) and as runner he keyholed me to death and won that game.In the end the game I lost against Filip was the only game I lost and so won my second winter kit tournament and I got my Corroder alt art. Erik also won two games so hopefully he has also seen the light and will return to our next tournament.Published:March 31,2016Revised:April  7,  2024in3c574f1Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Winter Kit Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2016/01/16/netrunner_winter_kit_tournament</link>
      <description>Netrunner Winter Kit Tournament LinköpingPublished:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerAfter quite the hiatus fromNetrunnerI had a chance to join a tournament here in Linköping with 14 participants. The number of players has grown a lot since the previous tournament which is really great.As I really wanted to win the wonderfulDay Jobplaymat I went with two of the best decks I could come up with. I went with theNoisedeck I’ve been playing a while which has been performing really well. I was expecting a lot of EtF so I was on the verge on playing a classicLooking 4 JobWhizzard deck but I switched to Noise just before the tournament as I’m more comfortable with it but I also find it more fun to play Noise than anything else. As for the corp I had played a littleFoodcoatssince it dominated worlds and it has felt extremely solid overall.Tournament structureWe did 4 rounds of swiss without a cut, even though I was personally hoping for 5 rounds. The more games I can play the better it is, I just love to play you know. As usual you get 2 points for each game you win and 1 point for a timed win.Round 1: Dan, Reina/Syncvs ReinaHe got me low on credits early but I played it slow and slowly but steadily accumulated enough credits to build rez enough ice and score out. Foodcoats destroyed the game.vs SyncI was really scared of Sync as Noise is weak against tags and I don’t run any meat damage protection. But I got a nice start and got a few points lead but he still managed to score out some astro counters and I carelessly gave him a Quantum Predictive Model so he got up to 5 point. Luckily I had set up the shard combo with utopia and hades shard I maged to score out with them the click before he would have won.Generally I need to be more mindful of quantum predictive model. I actually think it’s a really good agenda in this type of deck.4 points, 2-0Round 2: Johannes, Leela/Haarpsichordvs LeelaI was really, really poor in the beginning of the game and I had trouble getting my campaigns to stick. I made the really big mistake of trying to rush out an Accelerated Beta Test but I was too poor and too scared of Legwork and The Maker’s Eye after bounce to do it. In the process I had blocked Breaker Bay Grid from my campaigns which made the game really slow… I think I could have won in the end anyway but he got through my remote twice by forcing through an Ichi. Well played by him but I feel like I should have done better.vs HaarpsichordA bit rushed on time and super scared of 24/7 News Cycle I got a fairly good grip in the beginning with a Lamprey lock and I stole a couple of agendas early. Unfortunately I accumulated two News Team and nullified my lead. I still managed to find a couple of agendas to have the lead.In the turn I went through a Gutenberg and took a tag (which I could have avoided with Faust) and gave him a Quantum Predictive Model while I was on 4 points. If I had just broken the sub I would have gone up to 5 points and I had a Hades Shard with at least one 2 pointer in the archive… Once again I need to be more mindful of taking tags. Still had more points and got the timed win.5 points, 3-1Round 3: Henrik, Noise/Blue Sunvs NoiseEtf got set up well and the runner didn’t do anything useful at the start and I got set up really well economically and I was quite safe. Game ended early due to a faceplant into Assassin with only 2 cards in hand and I had a ton of money.vs Blue SunI knew Henrik ran an Accelerated Diagnostics combo deck and I was again scared of dying to Scorched Earth with my not having any protection. But I got a lot of HQ and R&amp;amp;D accesses by trashing two Spiderwebs and an Assassin and I managed to ping away some kill pieces. He drew a lot with jacksson and managed to end up with all three copies of scorch in archives and I finally won by a Medium for his whole R&amp;amp;D.9 points, 5-1Round 4: Fredrik, Kate/EtFThe last game of the tournament and I and Fredrik were the top dogs. As I had one timed win but Fredrik did not so I had to win both games to win the tournament. Tough task as Fredrik is a very solid player.vs KateI was a little flooded in the beginning but I didn’t get punished for it and after that I drew really good. I managed to stick the campaigns in the remote and I had a ton of money basically the whole game. Fredrik security nexus kate and I managed to get two 2-points early and I didn’t draw any agendas in the midgame when he was set up with his monster rig.At the end of the game I had built up a 4-Ice remote and a 5-Ice R&amp;amp;D. He hit me with an Escher which felt quite awful as he had a bunch of R&amp;amp;D interfaces but it turns out my super taxing ice and R&amp;amp;D luck saved me. Foodcoat can and will make extremely taxing servers it turns out…vs EtFFredrik ran a sort of Team Sponsorship fast-advance/rush EtF which I wasn’t looking forward to all that much. But luckily he didn’t draw a lot of economy and I managed to keep him down economically by a combination of lamprey and forcing him to rez ice. I also sniped an early 2-pointer by clicking through an eli and breaking a marcus with Faust, which felt really good admittedly. Overall I managed to keep up a ton of pressure on him even though I didn’t find aesop’s until fairly late.I really felt in control the whole game and the game ended as a timed win for me. The only bigger mistake I recall is one I did on my last turn in the game where I installed a cache and then ran on the remote server thinking I could beat the ash trace just to plant into a Turing. At this point I was already at 5 points and what I could have done is walk through R&amp;amp;D 2 times by taking assassin to the face to maximize my chances of getting a regular win.12 points, 7-1The resultsI was a bit down after loosing points in the second round but I managed to recoup very well in the end. I felt I had some really good in some key matches and my decks served me very well. I will probably try some other corps but I may still continue playing Noise even after the most wanted list.In the end I managed to win the whole tournament which I didn’t really expect. I was hoping to do well but I wasn’t expecting it.As my prize I naturally chose Day Job. The Ice Wall participation prize was great as well. I’m a little sad I didn’t get the Corroder one as I think it looks really good, but you can’t get everything in this world.Was a good tournament and everyone were once again awesome! I’m already planning for the next one!Published:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2015 in Review</title>
      <link>https://www.jonashietala.se/blog/2016/01/01/2015_in_review</link>
      <description>2015 in ReviewPublished:January  1,2016in046f37eTagged:Yearly ReviewPrevious reviews:2010,2011,2012,2013and2014.2015 Geek AchievementsFinished my university studies and got a Master in Computer Science.Discovered a new boardgame love:Android Netrunner.Finished top 4 in my first Netrunner Store Championship.Won asmall local Netrunner tournament.Completed mymaster thesisabout recommender systems.Participated in the 48 hour game making competitionLudum Dare 33withGroar.Actually styledthis websitea little bit.Achieved 12-kyu atonline-goinGo.2015 Non-Geek AchievementsTook the kids to TKD competitions.Achieved 1-Kup in Taekwon-do.Started working atConfigurawhere I spend my time doing systems programming in their homegrown languageCM.Read9 books.Wrote26 blog posts.Played a bit ofA Game of Thrones: The Card Game (second edition).Got new boardgames:Istanbul(very good),Homesteaders(really underrated) andAquasphere(quite ok).2015 FailuresRead far too few books.Did not build my custom keyboard.Plans for 2016Take care of Veronica.Achieve 1-Dan in Taekwon-do.Construct a custom keyboard.Read more books.Play more card games.Published:January  1,2016in046f37eTagged:Yearly ReviewPreviousNext</description>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2015 Read Books</title>
      <link>https://www.jonashietala.se/blog/2016/01/01/2015_read_books</link>
      <description>2015 Read BooksPublished:January  1,2016in046f37eTagged:Read BooksI didn’t read a lot of books in 2015, but the books I did read were pretty damn good.FictionA Song of Ice and Fire: A Dance with Dragons- George R.R. MartinReread.A Knight of the Seven Kingdoms- Gearge R.R. MartinThe Skin Collector- Jeffery DeaverBest Served Cold- Joe AbercrombieThe Heroes- Joe AbercrombieRed Country- Joe AbercrombieNon-FictionLessons In The Fundamentals Of Go- Kageyama ToshiroA great Go book for beginners. Pretty though but very good.The Richest Man in Babylon- George S. ClasonMoney: Master the Game- Tony RobbinsPublished:January  1,2016in046f37eTagged:Read BooksPreviousNext</description>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Establishing Habits with Habitica</title>
      <link>https://www.jonashietala.se/blog/2015/11/21/establishing_habits_with_habitica</link>
      <description>Establishing Habits with HabiticaPublished:November 21,2015Revised:January 23,  2019in6bf3248Tagged:Habits,Life HackingI have usedHabiticathe last 18 months to organize my habits and things I want to get done. I believe it all started with an amazing book calledThe Power of Habitwhich describes the amazing benefits habits can give, both in the context of your own life but also in business. The argument is that habits is the basis for success in whatever area you might be interested in. For me exercise and finishing school were the big driving factors. Even though I was fairly unmotivated with school the last year I managed to get in the habit of regular study and I also usedHabiticaas my TODO list which basically pulled me through the writing of writing my master’s thesis.After I finished school and started working atConfiguraI’ve sadly been neglectingHabiticaa little bit. I still used it every day but a lot less ambitiously than previously, it basically turned into checking off the few still relevant dailies. But I’m now feeling motivated again so I’ve collected new habits I want to do and I’m using Habitica to help me achieve it.Habitica is an RPG game where you level up after you complete habits, dailies or To-Dos. The idea is to do real life actions and log them in the game to collect gold, pets and levels. It’s a simple idea and it doesn’t sound like much, but for me the added goals has made it lot more effective than simply writing in a notebook or similar.With the gold you collect you can buy better gear or buy custom rewards. My idea here is to add things I want to buy or things I want to do there but I haven’t really used it as much before so I’m not sure how effective it’ll be.I’m a serial procrastinator and a technique I’ve used with some success is to have some items on my To-Do list which looks important but really aren’t. When I procrastinate I actually try really hard not to do something even to the point that I dootherthings instead! So these important looking items acts as honey pots for the procrastination. For example the item “Register .bit domains” has a perceived importance cause I want to have one and I really should get one soon… But in reality it’s no hurry as they are not useful in the general sense and I can easily postpone it a month or even a year or two.In the general I’ve gotten a lot of usage out of the To-Do list but in practice you could accomplish the same with pen and paper. The more interesting parts are “Habits” and “Dailies”. They both refer to real-life habits but dailies in Habitica are things you’re supposed to do every day, or on a set of days in the week, and habits are items with positive or negative interactions.These were the main focus of my reorganization and to further the immersion factor I usedemojiand I renamed them to be more RPG like so for example “Take D-Vitamins” became “Health Stims” and “Read” became “Lore”.My main focus has always been on the dailies, I never click habits regularly. But adding a habit as a daily with the intent of doing it every day is a really effective way of making sure I complete it regularly. The risk is of course that you mark it as completed anyway, but luckily I only do it very rarely. As you get both a boost and an additional “Perfect Day” stat I feel very incentivized to complete all my dailies. You also get a streak counter for each daily and I feelreallybad about breaking a big streak.What follows is a rundown on some of the habits I’m trying cultivate:I’m trying out theWim Hof Methodwhich I found through apodcast. I basically do a set of breathing exercises every morning and I also do some stretches in the morning.As I’m very stiff I want to try to do isometric stretches a couple of times a week.I recently started followingTalk To Me in Koreanas I want to learn Korean. I use it conjunction with Anki a flashcard program for spaced repetition. The habit I want to establish is to practice a little bit every day.As I love to read but I’m also very bad at making time for it I’m trying to make it a habit to read 15 minutes before I go to sleep.Brushing my teeth and taking D-vitamins are perfect things to add. I’ve been pretty good at doing it and I’ve had a couple of months long streak of doing them but sadly I’ve forgotten to report it to the site so the streak has been broken…I listened to apodcast with Pavel Tsatsoulinejust yesterday and it got me really inspired for going to the gym. I will try to follow the80/20 Powerlifting routine:Only do 3 exercises; deadlift, squats and bench. Always 5 sets with 5 repetitions.Tuesday:   Heavy squatsThursday:  Heavy bench, light squatsSaturday:  Heavy deadlift, light benchThe original program had another component: Competition. I’m not sure if I want to do that though…Now this is just the general idea. I’m well aware that this may crash and burn but if I successfully do at least half of these things (historically I’m well above that) I consider it a huge accomplishment for me.Published:November 21,2015Revised:January 23,  2019in6bf3248Tagged:Habits,Life HackingPreviousNext</description>
      <pubDate>Sat, 21 Nov 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Stereotypes</title>
      <link>https://www.jonashietala.se/blog/2015/10/14/stereotypes</link>
      <description>StereotypesPublished:October 14,2015Revised:January 23,  2019in6bf3248Tagged:LifeI read agreat essay or articleabout stereotypical programmers calledThe Little Printf. I really couldn’t do it justice so do yourself a favor and go read it. It touches on several types of programmers or rather traits of programmers I recognize in my surroundings and also sadly a bit in myself.  I can especially relate to the programmer who’s always chasing the new hot technology or the one who’s collecting cool but unread programming books, although I’m not doing it for the street cred.And then there’s the e-sport fan who watches other play game instead of playing them and again I’m guilty.http://www.loadingartist.com/Published:October 14,2015Revised:January 23,  2019in6bf3248Tagged:LifePreviousNext</description>
      <pubDate>Wed, 14 Oct 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Summer Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2015/09/18/netrunner_summer_tournament_linkping</link>
      <description>Netrunner Summer Tournament LinköpingPublished:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerThere was anotherNetrunnertournament this Sunday with 8 entrants. We had two new legal data packs with Old Hollywood and The Universe of Tomorrow so a lot of new things were tried. I heard a rumor that a full playset of both Aesop’s Pawnshop and Wyldside were available so I decided to not take my jankiest ideas and playNoiseandBlue Sun.The Noise buildwas practically unchanged from what I’ve played previously. The Blue Sun was a new glacier build with space ice and the new agendas Hollywood Renovation and The Future is Now. I wanted the threat of scorch and I also threw in two snares for extra spice.SwissWith 8 players we did 4 rounds of swiss, without any cut.Match 1: Dan, Valencia/Haarpsichordvs ValenciaI tried to push a Hollywood Renovation early, but it was snagged with blackmail.  It was a big gamble which unfortunately didn’t pan out.  This was a kinda large mistake, but in the end it didn’t matter.  I got my huge ice up and running and I forced him out of my servers.  I made a big play with Hollywood Renovation where I fast advanced a The Future is Now with the 5th and 6th advancement tokens and the game was basically over from that point.  I think I flatlined him in the end, but that’s more of a symbolic victory as I could have just as easily scored out.vs HaarpsichordSuper close, he had scored a lot of points and I was sitting with clot. In the end he installs 3 new remotes, one behind an ice. I push through the ice to steal the first agenda and I imp the second one (now the Imp is without counters). So I install another program, trashing the imp, then trashing the third remote with the imp. All new remotes were agendas. After this my victory was clear as a run on archives sealed the deal.4 points, 2-0Match 2: Harald, Haarpsichord, Hayleevs HaarpsichordI felt like I was behind the whole game, but so did Harald. In the end I managed to snag another very close win, but I’m not sure how that happened. All my Aesop’s were in the bottom of my stack but somehow I managed to steal/imp enough to make up for it. What decided things was a Clot hidden on my street peddler, which he overlooked. Without it I should have lost the game.vs HayleeI allowed some accesses to R&amp;amp;D, but mostly no big damage was done. Then I sealed the game up and the win was basically clear. I had a public support ticking down but we ran out of time so I got one point for being up to 6 agenda points. Maybe I could have played it faster to get the victory on time, but I don’t know.7 points, 4-0Match 3: Henrik, NEH, Chaos Theoryvs NEHI got set up fairly well and I managed to trash a sansan early. I had clot and everything was going alright. I hit a Snare in a remote which took me off guard a bit. The turn after he made another remote and I contemplated running on it, I did have imp tokens after all, but I decided it was fine to possibly allow him a single agenda. Big mistake as I installed cards down to 3 cards in hand and I died to a breaking news and scorch. For some reason I was convinced he was running the fast advance version, or some kind of nearpad, but the reality is I played too fast and didn’t consider everything properly. Live (or die) and learn I guess.vs Chaos TheoryAfter I rezzed an Archer on the remote it was basically game over as he couldn’t break it with the exception of datasuckers/parasiters, which quickly got used. I iced up my centrals with huge space ice and I could simply score out and win. He tried a big Vamp play against HQ, but on the last click and with a tag he died against double scorch after taking down my curtain wall.9 points, 5-1Match 4: Johannes, Haarpsichord/Ianvs HaarpsichordA blistering game where he rushed out agendas and I tried to punish/steal with Imp. The game slowed down when I had a Clot on board and I pushed up to 6 points. A run on archives with a Jackson reshuffle and then triggering Utopia shard sealed the deal.vs IanWe laughed about our decks being super late game focused and he stayed true to his words and he installed a ton of resources, three Gang Signs and two HQ interfaces. I was kinda agenda flooded but I managed to push them out in Archives with double Jackson. The game was decided in a funny way I think, even if I misplayed it quite a bit (I blame tiredness or something!).I had Hollywood Renovation with a bunch of advancement tokens, The Future is Now in a naked remote and one Snare and one Scorch in my hand. So I advanced Hollywood Renovation 3 times and scored it. He hit a Snare but nothing else with all his accesses. Then I scored The Future is Now and fetched my second Snare from R&amp;amp;D, which he accessed and died to. Naturally the correct play would have been to advance Hollywood Renovation twice, score The Future is Now and fetch the Snare. Now if he hits a Snare I can just scorch him on my last click.13 points, 7-1The resultsThe self critic in me keeps on thinking about the lost game and the game which went to time, but some small part of me tries to point out that things actually went well. I felt fine in all games and it never felt hopeless in any game. I did take “better” or more serious decks and the other guys joked about my very serious decks, but it’s fine. I did accomplish my goal and I even won the tournament, yay!I managed to achieve my goal and I got to choose a playset of Aesops! I also got a couple of Swordsman and a new deckbox. It’s a little bit sad that I declined the Femme Fatale alt-art as it’s preeetty… But maybe next time.Published:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner ID draft Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/08/29/netrunner_id_draft_rebro</link>
      <description>Netrunner ID draft ÖrebroPublished:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerI entered an ID draft tournament inNetrunnerhosted in Örebro and this is a brief overview of what happened. Disclaimer: My memory is a little bit fuzzy and the events may or may not correspond to what actually happened.The draftThe idea was to randomly sort all entrants and in turn each chooses an ID which nobody else can choose. When everyone has chosen an ID the procedure continues in reverse order. This means you can choose either corp or runner early and leave the other until later.I got the 5th spot and Geist, Nasir, RP and NEH was chosen before me. If the goal was to do well I should probably have chosen a strong corp like Blue Sun, HB or possibly PE but I had just started playing Noise and I was loving every second of it so that was my choice. It was a little bit boring perhaps as it wasn’t a new ID I had to come up, but I had no idea of what I actually wanted to play with as corp so I simply delayed that decision. When it was my turn again most actually good corps had gone and I could choose between Titan, Harmony Medtech, Argus and Biotech (and some others…). Recently some popular Titan lists had popped up on netrunnerdb so I took that one.This is the drafting result:Frida unfortunately did not attend the actual draft and she had to pick both runner and corp last.With Wayland and Jinteki being relatively popular I was thinking of adding I’ve had worse to Noise… But in the end I decided to be ballsy and skip all that. And no plascretes. But I thought with some careful play and Imp/Utopia shard I could manage. Instead I went with the no frills 3 Aesop/3 Cache low economy approach which I’ve found is perfectly fine. I slotted 2 Hacktivist meeting as the local playgroup in Linköping insisted on running Cerebral static and Manhunt and maybe others would do weird stuff with currents as well?This is the Noise deck.The Titan buildis basically the popularAtlas Shruggedwith Beanstalk replacing Subliminal messaging and an extra Crisium Grid for the relative increase of criminal. In testing the corp deck performed okay… But never amazing. Noise performed consistently whenever I didn’t just die against Jinteki due to… Jinteki stuff.The matchesWhen we arrived at Örebro the basement already full of Magic gamers is already hot and things would only get worse. I didn’t get enough sleep and I’m already tired but still pumped to play some Netrunner!  The tournament features five rounds of swiss without a cut.Match 1: Yoshi, Reina/Blue Sunvs ReinaHedge fund, beanstalk, install ice over HQ. Runner installs things, runs on R&amp;amp;D and misses. I sea source-scorch second turn as he has 2 (or 3?) cards and I feel a bit bad about it. Unfortunately silly wins and losses like these happens sometimes.vs Blue SunHe gets a great start with ice and money. I’m having trouble setting up and I can’t find D4v1d before he can retrieve his oversighted Curtain Wall. I’m too scared/incapable of stealing his agendas as he’s rushing them out. When I finally get my Imp going on HQ he already has a scored atlas with two tokens and he scores out a hostile in a flash. I made a mistake of not installing a clone chip as I had a clot in my heap and I maybe should have been more aggressive but overall Yoshi outplayed me.2 points, 1-1Match 2: Dan, TWIY/Whizzardvs TWIYDan is from Linköping, same as me, but I haven’t actually played him but I knew his was a variation of theMidseasons/Psychographics rush deck. I play very carefully and builds up while he takes money. He gets a bunch more money and I continue milling and building. I’m waiting for him to start scoring out and I go through a Tollbooth and imps away an NAPD contract, but he never gets the astro train going while I sit back milling with clot ready. The game basically end when he never scores out and I get a mill victory.vs WhizzardHe trashes my sansans but I get some points scored. The game goes a bit long and we’re almost going to time. I think I could have won by rezzing an Archer against his faust when he doesn’t have enough cards to continue the game, but I stress out and for some reason I don’t rez it. Later he finds a 3-pointer for the win from HQ. I guess I took the risk as he could have just as easily hit a Snare and loose.4 points, 2-2Match 3: Johannes, Harmony Medtech/Geistvs GeistI’ve played against Johannes a lot so I know his deck and he knows mine. I get an excellent start with 3(!) Quandary protecting HQ, R&amp;amp;D and my remote. I manage to tax out his breaking and entering breakers as I score out with the help of sansan. Annoyingly Forger prevented me from scorching him more than once but in the end I manage to score out behind 2x barriers and a Quandary as he had basically exhausted his breakers and clone chips.vs Harmony MedtechI got set up with Noise fast and controlled the game from the start. He scored out a Nisei but I was never really worried. I made a stupid move of running archives when I had just trashed a Cyberdex and later I ran it again! But in the end my start was just too good and I won by pounding HQ with Lamprey, Imp and parasites.8 points, 4-2Match 4: Magnus, Nisei Division/Valenciavs Nisei DivisionI’ve never played Magnus but I know he’s a very good player so I’m really nervous to play him. He installs over R&amp;amp;D and remote and does a hedge fund. I install a lamprey and imp and run HQ… Just to hit a Snare. Sigh. I thought about it but I figured it wouldn’t be a big deal, but it was. I don’t shake the tag as I don’t have any resource installed and he scorches me. Huge misplay from me and now I’m trying not to tilt too hard.vs ValenciaI have a fairly bad starting hand which I keep… For some unknown reason. He’s very aggressive and he gets a medium dig going but misses. I don’t care about it too much and continue trying to score/finding my pieces. He does another big medium dig through a Grim, paying 3 + 1 cards for it and another ice, and hits a Snare on his last click, with two cards left in hand. I have a jackson out so I click to draw two cards and find the scorch for the win.Funny how both games ends in basically the same way. I’m still a bit upset about the way I lost but it feels a little bit better that I could pull out a win against such a good player, even if it was a lucky one.10 points, 5-3Match 5: Frida, Argus/Silhouettevs ArgusI know Frida loves meat damage so I play very carefully. I get a good start and I imp a bunch of things from R&amp;amp;D while milling a healthy amount. She scores out a couple of 1-pointers but I’m milling very fast and she’s not threatening me yet. When she goes up to 5 points I have as much money as she has so I make a run on archives (I also have an installed Utopia Shard) and take the win.vs SilhouetteAgain I get a good start and I get a Crisium grid on HQ to stop siphon. She doesn’t find her breakers and I get a hostile scored followed by the atlas train.14 points, 7-3Final resultsI won 7 matches, 4 with Titan and 3 with Noise. Surprisingly my corp faired better than my runner which can partly be explained by the two lucky flatlines I got. But overall it felt a lot better than during testing. Perhaps it’s because I’ve never played a rush deck before and the style takes a little getting used to? Then I got the silly scorched loss with Noise which really shouldn’t happen if you play as you should. But mistakes happen. I’m quite glad I managed to avoid tilting though.Generally with Noise I feel if the corp doesn’t push scoring windows hard you’re always in control of the game. Even then it’s difficult without a secondary win condition like scorch or midseasons. This is what Yoshi did with Blue Sun so very well where I really felt behind the whole game, but perhaps I was being too cautious.Overall I’m quite pleased with my result all things considered. This is the final results after the five rounds of swiss:There were quite a lot of prizes available and after the three victors took theirs this is what took home as my 4th place:I wanted to have a full playset of aesop’s, especially as I really love Noise, but the mat feels a little more special. I still want the alt-arts though, hopefully I can get them from somewhere else.Published:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Groar</title>
      <link>https://www.jonashietala.se/blog/2015/08/23/xgroar</link>
      <description>GroarPublished:August 23,2015Revised:September 28,  2023in06bcc1aTagged:Games,Ludum DareDownloadLinux 64bitWindowsSo I actuallyfinishedLudum Dare 33.  I can’t believe how hard it was to actually make something! It continues to amaze me what fantastic stuff everyone manage to make in just 48 hours. This is what I came up with for the themeYou are the Monster. Yes I couldn’t come up with a name until submission… So I just took the first admittedly bad one…GroarControlsW A S D moves and H J K L shoots. Escape quits the game.Timelapse (dual screen)Click to view on YouTubeTimelapse (single screen)Click to view on YouTubeSourcehttps://github.com/treeman/ld33Published:August 23,2015Revised:September 28,  2023in06bcc1aTagged:Games,Ludum DarePreviousNext</description>
      <pubDate>Sun, 23 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Bullets and AI</title>
      <link>https://www.jonashietala.se/blog/2015/08/23/bullets_and_ai</link>
      <description>Bullets and AIPublished:August 23,2015ined0e915Tagged:Ludum DareThe game is still far from being an actual game but some progress has been made. I fixed most of the collision detection problems and I’m now trying to make some sort of AI working for the ship. It’s a bit hard and time consuming and I don’t know how to make things good.Maybe some time I need to focus on actually making graphics as well?Published:August 23,2015ined0e915Tagged:Ludum DarePreviousNext</description>
      <pubDate>Sun, 23 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Life and Shields</title>
      <link>https://www.jonashietala.se/blog/2015/08/23/life_and_shields</link>
      <description>Life and ShieldsPublished:August 23,2015inafebd2eTagged:Ludum DareTime is running out! At least the more technical parts aremostlydone. The ships have an acceptable AI, they have rechargeable shields and they can now even be killed. Currently the game is far too easy, but it’s starting to look a little cooler at least.Published:August 23,2015inafebd2eTagged:Ludum DarePreviousNext</description>
      <pubDate>Sun, 23 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Settled on an unoriginal idea</title>
      <link>https://www.jonashietala.se/blog/2015/08/22/settled_on_an_unoriginal_idea</link>
      <description>Settled on an unoriginal ideaPublished:August 22,2015in0f1a39dTagged:Ludum DareI think I’ve decided what to do. Some very slight progress has been made.Published:August 22,2015in0f1a39dTagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 22 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Fun or Frustration? Ludum Dare 33</title>
      <link>https://www.jonashietala.se/blog/2015/08/21/fun_or_ludum_dare_33</link>
      <description>Fun or Frustration? Ludum Dare 33Published:August 21,2015in8932ce8Tagged:Ludum DareOne ofmy goals this yearwas to participate in aLudum Dare. I have cleared up my schedule, negotiated with my better half and everything is set up for epicness.At first the idea was to make a game inrust, even tough I basically haven’t used it in almost a year, but when I tried to set things up (yes today) it was extremely frustrating. Not so much that I couldn’t write rust code but more that documentaion for the game engine I used was lacking. In the end I decided to skip it as I couldn’t get sound to work.In a bit of a hurry I went back to what I’ve used before. I still couldn’t get the sound to work but I’m suspecting faulty sound libraries in my linux setup.Language:C++Framework:SFMLGraphics:mtPaint,Inkscape,Krita(one of them at least?)Sound:bfxrAs usual I will do it by myself. The goal is to make a simple reasonably complete game. The source code will beon githubwhere I have a small code skeleton which I can use as a starting point.Published:August 21,2015in8932ce8Tagged:Ludum DarePreviousNext</description>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Mailto: links with FastMail in Firefox</title>
      <link>https://www.jonashietala.se/blog/2015/08/13/mailto_links_with_fastmail_in_firefox</link>
      <description>Mailto: links with FastMail in FirefoxPublished:August 13,2015inab0d955Tagged:FastMail,FirefoxYou can change the application to handlemailto:links in Firefox in Preferences -&gt; Applications. The problem is that you can’t input custom urls and some email providers, like hotmail or fastmail, aren’t supported. I managed to fix it with the pluginMailtoWebmails. It annoys me that a plugin is needed, but there it is.Published:August 13,2015inab0d955Tagged:FastMail,FirefoxPreviousNext</description>
      <pubDate>Thu, 13 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>rustc: error while loading shared libraries: librustc_driver</title>
      <link>https://www.jonashietala.se/blog/2015/08/12/rustc_error_while_loading_shared_libraries_librustcdriver</link>
      <description>rustc: error while loading shared libraries: librustc_driverPublished:August 12,2015Revised:January 21,  2019ina029167Tagged:Rust,SlackwareI had installed and usedrustalready but today I fired it up and received:rustc--versionrustc:error while loading shared libraries: librustc_driver-7e44814b.so: cannot open shared object file: No such file or directoryI’ve seen this before… I thought modifyingLD_LIBRARY_PATHin my shell was enough, but no. According tothe bug reportthe problem is withldconfig.Edit/etc/ld.so.confand add/usr/local/libto it then runldconfigto update the cache. Now everything works again.rustc--versionrustc1.3.0-dev (4b4119d5c 2015-07-29)Not sure why it appeared again though.Published:August 12,2015Revised:January 21,  2019ina029167Tagged:Rust,SlackwarePreviousNext</description>
      <pubDate>Wed, 12 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Moving to FastMail</title>
      <link>https://www.jonashietala.se/blog/2015/08/10/moving_to_fastmail</link>
      <description>Moving to FastMailPublished:August 10,2015in10d8577Tagged:FastMailAbout two years ago afterLavabit’s shutdownI searched for a replacement email provider. For some reason I settled oneumxwhich I used since then. Yesterday I got an email saying the recurring billing could not be renewed as I had my old credit card registered and it got me thinking of moving on. I wasn’t particularly unhappy but I had some annoyances. Their webmails’ were a bit obnoxious to use but I could live with it. Something more alarming is thatthey don’t use ssl consistently. I remember I pointed out this to them but at the moment it’s not fixed (or the error has returned).Whatever.FastMailoften gets mentioned as a Gmail alternative and I decided to use them. Their webmail feels very, very good and it’s also possible to pay withBitcoin! This actually marks the first real purchase I’ve made with bitcoins and it was all very painless.It was easy to migrate my mail from eumx by using their migrate service from IMAPssl.eumx.net. Migrating from Gmail gave me more trouble as Gmail denied me access. After creating an app specific password I finally made it work. For more help seehttps://www.fastmail.com/help/receive/migrate.html.Registering my own domain was very easy with theinstructions. I could not find instructions to setup DKIM specific forloopia, but it was easy enough to figure out.In a subdomainmesmtp._domainkeyset a TXT record with the value of the public key found in Advanced -&gt; Virtual Domains -&gt; DKIM signing keys.  You can check the settings withdig:$ dig mesmtp._domainkey.jonashietala.se TXT;  DiG 9.9.3-P2  mesmtp._domainkey.jonashietala.se TXT;; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 29301;; flags: qr rd ra ad; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 1280;; QUESTION SECTION:;mesmtp._domainkey.jonashietala.se. IN	TXT;; ANSWER SECTION:mesmtp._domainkey.jonashietala.se. 3600	IN TXT	"v=DKIM1\; k=rsa\;p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCpqEJlGriDgRE6qjys7e424xv5K9LAJrvTQ8/K8Lj4hWhere you should see the public key. After the settings have propagated the Set field under DKIM signing keys should change from[]to[*].I’m also trying out two factor authentication withGoogle Authenticator. Although FastMail implements it in a strange way, using a base password and then appending the OTP from the authenticator. It’s a bit annoying but it works I guess.OverallFastMailseems very good, the little I’ve used it, and it might be worth taking a look at.Published:August 10,2015in10d8577Tagged:FastMailPreviousNext</description>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Drawing a self portrait</title>
      <link>https://www.jonashietala.se/blog/2015/08/08/drawing_a_self_portrait</link>
      <description>Drawing a self portraitPublished:August  8,2015Revised:January 23,  2019in6bf3248Tagged:DrawingDrawing is hard. I’d like to improve though. Here’s a self portrait I tried to draw inKrita. I’m really slow so I stopped a bit before it really was finished.Obviously I’d like it to be a bit better, but I’m still a little happy about the glasses and the eyebrows. The mouth and nose is ugly though.Published:August  8,2015Revised:January 23,  2019in6bf3248Tagged:DrawingPreviousNext</description>
      <pubDate>Sat, 08 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Gruvbox Syntax Highlighting for Pandoc</title>
      <link>https://www.jonashietala.se/blog/2015/08/04/gruvbox_syntax_highlighting_for_pandoc</link>
      <description>Gruvbox Syntax Highlighting for PandocPublished:August  4,2015Revised:June 26,  2024ina308224Tagged:Blog,CSSEdit:I haveupdated the highlightingagain so the inline code used as examples have changed. I guess I should’ve used images to record the look.Recently when Ireinstalled SlackwareI decided to restyle my workspace as well. I settled ongruvboxwith neovim and usingthe generalizedpackage I also styled my terminal.Then on a whim I wanted to restyle this site. When I built it I kinda left it without any styling at all, I guess the thinking was that it works and I can just tweak it later. Well it’s been more than 2 years now and I never got around to it. I guess what bothered me the most was the fact that I had a really crappy styling syntax highlighting and styling of code. So I decided to change it.I couldn’t find any reference to highlighting pandoc styled like gruvbox, so I tried to emulate on myself. I use the darker one in neovim and in the terminal, but for the web page I used the lighter one:code,pre{background-color:#f2e5bc;}/*Hard contrast*/code.sourceCodespan.kw{color:#9d0006;}/*Keyword red*/code.sourceCodespan.dt{color:#b57614;}/*Datatype yellow*/code.sourceCodespan.dv{color:#8f3f71;}/*DecVal purple*/code.sourceCodespan.bn{color:#8f3f71;}/*BaseN purple*/code.sourceCodespan.fl{color:#8f3f71;}/*Float purple*/code.sourceCodespan.ch{color:#4070a0;}/*Char purple*/code.sourceCodespan.st{color:#79740e;}/*String green*/code.sourceCodespan.co{color:#928374;font-style:italic;}/*Comment medium*/code.sourceCodespan.ot{color:#427b56;}/*OtherToken aqua*/code.sourceCodespan.fu{color:#79740e;}/*Function green*/code.sourceCodespan.re{color:#af3a03;}/*Region marker orange*/code.sourceCodespan.er{color:#9d0006;font-weight:bold;}/*Error red*/code.sourceCodespan.al{color:#9d0006;font-weight:bold;}/*Alert red*/This works with thehighlighting-kate packagewhich is whatpandoc, and thereforeHakyll, is using.Additionally to get nicer spacing and font these styles are used:code{font-family:Consolas,"Courier New",monospace;font-size:0.9em;padding:0.2em;line-height:1.3;}pre{word-wrap:normal;overflow:auto;padding:0.6em1.0em;line-height:1.3;}precode{padding:0;}Currently I’m happy with the result and you can view the source of this site athttps://github.com/treeman/jonashietala.Published:August  4,2015Revised:June 26,  2024ina308224Tagged:Blog,CSSPreviousNext</description>
      <pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>fish_update_completions in Slackware 14.1</title>
      <link>https://www.jonashietala.se/blog/2015/08/03/fish_update_completions_slackware</link>
      <description>fish_update_completions in Slackware 14.1Published:August  3,2015Revised:January 21,  2019ina029167Tagged:Slackware,FishI’ve been trying outfish shelllately. A cool feature with fish is that it can automatically generate completions by parsing the installed man pages by runningfish_update_completions.Unfortunately this is what I got:Traceback (most recent call last):File "/usr/local/share/fish/tools/create_manpage_completions.py", line 963, infile_paths.extend(get_paths_from_manpath())File "/usr/local/share/fish/tools/create_manpage_completions.py", line 894, in get_paths_from_manpathproc = subprocess.Popen(['manpath'], stdout=subprocess.PIPE)File "/usr/lib64/python2.7/subprocess.py", line 711, in __init__errread, errwrite)File "/usr/lib64/python2.7/subprocess.py", line 1308, in _execute_childraise child_exceptionOSError: [Errno 2] No such file or directoryThe solution for me was to installman-dbfrom Slackbuilds and add/opt/man-db/binand/opt/man-db/sbinto PATH to get fish to find the commandmanpath. The dependency forman-dbis undocumented but it’s a known issue.During the installation I got several strange errorserror: cannot run C compiled programswhich I have no idea why they came up. Eventually by retrial I got it to work.Curiouly enough fish couldn’t parse several of the slackware specific man pages. I manually made completions forexlodepkg,installpkg,makepkg,removepkg,slackpkgandupgradepkgwhich can be found athttps://github.com/treeman/dotfiles/tree/master/.config/fish/completions. Of these removepkg was the real motivator as natively it didn’t autocomplete installed packages. I added the rest more for the sake of completeness. These are not super great and I’m not sure if anyone else will find it useful. I might consider trying to add them to fish later.Published:August  3,2015Revised:January 21,  2019ina029167Tagged:Slackware,FishPreviousNext</description>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Installing Krita on Slackware 14.1</title>
      <link>https://www.jonashietala.se/blog/2015/08/03/installing_krita_on_slackware</link>
      <description>Installing Krita on Slackware 14.1Published:August  3,2015Revised:August  5,  2015inb499288Tagged:Krita,SlackwareThis is a guide on how to buildKritaon Slackware 14.1. This is based onthis guide for linux.removepkg calligraInstall some dependencies fromSlackbuilds.gsllibgexiv2libpqxxpstoeditGet Krita.Theoriginal guiderecommends building in~/kde4but I moved i to/opt/kde4.mkdir-p/opt/kde4/build /opt/kde4/src /opt/kde4/instcd/opt/kde4/srcgitclone git://anongit.kde.org/calligra.gitConfigure and build.There’s a problem with tifflib. (My version isKrita: 2.9.6 (gitb804a35), you may or may not run into this problem).Change/opt/kde4/src/calligra/krita/plugins/formats/tiff/kis_tiff_converter.ccfrom#ifTIFFLIB_VERSION &lt; 20111221typedefsize_ttmsize_t;#endiftotypedefsize_ttmsize_t;Then we can buildcd/opt/kde4/buildcmake-DCMAKE_INSTALL_PREFIX=/opt/kde4/inst /opt/kde4/src/calligra\-DCMAKE_BUILD_TYPE=RelWithDebInfo-DPRODUCTSET=KRITAmake-j5makeinstall-j5WhereXinjXis1 + # processors. The build process is quite slow.Add/opt/kde4/inst/binto PATH and/opt/kde4/instto KDEDIRS.Register krita to the systemkbuildsyscoca4, but worked for me without it (I don’t use kde).And launch withkrita.Published:August  3,2015Revised:August  5,  2015inb499288Tagged:Krita,SlackwarePreviousNext</description>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Preventing Firefox from creating Desktop directories</title>
      <link>https://www.jonashietala.se/blog/2015/08/02/preventing_firefox_from_creating_desktop_directories</link>
      <description>Preventing Firefox from creating Desktop directoriesPublished:August  2,2015in6f01861Tagged:Firefox,SlackwareWith a fresh firefox installation I found that it kept creating a~/Desktopdirectory. ButI found how to turn it off.Edit~/.config/user-dirs.dirstoXDG_DESKTOP_DIR="$HOME/"XDG_DOCUMENTS_DIR="$HOME/"XDG_DOWNLOAD_DIR="$HOME/"XDG_MUSIC_DIR="$HOME/"XDG_PICTURES_DIR="$HOME/"XDG_PUBLICSHARE_DIR="$HOME/"XDG_TEMPLATES_DIR="$HOME/"XDG_VIDEOS_DIR="$HOME/"I hadXDG_DESKTOP_DIR="$HOME/Desktop"which made a Desktop folder all the time.Published:August  2,2015in6f01861Tagged:Firefox,SlackwarePreviousNext</description>
      <pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Slackware update</title>
      <link>https://www.jonashietala.se/blog/2015/08/02/slackware_update</link>
      <description>Slackware updatePublished:August  2,2015Revised:August  5,  2015in4f6e60dTagged:SlackwareThe last time I (re)installed SlackwareI documented what I did. Somehow I managed to really bork my installation and I decided to go through with a larger reinstallation once more. This is a log of some things I did differently.KernelBefore installing the kernel it’s nice to check the GPG signature of the downloaded packages. With thekernel GPG signaturewe can simply do:wgetlinux-XX.tar.xzwgetlinux-XX.tar.signunxzlinux.tar.xzgpg--verify*.signWhen making oldconfigyes "" | oldconfigsaves time.SlackpkgI didn’t use this tool previously, but it can be used to update the official Slackware packages. Just remember to update the gpg signature as well.slackpkgupdateslackpkgupdate gpgI didn’t take the plunge to slackware-current just yet, I might do it at a later time when I feel I have a lot of unused time (will I ever?), but it’s easy to update selected packages.slackpkgupgrade gitWill only update git for example.PerlI did some strange things here, the one which worked was simply as root:cpaninstall CPANcpaninstall DateTime...Slackbuilds withsbopkgSlackbuildsworks well but can be cumbersome.sbopkgis a great little tool which makes downloading and installing much easier.Hakyll and xmonadThis gave me alotof problems. At first I installed xmonad and xmonad-contrib from slackbuilds and I tried to installHakyllfrom cabal, but conflicts ensued and they couldn’t really work together.I tried to move cabal out from my home director, but didn’t find a very satisfactory solution and in the end I just gave up.The first thing to do is to install ghc from slackbuilds. Then install the Cabal lib and cabal-install fromhttps://github.com/haskell/cabal/releases(they are in the same lib).Then install a newer version of ghc from their prebuilt binaries athttps://www.haskell.org/ghc.There I got the error thatlibtinfo.so.5couldn’t be found. This was solved by symlinking to libncurses withln -s /lib64/libncurses.so.5 /lib64/libtinfo.so.5.Then we can install things with cabal as a regular user:cabalinstall cabal-installcabalinstall hscolourcabalinstall missingHcabalinstall hakyllcabalinstall xmonadcabalinstall xmonad-contribIf you get the error:pandoc-1.15.0.6 failed during the configure step. The exception was:user error ('/usr/bin/ghc' exited with an error:/usr/lib64/ghc-7.8.4/unix-2.7.0.1/libHSunix-2.7.0.1.a(execvpe.o): In function`pPrPr_disableITimers':execvpe.c:(.text+0x300): multiple definition of `pPrPr_disableITimers'/root/.cabal/lib/x86_64-linux-ghc-7.8.4/unix-2.7.1.0/libHSunix-2.7.1.0.a(ghcrts.o):(.text+0x0):first defined hereTry rerunningcabal install cabal-installand then try to install hakyll again. This shouldn’t happen with an updated ghc though.From sourcefish shellneovim (xclip from slackbuilds)rust (nightly build)dzen2 (editconfig.mkand use Xinerama, XPM and XFT)If you getrustc: error while loading shared libraries: librustc_driver-7e44814b.so:cannot open shared object file: No such file or directoryit’s because rust installed it in/usr/local/libwhich is not in the default search path. Can add/usr/local/libtoLD_LIBRARY_PATHor issueldconfig /usr/local/libfor instant gratification.Perl6This can be done with everything as regular user.gitclone https://github.com/tadzik/rakudobrew~/.rakudobrewAdd~/.rakudobrew/binto path.  Then we can install package manager panda and VM moar:rakudobrewbuild moarrakudobrewbuild-pandaThen with panda we can install modules:pandainstall Task::Star...PostgresInstall from slackbuilds. Check readme!  After installation, to allow for no password for postgres (useful for pure local) alter/var/lib/pgsql/9.4/data/pg_hba.confand add the linelocal   all     postgres    trustbefore all other configurations.MissingThis time I’m having trouble with getting sound working in Skype. To be continued… Maybe.Published:August  2,2015Revised:August  5,  2015in4f6e60dTagged:SlackwarePreviousNext</description>
      <pubDate>Sun, 02 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Years at Linköping's University</title>
      <link>https://www.jonashietala.se/blog/2015/07/22/5_years_at_the_university</link>
      <description>5 Years at LinkÃ¶ping's Universityâ˜Published:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolI recently finished my masterâ€™s degree (civilingenjÃ¶r or civil engineering) at LinkÃ¶pingâ€™s University. At first it felt like 5 years would be an eternity, but in hindsight it was over in a flash. my gut feeling is that I havenâ€™t learnt or done anything of note, except you know actually finishing my degree, but if I sit down and think about it I have done some things. Actually quite a lot of things.First yearI moved to LinkÃ¶ping with my girlfriend and it was quite an adjustment as we both moved from our parents and to a city where we practically knew nothing and no one. But we managed fine and while we never went out to parties or went to other student events we found some friends. I also startedITF Taekwon-doafter a few months.There werenâ€™t too much to do in school. The focus was on foundation math courses, mostly things I had already done but needed refreshing, and on introductory programming courses which werenâ€™t challenging at all for me.Second yearDuring the second year I felt the courses were harder and more interesting than the first yearâ€™s courses. The courses in Combinatorial Optimization, Data Structures and Algorithms and Linear Algebra were fun and new for me. I also took an extra continuation course in Linear Algebra which was interesting.When I started the university I thought I would like electronics and hardware construction, but the courses from the first year were really not interesting at all. Even when making the transition from analog to digital I didnâ€™t care for it at all. But it all changed when we started actuallybuildingthings with digital circuits.At first we had an introductory course where we built digital clocks and counters. You were supposed to have prepared a design sketch for the labs, but me and my partner for some reason never did it, and so we were always running late in the labs. I remember one very fun, or horrible, occasion where we had struggled a lot with one lab and we had spent almost the full 4 hours until we finally completed it with maybe 10 - 15 minutes left. Filled with relief we started taring apart what we so painstakingly had built. When done we realized we had one part left where we were supposed to use the circuit we just destroyedâ€¦ Luckily we could use the circuits another group had made, but it was a painful lesson in always reading the descriptions and prepare for the labs in advance.The digital circuit labs were followed by a digital project of our own choice. Wedesigned a processorwhich could run theCore Wars 88 standardand we simulated it on an FPGA.The main block schema for the processorAnd here is a small video of the simulation in action:Click to view on YouTubeThe project was interesting as it was an outlet for our creativity and it touched on several different areas. Processor design, hardware debugging (!) and I wrote aredcode assemblerfor our CPU and amicrocode compiler.The behaviour of the processor is controlled by microcode which basically is a set of control outputs of 0s and 1s. For example our processor has 18 outputs consisting of a total of 39 bits (uPC_addris internal).game FIFO IR ADR1 ADR2 OP M1 M2 mem1 mem2 mem3 mem_addr ALU1 ALU2 ALU buss PC  uPC  uPC_addr00   00  0   00  00   0  00 00  00   00   00    000     00   0   000 000  00 00000 00000000To make things easier, instead of manually editing each 0/1 line we introduced a DSL which then the compiler turns into microcode lines.For examplethe microcodeis described in our DSL:; Startup, check if we're in gamejmpS $GAME                              ; Execute game code only if we're runningjmpO +0                                 ; Infinite loop if we've recieved game over, reset to break it; Clear memory contentsALU = 0                                 ; Load 0ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC:CLRMEM PC -&gt; mem_addr                          ; Look at PCOP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem         ; Clear itALU++                                   ; IncrALU1 -&gt; PC, jmpZ $LOADP                 ; If 0 we're done loopingjmp $CLRMEM                             ; Else continue...And is then compiled intoVHDL code:signalmem:Data:=(--Startup, check if we're in game"00000000000000000000000000000000000011000110011",--jmpS GAME(33)"00000000000000000000000000000000000101000000001",--jmpO +0(01)--Clear memory contents"00000000000000000000000000110000000000000000000",--ALU = 0"00000000010101000000000000000100010000000000000",--ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC"00000000000000000000110000000000000000000000000",--PC -&gt; mem_addr"00000000000000101010000000000000000000000000000",--OP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem"00000000000000000000000000100000000000000000000",--ALU++"00000000000000000000000000000100010001100001001",--ALU1 -&gt; buss, buss -&gt; PC, jmpZ LOADP(09)"00000000000000000000000000000000000001000000100",--jmp CLRMEM(04)...The redcode assemblers job is to transform a warrior (a piece of redcode) into a binary object file which we can then send to the FPGA for execution.For example this warrior:step    EQU 417init    EQU 1337size    EQU 9JMP start           ; boot jump as we can't specify PC in the middle T.Tsrc     DAT 0               ; src pointerstart   MOV #size, src      ; setup src pointercopy    MOV @src,DJN copy, srcSPL @dst            ; throw a pc thereADD #step, dst      ; space out a bitJMP start           ; make a new copy, yay!dst     DAT #0, #init       ; dst pointerendCompiles to:$ ./assembler jonas-replicator.red -r0000000000001001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000010010001111111111111000000000001101100011111111111100000000000000101000000001001000000011111111111110001111111111101000000001010100000000000000000110000000000000000000000000010010000000001101000010000000000000010000000000100000000011111111110110000000000000000000000000000010100000000000000000000010100111001With the--verbosetag the format can be examined:$ ./assembler jonas-replicator.red --verbose0000000000001001  00 09  ; Number of rows (9) jonas-replicator.redpad    OP  A  B  pad     A op      pad      B op00000000 0100 00 00 000 0000000000010 000 0000000000000   00 40 00 02 00 00  ; JMP  start           (2)  0(0)00000000 0000 00 00 000 0000000000000 000 0000000000000   00 00 00 00 00 00  ; DAT  0               (0)  0(0)00000000 0001 01 00 000 0000000001001 000 1111111111111   00 14 00 09 1f ff  ; MOV # size(9)  src       (-1)00000000 0001 10 11 000 1111111111110 000 0000000000101   00 1b 1f fe 00 05  ; MOV @ src(-2) &lt; dst      (5)00000000 1001 00 00 000 1111111111111 000 1111111111101   00 90 1f ff 1f fd  ; DJN  copy(-1)  src(-3)00000000 1010 10 00 000 0000000000011 000 0000000000000   00 a8 00 03 00 00  ; SPL @ dst            (3)  0(0)00000000 0010 01 00 000 0000110100001 000 0000000000010   00 24 01 a1 00 02  ; ADD # step(417)  dst      (2)00000000 0100 00 00 000 1111111111011 000 0000000000000   00 40 1f fb 00 00  ; JMP  start           (-5)  0(0)00000000 0000 01 01 000 0000000000000 000 0010100111001   00 05 00 00 05 39  ; DAT # 0(0) # init       (1337)If youâ€™re interested in the project you canread more on github.In addition, or as a prerequisite, to this awesome project we also got an introduction to 68k assembly and to computer architecture which was very good.This year me and a friend also made game in the Java programming course calledGrand Thief Arto. Not the greatest of games but it was still fun to make it. I also became a mentor in discrete math for the first year students which was a fun and easy way to earn a bit of extra money.Third yearThis year we continued with some more advanced courses. We had some project oriented courses with some theory about how projects should be run and then a practical part where we made some software for an actual company. The overall idea the course idea is great, to get some real world experience and to get some interaction with an actual company, but the execution was very much not so.For example in the middle of the project one of our project members were supposed to be exchanged with another member from another project. The motivation was that â€œin the real world this could happen, so you need to always be preparedâ€ but thatâ€™s just stupid in my opinion. Firstly you donâ€™t get fired and just booted from the team very often, but you get an advanced notice and you have some time to prepare the team, yourself and your eventual replacement for the move. Secondly it adds a very real sense of dread and nervousness for everyone involved. I happened to really like all members in the project and I was very worried to be switched out. Turns out I was the one who had to change project. I was very upset and I didnâ€™t click nearly as well with the new team and I thought the experience really sucked and I became demotivated.Another thing which was quite bad was the extreme focus on documentation. The whole first 2-3 months were supposed to be a planning stage and the actual implementation was supposed to be done the last 2-3 months. But large parts of the implementation stage were also spent on documentation, or rather writing documents because the course demanded it and we never had any use for the majority. The funny thing is that most of the project theory was spent on motivating why the waterfall development model wasnâ€™t suited to software development, but what did the project degenerate into? Even despite our best efforts, we tried to implement an iterative development as our customers didnâ€™t really know what they wanted, but we were foiled by course planners.A much better project was theRobot projectwhere we created an autonomous robot! There we poked around with hardware and lower level programming in C.Debugging this was quite an experienceI continued to be a mentor in discrete math and I joinedTeam Obelixwhich organized student visits to different companies. I won the â€œbest CVâ€ award given by Ericsson, I won some things in the local programming competitionIMPAand I had a great course in operative systems where we usedPintos. I took an extra course in Graph Theory which was quite different from other math courses but very interesting. Additionally I took aProgramming Languagescourse at Coursera, also quite nice.This summer I also had my first real programming job which was a summer internship atConfiguraand I had a really good time and we replaced their triangulation software.Fourth yearThe courses from the previous years were all mandatory, with the exception of some extra courses I took, but for the 4th and 5th year I could choose my own profile and what courses to take. I spent quite a lot of time thinking about which courses I wanted to take. In the end Iâ€™m quite happy with my selection but there are many interesting courses I had to say no to. The main profile I targeted was theProgramming and Algorithmsprofile.In hindsight these are my favourite courses during the year:TDDD48 Automated PlanningAAPS Advanced Algorithmic Problem SolvingTDDB44 Compiler ConstructionTATA54 Number TheoryTDDC17 Artificial IntelligenceTDDD56 Multicore and GPU ComputingTDDA69 Data and Program Structures (SICP)I didnâ€™t find the compiler courseasfun as I had initially thought. The theory part wasnâ€™t very interesting but the lab part was really, really good! All in all it still was a very fun course. The AI courses (Automated Planning and Artificial Intelligence) were great and AI is an area Iâ€™m very interested in. During this time I also took anonline course in Machine Learningvia Coursera by Stanford University. Number Theory is another maybe niche area in mathematics which I found interesting.I continued doing some programming competitions as can be seen inUVawhich enabled my to go toNWERC 2013in the Netherlands. Ultimately Iâ€™m not super good at these competitions but it was still a great experience. Netherlands (or specifically Delft) was great. In the Multicore and GPU Computing course there was a parallel sorting contest which I and my lab partner managed to win. The goal was to create a sorting routine on the CPU with the best sorting performance. Oh and I also went through the classic book Structure and Interpretation of Computer Programs orSICPin a course. Very excellent book!During the summer I also took part inIDA Summer of Code 2014where I contributed torust. I also had mysecond summer job at Configura:Our octree implementationFifth yearAt the end of my fourth year I had grown a bit study tired. I had thought the summer jobs would have helped a bit but although the summer jobs were amazing it might have been better to take a bit of a holiday, which I did not do at all.But the real issue wasnâ€™t me getting sick of studying, although I was a bit unmotivated, but I was fast approaching a burnout. It never got so serious that I became apathetic but it was pretty bad for a while. The last semester in my 4th year I only did 27 hp (30 hp is the target value) and the first semester in my 5th year I only managed 24 hp. I had accumulated extra points so I finished the university with 308.5 hp, of the required 30 hp, but I was less effective the last 1.5 year or so than usual.I might write more about my burnout in another post, but I did three main things to get out of it. The first thing I did was to start CBT (Cognitive Behavioral Therapy or Kognitiv beteendeterapi in Swedish). The second was to continue with things which made me happy and more importantly gave me more energy. Basically I started exercising more regularly. And the third thing I did was to scale down on my ambitions and focus on taking care of myself, this is the reason I didnâ€™t study 100% the first semester.In the end I think I managed to get rid of the worst effects of the burnout and I managed to finish my studies. I was also a mentor in discrete math for a fourth time. I didnâ€™t complete a ton of courses as the whole last semester was spent on writing myMasterâ€™s thesisbut I did complete a great course in cryptology and one about logic programming in Prolog.The cryptology course was especially good as it even introducedBitcoinand the way the blockchain worked. Big kudos to that! I was aware of Bitcoin before but I wasnâ€™t aware of the implementation details.All coursesFor reference this is the list of courses I completed. It surprises me at least to see how much Iâ€™ve actually done these years.I started two extra courses which I never finished:TAMS15   Mathematical Statistics, first courseTATA49   Geometry with ApplicationsThe statistics course was started during my first year, but I finished a similar in my later years and the geometry course was taken as a fun extra course but I later decided to skip it.First yearTATA41   Calculus in One Variable 1TATA42   Calculus in One Variable 2TATA65   Discrete MathematicsTDDC10   Perspectives to Computer TechnologyTDDC66   Computer Systems and ProgrammingTDDC67   Functional Programming and LispTDDC68   Imperative Programming and AdaTSEA22   Switching Theory and Logical DesignTSTE58   ElectronicsTTIT02   Foundation Course in MathematicsSecond yearTAOP33   Combinatorial Optimization, Introductory CourseTATA24   Linear AlgebraTATA53   Linear Algebra, Honours CourseTATA61   Multivariable and Vector CalculusTDDC36   LogicTDDC69   Object Oriented Programming and JavaTDDC70   Data Structures and AlgorithmsTDDD60   Interactive SystemsTFYY68   Engineering MechanicsTSEA43   Digital Project LaboratoryTSEA47   Computer Hardware and Architecture, part 1TSEA49   Computer Hardware and Architecture, part 2Third yearTAMS27   Mathematical StatisticsTATA50   Transform TheoryTATA64   Graph TheoryTDDB68   Concurrent Programming and Operating SystemsTDDC93   Software Engineering TheoryTDDD09   Software Engineering ProjectTEIO27   Technology Based EntrepreneurshipTFYA68   PhysicsTGTU50   Visits to IndustryTSDT18   Signals and SystemsTSEA29   Microcomputer, Project LaboratoryTSKS10   Signals, Information and CommunicationTSRT12   Automatic Control YFourth yearTANA09   Numerical Algorithms in Computer ScienceTATA54   Number TheoryTD1077   Advanced Algorithmic Problem SolvingTDDA69   Data and Program StructuresTDDB44   Compiler ConstructionTDDC17   Artificial IntelligenceTDDD14   Formal Languages and Automata TheoryTDDD20   Design and Analysis of AlgorithmsTDDD48   Automated PlanningTDDD56   Multicore and GPU ComputingFifth yearTDDD08   Logic ProgrammingTDDD38   Advanced Programming in C++TGTU49   History of TechnologyTQDT33   Degree Project - Masterâ€™s ThesisTSIT03   CryptologyPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Failed mime type for Krita</title>
      <link>https://www.jonashietala.se/blog/2015/07/08/failed_mime_type_for_krita</link>
      <description>Failed mime type for KritaPublished:July  8,2015Revised:July  8,  2015in7a74c8dTagged:Slackware,KritaI thoughtKritaworked fine… Until I tried to save. Krita crashed whenever I tried to save (or open) a file and gave the error:Could not find mime type "application/x-krita"Turns out if you reinstall the packageshared-mime-infowhich comes natively with Slackware the problem goes away.Published:July  8,2015Revised:July  8,  2015in7a74c8dTagged:Slackware,KritaPreviousNext</description>
      <pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Offset coordinates in Krita with Xinerama</title>
      <link>https://www.jonashietala.se/blog/2015/07/05/offset_coordinates_in_krita_with_xinerama</link>
      <description>Offset coordinates in Krita with XineramaPublished:July  5,2015Revised:August  5,  2015in4f6e60dTagged:Slackware,KritaI recently bought anIntuos Mangadrawing tablet recently, because I got this fix idea that I want to learn how to draw. And what better way to do it than with a drawing tablet, while satisfying my need for new things?With little experience I boldly set forth and I found a lovely and free drawing programKrita. I’ve used photoshop earlier but it’s just so expensive andKritaseems like a good replacement.Inkscapeis another good alternative for vector graphics.To installKritayou need KDE, which should come preinstalled with Slackware. If you’re like me and decided to skip it you can install it withslackpkginstall kdeI had some trouble installingKrita, but ultimatelythis guide with catsworked when I also changedkrita/plugins/formats/tiff/kis_tiff_converter.ccfrom#ifTIFFLIB_VERSION &lt; 20111221typedefsize_ttmsize_t;#endiftotypedefsize_ttmsize_t;which I filed as a bug report over at KDE.More troubling was the fact that drawing on the canvass was offset using dual screens with Xinerama. It worked fine in both Inkscape and Gimp and even on the gui controls. The problem went away if I switched to only a single screen. NowthisisacommonproblemwithXinerama and Krita.I did not manage to solve it using Xinerama, the bug is still unfixed. It works perfectly if instead of Xinerama RandR is used to setup the dual screen layout. I managed to set it up thanks to theexcellent arch linux wiki.The final result for me is to add this to.xinitrcand use a simplexorg.conf:xrandr--outputDVI-I-3--mode1920x1080--pos0x0--rotateleft--outputDVI-I-2--mode1920x1080--pos1080x480And Krita (and Inkspace, Gimp, …) works perfectly.My full workspace setup ison github.Published:July  5,2015Revised:August  5,  2015in4f6e60dTagged:Slackware,KritaPreviousNext</description>
      <pubDate>Sun, 05 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Spring Tournament</title>
      <link>https://www.jonashietala.se/blog/2015/05/04/netrunner_spring_tournament</link>
      <description>Netrunner Spring TournamentPublished:May  4,2015ind2b8a2aTagged:Gaming,NetrunnerThere was another, smaller, netrunner tournament about a week ago. I was looking forward to a very casual setting but there were also some guys who came from… Västerås I think, but I’m not sure. We managed to scrape together 9 people at least, and I didn’t notice anyone bringing anything super janky.Runner is my Achilles Heel and so I decided not to make any big changes, I brought a more aggressiveLeela deckwith desperado and security testing. I know itshouldbe a good deck as other people has won many tournaments with variations of it, but I’m feeling a bit less confident with it anyway.My corp deck is asuper fun deckwith Industrial Genomics which had performed very well during testing but I’m still worried. My feeling is that it’s still the most janky corp deck in the tournament.The tournament format is a simple swiss, with no playoffs.Match 1, ByeI came here to play netrunner, not to watch other people play netrunner… The 1 hour wait was quite boring to be honest.4 points and I’m the lead! It feels sad though.Match 2, Henrik Etf/Katevs Engineering the FutureSo I play my friend Henrik again. I know his decks inside out, and he knows mine. It’s a bit fuzzy, but I don’t think I got a super terrible start. I try to keep his money low, but failing. I try to get some accesses, but I find nothing. He scores and I bounce and try to put some pressure but I fail. Somehow I’m locked out of all servers without any money and I lose 0-7.Well played Henrik, well played. Still 4 points.vs KateSo I get set up and I get my money rolling. I score out an NAPD and a Fetal I believe, but we’re a bit low on time. I score some agendas and he’s finding nothing. He has a fairly good rig out, but he can’t get anywhere fast. But time is called and I win on time.Time is my biggest enemy. 5 points.Match 3, Fredrik NEH/Leelavs LeelaAh my trusty corp matchup. I’m in control the whole game and I get my asset economy set up. He makes the mistake of not trashing anything or running archives so I manage to get rich as a troll. He’s richer for a time with ~40 credits from clicking Kati every turn, but it doesn’t really matter when I rezz 2x Ashigaru on HQ and Tollbooth/Susanoo/Tsurugi on my scoring server, naturally with Ash or Caprice for protection.I can score out quite comfortably. 7 points!vs Near-Earth HubThis is another one of these runner games where I have no idea what I’m doing wrong, but I’m severely locked out, without any money and the corp just crushes me.The start is quite bad, no desperado and no security testing leaves me quite poor. He’s got 2 pieces of ice in front of HQ, the outermost unrezzed, I have some breakers and a little bit of money and I gamble with a Legwork but he rezzes a Tollbooth. Drats. I knew he had at least a Beale but also an Astroscript he scores out. This was a huge misplay, I should have either built up or focused on trashing his assets.In the end the astrotrain rolled me quite hard with 3 astroscripts scores in rapid succession. I knew I should have built a shaper/anarch with Clot. Still 7 points.Match 4, Harald Etf/Hayleyvs HayleyA stealth Hayley deck. As against Fredrik I get my asset economy online but he’s pressuring my R&amp;amp;D a lot harder, luckily not finding anything. To combat stealth I stack sentries like a madman with 2x Cortex Lock and one Tsurugi over R&amp;amp;D and Susanoo and another Tsurugi over my scoring server. The tax is very real, both in credits and in clicks via net damage. I score out a couple of agendas and I’m ready to score out for the win, but the game ends after a desperation run on R&amp;amp;D with only 2 cards left - and a Snare.Corp deck is fantastic, although I need to play it a bit faster. 9 points.vs Engineering the FutureFinally I’m having a good start! I score an early agenda and add some pressure. He forces a score and I bounce ice on HQ and Account Siphons him down. I’m very much about to win, but my mortal enemy the time has decided to come visit me again, and I get a timed win.Now this is how the feeling of playing runner should be! 10 points.SummaryIt seems I wasn’t the only one having trouble with running, as 22 victories came from the corps (15 AP, 3 flatlines, 4 timed) compared to the 10 runner victories (9 AP, 1 timed).Anyways it appears like I did fairly well, even though the bye gave me a huge point boost and my 2nd place feels quite undeserved.  Here are the final standings:I never played Daniel, but it appears he crushed everyone this day. Well done!While I didn’t win and I missed out on the playmat, I did get alt-arts of both Popup-window and Gordian Blade. Mmmh pretty! I especially like the popup-window art!Published:May  4,2015ind2b8a2aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Mon, 04 May 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Geekhack Toxic</title>
      <link>https://www.jonashietala.se/blog/2015/04/09/geekhack_toxic</link>
      <description>Geekhack ToxicPublished:April  9,2015Revised:June 19,  2024in6ff6161Tagged:Computer,Keyboards,New StuffI came back to Linköping yesterday and I had a package waiting for me to pick it up. What could it be?With a crummy mobile phone photo I give you myTOXIC keycapsmounted on my trusty old das keyboard:WooooIf only myGH60could arrive some time this decade…Published:April  9,2015Revised:June 19,  2024in6ff6161Tagged:Computer,Keyboards,New StuffPreviousNext</description>
      <pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CS:GO AWP Nerf</title>
      <link>https://www.jonashietala.se/blog/2015/04/06/csgo_awp_nerf</link>
      <description>CS:GO AWP NerfPublished:April  6,2015ind989af3Tagged:GamingWhen this man opens his mouth, truth comes out.Click to view on YouTubeIf I ever make a game and I want someone to balance it and I had the money, I would hire Thorin.Published:April  6,2015ind989af3Tagged:GamingPreviousNext</description>
      <pubDate>Mon, 06 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Lindhska Store Championship Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/04/02/netrunner_lindhska_store_championship_rebro</link>
      <description>Netrunner Lindhska Store Championship ÖrebroPublished:April  2,2015in814820fTagged:Netrunner,GamingAfter the awesomeness during theprevious store championship, I decided to go to the store championship at Lindhska Bokhandel in Örebro.I brought a modified version of the same corp I used the last time, aBlue Sun kill deckand anew runnerwith Leela Patel. See the links for cards and some card choices.The tournament was a 26-player one, at least that’s the number I heard, with 5 rounds of swiss followed by a double elimination bracket. 7 players from Linköping went, again I think but I’m not sure if that’s the correct number.SwissMatch 1, Tennin/Reinavs TenninMemory is a bit fuzzy here. I think I got off to a good start, but somehow the corp stabilized and we went into a long slog of a game. For some reason the corp managed to score out before I could find the final agenda.It certainly felt like I could have won the game, but I’m not sure what I did wrong. Might be that I wasn’t comfortable with the deck and played too aggressively. 0-2vs ReinaAgain I don’t remember the specifics. We had very little time and I manage to score out an agenda, so I get a timed win.Still, corp felt great and I was in control, 1-2.Match 2, RP/Chaos Theoryvs Replicating PerfectionAh RP. Actually the first time I’ve played against the id, but I had a pretty good idea of how to approach the game. I scored an early agenda but I’m slowly getting locked out. Then he makes a pretty big misplay - he flips a naked remote and he wants to score, but it’s Nisei MK II instead of a 3/2 agenda and now he’s flustered. I apologize and I score the Nisei and I remove the Enhanced Login Protocol.Still, he’s not out of the game. I run indexing but he hid a Jackson in a remote, stupid mistake! I manage to same old thing indexing again and I score another agenda and I place another agenda as the 5th card. I carefully count the cards and I manage to score the winning agenda, before being locked out of the game.The opponent said he’s only played a week… Still played pretty good I’m very glad for that victory. 3-2vs Chaos TheoryAnother quick corp game. Snare last click into scorch for a simple victory. His inexperienced lost him the game there.5-2 and feeling better.Match 3, RP/MaxXvs MaxXWe’re 6 players from Linköping and 2 from Stockholm at the top. Sadly I’m facing David, also from Linköping and we’re on our way to knock each other down.The game is slow, very slow. I feel in control and take it slow and easy. Scoring some agendas when I get them, but not drawing all that much. MaxX runs out of cards and runs a Levy. Somehow he runs of cards again and I know I’ve won.I have no idea how this happened, but we actually went to time, during our first match! Maybe it really was an intense game or maybe I was just tired or hungry… But anyway it happened. I manage to set up a win-win scenario for me during my second-to-last turn. Either he lets me score out or he runs the remote and let me sea-source scorch him to death (he had a hand size of 3 due to an early Cerebral Overwriter). He cooses the second option.7-2Match 4, NEH/Whizzardvs Near-Earth HubThis was by far the most stressful/exciting game of the day for me. I get a bad hand and I mulligan… Into a much much worse hand. No economy, no nothing. The corp scores an early astroscript, this isn’t looking so good… I do something, I can’t remember, then he sets up  a remote with one advancement counter on. Curious, it’s probably an NAPD, but sadly I can’t get in and score so I’m gearing up for a next turn combo.Sadly, it’s a Project Beale, worth 3 points and he’s got an astroscript token. From bad to worse, much worse. I desperately run his hand and his remote. Oh no, he’s got a scorch on top of R&amp;amp;D and he’s got a Data Raven protecting HQ. Luckily I’ve got a plascrete so I go tag-me with a Legwork, finding nothing. He’s using Jackson to draw like mad.I run another Legwork with a same old thing through the Data Raven and I find two agendas and I get in some single-accesses on R&amp;amp;D. Lady luck isn’t smiling for long though as he draws and install-advance a remote. Surely an NAPD, which I’m too poor to get at.My only hope is R&amp;amp;D and I have two interfaces out so I can access 3 cards. If I can bounce the NAPD I might still have a chance. The first card is a.. NAPD which I can’t steal. The second is a Breaking News so I bounce the advanced card now sitting on 5 agenda points.I’m too poor to get the NAPD and the next turn I get Scorched to death.The game was practically over from the terrible start, but I almost managed to steal a win. I got praise from the opponent but I can’t stop but think that I should have had a few more credits for that NAPD…7-4, feeling the pain.vs WhizzardAnother id I haven’t played against. He tried, and was successful for a while, with killing my oversighted curtain walls and keeping my economy low. But still, I managed to score out two the cleaners and putting more and more pressure as I gradually build up my economy lead. I think I hit a shattered remains as well.The game ends with me advancing the winning agenda, he tries but cannot access it or any other agenda, and I score for the win.Again corp is feeling absolutely great. 9-4Match 5, EtF/KateThis time I’m faced up against Henrik, my buddy from Linköping who knows my decks and I know his decks. Sadly it appears this is the battle for top 8.vs Engineering the FutureDuring practice I felt very confident with my Leela deck and I get a great start scoring two 3/2 agendas. Not thinking more about it I try to build up a bit and getting ready to score the winning agenda as I know he has a few 5/3.But things are not shaping up that way. I try to keep is economy low but he manages to get two adonis campaigns up and running and he hits two large GRNLD Refineries. Probably a huge misplay by me to allow that to happen. With his economy up he gets some nice taxing servers up and my aggressive running has not paid off at all. He’s all set up and I practically have nothing.My last hope is an indexing through a Janus I know is there. By my counts I’m only 2 or 1 credit off from making two succesful runs through R&amp;amp;D in the hopes of scoring out, but it’s not meant to be. I’ve already accumulated 3 brain damage from previous (too aggressive) encounters.With great play he manages to score out and win. Well played. 9-6vs KateAgain I’m having difficulties to recall the specifics of the match. I know I managed to hit one shattered remains to stop his drip econ for a while. I manage to score an agenda but time is running out.I have a 5/3 agenda which I’ve already advanced twice. I literary have my whole hand full of kill cards: 1 snare, 1 sea-source, 3 scorch and 2 punitives and with more money I’m just waiting for him to make a run. I decide to fake the agenda as the almighty 9/6 Government Takeover agenda and I advance it up to 7 in the course of two turns. In hindsight it might have been better to score it out as a 5/3, but that’s not what I did.So sitting at 7 advancement counters Henrik decides to… Not run it! Instead he runs my hand twice, the second time he imps my sea-source. Sigh.So the game ends with me winning on time, somehow it feels a bit frustrating as I had so much control the whole game, thinking how can I loose? Turns out, with some bad luck and some good runner decisions it’s quite possible not to win.10-6.The CutAs Henrik and I had the battle for the last place into playoffs, which I lost, Henrik makes the cut on 11 points and we’re a bunch of other players with 10 points.  Huge congrats to Henrik as he really did play better than I did.SummaryOnce again I’m amazed by the friendliness of the Netrunner community. Everyone was really nice and friendly. I joked around a bit with some guys and girls I’ve never even met before, which is no small feat with a very shy and introvert person such as myself. I got a ride all the way from Linköping to Örebro and the guy with the other car even came and asked me if I wanted to come with him earlier as I got knocked out. As it happens I stayed and watched some of Henrik’s and Fredrik’s matches.As for the games themselves I’m super happy with my corp deck which practically went undefeated during the tournament. I felt quite comfortable to win both the games where I got a timed win from.The runner deck however I’m not super happy with. It felt slow and low on economy and just a bit awkward. Some of the problems can be attributed to good corp play: I didn’t land many good account siphons which made my economy quite bad and they played around Leela’s ability quite well. Ice up centrals at least twice and don’t score out agendas on the last click.But mostly I think I didn’t play the runner deck right, I wanted to play more aggressively than maybe you’re supposed to with a slower control deck such as the one I had made. I really need to try out a Leela build based on Desperado and an economy package with Dirty Laundry and Security Testing, I think it might fit my style better. I also want to play around more with the wonderful Anarchs…Looking forward to the next time I can play some Netrunner!Published:April  2,2015in814820fTagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>My first netrunner store championship</title>
      <link>https://www.jonashietala.se/blog/2015/02/24/my_first_netrunner_store_championship</link>
      <description>My first netrunner store championshipPublished:February 24,2015Revised:February 27,  2015in66f5ac3Tagged:Netrunner,GamingMy girlfriend has told me I get these narrow interests where I pour all my energy and thoughts into and about 1,5 months ago I discoveredNetrunner, a very awesome card game. Check outthis how to playorteam covenant’s channelif you want to know more.So this Sunday I went to my first store championship with Henrik, the one other player I’ve competitively played the game with. Well I’ve played 2 games with my girlfriend, a bunch (10-ish) with her little brother and a few with another friend of mine but there I’ve always been the one teaching the game and making the decks and Henrik was the one who taught me the game.I decided to bring aBlue Sun deck which tries to killyou and aprepaid MaxX deckI’ve been playing around with lately. The decks are very fun to play and I felt pretty good about them, but I certainly didn’t expect to get top 4, which I did!The tournament was a 12-player one with 4 rounds of swiss followed by a double elimination bracket.SwissSwiss is played both as runner and corp and you get 2 points for each win with a 65 min time limit.Match 1, NEH/Katevs Near-Earth HubThe tournament went off with a bang when I faced the tournament organizer and his self-proclaimed “fast deck”. True enough. I manage to snag an Astroscript early, femme the wraparound in front of HQ and I’m feeling good. However he’s got a ton of money, I’m poor, and he installs another Wraparound in front of HQ and I only have an eater and a femme and no Keyhole. He proceeds to rezz a SanSan and score out a Beale. I manage to trash the SanSan but he rezzes another one and scores an Astroscript. Basically over from there, 2-7 is the final score.I was a bit flustered as I had never played against a deck like this, only read about how horrible it was and it was indeed a bit horrible. 0-2.vs KateI don’t remember very much of the game or what type his runner was, only that I got a remote up and install-advance-advance a The Cleaners. He does some things and thinks a bit. He decides to run the remote and scores, but he’s down to 3 cards. I proceed to Sea-Source Scorch for the win, with a Punitive on hand for extra overkill.2-2 in prestige and I’m feeling good, I managed to grab a win!Match 2, Making News/Katevs Stealth KateI feel pressured the whole game but manages to stabilize a bit. I had several agendas on hand the whole game but I install a snare in the remote hoping for a scoring window next turn. Turn before he ran into a Taurus in an empty remote (for Bank Job/Desperado money) and I trash Desperado and an R&amp;amp;D interface. But the runner doesn’t bite and goes for a Maker’s Eye on R&amp;amp;D, but hits a surprise Snare and dies with only 2 cards in hand.Things are going better than expected, the decks are performing pretty well. 4-2.vs Making NewsI saw the deck during the first match and I knew he ran a tag storm deck with some tag punishment. I play it safe and get an early Private Security Force in a naked remote. As the game goes on I manage to get my Keyhole/Eater combo up and I manage to mill two agendas into the archives and he has an NAPD scored. Sometime during the game he plays a Midseasons and gives me a ton of tags and trashes a same old thing and a hades shard, prolonging the game a bit.Later on he realizes it’s a misplay as you can only play it the turn after a runner scores an agenda (I didn’t even think about it). The judge says that makes it a default win for me, but we decide to play out the game just to see what happens. As it turns out I manage to win the turn after, so I consider it a fair win.I’m now up 6-2 and things are going much better than expected.Match 3, Andromeda/HBvs AndromedaWe come back after lunch and I find myself on the top table, meaning I have one of the best scores so far! But now I’m playing a fairly standard Andromeda, the (apparently) most feared runner. But I dunno, I’ve never played her.I get a turn 1 housekeeping but for some reason I don’t play it immediately! No idea why I don’t, but at least I do it turn 2 and it messes him up a ton. Turn 2 I also have a Government Takeover and a punitive on hand and I decide to play the takeover in a remote. But then he decides to play a Crash Space the same turn and now my nerves are on the edge! Luckily he doesn’t run it and the game slows down a bit.Then I get a second punitive on hand and I decide to advance the takeover, hoping to entice him to run it. But still he doesn’t bite. Instead he manages to score an agenda from hand and now he can win by running the remote. He still has 3 cards on hand and I have 2 Punitives… I decide to use them to slow him down and to remove his Crash Space. He spends the next turn drawing cards and I can ice up the remote some more, possibly replacing or start advancing the Takeover.The game ends when he accesses a Snare on his second click. He removes the tag on his third but now he’s got two cards. For his fourth click he boldly proclaims “living on the edge!” and runs my HQ and scores another agenda. He’s now 6-0 but he’s down to two cards and another player comments “don’t die”. I promptly kill him the next turn with Punitive.Super tense and fun game! Now I’m 8-2 and things are going fantastic, my corp deck has pulled through like a boss.vs The FoundryNow I know he runs grail and I try to be super careful. I play it slow and I manage to get my keyhole/eater combo up and I’m getting a ton of cheap R&amp;amp;D access but I keep missing agendas. Still feeling good, I’m in control of the game and I have an agenda. He scores an Accelerated Beta Test and luckily for him he hits two ice and installs over archives and R&amp;amp;D. But I still have R&amp;amp;D access and can continue with the keyholes. I manage to mill 2 NAPD into archives.Then he rezzes a Will-o’-the-Wisp and my Eater is dead, my game is completely stomped. Locked out of archives and locked out of Retrieval Runs I feel the game is lost to me. I get a Mimic out and try for a remote access, but I run into a Merlin. He searches for another copy and reveals two Merlins in hand for a total of 6 damage, I have 5 cards on hand with one I’ve Had Worse. He draws 2 cards, nothing. He draws 2 more and the last card is I’ve Had Worse, I draw 3 more cards and I barely survive.When I finally get out my Eater out we’re running out of time. He installs something in a remote which I can’t access and archives is still expensive. If I had one more round I could money up and go for the archives, but now it feels like the game is over. Luckily it’s not an agenda in the remote. He draws another beta test and we both needed just another round.We draw the game and I’m now 9-3. Feeling good but high on adrenaline after two of the craziest games I’ve ever played!Match 4, Valencia/Harmony MedtechvsHarmony Medtech rushAnother identity I’ve never played, but now without any idea what I’m supposed to expect. Luckily I get set up fast and I manage to steal an early agenda. He’s having trouble finding agendas and I’m getting a ton of keyhole access. I find another agenda with keyhole and I’m feeling good, even though 2x tsurugi in front of archives are very taxing. He installs two cards in a remote server (and advances one I think?) protected by a guard and a lotus field but I destroy the ice, win the psi game and scores an NAPD for the win.I’m a little proud for accessing the face down first as I only had 4 credits on hand, instead of trashing the caprice only to have to leave the NAPD there. More experienced players might say it’s a given, but learning the rather large card pool isn’t that straightforward.Incredibly I’m 11-3, sitting on the top table and I think I have a good shot at top 4.vsControl ValenciaHenrik also brought Valencia and I really considered to have Elizabeth Mills in the deck, but I cut her the day before. Perhaps I shouldn’t have.Playing a control Valencia I feel a bit shut down. The game goes long and I have 2x punitive. Runner is pressuring me with Itinerant Protesters and keeping me poor with account siphon. I had a window where the runner had 4 tags, I try to draw for the scorched win but I don’t find it. I’m poor most of the game but finally stabilize and get a Housekeeping up. I place Government Takeover in archives but runner doesn’t bite. I place a snare and a crap card in remotes and runner does 2x Blackmail, but clears tags and draws up. I see my chance and install-advance-advance a The Cleaners, but another Blackmail makes it a score for the runner. Out of tricks I loose to the later archive run.Probably some misplays, but I felt behind the whole game. Very strong deck, might reconsider ms Mills. 11-5.PlayoffsThe top seed has 12 points and I’m second with 11 points. 2nd plays 3rd which means I’ll get a rematch of my last match.Match 5, Harmony MedtechRematch time! I got to choose runner/corp and I went with runner as the game went very well the last time. This time however I don’t get the fast setup and he has an early remote which I can’t get into and the game is over quite quickly.6-0 is the final score and I feel a bit deflated.Match 6, MaxXOnce again I get to choose sides. I’m a bit bummed over my runner from the last game so I pick my corp and he’s running… MaxX. Yoy!He runs more regular breakers with double D4v1d, which is very bad for me. He’s also keeping me poor, forcing me to rezz ice all over the place, and I’m missing most of my economy cards. When I do get my Oversights, he’s far richer than I am wih Kati/Liberated Accounts/Daily Casts.I do get my Janus, trying to trick him into it to kill his D4v1d counters and clicks, but he doesn’t bite. He scores a 3-pointer and the game goes long. I end up clicking for credits, trying to have enough money to protect my Government Takeover sitting in my hand while trying to drain his economy during runs. His Yog kills my Datapikes and I feel constrained.The game goes to time and I hear the judge call out “15 seconds”. I install-advance-advance a 3-pointer, judge calls time and he has one turn left and I have one more. If the game is a tie I will win as I’m the higher rank (he was 4th after swiss). I do have 2 Punitives on hand and 32 credits. But he has ~ 40 credits. He runs the server, I rezz some ice and he steals the agenda. I bounce the ice but I don’t have enough money to kill him so we go to time and he wins 6-0.I misplayed as I could have rezzed a Janus when he stole the first agenda, but I didn’t think I had enough money so I didn’t. If I did he would have spent the D4v1d counters and the rest of his clicks, possibly steal an agenda from HQ, and then I would have enough money for a kill (I think)! Also I should have placed Janus on a remote, in front of another big piece of ice. Probably also too passive play from my side, I might have had a scoring window when he only had a D4v1d out and a scored The Cleaners might have turned the tides.Still, that’s the end for me and I finish 4th.SummaryI was fairly confident in my theory crafted decks (some limited testing) and they did perform above expectations. I won a cool playmat and had a very, very good time! All were very nice and friendly and I sure want to play some more netrunner.Published:February 24,2015Revised:February 27,  2015in66f5ac3Tagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Tue, 24 Feb 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2014 in Review</title>
      <link>https://www.jonashietala.se/blog/2014/12/31/2014_in_review</link>
      <description>2014 in ReviewPublished:December 31,2014Revised:January 23,  2019indc7d7c4Tagged:Yearly ReviewPrevious reviews:2010,2011,2012and2013.2014 Geek AchievementsSolved73 UVa problems.Won a turn inIMPAand solved a bunch of problems.Completed adoctorand courseabout algorithmic problem solving.Finished my 4 first years in University.Became a contributor torustand becamea friend of the tree.Completed the online courseMachine Learningin Coursera.EnteredLudum Dare 29.Had anawesome summer job at Configura.EnteredIDA Summer of Code.Wrote a lot ofRustandC++.Wrote someCM, Racket, Haskell, Lua, Prologand probably something else.Made atimeedit rust library, scheduling information for university.Made ahabitrpg rust library, fetching info fromhabitrpg.Was a mentor inDiscrete Math.Went toDreamhack.2014 Non-Geek AchievementsAchieved 2-kup in Taekwon-do.Been mostly pain-free, well, better at least.Been a kids trainer in Taekwon-do. Very rewarding.Survived a couple of training camps.Read20 booksWrote32 blog posts.Played a touch ofGo, the boardgame.DiscoveredTicket to Ride: Nordic Countries, a nice boardgame.Also playedCarcassoneanother great boardgame.Played some other boardgames.Read some manga and manwha.Kingdomwas the year’s highlight.Got a few 12-win arena runs inHearthstone2014 FailuresDid not completemy Ludum Dare entry.Did not start a hardware project.Got burnt out.Skipped an extra course in geometry and one in probability.Plans for 2015Take care of Veronica.Achieve 1-kup in Taekwon-do.Do more strength training.Do some more yoga.Participate inLudum Dare.Prettify the site.Code a lot.Read more books.Play some more boardgames.Complete the exjobb.Finish university studies.Get a job?Published:December 31,2014Revised:January 23,  2019indc7d7c4Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Wed, 31 Dec 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2014 Read Books</title>
      <link>https://www.jonashietala.se/blog/2014/12/31/2014_read_books</link>
      <description>2014 Read BooksPublished:December 31,2014Revised:April  1,  2015infdcf171Tagged:Read BooksIn total I read 20 books, which is 33% less thanlast year.FictionHow to Be a Woman- Catilin MoranFun!The Kill Room- Jeffery DeaverA Song of Ice and Fire: Game of Thrones- George R.R. MartinReread.A Song of Ice and Fire: A Clash of Kings- George R.R. MartinReread.A Song of Ice and Fire: A Storm of Swords- George R.R. MartinReread.A Song of Ice and Fire: A Fest for Crows- George R.R. MartinReread.The First Law: The Blade Itself- Joe AbercrombieThe First Law: Before They Are Hanged- Joe AbercrombieThe First Law: The Last Argument of Kings- Joe AbercrombieNon-FictionThe Power of Habit- Charles DuhiggHow habits work. Helped me get more productive.En Perfekt Natt- Björn JedensjöElementary Number Theory- Kenneth H. RosenCourse book. Fun subject.Competitive Programming 3- Steven &amp; Felix HalimThe ultimate reference to competitive programming. A lot about problem solving and algorithms. Very good. Used as course book as well.Game Programming Patterns- Bob NystromA very good read.Structure and Interpretation of Computer Programs- Gerald Jay Sussman, Hal AbelsonThe examples are what makes this book really shine.Automated Planning- Ghallab, Na, TraversoCourse book. Subject very interesting, book a bit heavy.A Drunkard’s WalkInteresting and eye opening.Logic, Programming and Prolog (2ed)- U. Nilsson and J. MaluszynskiCouse book. A bit too theoretical for my taste.Introduction to Cryptography with Coding Theory- Wade Trappe, Lawrence C. WashingtoCourse book, quite good.The Shock of the Old- David EdgertonDen skapande människan- Staffan HanssonPublished:December 31,2014Revised:April  1,  2015infdcf171Tagged:Read BooksPreviousNext</description>
      <pubDate>Wed, 31 Dec 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Christmas Game</title>
      <link>https://www.jonashietala.se/blog/2014/12/26/a_christmas_game</link>
      <description>A Christmas GamePublished:December 26,2014inba2dcccTagged:GamingI’m going through a bit of a boardgame stint, as I usually do during christmas time. I had exactly one thing on my wishlist for this christmas for my little brother:Ticket to Ride: Nordic Countries. Guess what? I got something from my wishlist!This was our 5th or 6th game (or something?) and it’s a nice piece of game! Much simpler thanAgricolaandTerra Mystica(our current favourites) but still with a healthy dose of decision making. It’s a fun and straightforward game.Published:December 26,2014inba2dcccTagged:GamingPreviousNext</description>
      <pubDate>Fri, 26 Dec 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Extracting schedule information from timeedit</title>
      <link>https://www.jonashietala.se/blog/2014/11/27/extracting_schedule_information_from_timeedit</link>
      <description>Extracting schedule information from timeeditPublished:November 27,2014Revised:April 29,  2020in94ae8ecTagged:ProgrammingAt LIU we use timeedit to track our schedules. Recently they updated their interface and improved some parts. It’s now possible to create a prenumeration of a collection of courses exported ascsvwhich can then be imported to other calendar apps. But they also started to obfuscate their urls.This is the schedule for a single courseTGTU49in the interval “now - 2015-01-17”:https://se.timeedit.net/web/liu/db1/schema/ri157XQQ519Z50Qv27045gZ6y7Y7206Q6Y45Y7.htmlThis is for the coursesTGTU49andTATA49in the same interval:https://se.timeedit.net/web/liu/db1/schema/ri15YXQ2519Z55Qv2X0457Q6y4Y120876Y45Y7gQ6076775Z7.htmlThere seem to be some logic behind the urls, but first, let’s look at how they handle search.Using firebug we can intercept the json requests when we click the search button athttps://se.timeedit.net/web/liu/db1/schema/ri1Q7.htmlWe find a GET request tohttps://se.timeedit.net/web/liu/db1/schema/objects.html?max=15&amp;amp;fr=t&amp;amp;partajax=t&amp;amp;im=f&amp;amp;sid=3&amp;amp;l=sv&amp;amp;search_text=TGTU49&amp;amp;types=219&amp;amp;fe=132.0&amp;amp;fe=115.20132,20141,20142which has has some search results formatted as html:&lt;td&gt;TGTU49, Teknikhistoria, 1, TGTU49 1445-1503 Valla&lt;/div&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;types=219means we’re searching for a course and if can change it totypes=205we can search for student groups instead. If we changeobjects.htmltoobjects.jsonwe even get a json response:{"Kurskod":"TGTU49","Kursnamn":"Teknikhistoria","Omgång":"1","Kurstillfälle":"TGTU49 1445-1503 Valla"}json looks much better and it’s a lot easier to parse, but unfortunately if we instead search for “TGTU” we only get one match but using html we get six. What’s worse, there’s a lot less information given with json.data-idfor example seems important as it’s the unique id signifying the course.As I’m writing this I tried.txtas well and we get a much larger json response which containsdata-id, among other things.Investigating the page source in ta schedule page we find&lt;/span&gt;Which seems to suggest that we can send a request directly tohttps://se.timeedit.net/web/liu/db1/schema/ri.htmlwith url parameters.For examplehttps://se.timeedit.net/web/liu/db1/schema/ri.html?sid=3&amp;amp;p=140703-141231&amp;amp;objects=363972.219Is a search forTGTU49(data-id: 363972.219) between 2014-07-03 and 2014-12-31 andhttps://se.timeedit.net/web/liu/db1/schema/ri.html?sid=3&amp;amp;p=140703-141231&amp;amp;objects=363972.219%2C363741.219searches forTGTU49(data-id: 363972.219) andTATA49(data-id: 363741.219).sidis an important flag here which specifies what information you’re interested in.sid               Information given------------------------------------------------------3                 Date Course Local Type Teacher Group4                 Date Type Teacher Localothers            DateThere’s a bunch of other parameters which we can simply ignore. This time if we replace.htmlto.jsonwe get a nice json request:{"columnheaders":["Kurs","Lokal","Undervisningstyp","Lärare","Studentgrupp","Fria grupper","Information till student","Studentförening","URL"],"info":{"reservationlimit":50,"reservationcount":17},"reservations":[{"id":"361731","startdate":"2014-11-04","starttime":"13:15","enddate":"2014-11-04","endtime":"15:00","columns":["TGTU49","KEY1","Föreläsning","Dick Magnusson","KA3, EMM3, EL3, PRO2","","","",""]},...]}We can also get information formatted as.txtand.csv. For parsing purposes the best one should be json, as we can use rust’sjson deriving, but then we need to create a bunch of structs..csvis actually very easy to parse and it looks like this:TimeEdit, Linköpings universitet"TGTU49, Teknikhistoria, 1, TGTU49 1445-1503 Valla", 2014-07-03 - 2014-12-31 ,Startdatum, Starttid, Slutdatum, Sluttid, Kurs, Lokal, Undervisningstyp, Lärare, Studentgrupp, Fria grupper, Information till student, Studentförening, URL2014-11-04, 13:15, 2014-11-04, 15:00, TGTU49, KEY1, Föreläsning, Dick Magnusson, "KA3, EMM3, EL3, PRO2", , , ,...Which is what I did. For a more stable library I should probably switch to json parsing, but there it is.I made arust cratewhich uses the outlined approach to retrieve scheduling information from timeedit. There’s a bunch of things I’m not supporting, but it’s enough for my needs. I made a simplecliand integrated a.schemacommand into myirc bot.Published:November 27,2014Revised:April 29,  2020in94ae8ecTagged:ProgrammingPreviousNext</description>
      <pubDate>Thu, 27 Nov 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Hearthstone on Wine</title>
      <link>https://www.jonashietala.se/blog/2014/11/12/hearthstone_wine</link>
      <description>Hearthstone on WinePublished:November 12,2014Revised:July 18,  2016in0c8ebd8Tagged:Wine,SlackwareI likeHearthstoneand recently the next expansionGoblins vs Gnomesso I wanted to install and play it. It didn’t work in vanilla wine, with a “time out error”, but I found abug reportwhich makes it work. Here’s a short summary:Get wine source fromgit. My version waswine-1.7.30-121-g6fe4d9e.Makeshlexec.patchinside the source directory@@-, +,@@Revert "shell32: Use CREATE_NEW_CONSOLE when SEE_MASK_NOCONSOLE is omitted."This reverts commit 2005be6dc92c0943ede01525cecad88f8e83c9c7.---a/dlls/shell32/shlexec.c+++a/dlls/shell32/shlexec.c@@-338,7 +338,7@@static UINT_PTR SHELL_ExecuteW(const WCHAR *lpCmd, WCHAR *env, BOOL shWait,startup.dwFlags = STARTF_USESHOWWINDOW;startup.wShowWindow = psei-&gt;nShow;dwCreationFlags = CREATE_UNICODE_ENVIRONMENT;-if (!(psei-&gt;fMask &amp; SEE_MASK_NO_CONSOLE))+if (psei-&gt;fMask &amp; SEE_MASK_NO_CONSOLE)dwCreationFlags |= CREATE_NEW_CONSOLE;if (CreateProcessW(NULL, (LPWSTR)lpCmd, NULL, NULL, FALSE, dwCreationFlags, env,lpDirectory, &amp;amp;startup, &amp;amp;info))Beforemakerunpatch-p1&lt;shlexec.patchThen domakeandmake installas normal and have fun with Hearthstone.Published:November 12,2014Revised:July 18,  2016in0c8ebd8Tagged:Wine,SlackwarePreviousNext</description>
      <pubDate>Wed, 12 Nov 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Soda</title>
      <link>https://www.jonashietala.se/blog/2014/10/21/soda</link>
      <description>SodaPublished:October 21,2014Revised:July 18,  2016in0c8ebd8Tagged:LifeThese quotes are fromhacker newsand I found them all too funny.It’s hard for me to understand the whole soda phenomenon in Canada and the US. Is it as addictive as cigarettes? Does it make you crave for more? Or it simply tastes so good that you can’t get enough of it? Why not eat a bunch of apples instead (if you don’t care about the amount of sugar you consume)? Wouldn’t they taste better?What are you drinking instead of soda in your country?uh, water?Water? Like out of the toilet!? (From the movieidiocracy).Published:October 21,2014Revised:July 18,  2016in0c8ebd8Tagged:LifePreviousNext</description>
      <pubDate>Tue, 21 Oct 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Friend of the Tree</title>
      <link>https://www.jonashietala.se/blog/2014/10/08/friend_of_the_tree</link>
      <description>Friend of the TreePublished:October  8,2014Revised:January 23,  2019indc7d7c4Tagged:IDA Summer of CodeI just noticed I was recognized as afriend of the treein a weekly meeting by therustteam. It came during my documentation sprint duringIDA Summer of Codeand I discovered it now, only two and a half month later. Still a very pleasant surprise!Published:October  8,2014Revised:January 23,  2019indc7d7c4Tagged:IDA Summer of CodePreviousNext</description>
      <pubDate>Wed, 08 Oct 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>IDA Summer of Code 2014: Summary</title>
      <link>https://www.jonashietala.se/blog/2014/10/06/ida_summer_of_code_2014_summary</link>
      <description>IDA Summer of Code 2014: SummaryPublished:October  6,2014in593689cTagged:IDA Summer of CodeThis is a wrap-up post of my entry toIDA Summer of Codethis year.Quick stats65 merged commits6790 lines added2822 lines deleted36 pull requests, 34 merged12 pull requests directly fixing issuesrest either documentation or cleanup1 RFC submitted (postponed)Worked ~160 hoursInitial workBefore this summer I had never contributed anything to open source. Inspired by theopen source gardenermy first steps was to read throughallissues labeledA-doc,E-easy,E-mentorandI-papercutmainly to find some easy issues I could work with.Issue #15780was for example the first issue I fixed. Before fixing issues it’s good to read through information for contributors, see for examplerust guidelines,contributinganddevelopment policybut there may be more scattered about.I contacted Steve Klabnik, who wrote theopen source gardenerand who’sbeen hired by Mozilla to work on rustand asked how I best could contribute and he thought documentation was an excellent way to contribute. I had also heard that documentation was low-hanging fruit so I figured it was a good way to start.DocumentationThe approach I took with documentation was to pick a part of the standard library, specificallycollections, and I wanted to make sure everything had runnable examples. Personally the most useful thing when learning a new language is examples.For exampleVec::as_mut_ptrhas the type signaturefn as_mut_ptr(&amp;amp;mut self) -&gt; *mut Tand the documentation is basically a copy of the signature with some descriptive text. But the text says nothing of how to actuallyusethe function. I just want to know how I use the pointer. A descriptive example is gold worth as it saves you so much time:usestd::ptr;letmutv=vec![1i,2,3];letp=v.as_mut_ptr();unsafe{ptr::write(p,9i);ptr::write(p.offset(2),5i);}assert_eq!(v,vec![9i,2,5]);You don’t even have to be that familiar with rust to see what the function does and how to use it with little more than a glance.My first rust contributionwas a main example forHashSetand mylast accepted pull requestdocumentedResultandOptionwhich is quite fitting as most of my contributions were documentation related. When finished I had made surecollectionshad runnable examples for everything except deprecated items and some which should be reworked (like btree). I made larger examples forpriority_queueandrandusingDijkstra’s algorithmand aMonty Hall simulationwhich turned out quite decent and some documentation for other things.Writing examples was more fun than I had initially thought and the reviewers seemed very happy with my contributions, which feels good. I might do something more in the future.Issuesrustusesissuesfor everything from bugs to smaller feature requests. I fixed some easier ones likepreventing failure with non-UTF8 formattingandJSON decoding fails on trailing comma. Even though the issues and the fixes are small, a lot of time went into fixing them. Time searching for issues and time spent familiarizing with the code base easily trumps time actually writing the resulting code.For example when I tried to fix#12794, to modify json decoder to handle optional fields, a lot of time was spent reading about#[deriving(Decodable)]and how it’s implemented and I hoped to introduce a general way for all types derivingDecodableto handle optional types. This led me to investigate syntax extension and fairly deep compiler hooks, but this led me to a bit of a dead end and the final pull request is a simpler hard-codedOptionhandling for json.My issues and pull requests.Bug triageAnother way to contribute is to enter rust’sbug triage programwhere you receive a random set of old issues (I got 10 each week) and your task is to solve, bump, close or clarify them to the best of your ability.I don’t think I actually managed solve a lot of issues, maybe a couple, but I did try to. At the very least I tried to replicate old issues to see if they’re still relevant and if so make an up to date test case. If not I’d usually just bump the issue.RFCrustuses theRFCprocess which all “substantial” changes to the language have to go through. Changing semantics, adding keywords or changes to the standard library are typical examples which requires an RFC.Early on when reading rust’s old tutorial I cringed a bit of the use of Newtypes:structInch(int);letlength=Inch(10);letInch(integer_length)=length;println!("it's{}long!",integer_length);But this isn’t very ergonomic and it just feels like a big hack to call a one element tuple for a newtype. So I wrote anRFCwhich proposed to introduce anewtypekeyword which automatically derives the underlying traits of a type:newtype Inch=int;letlength:Inch=10;println!("it's{}long!",length);The feedback was positive overall, but it’s currently postponed until after 1.0 as it could be implemented with backwards compatibility in mind. There was also discussion about possibly favouringGeneralized Newtype Derivingover a new keyword:#[deriving(Sub,Show)]structInches(int);Which gives the ability to skip unwanted traits, for example multiplication might not make sense for anInchas the resulting type would beInch^2.What it meant to meI had a blast doing summer of code! It has long been a wish of mine to contribute to open source and rust has fascinated me a long time and I’m really happy I got the chance to workand to get paiddoing this. Having a summer job doing something you might do anyway is per definition a great summer job.It was more than just getting paid, it also gave me a push to becoming a contributor torustwhich is big confidence boost for me and hopefully it gives me a good starting point to contribute more in the future. And of course it gave me a nice excuse to play withrust, which is really shaping up to be a nice language.Published:October  6,2014in593689cTagged:IDA Summer of CodePreviousNext</description>
      <pubDate>Mon, 06 Oct 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>ISOC update</title>
      <link>https://www.jonashietala.se/blog/2014/09/04/isoc_update</link>
      <description>ISOC updatePublished:September  4,2014Revised:January 21,  2019ina029167Tagged:IDA Summer of Code,RustI have now worked a bit more than 3 weeks out of my 4 weeks ofIDA Summer of Codeand this is an update post of what I’ve done so far. I will write a more extensive summary post at the end of the project. I was planning on writing a weekly summary, but that ship sailed a long time ago.I’ve written a lot of documenting code examples, specifically making sure most of the methods incollectionshad examples. I’m especially proud of the main examples forpriority_queueandrandI wrote abouthereandhere.I have oneRFCwhere I propose to introduce a new keywordnewtype. I don’t think it will be accepted, but it spurred some good discussions andsomethingsimilar might be included further down the road. It remains to be seen if it will be with a new keyword or if we’ll utilize existing constructions.Other than that I’ve done a bit of triage: the act of looking up old issues to see if they are relevant, update them and preferably fix them. I have done some small fixes to a couple of issues, most have been very minor ones like adjusting error messages or adding tests.The time I have left I will try to fix more issues. This week I tried to adddefault arguments for json decoding when usingOption, but I approached it the wrong way. I may attempt to do it “the right way” but I’m unsure if I can come up with a nice way.Published:September  4,2014Revised:January 21,  2019ina029167Tagged:IDA Summer of Code,RustPreviousNext</description>
      <pubDate>Thu, 04 Sep 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Embedding youtube videos with Hakyll</title>
      <link>https://www.jonashietala.se/blog/2014/09/01/embedding_youtube_videos_with_hakyll</link>
      <description>Embedding youtube videos with HakyllPublished:September  1,2014Revised:January 25,  2019in86639b5Tagged:Hakyll,HaskellA while ago a made a timelapse of my entry to Ludum Dare. This is how I parse and embed videos usingHakyll.I don’t want to remember any special syntax for embedding, I don’t want to bother (remember?) to use something like{% youtube:  %}or whatever syntax we might find pretty. The simplest solution I could think of is simply to have a bare link separated by newlines:Some text...Some other text...Would embedas a video. A youtube link seems to always start like:https://www.youtube.com/watch?v=which we can parse with a simple regex. If we run this after compilation the link will also be surrounded by&lt;p&gt;tags.--Need to import the regeximportText.Regex(subRegex,mkRegex)--Find and replace bare youtube links separated by &lt;p&gt;&lt;/p&gt;.youtubeFilter::String-&gt;StringyoutubeFilter x=subRegex regex x resultwhereregex=mkRegex"&lt;p&gt;https?://www\\.youtube\\.com/watch\\?v=([A-Za-z0-9_-]+)&lt;/p&gt;"result="&lt;div class=""&gt;\\\\\\&lt;/div&gt;\\&lt;/div&gt;";Edit:The solution above does not handle unicode in the document before the video. See an updatehere.The rendering part is not pretty and I’m sure one could move it to a template somehow.We can use with:applyFilter::(Monadm,Functorf)=&gt;(String-&gt;String)-&gt;fString-&gt;m(fString)applyFilter transformator str=return$(fmap$transformator) strAnd use it right after we compile:match"posts/*.markdown"$doroute   postRoutecompile$pandocCompiler&gt;&gt;=applyFilter youtubeFilter&gt;&gt;=saveSnapshot"content"&gt;&gt;=return.fmap demoteHeaders&gt;&gt;=saveSnapshot"demoted_content"&gt;&gt;=loadAndApplyTemplate"templates/post.html"(postCtx tags)&gt;&gt;=saveSnapshot"post"&gt;&gt;=loadAndApplyTemplate"templates/site.html"(postCtx tags)&gt;&gt;=deIndexUrlsI did not write this code originally, I found it on someone else’s blog, but I managed to loose the link and now I can’t find it.The styling of the video isfrom another blog post:.video-container{position:relative;padding-bottom:56.25%;padding-top:30px;height:0;overflow:hidden;}.video-containeriframe,.video-containerobject,.video-containerembed{position:absolute;top:0;left:0;width:100%;height:100%;}.video-wrapper{width:600px;max-width:100%;}Now in the end this:https://www.youtube.com/watch?v=NIbr-mLi4DUWill be transformed to:Click to view on YouTubeThe full source can be foundon github.Published:September  1,2014Revised:January 25,  2019in86639b5Tagged:Hakyll,HaskellPreviousNext</description>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Undo git reset --hard</title>
      <link>https://www.jonashietala.se/blog/2014/08/29/undo_git_reset_--hard</link>
      <description>Undo git reset --hardPublished:August 29,2014ind01551eTagged:IDA Summer of Code,GitI purposefully and more or less idiotically executedgit reset --hard in hopes of going back a bit. What I didn’t realize then is that you throw away all the commits between now until. Not quite what was planned.After a bit of panic I foundthe answer:Find your hash usinggit reflog.Dogit cherry-pick to go back in time.This saved me a bunch of time, thanks!Published:August 29,2014ind01551eTagged:IDA Summer of Code,GitPreviousNext</description>
      <pubDate>Fri, 29 Aug 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Vacation</title>
      <link>https://www.jonashietala.se/blog/2014/08/14/vacation</link>
      <description>VacationPublished:August 14,2014in216ff04Tagged:LifeFinally back from a 2 week vacation up at Övertorneå. It’s been pretty great to be taken care of and not doing anything. Well, I did get my ass kicked in Terra Mystica and I played a bit of Minecraft, but still. We got some nice food and my in-laws and my parents were nice.I’m still feeling extremely tired though and I don’t know why. The vacation was great but it feels like I need more.  It’s quite horrifying when you come home from your vacation feeling tired.  It’s a sure sign of stress and overexertion but I’m not entirely sure what to do about it.I do have a wonderfully supportive girlfriend though, so things aren’t looking all too bleak, maybe I can survive.Published:August 14,2014in216ff04Tagged:LifePreviousNext</description>
      <pubDate>Thu, 14 Aug 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Monty Hall</title>
      <link>https://www.jonashietala.se/blog/2014/07/30/monty_hall</link>
      <description>Monty HallPublished:July 30,2014Revised:January 21,  2019ina029167Tagged:IDA Summer of Code,RustI’m currently readingThe Drunkard’s Walk, a well written book about probabilities.
There they discussed the famousMonty Hall Problem. I’ve heard about it before
and I know the answer, but he mentioned a simulation of the problem and that sounded
cool so I made a simulation of my own. This example will be in therustdocumentation
as well.Here’s a quick summary of the problem:Suppose you’re on a game show, and you’re given the choice of three doors:
Behind one door is a car; behind the others, goats. You pick a door, say No. 1,
and the host, who knows what’s behind the doors, opens another door, say No. 3,
which has a goat. He then says to you, “Do you want to pick door No. 2?”
Is it to your advantage to switch your choice?The rather unintuitive answer is that you will have a 2/3 chance of winning if
you switch and a 1/3 chance of winning of you don’t, so it’s better to switch.This program will simulate the game show and with large enough simulation steps
it will indeed confirm that it is better to switch.usestd::rand;usestd::rand::Rng;usestd::rand::distributions::{IndependentSample,Range};structSimulationResult{win:bool,switch:bool,}//Run a single simulation of the Monty Hall problem.fnsimulate(random_door:&amp;amp;Range,rng:&amp;amp;mutR)-&gt;SimulationResult{letcar=random_door.ind_sample(rng);//This is our initial choiceletmutchoice=random_door.ind_sample(rng);//The game host opens a doorletopen=game_host_open(car,choice,rng);//Shall we switch?letswitch=rng.gen();ifswitch{choice=switch_door(choice,open);}SimulationResult{win:choice==car,switch:switch}}//Returns the door the game host opens given our choice and knowledge of//where the car is. The game host will never open the door with the car.fngame_host_open(car:uint,choice:uint,rng:&amp;amp;mutR)-&gt;uint{letchoices=free_doors(&amp;[car,choice]);rand::sample(rng,choices.move_iter(),1)[0]}//Returns the door we switch to, given our current choice and//the open door. There will only be one valid door.fnswitch_door(choice:uint,open:uint)-&gt;uint{free_doors(&amp;[choice,open])[0]}fnfree_doors(blocked:&amp;[uint])-&gt;Vec{range(0u,3).filter(|x|!blocked.contains(x)).collect()}fnmain(){//The estimation will be more accurate with more simulationsletnum_simulations=10000u;letmutrng=rand::task_rng();letrandom_door=Range::new(0u,3);let(mutswitch_wins,mutswitch_losses)=(0u,0u);let(mutkeep_wins,mutkeep_losses)=(0u,0u);println!("Running{}simulations...",num_simulations);for_inrange(0,num_simulations){letresult=simulate(&amp;amp;random_door,&amp;amp;mutrng);match(result.win,result.switch){(true,true)=&gt;switch_wins+=1,(true,false)=&gt;keep_wins+=1,(false,true)=&gt;switch_losses+=1,(false,false)=&gt;keep_losses+=1,}}lettotal_switches=switch_wins+switch_losses;lettotal_keeps=keep_wins+keep_losses;println!("Switched door{}times with{}wins and{}losses",total_switches,switch_wins,switch_losses);println!("Kept our choice{}times with{}wins and{}losses",total_keeps,keep_wins,keep_losses);//With a large number of simulations, the values should converge to//0.667 and 0.333 respectively.println!("Estimated chance to win if we switch:{}",switch_winsasf32/total_switchesasf32);println!("Estimated chance to win if we don't:{}",keep_winsasf32/total_keepsasf32);}This is an example run:$ ./monty_hallRunning 10000 simulations...Switched door 4994 times with 3323 wins and 1671 lossesKept our choice 5006 times with 1619 wins and 3387 lossesEstimated chance to win if we switch: 0.665399Estimated chance to win if we don't: 0.323412Published:July 30,2014Revised:January 21,  2019ina029167Tagged:IDA Summer of Code,RustPreviousNext</description>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Dijkstra's Algorithm</title>
      <link>https://www.jonashietala.se/blog/2014/07/23/dijkstras_algorithm</link>
      <description>Dijkstra's AlgorithmPublished:July 23,2014Revised:January 21,  2019ina029167Tagged:IDA Summer of Code,RustForrust, I’m updating the documentation for the standard library and specifically with the collections. For the priority queue I had the idea to useDijkstra’s algorithmas a fun example. That idea waswell receivedand that example is nowlive.At first I wanted to useA*to solvethe eight puzzle, whichI’ve done before, but that example became far too big.Here’s the example code currently up indocs:Usingrustc 0.12.0-pre (ef352faea84fa16616b773bd9aa5020d7c76bff0 2014-07-18 21:46:32 +0000)usestd::collections::PriorityQueue;usestd::uint;#[deriving(Eq,PartialEq)]structState{cost:uint,position:uint}//The priority queue depends on `Ord`.//Explicitly implement the trait so the queue becomes a min-heap//instead of a max-heap.implOrdforState{fncmp(&amp;amp;self,other:&amp;amp;State)-&gt;Ordering{//Notice that the we flip the ordering hereother.cost.cmp(&amp;amp;self.cost)}}//`PartialOrd` needs to be implemented as well.implPartialOrdforState{fnpartial_cmp(&amp;amp;self,other:&amp;amp;State)-&gt;Option{Some(self.cmp(other))}}//Each node is represented as an `uint`, for a shorter implementation.structEdge{node:uint,cost:uint}//Dijkstra's shortest path algorithm.//Start at `start` and use `dist` to track the current shortest distance//to each node. This implementation isn't memory efficient as it may leave duplicate//nodes in the queue. It also uses `uint::MAX` as a sentinel value,//for a simpler implementation.fnshortest_path(adj_list:&amp;amp;Vec&gt;,start:uint,goal:uint)-&gt;uint{//dist[node] = current shortest distance from `start` to `node`letmutdist=Vec::from_elem(adj_list.len(),uint::MAX);letmutpq=PriorityQueue::new();//We're at `start`, with a zero cost*dist.get_mut(start)=0u;pq.push(State{cost:0u,position:start});//Examine the frontier with lower cost nodes first (min-heap)loop{letState{cost,position}=matchpq.pop(){None=&gt;break,//emptySome(s)=&gt;s};//Alternatively we could have continued to find all shortest pathsifposition==goal{returncost}//Important as we may have already found a better wayifcost&gt;dist[position]{continue}//For each node we can reach, see if we can find a way with//a lower cost going through this nodeforedgeinadj_list[position].iter(){letnext=State{cost:cost+edge.cost,position:edge.node};//If so, add it to the frontier and continueifnext.cost 1 -----&gt; 3 ---&gt; 4//|        ^        ^      ^//|        | 1      |      |//|        |        | 3    | 1//+------&gt; 2 -------+      |//10      |               |//+---------------+////The graph is represented as an adjecency list where each index,//corresponding to a node value, has a list of outgoing edges.//Chosen for it's efficiency.letgraph=vec![//Node 0vec![Edge{node:2,cost:10},Edge{node:1,cost:1}],//Node 1vec![Edge{node:3,cost:2}],//Node 2vec![Edge{node:1,cost:1},Edge{node:3,cost:3},Edge{node:4,cost:1}],//Node 3vec![Edge{node:0,cost:7},Edge{node:4,cost:2}],//Node 4vec![]];assert_eq!(shortest_path(&amp;amp;graph,0,1),1);assert_eq!(shortest_path(&amp;amp;graph,0,3),3);assert_eq!(shortest_path(&amp;amp;graph,3,0),7);assert_eq!(shortest_path(&amp;amp;graph,0,4),5);assert_eq!(shortest_path(&amp;amp;graph,4,0),uint::MAX);}Published:July 23,2014Revised:January 21,  2019ina029167Tagged:IDA Summer of Code,RustPreviousNext</description>
      <pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>My first rust Contribution</title>
      <link>https://www.jonashietala.se/blog/2014/07/19/my_first_rust_contribution</link>
      <description>My first rust ContributionPublished:July 19,2014Revised:January 11,  2024in9c3a9b3Tagged:IDA Summer of Code,RustThe problem with open-source for most people isn’t writing code, but it’s all the other things.How shall I push my changes? How do I handlegit? What should I do?I was the same and I actually dreadedmy awesome summer job, just a little bit, because now I’m supposed to contribute and preferrably a non-trivial amount. Although I’ve been programming several years, I’ve never contributed a large open-source project. Or a small one for that matter.But this has now officially changed. 3 days agomy first pull requestgot merged intorust! Here are some useful steps and resources which might be useful for someone in my shoes:I assume you’re going to contribute torust, but the essence could be generalized for other projects as well.BuildFirstly we should try tobuild rust. There are some useful things about building inside the rootMakefileand in thetest suite notes.For making the documentation:makedocs NO_REBUILD=1And making other things:make-jNO_REBUILD=1 NO_BENCH=1 CFG_DISABLE_VALGRIND=1The process can be very slow though, especially if you domake clean(try not to!).Git workflowBefore we start hacking it’s good to have an idea of the git workflow we’re going to use.Firstly, clonegit@github.com:rust-lang/rust.gitand push that repo into your github account. I have that as myorigin. Then create anupstreambranch:gitremote add upstream https://github.com/rust-lang/rustFor me it looks like this:$git remote-vorigingit@github.com:treeman/rust.git (fetch)origingit@github.com:treeman/rust.git (push)upstreamhttps://github.com/rust-lang/rust (fetch)upstreamhttps://github.com/rust-lang/rust (push)When we want to start working on something new, always create a new branch:$git checkout master-bmybranchWhile we’re working we need to update fromupstream, to get new changes.$git checkout mybranch$git fetch upstream$git rebase upstream/masterWhen done, push locally to github:$git push origin mybranchTo file a pull request we can use github’s interface. Just be sure to target themasterintegration branch.If we want to make some changes to our pull request, simply make the changes inmybranchand push towards your github profile.If you have a lot of commits in your pull request, or if they aren’t very descriptive, you may be asked to squash your commits. Sounds scary, but it’s fairly straightforward:git logand check how many commits you have (or check via github).git rebase -i HEAD~2will rebase the 2 latest commits.When satisfied:$git push origin mybranch-fAnd that’s it! Make sure to switch branch when you’re done. I accidentally pushed another commit on top of my already reviewed, and accepted, pull request. Quite embarrassing but I’ll live =)Actual workWith that taken care of, we can finally do some work. Butwhat to do? Here are some tips:Document thelibrary.At the time of my writing, the library lacks a lot of documentation, and that’s what I’m doing. And don’t be scared, it’s not as dry as it’s sounds. My contributions are basically just adding code examples.Write unit tests.Proofread thetutorial.I did this, but the tutorial is currently getting a complete rewrite, so I’m not sure how useful that was.Find and fix somebugs.rust organizes everything as issues. Feature request, updates and bugs. If you look for them, you might find aneasy bugto work on. Which is whatI did.And you can always simply start hacking on something interesting. Or find and fix a bug yourself.Published:July 19,2014Revised:January 11,  2024in9c3a9b3Tagged:IDA Summer of Code,RustPreviousNext</description>
      <pubDate>Sat, 19 Jul 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Plans for Summer of Code</title>
      <link>https://www.jonashietala.se/blog/2014/07/14/plans_for_summer_of_code</link>
      <description>Plans for Summer of CodePublished:July 14,2014in249ee0aTagged:IDA Summer of CodeMyfirst summer jobis now over, and after a weekend of rest, it is now time to plan for my second summer job:IDA Summer of Code.I will work a month, or 4 weeks, with contributing torust! The only issue is, I have no idea where to start. I didn’t have a strict plan or a vision of what I want to accomplish when I applied, but now I’m running out of time. I need to have an attack plan.First thing first is to read through thetutorialand to review rust a bit. After that I should go through the openissuesand perhaps find an easy issue I can start working on. The idea is to perhaps start with documentation and work from there.I will also track the irc channel#rust@irc.mozilla.organd use theirmailing list. I’ve been idling in their irc channel a while now and they are very friendly and helpful, so I’m sure I’ll be able to get help and pointers from them.But before all that, I need to clean my desk…Published:July 14,2014in249ee0aTagged:IDA Summer of CodePreviousNext</description>
      <pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Summer job at Configura</title>
      <link>https://www.jonashietala.se/blog/2014/07/13/summer_job_at_configura</link>
      <description>Summer job at Configuraâ˜Published:July 13,2014in4fc20ddTagged:ProgrammingThis is a wrap up of my 5 weeks atConfiguraas a summer internship. There were 6 interns and we had two teams doing different things. I worked with two other awesome guys and it was great!The PremiseWe had two assignments this summer. One was to create an optimized version of an octree (more on that later). We had a reference implementation in CM, but we wanted to take it down to C++ and to optimize it and make it stable and robust. This was a self-contained assignment which could be used for various things in their application.The second assignment was to use our octree and simplify meshes by removing invisible triangles from them. Here again we had a reference implementation to work with but we were going to make it faster and more robust.On top of that we had to make debugging and visualization tools and a test suite.The ResultIn this picture we can see the original model on the left. The green outline to the right are the triangles we deemed visible and the red mesh corresponds to the invisible triangles.Here we only show the removed triangles and we can see that thereâ€™s a dude inside the statue, which we mostly remove. This model has about 730 000 triangles and we managed to remove about 300 000 of them, which is pretty cool.This is another interesting example. We can see that inside this model, we have a high resolution spring with nearly 3500 triangles!As for speed, we significantly improved the runtime of both the octree and the ray casting. For a specific model with 20 000 triangles which took around 15 minutes with a small depth, we managed to get it down to about a second with a larger depth. We achieved similar results with the ray casting.In the end our bosses seemed pleased, so I consider the summer job a success. I did suck at Disc Golf though.ExecutionOctreeAnoctreeis an extension of aquadtreefrom 2D to 3D. The simple explanation is that we have a box, and try to insert triangles (or points, or whatever) into it. When the box has enough triangles we split it into 8 parts (4 with a quadtree) and then insert the triangles into the new boxes if they intersect them.The octree is used in various ways, for a fast traversal with a ray, mesh healing, finding neighbours or other things.Here we can see the root bounding box and the subsequent subdivision into smaller boxes. The green boxes have none or few triangles, the yellow and red have more triangles in them. Because we force our wctree to have a maximum depth some nodes like the red ones on top of the model can have a lot of triangles in them without further subdividing. This is basically a trade off between the memory and time usage versus how good the octree becomes.This octree is very sparse at the top, which makes sense as there are no triangles there, and itâ€™s dense in the middle. Interestingly we can see something sticking out inside the model, which means there are more triangles there. Indeed, the model has the actual holes, we just canâ€™t see them.In this picture we can see one of our debug tools. This is a single large triangle spanning over almost the whole model and the generated octree. The colored boxes show which nodes the triangle is inserted into, which can be an invaluable debugging tool when changing how triangle-box intersection and octree insertion works.It also looks cool.These are the basic optimization steps we did:Implement it in C++The performance boost you can get by moving down closer to the metal should not be underestimated.Use custom memory pools for the triangles, nodes and even the sequences holding them.Implement the AABB triangle intersection tests with the separating axis theorem.We had a link to a nice explanation, but now I canâ€™t find it.Cache the above triangle projections.They will be useda lot. Use a cache to reuse them when promoting nodes.Donâ€™t start insert from the root and search down, but walk up until we find something we know weâ€™re inside.This exploits the fact that the triangles in the meshes are usually â€œcloseâ€ to each other. We tried to presort the triangles using a fancy thing called theHilbert curvewhich one can realize usingMorton codes(usingfancy bit manipulations), but unfortunately the presorting pass wasnâ€™t worth it.Ray castingOur strategy for finding invisible triangles is quite simple: we cast rays towards the still invisible triangles from outside the model, and see what we can hit. All triangles our rays hit, are visible and the rest we can remove.This is another of our debug tools where we can select a triangle (pointed by the arrow) and all the ray we try to cast towards it. In this case we fail to hit the triangle and instead we hit all the blue/purple triangles instead. This is a failed triangle, but I think itâ€™s a nice illustration of how we tried to find invisible triangles.The first pass of rays we only cast one ray along the triangleâ€™s normal towards the visible side of the triangle. During the second pass we start to cast rays in a hemisphere, gradually increasing the density of the rays.For each ray we traverse the octree and for every box the ray intersects we check the triangles inside against the ray. This is fast because donâ€™t have to check against all other triangles at every step, but only against a fixed amount if the octree is well formed.ConclusionThis was my second summer atConfiguraand itâ€™s a pretty cool company. They gave us a lot of freedom and we got to work on pretty cool things and they have their own programming language which is fun to work with.We rewrote the implementations from scratch, we battled with precision errors and edge cases but in the end our mission was a success. It was a very rewarding experience as the task was quite complex, but we managed to complete it in good style. We got to work with visualization on a high level and we also got to really dive into some low-level optimizations.Oh, and something cool we hacked in during my last day: A better triangle flipper to turn triangles face up.Left: Triangles turned inwardsRight: Triangles turned outwards (without blindly copying everything)Published:July 13,2014in4fc20ddTagged:ProgrammingPreviousNext</description>
      <pubDate>Sun, 13 Jul 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Reinstalling Slackware</title>
      <link>https://www.jonashietala.se/blog/2014/07/05/reinstalling_slackware</link>
      <description>Reinstalling SlackwarePublished:July  5,2014inac95a3bTagged:SlackwareSo I reinstalled slackware on my machine and decided to take some rough notes of the most important steps I made. I did not document the steps in detail, and some are very specific for my setup. But maybe it can be useful for someone, or myself.ContentsBasic stepsMake slackware usb loaderMake partitionsSetupConfigInstall wicd, get onlineCustom KernelFix XProgramsFirefoxvimSkypeSpotifyOfficecronAppearancexmonadFontsTerminalRandom InstallsSlackbuildsPerlMultilibBetter latexGroovebasinJavaAnkiProgrammingHakyllSFMLGamesMinecraftBasic stepsMake slackware usb loaderSeeREADME_USB.TXTin usb folder from slackware installation.Createddif=usbboot.img of=/dev/sdX bs=1MBe sure/dev/sdXis the usb, dd will wipe everything! Simple way is tols/devbefore and after plugging in device.  Boot from bios (f2 or f10).Make partitionsMake partitionshttp://slackbook.org/html/installation-partitioning.htmlfdisk /dev/sda. Make suresdais your harddrive.  Print partitionspCurrent setup:tmpfs4G      swap/dev/sda250G     //dev/sda350G     /usr/local/dev/sda5rest    /homeMake sure that swap is of type Linux Swap, change witht. Approx 2 times your ram?SetupBoot and runsetup.Install from FTP/HTTP server:ftp://ftp.slackware.com/pub/slackware/slackware64-14.1/slackware64For example.Don’t pick KDE or Games. Use terse installation.ConfigAdd a new user withadduser.  Set zsh as basic shell. Set for root in/etc/passwd(or update user info there).Add user to groups.# usermod -a -G netdev usernameUpdate name in/etc/HOSTNAME.Install wicd, get onlineFetch package from/extra/wicd.installpkg...chmod+x /etc/rc.d/rc.wicd/etc/rc.d/rc/wicdstartwicd-cursesCustom Kernelhttp://alien.slackbook.org/dokuwiki/doku.php?id=linux:kernelbuildingFetch latest stable kernel source:https://www.kernel.org/cd/usr/srcwgethttps://www.kernel.org/pub/linux/kernel/v3.x/linux-3.15.1.tar.xz#Or whatevertarxf linux-3.15.1.tar.xzrmlinuxln-slinux-3.15.1 linuxcdlinuxUse slackware custom as base:#wget or cp to dirwgetftp://ftp.slackware.com/pub/slackware/slackware64-14.1/source/k/config-x86_64/config-generic-3.10.17.x64mvconfig-generic-3.10.17.x64 .configmakeoldconfigmakemenuconfigMake sure to select processor type, preemptive low latency desktop. Removenvidiaandribafor nvidia binary blob usage later.makebzImage modulesmakemodules_installcparch/x86_64/boot/bzImage /boot/vmlinuz-custom-3.16.3cpSystem.map /boot/System.map-custom-3.16.3cp.config /boot/config-custom-3.16.3cd/bootrmSystem.mapln-sSystem.map-custom-3.16.3 System.mapUpdate/etc/lilo.conf. This is mine:#Start LILO global sectionlba32#Allow booting past 1024th cylinder with a recent BIOScompact#Fast boot#Append any additional kernel parameters:append="vt.default_utf8=1 logo.nologo"boot= /dev/sda#Boot BMP Image.#Bitmap in BMP format: 640x480x8bitmap= /boot/slack.bmp#Menu colors (foreground, background, shadow, highlighted#foreground, highlighted background, highlighted shadow):bmp-colors= 255,0,255,0,255,0#Location of the option table: location x, location y, number of#columns, lines per column (max 15), "spill" (this is how many#entries must be in the first column before the next begins to#be used. We don't specify it here, as there's just one column.bmp-table= 60,6,1,16#Timer location x, timer location y, foreground color,#background color, shadow color.bmp-timer= 65,27,0,255#Standard menu.#Or, you can comment out the bitmap menu above and#use a boot message with the standard menu:#message = /boot/boot_message.txt#Wait until the timeout to boot (if commented out, boot the#first entry immediately):prompt#Timeout before the first entry boots.#This is given in tenths of a second, so 600 for every minute:timeout= 100#Override dangerous defaults that rewrite the partition table:change-rulesresetvga= 795image= /boot/vmlinuz-custom-3.14.5root= /dev/sda2label= Slackread-onlyimage= /boot/vmlinuzroot= /dev/sda2label= Backupread-onlyMake sure to change image locations and drive location.Then runlilo.Fix XInstall NVIDIA drivers 337.25.Use customxorg.conf.ln-sdotfiles/.workspace .ln-s/etc/X11/xorg.conf.d/xorg.conf .workspace/xorg.confThis is it:Section "ServerLayout"Identifier "Layout0"Screen 0 "Screen0" 1080 480Screen 1 "Screen1" 0 0InputDevice "Keyboard0" "CoreKeyboard"InputDevice "Mouse0" "CorePointer"Option "Xinerama" "1"EndSectionSection "Files"FontPath "/usr/lib64/X11/fonts/misc/:unscaled"FontPath "/usr/lib64/X11/fonts/100dpi/:unscaled"FontPath "/usr/lib64/X11/fonts/75dpi/:unscaled"FontPath "/usr/lib64/X11/fonts/misc/"FontPath "/usr/lib64/X11/fonts/Type1/"FontPath "/usr/lib64/X11/fonts/Speedo/"FontPath "/usr/lib64/X11/fonts/100dpi/"FontPath "/usr/lib64/X11/fonts/75dpi/"FontPath "/usr/lib64/X11/fonts/cyrillic/"FontPath "/usr/lib64/X11/fonts/TTF/"EndSectionSection "InputDevice"Identifier "Mouse0"Driver "mouse"Option "Protocol" "auto"Option "Device" "/dev/psaux"Option "Emulate3Buttons" "no"# Option "ZAxisMapping" "4 5"EndSectionSection "InputDevice"Identifier "Keyboard0"Driver "kbd"Option "XkbLayout" "us"EndSectionSection "InputClass"Identifier "Keyboard Defaults"MatchIsKeyboard "yes"Option "XkbLayout" "us"EndSectionSection "Module"Load "dbe"EndSectionSection "Monitor"Identifier "Monitor0"VendorName "Unknown"ModelName "DELL U2211H"HorizSync 30.0 - 83.0VertRefresh 56.0 - 76.0Option "DPMS"EndSectionSection "Monitor"Identifier "Monitor1"VendorName "Unknown"ModelName "DELL U2211H"HorizSync 30.0 - 83.0VertRefresh 56.0 - 76.0Option "DPMS"#Option "Rotate" "left"EndSectionSection "Device"Identifier "Device0"Driver "nvidia"VendorName "NVIDIA Corporation"BoardName "GeForce GTX 550 Ti"BusID "PCI:1:0:0"#Option "RandRRotation" "on"Screen 0EndSectionSection "Device"Identifier "Device1"Driver "nvidia"VendorName "NVIDIA Corporation"BoardName "GeForce GTX 550 Ti"BusID "PCI:1:0:0"#Option "RandRRotation" "on"Screen 1EndSectionSection "Screen"Identifier "Screen0"Device "Device0"Monitor "Monitor0"DefaultDepth 24Option "TwinView" "0"Option "metamodes" "DFP-0: nvidia-auto-select +0+0"SubSection "Display"Depth 24EndSubSectionEndSectionSection "Screen"Identifier "Screen1"Device "Device1"Monitor "Monitor1"DefaultDepth 24Option "TwinView" "0"Option "metamodes" "DFP-2: nvidia-auto-select +0+0 { Rotation=left }"Option "Rotate" "cw"SubSection "Display"Depth 24EndSubSectionEndSectionProgramsFirefoxDownload latesttarxf ...mvfirefox /usr/local/lib64/cd/usr/binrmfirefoxln-s/usr/local/lib64/firefox/firefox .Getlibflashplayer.sointo/usr/local/lib64/firefox/browser/plugins.Restore bookmark backup from.mozilla/firefox/X.default/bookmarkbackupsif you want.vimFor xterm copying and support for more plugins. Get vim source.hgclone https://vim.googlecode.com/hg/ vimcdvim./configure--with-features=huge\--enable-multibyte\--enable-rubyinterp\--enable-pythoninterp\--enable-perlinterp\--enable-luainterp\--prefix=/usr/local\--enable-gui\--enable-hangulinput\--with-xmakemakeinstallSkypeInstall [Multilib]. Install skype from slackbuilds, use 32bit mode.SpotifyInstall [Multilib]. Fetch from slackbuilds. I’m having some flickering issues, but no idea what to do.OfficeInstall [Java]. Installlibreofficefrom slackbuilds.croncrontab -e# Every 5 minutes*/5 * * * * /home/tree/bin/ticker --updateAppearancexmonadInstall ghc linked from slackbuildsInstall hscolour from slackbuilds (for haskell-platform warnings)Install haskell-platform from slackbuildsAs user:cabalupdatecabalinstall cabal-installcabalinstall xmonadcabalinstall xmonad-contribln-sdotfiles/.xmonad~Installconkywith dependencies from slackbuilds. Build conky with lua support.Installdzen2by cloning from github. Editconfig.mk, choose option 7 (XPM, XFT, Xinerama).Get.backgroundsand.icons.Could not get nitrogen to build properly (I stole it from my other installation…!!)Fix borders on firefox etc withlxappearance, install from slackbuilds.FontsCopy ttf fonts to/usr/share/fonts/TTF, in that dir runmkfontscalemkfontdirfc-cache-fvIn/usr/bin/startxmod a line withdefaultserverargs="-dpi 96".Fromhttp://www.linuxquestions.org/questions/slackware-14/how-to-optimize-fonts-in-slackware-640468/page29.html#post5067546,http://blog.lysender.com/2013/11/optimizing-fonts-for-slackware-14-1-without-infinality/Enable subpixel rendering from source slackbuildhttp://ftp.slackware.com/pub/slackware/slackware-14.1/source/l/freetype/. Edit freetype.SlackbuildSave asfreetype_cleartype.diff:diff -rupN freetype.orig/cleartype.diff freetype/cleartype.diff---freetype.orig/cleartype.diff	1969-12-31 16:00:00.000000000 -0800+++freetype/cleartype.diff	2013-11-19 15:32:04.811346576 -0800@@-0,0 +1,12@@+diff -rupN freetype-2.5.0.1.orig/include/freetype/config/ftoption.h freetype-2.5.0.1/include/freetype/config/ftoption.h+--- freetype-2.5.0.1.orig/include/freetype/config/ftoption.h	2013-06-19 14:20:04.000000000 -0700++++ freetype-2.5.0.1/include/freetype/config/ftoption.h	2013-11-19 15:27:47.456737625 -0800+@@ -591,7 +591,7 @@ FT_BEGIN_HEADER+/*   This option requires TT_CONFIG_OPTION_BYTECODE_INTERPRETER to be    */+/*   defined.                                                            */+/*                                                                       */+-/* #define TT_CONFIG_OPTION_SUBPIXEL_HINTING */++#define TT_CONFIG_OPTION_SUBPIXEL_HINTING+++/*************************************************************************/diff -rupN freetype.orig/freetype.SlackBuild freetype/freetype.SlackBuild---freetype.orig/freetype.SlackBuild	2013-11-19 15:31:53.895891885 -0800+++freetype/freetype.SlackBuild	2013-11-19 15:33:17.885864416 -0800@@-78,7 +78,8@@zcat $CWD/freetype.illadvisederror.diff.# for doing so.# Please see this web site for more details:#   http://www.freetype.org/patents.html-#zcat $CWD/freetype.subpixel.rendering.diff.gz | patch -p1 --verbose || exit 1+zcat $CWD/freetype.subpixel.rendering.diff.gz | patch -p1 --verbose || exit 1+patch -p1 --verbose &lt; $CWD/cleartype.diffchown -R root:root .CFLAGS="$SLKCFLAGS" make setup CFG="--prefix=/usr --libdir=/usr/lib${LIBDIRSUFFIX} --build=$ARCH-slackware-linux"Thenlftp-c'open ftp.slackware.com ; mirror pub/slackware/slackware64-14.1/source/l/freetype/'cdfreetypepatch-p1&lt;../freetype_cleartype.diff./freetype.SlackBuildremovepkgfreetype-2.5.0.1-x86_64-1installpkg/tmp/freetype-2.5.0.1-x86_64-1.txzEnable subpixel rendering. Testhttp://www.lagom.nl/lcd-test/subpixel.php, choose rgb, gbr, or whatever. Also useful:https://wiki.archlinux.org/index.php/Font_configurationln-s/etc/fonts/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.dln-s/etc/fonts/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.dAlso use~/.config/fontconfig/fonts.conf:truetruehintslight&lt;!--Ignore any embedded bitmaps in TTF, etc (Microsoft's Calibri and others from Office 07/Vista have these)--&gt;false&lt;!--MS fonts use full hinting--&gt;Andale MonohintfullArialhintfullArial BlackhintfullCalibrihintfullCambriahintfullCandarahintfullComic Sans MShintfullConsolashintfullConstantiahintfullCorbelhintfullCourier NewhintfullGeorgiahintfullImpacthintfullSymbolhintfullTahomahintfullTimes New RomanhintfullTrebuchet MShintfullVerdanahintfullWebdingshintfullWingdingshintfullTerminalFetchrxvt-unicodefrom slackbuilds. Make.Xresources.Color schemes with ls listings will be ugly, so copyDIR_COLORSto.dir_colorsSTICKY_OTHER_WRITABLE35;40OTHER_WRITABLE34;40Set in .zshrc.Fix git diff colorsgit config --global core.pager "less -r"Also korean signs.Random InstallsSlackbuildsDownload fromhttp://slackbuilds.org/. Install withinstallpkg. Remove withremovepkg.s3cmd, scrot, mirage, rtorrentPerlInstall perl libs from cpan. As root:cpaninstall cpancpaninstall App::Ackcpaninstall Modern::Perlcpaninstall DateTimecpaninstall Data::ICalcpaninstall LWP#And possibly other thingsMultilibhttp://alien.slackbook.org/dokuwiki/doku.php?id=slackware:multilibAlso add blacklist.When installing 32bit run. /etc/profile.d/32dev.shBetter latexInstalltexlivefrom slackbuilds. Removetetexfirst.GroovebasinNeedlibgroove.  Which also needsspeexfrom slackbuilds apart from the clear dependencies. Run groovebasin as user.JavaGetOpenALfrom slackbuilds.  Get Java JDKhttp://docs.slackware.com/howtos:software:java, not OpenJDK.AnkiDownload anki.mv anki-2.0.26 /usr/local/lib64ln -s /usr/local/lib64/anki-2.0.26/runanki /usr/local/binProgrammingHakyllcabalinstall hakyllcabalinstall MissingHFor upload scripts fetchpython-magicslackbuilds.SFMLGet source.cmakeand install.GamesMinecraftRequires [Java]. Launch with:java-Xmx2048M-Xms1024M-jar~/.minecraft/launcher/Minecraft.jarI copied.minecraftfolder with saves etc.Published:July  5,2014inac95a3bTagged:SlackwarePreviousNext</description>
      <pubDate>Sat, 05 Jul 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Notifications with xmonad/irssi/urxvt</title>
      <link>https://www.jonashietala.se/blog/2014/07/03/notifications</link>
      <description>Notifications with xmonad/irssi/urxvtPublished:July  3,2014Revised:July  5,  2015incfbcee2Tagged:Slackware,XmonadSo I’ve been idling on irc for years now and I’ve been usingirssifor that, which works fine. I have not had notifications enabled, so I can see from the statusbar whenever someone messages me. As I’ve never been very active this has been fine, but now I figured it’s time to fix that.Fortunately it was very easy, there’s even a perfect match for my setup in thexmonad documentation!Here’s a summary:Configure xmonadInxmonad.hs, highlight with existing dzen (my statusbar).myDzenPP h=defaultPP {...}main=dobar&lt;-spawnPipe"dzen2 ..."xmonad$withUrgencyHookNoUrgencyHook$defaultConfig {logHook=dynamicLogWithPP$myDzenPP bar,...}Configure irssiI usedbeepchan.plto only notify on selected channels.settings={"fe-common/core"={bell_beeps ="yes";beep_msg_level ="MSGS NOTICES INVITES DCC DCCMSGS HILIGHT";beep_when_away ="no";beep_when_window_active ="no";...};"perl/core/scripts"={beep_channels ="#treecraft";...};};Configure screenIn.screenrcvbelloff#or remove the existing 'vbell on' lineConfigure rxvtIn.Xdefaultsurxvt.urgentOnBell:truePublished:July  3,2014Revised:July  5,  2015incfbcee2Tagged:Slackware,XmonadPreviousNext</description>
      <pubDate>Thu, 03 Jul 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Calling closures in a Vec</title>
      <link>https://www.jonashietala.se/blog/2014/06/21/calling_closures_in_a_vec</link>
      <description>Calling closures in a VecPublished:June 21,2014Revised:January 21,  2019ina029167Tagged:RustIn rust one might want to have a list of closures, for example as a list of callbacks.letmutfs:Vec&lt;||&gt;=Vec::new();fs.push(||{println!("imma firing my lazer");});forfinfs.iter(){f();//error: expected function but found `&amp;||`};Maybe if we borrow f?for&amp;amp;finfs.iter(){//error: cannot move out of dereference of `&amp;`-pointer```f();};But then if we dereference f?forfinfs.iter(){(*f)();//error: closure invocation in a `&amp;` reference};That’s not very helpful. Thanks to some friendly guys over at#rustatirc.mozilla.orgI found something which works:forfinfs.mut_iter(){(*f)();//ok!};A note is that the closure types must be&amp;amp;mut ||and not&amp;||.In the end I think that the error messages could be more clear. But now we have a running example and all is well in the world!//Print "imma firing my lazer"fnmain(){letmutfs:Vec&lt;||&gt;=Vec::new();fs.push(||{println!("imma firing my lazer");});forfinfs.mut_iter(){(*f)();//ok!};}Published:June 21,2014Revised:January 21,  2019ina029167Tagged:RustPreviousNext</description>
      <pubDate>Sat, 21 Jun 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>addwatch: resource exhausted</title>
      <link>https://www.jonashietala.se/blog/2014/06/13/addwatch_resource_exhausted</link>
      <description>addwatch: resource exhaustedPublished:June 13,2014in4e45660Tagged:SlackwareWhile tampering with Hakyll and runningsite previewI stumbled upon this error message:site: addWatch: resource exhausted (No space left on device)At first I tried to clear/tmpbut, so clearly the device did have some space left. After a bit of googling I founda solutionwhich managed to solve my problem.# for foo in /proc/*/fd/*; do readlink -f $foo; done | grep inotify | sort | uniq -c | sort -nr2 /proc/12871/fd/anon_inode:inotify1 /proc/673/fd/anon_inode:inotify1 /proc/601/fd/anon_inode:inotify1 /proc/587/fd/anon_inode:inotify1 /proc/27695/fd/anon_inode:inotify1 /proc/176/fd/anon_inode:inotify1 /proc/12879/fd/anon_inode:inotify1 /proc/12840/fd/anon_inode:inotify1 /proc/12806/fd/anon_inode:inotify1 /proc/12772/fd/anon_inode:inotify1 /proc/12771/fd/anon_inode:inotify1 /proc/12770/fd/anon_inode:inotify1 /proc/12769/fd/anon_inode:inotify1 /proc/12768/fd/anon_inode:inotify1 /proc/12767/fd/anon_inode:inotify1 /proc/12754/fd/anon_inode:inotifyOne can examine the pidps axps ax | grep 12871...And in the end I found out that spotify was the culprit. I killed the spotify processes with a simplekill 12871and the problem had gone away.  One can check if spotify is running withps ax | grep spotify.Published:June 13,2014in4e45660Tagged:SlackwarePreviousNext</description>
      <pubDate>Fri, 13 Jun 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>IDA Summer of Code 2014</title>
      <link>https://www.jonashietala.se/blog/2014/06/11/isoc</link>
      <description>IDA Summer of Code 2014Published:June 11,2014ince2b051Tagged:IDA Summer of CodeIDA Summer of CodeisLinköping University’sresponse toGoogle Summer of Code. Students can send in a project of their choice and if selected they get paid to work on it for 4 weeks during the summer. In return the university get to show off the students and their projects in marketing purposes.As I’m writing this, my application got accepted and I will work onrustsometime during July/August. rust is mozilla’s new systems programming language focusing on safety and concurrency. I’m quite excited as one of my goals this year was to contribute, and now I will get paid to!I am not completely sure exactly what I’m going to do, but things will get clearer when I actually start working on it. I will also make occassional blog posts of my thoughts and progress as I start working on it. As of now I’m working on my other summer job atConfigura, which is also quite amazing and I should post a bit about that as well.Published:June 11,2014ince2b051Tagged:IDA Summer of CodePreviousNext</description>
      <pubDate>Wed, 11 Jun 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Mining Incorporated (unfinished)</title>
      <link>https://www.jonashietala.se/blog/2014/04/28/mining-incorporated</link>
      <description>Mining Incorporated (unfinished)Published:April 28,2014Revised:January 19,  2019in44a47dbTagged:Games,Ludum DareDownloadLinux 64bitWindowsTimelapseClick to view on YouTubeI made a very serious attempt at making a grand game forLudum Dare 29. Unfortunately it was a far, far, too big of a game for me to be able to finish it in one weekend. But I had a great experience and was fun beating the procrastination devil for once.Anyways, this is the state of the game as it is now.Mining IncorporatedHow to playChoose a room, drag to build things. You must build where the worker starts. If you want more workers you need to build more beds. They can be placed anywhere. To gain money you must build or mine on an ore patch.Sourcehttp://github.com/treeman/ld29Published:April 28,2014Revised:January 19,  2019in44a47dbTagged:Games,Ludum DarePreviousNext</description>
      <pubDate>Mon, 28 Apr 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ores</title>
      <link>https://www.jonashietala.se/blog/2014/04/27/ores</link>
      <description>OresPublished:April 27,2014inb6f61cdTagged:Ludum DareNow we can build rooms, we can place objects and the worker will do things for us. Now I’ve added some ores which makes the game look a bit less boring. I realize I’ve spent all my time on these little things and I still don’t have a game! But it doesn’t matter, maybe I can finish the game on a later date.Oooh, is that diamond?Published:April 27,2014inb6f61cdTagged:Ludum DarePreviousNext</description>
      <pubDate>Sun, 27 Apr 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>We can build things!</title>
      <link>https://www.jonashietala.se/blog/2014/04/27/canbuild</link>
      <description>We can build things!Published:April 27,2014in3a653a5Tagged:Ludum DareFinally we have some sort of progress!We can now build rooms and place and remove objects!Yay!! But we still haven’t even begun with the game logic, resource management, the actual mining mechanic, multiple levels, actual tasks for our workers. But it’s something.Published:April 27,2014in3a653a5Tagged:Ludum DarePreviousNext</description>
      <pubDate>Sun, 27 Apr 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Hard Work</title>
      <link>https://www.jonashietala.se/blog/2014/04/26/hard-work</link>
      <description>Hard WorkPublished:April 26,2014in3a653a5Tagged:Ludum DareI’ve spent literally the whole day coding and it feels like I’ve only done a small parts of the actual game mechanics… I know this isn’t going to end well.I can allow myself a small pause I feel…Not sure where this is going to end, but I’m having a blast anyway!Published:April 26,2014in3a653a5Tagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 26 Apr 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>An Epic Start</title>
      <link>https://www.jonashietala.se/blog/2014/04/26/an-epic-start</link>
      <description>An Epic StartPublished:April 26,2014ina425527Tagged:Ludum DareOh what a mistake. I woke up at 05.00 when my girlfriend woke up, she’s working early today, and went to the bathroom. After I was done, still pretty tired, I made a big mistake. I checked the current theme for Ludum Dare 29:Beneath the Surfaceand guess what? Now I wasn’t tired anymore.So I got out of bed, at 5!, and wrote down some ideas. Now, almost 2 hours later, I’ve had a battle with my makefile and I’ve written a lazy resource management system and a simple state transition scheme. A bit annoying as my previous fast prototyping framework already had all those ready, but in the end I got a bunch of coding done and it’s not that big of a deal anyways.My idea for the theme is far too big of course. Hopefully I’ll have something to show off in the end. But now I need to eat some breakfast and maybe go sleep an hour or two…Published:April 26,2014ina425527Tagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 26 Apr 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A *</title>
      <link>https://www.jonashietala.se/blog/2014/04/26/astar</link>
      <description>A *Published:April 26,2014ina425527Tagged:Ludum DareAfter a few hours of coding I’ve made a little, little, bit of progress but it took a lot longer than I would have liked.I’ve basically managed to make a world and some tiles in the world and we have a worker who can move around on the tiles and he can’t move on all tiles.Look! He can pathfind! But here the real coding begins…Published:April 26,2014ina425527Tagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 26 Apr 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ludum Dare 29 Entry</title>
      <link>https://www.jonashietala.se/blog/2014/04/25/ludum_dare_29_entry</link>
      <description>Ludum Dare 29 EntryPublished:April 25,2014Revised:April 25,  2014inb32677eTagged:Ludum DareAfter months of procrastination it is time for me to enterLudum Dareagain!I am totally unprepared, but I did setup a setup which actually compiles. I never got audio to run but hopefully I can manage something.Repository:https://github.com/treeman/LD29. Going for C++ this time.Graphics library:SFML.Sound effects:sfxrGraphics:mtpaintTimelapse hack:https://github.com/treeman/TimelapseI halted all school work and the whole weekend is booked, except for Taekwon-do on Sunday. Hopefully I’ll get something done!Published:April 25,2014Revised:April 25,  2014inb32677eTagged:Ludum DarePreviousNext</description>
      <pubDate>Fri, 25 Apr 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>8-puzzle in rust</title>
      <link>https://www.jonashietala.se/blog/2014/01/21/8-puzzle_in_rust</link>
      <description>8-puzzle in rustPublished:January 21,2014Revised:January 21,  2019ina029167Tagged:RustI thinkrustis one of the most interesting upcoming programming languages out there. So I wrote a solution to the 8-puzzle (see the15-puzzle) using A*. It also has a breadth first search for solutions on a specific distance away from the goal.The solution is not by any means a great one and there are parts I’m a bit annoyed with, but that’s mostly because of my inexperience with rust.Rust was surprisingly easy to use and I like the strong typing and the pattern matching. One feature I found very useful was to doprintln!("{:?}", x);and be able to print any variable, composite or not.I’m not friends with the different storage containers and especially the moving of values. Often I called a function with a value, but then I couldn’t reuse the value in another, so I ended up usingclone()a bunch. I’m probably abusing it and there’s bound to be a better way to do things.I got a little stumped on the standard library and spent some time perusing the documentation. It was very light on examples, which I find is the by far most useful thing to have in documentation, and I couldn’t even find some of the things. But it all worked out with a bit of determination.I should mention that I’m using rust master, not a stable release, and I’m well aware of rust being in development at the moment. Still things worked out fine and I quite enjoyed dabbling with rust. I’ll write some more in it I think.This is the code, working onrustc 0.10-pre (5512fb4 2014-01-19 05:56:35 -0800):/*** A solution to the 8-tiles puzzle, implemented in rust* as a learning experience.*/externmodextra;usestd::num::abs;usestd::hashmap::HashMap;usestd::hashmap::HashSet;useextra::priority_queue::PriorityQueue;useextra::container::Deque;useextra::ringbuf::RingBuf;//Use manhattan distance as heuristic for A*.//Sum of distance in x and distance in y for all tiles.fnmanhattan(start:&amp;[int],dest:&amp;[int])-&gt;uint{letmutdist:uint=0;foriinrange(0,start.len()){forjinrange(0,dest.len()){ifstart[i]==dest[j]{letx1=iasint%3;lety1=iasint/3;letx2=jasint%3;lety2=jasint/3;dist+=abs(x2-x1)asuint;dist+=abs(y2-y1)asuint;}}}//Avoid double counting so we don't overestimate.dist/2}fnto_hash(state:&amp;[int])-&gt;~str{letmuthash=~"";forxinstate.iter(){hash.push_str(x.to_str());}hash}#[allow(dead_code)]fnprint_state(state:&amp;[int]){foriinrange(0,3){forjinrange(0,3){print!("{}",state[3*i+j]);}println!("");}}#[allow(dead_code)]fnprint(state:&amp;[int],goal:&amp;[int]){foriinrange(0,3){forjinrange(0,3){print!("{}",state[3*i+j]);}ifi==1{print!("-&gt;");}else{print!("");}forjinrange(0,3){print!("{}",goal[3*i+j]);}println!("");}}//A* uses g: cost so far, h: manhattan distance to goal, f: g + hstructState{state:~[int],g:uint,h:uint,zero:uint,}implState{fnnew(state:~[int],goal:~[int],cost:uint,zero:uint)-&gt;State{leth=manhattan(state,goal);State{state:state,g:cost,h:h,zero:zero}}//Ignore h and f.fnnew_simple(state:~[int],cost:uint,zero:uint)-&gt;State{State{state:state,g:cost,h:0u,zero:zero}}fnf(&amp;amp;self)-&gt;uint{self.g+self.h}#[allow(dead_code)]fnprint(&amp;amp;self){println!("g:{}h:{}f:{}",self.g,self.h,self.f());print_state(self.state);}}implOrdforState{fnlt(&amp;amp;self,s2:&amp;amp;State)-&gt;bool{self.f()&gt;s2.f()}}staticdx:[uint,..4]=[0,1,0,-1];staticdy:[uint,..4]=[1,0,-1,0];//Calculate the minimum distance from a state to goal with A*fndist(state:~[int],goal:~[int])-&gt;uint{letmutdist=HashMap::new();letmutq=PriorityQueue::new();dist.insert(to_hash(state),0u);letzero=matchstate.position_elem(&amp;0){Some(x)=&gt;x,None=&gt;fail!("0 missing in state!"),};q.push(State::new(state,goal.clone(),0u,zero));loop{//Ugly, but don't know how...let(state,cost,pos)=matchq.maybe_top(){Some(e)=&gt;{/*e.print();*/(e.state.clone(),e.g,e.zero)},None=&gt;break,};q.pop();ifstate==goal{returncost;}letx=pos%3;lety=pos/3;fordinrange(0,4){letnx=x+dx[d];letny=y+dy[d];ifnx&lt;0||nx&gt;=3||ny&lt;0||ny&gt;=3{continue;}letnpos=nx+3*ny;letmutnext_state=state.clone();next_state[pos]=next_state[npos];next_state[npos]=0;letnext_hash=to_hash(next_state);letnext_cost=cost+1;lets=State::new(next_state,goal.clone(),next_cost,npos);ifs.state==goal{returnnext_cost;}if!dist.contains_key(&amp;amp;next_hash)||s.f()&lt;*dist.get(&amp;amp;next_hash){dist.insert(next_hash,next_cost);q.push(s);}}}0u//Should never happen!}//Calculate the number of solutions with optimal solution length = target_dist.//Use breadth first.fnnum_dist_from(goal:~[int],target_dist:uint)-&gt;uint{letmutcount=0u;letmutseen=HashSet::new();letmutq=RingBuf::new();seen.insert(to_hash(goal));letzero=matchgoal.position_elem(&amp;0){Some(x)=&gt;x,None=&gt;fail!("0 missing in state!"),};q.push_back(State::new_simple(goal.clone(),0u,zero));loop{//Ugly, but don't know how...let(state,dist,pos)=matchq.front(){Some(e)=&gt;{/*e.print();*/(e.state.clone(),e.g,e.zero)},None=&gt;break,};q.pop_front();ifdist&gt;target_dist{break;}elseifdist==target_dist{count+=1;}letx=pos%3;lety=pos/3;fordinrange(0,4){letnx=x+dx[d];letny=y+dy[d];ifnx&lt;0||nx&gt;=3||ny&lt;0||ny&gt;=3{continue;}letnpos=nx+3*ny;letmutnext_state=state.clone();next_state[pos]=next_state[npos];next_state[npos]=0;letnext_hash=to_hash(next_state);letnext_dist=dist+1;lets=State::new_simple(next_state,next_dist,npos);if!seen.contains(&amp;amp;next_hash){seen.insert(next_hash);q.push_back(s);}}}count}fnmain(){letstate=~[5,2,6,1,7,8,0,3,4];letgoal=~[0,1,2,3,4,5,6,7,8];print(state,goal);letsol=dist(state,goal.clone());println!("optimal solution found in{}steps",sol);lettarget_dist=sol;println!("number of solutions on distance{}:{}",target_dist,num_dist_from(goal.clone(),target_dist));}Published:January 21,2014Revised:January 21,  2019ina029167Tagged:RustPreviousNext</description>
      <pubDate>Tue, 21 Jan 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2013 in Review</title>
      <link>https://www.jonashietala.se/blog/2014/01/04/2013_in_review</link>
      <description>2013 in ReviewPublished:January  4,2014Revised:June  6,  2014in16c5838Tagged:Yearly ReviewThe year is almost over and I think I accomplished a lot this year. You can read my reviews of2010,2011and2012.2013 Geek AchievementsSolved213 UVa problems.Got 43rd atNWERC 2013.Placed high inIMPA, with one turn won.Completed the online courseProgramming Languagesin Coursera.Wrote some ML, Racket and Ruby.Won theTDDD56Parallel Sorting Contest.Got my first summer job as a programmer at Configura. Great fun, great place to work.Wrote a lot of C and C++.Switched mysitegenerator from Jekyll toHakylland wrote a little Haskell.For the first time achieved full marks in an exam - TDDD20 Construction and Analysis of Algorithms.Completed an extra math course: TATA64 Graph Theory. Fun course.Finished my 3 first years in University, now I can choose my own courses!Completed the compiler course in school and learned a bunch.Unlocked all ships inFTLand beat it a bunch of times. Fantastic game!2013 Non-Geek AchievementsHad a good year with Veronica.Visited Karlskrona with Veronica.Achieved 4-kup in Taekwon-do.Been a kids trainer in Taekwon-do. Very rewarding.Read 30 books.DiscoveredAgricola, a great German Style board game.DiscoveredTerra Mystica, another great board game.Did a bit of yoga.2013 FailuresDid not complete (or start) a hardware project.Did not achieve 3-kup in Taekwon-do.Did not participate in Ludum Dare.Missed two exams. I didn’t fail them, but I missed the dates…Plans for 2014Take care of Veronica.Achieve 2-kup in Taekwon-do.Achieve a full split.Do 300 morning stretches.Visit the gym 100 times.Write a game.Participate inLudum Dare.Code some rust.Read 31 books.Write 52 blog posts.Solve 100 UVa problems.Take more fun courses.Construct a custom keyboard.Successfully read 1 Korean speech bubble in Tower of God, without reference.Complete all exams.Prettify the site.Published:January  4,2014Revised:June  6,  2014in16c5838Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Sat, 04 Jan 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2013 Read Books</title>
      <link>https://www.jonashietala.se/blog/2014/01/03/2013_read_books</link>
      <description>2013 Read BooksPublished:January  3,2014in66be9c3Tagged:Read BooksI actually read more books in 2013 than in2012.In a somewhat unorganized list:FictionLivet Deluxe- Jens LapidiusEscape from camp 14- Blaine HardenWonderful. A great book.Edge- Jeffery DeaverDollar- Lee ChildGisslan- Lee ChildBränd- Lee ChildBesökaren- Lee ChildHetta- Lee ChildVärt att dö för- Lee ChildLivvakt- Lee ChildNon-fictionGraph Theory- Reinhard DiestelCourse book. Good but difficult.Graph Theory With Applications- Bondy and MurtyCourse book. Good explanations, but quite old (30 years).Modern PhysicsCourse book. Only read parts of it. Huge and wordy.Signals, Infomation and Communications- Erik G. LarssonCourse book.Reglerteknik. Grundläggande teori- Torkel Glad &amp; Lennart LjungCourse book.Världens 99 bästa investerareTotal Recall- Arnold SchwarzeniggerStora stretchbokenMatrevolutionen- Andreas EenfeldtKundaliniyogaStretching Scientifically- Thomas KurzBy far the best book on stretching. (which I’ve read)Statistics course bookDon’t have the name atm.Automata and Computability- KozenCourse book.Artificial Intelligence- Stuart Russell, Peter NorvigCourse book. Selected chapters. Huge.Competitive Programming 3Introduction to AlgorithmsCourse book. Only a few selected sections.Compilers: Principles, techniques and tools- Aho, Lam, Sethi, UllmanCourse book. Read most of it without going in deep.Numeriska beräkningar- Eldén, Wittmeyer-KochCourse book.Love and Math- FrenkelChildren &amp; Sports TrainingPublished:January  3,2014in66be9c3Tagged:Read BooksPreviousNext</description>
      <pubDate>Fri, 03 Jan 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Minecraft Server Hosting</title>
      <link>https://www.jonashietala.se/blog/2013/04/22/minecraft_server</link>
      <description>Minecraft Server HostingPublished:April 22,2013Revised:July 21,  2013inf81972cTagged:MinecraftI play the phenomena that is Minecraft on and off. Sometimes the laid back building or the exploring is just what I need. Sometimes I can challange myself to build cool complex stuff and I’m even an avid follower ofDoc’MandEthoand the other mindcrackers over at the youtube. Now brother Filip is an even more Minecraft follower than me and that’s the perfect setup for having my own minecraft server!For the last couple of months I’ve had a server running ondotcloud’s sandboxed servers - it was literary free! A week or so ago they announced that they would turn off their sandboxed webapps and I had to turn my focus to something else.Enter dedicated minecraft hosting! The very first host I laid my eyes on (I didn’t even search for anything else) wasservercraft. At $7.99/month I thought they where pretty cheap.But they where pretty horrible. “Instant Minecraft Server setup in under 15 minutes!”. It took me about that long to get my first payment information and when I woke up that morning I could try out my new dedicated server.Or so I thought. I could see the server flickering between online/offline through Minecraft and I couldn’t connect reliably. But at least I could connect right? I’m sure it’ll work! Let’s upload our map through ftp. With their upload speed it took me about 30 minutes to get it done, and I have 100 Mbit upload. But now that’s done, who cares about that right? Let’s see if my brother can log in.Nope…Just for fun I browsed theminecraftforumand theirdedicated server sectionif I could find something better. Preferrably something relatively cheap for about 5 players and hopefully with the ability to runComputercraft, a mod which allows you to program things. One of the most responded to threads was aboutMCProHosting. They offered a simple 5 player plan for $2.50/month and they seemed very active in the thread responding to queries and stuff. I decided to ask them if it would be possible to run a modded server and if they could help me set it up (I had no idea how to do it).A while later I’m running a perfectly smooth server with them, with up to 23 players and a total controll over the server’s mods and I’m practically paying the same as before ($9.99)! I had contact with two different people who helped answer my questions and to help me with my mod installing, they seemed very cunning and very service minded.MCProHostinghas been fantastic so far.…And about a day later servercraft responded to my unsubscribe mail (which I sent before looking elsewhere).Published:April 22,2013Revised:July 21,  2013inf81972cTagged:MinecraftPreviousNext</description>
      <pubDate>Mon, 22 Apr 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>FTL got a new victim</title>
      <link>https://www.jonashietala.se/blog/2013/03/06/ftl_got_a_new_victim</link>
      <description>FTL got a new victimPublished:March  6,2013Revised:June 16,  2023in76b4571Tagged:FTL,GamingFaster than Lightthe great gameI lost a ton of time on, has found a new victim. It’s not someone you’d expect, it’s even someone who said: “What a bad game” when she saw me playing it. But nevertheless this Saturday she played it more than 2.5 hours!I told Veronica I wanted her try out FTL and minecraft, but we never got time for minecraft… It was so funny seeing her, on the edge of the seat, mumbling “die, die, die” to herself when she’s in battle and jumping up “hooray!” when she destroyed the enemy. Sadly she didn’t beat the boss, but boy did she come close! FTL must be a hidden skill for her.I’m looking forward to introduce her to minecraft. I just hope she won’t get too addicted and turn into a clone of myself.Published:March  6,2013Revised:June 16,  2023in76b4571Tagged:FTL,GamingPreviousNext</description>
      <pubDate>Wed, 06 Mar 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Long Term Goals (part 2)</title>
      <link>https://www.jonashietala.se/blog/2013/02/16/long_term_goals_part_2</link>
      <description>Long Term Goals (part 2)Published:February 16,2013in5ce0df3Tagged:Life HackingA few minutes after I wrote about my long term goals, in the shower, I realize I forgot a few major goals I have:Write my own Programming LanguageWhy? Because it sounds fun and epic as hell.Write a BookSo I like books and I like to collect them and I have my whole bookcase filled with programming books, manga and fiction. Something really cool would be to have a book withmy nameon it! So I wanna make that a reality.I think I wanna write a programming book, what else could I write about? Fiction? Nah, I don’t have enough imagination and my writing isn’t good enough for that. A self-biography? Nah, my life isn’t that interesting I’d say. Programming is fun and it’s something I feel relative confidence in, so I suppose that’s set then.Published:February 16,2013in5ce0df3Tagged:Life HackingPreviousNext</description>
      <pubDate>Sat, 16 Feb 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Long Term Goals</title>
      <link>https://www.jonashietala.se/blog/2013/02/16/long_term_goals</link>
      <description>Long Term GoalsPublished:February 16,2013in5ce0df3Tagged:Life HackingI have a lot of things I want to do. Right now I want to go to the kids training tomorrow and also to our training time. I haven’t trained a lot lately so it feels good to do something again and training the kids is very rewarding. On Monday I have the next graph theory lecture and I want to do all our lesson assignments until then. As I’ve beatenFTLon easy I really want to do it on normal as well. And I’m looking forward going to the restaurant with Veronica and a bunch of other stuff.But sometimes it’s good to take a step back and take a look into the future a bit. What do I want to accomplish? What things do I want to do? What are my long term goals? This is an attempt to list some of them.Black belt in Taekwon-doI’ve been training for 2,5 years now and lately I’ve started to assist, and to hold, in the kids training and it’s great fun. Now this 3rd year in University the courses have become harder and I’ve also become more serious so the training has suffered a bit. But my long term goal with training has always been to have fun, maintain some shape and to get a black belt.Contribute to a popular open-source projectI associate being a successful programmer and having contributed to, or started, a popular open-source project. I want to become a successful programmer, but that’s not really a concrete goal, so I want to get myself out there and contribute.Own a Snooker tableThis is a somewhat random goal to be sure. I love to watch snooker and I always try to catch the World Championship - but I have never played it! I’ve played some eight ball and I loved it, but no snooker, and I’m a bit sad that I haven’t played more. Somewhere there this goal was born.I want to have kidsI love kids and sometime I want to have them too. More than one preferably.Published:February 16,2013in5ce0df3Tagged:Life HackingPreviousNext</description>
      <pubDate>Sat, 16 Feb 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Faster than Light</title>
      <link>https://www.jonashietala.se/blog/2013/02/12/faster_than_light</link>
      <description>Faster than LightPublished:February 12,2013Revised:June 16,  2023in76b4571Tagged:FTL,GamingSo I returned toFaster than Lightagain this weekend, this time for real. I bought it when it came out and I played it only in passing, but this weekend I played it aton.Aaahh a new beginning in FTL. Will it be death once moreI generally don’t like games where you have to restart after you die, I have a tendency to get really upset when things go badly. Yes I do rage quit when I play cs. But I really likedFTLfor some reason. It is frustrating sure, especially when you’re facing the final boss once more, and onceagainyou fail to beat him. I think I played 20 rounds from Friday to Sunday and yet I couldn’t beat him.Until now.I beat him usingThe Torus, with two scrap recovery augments and a drone recovery arm early on. Needless to say I went full blown drones and I had some nice shielding and cloaking going on, but it was still a hard fight. The feeling after was so satisfying! I practically jumped out of my chair in pure happiness and I messaged my friends and Veronica “I beat him! I beat him!”.Since then (since yesterday) I actually beat him again, but this time without the big yahoo reaction I was hoping for. But… I’m still plaing on easy mode… Do I dare to try normal next time?Published:February 12,2013Revised:June 16,  2023in76b4571Tagged:FTL,GamingPreviousNext</description>
      <pubDate>Tue, 12 Feb 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>I, Robot</title>
      <link>https://www.jonashietala.se/blog/2013/01/20/i_robot</link>
      <description>I, RobotPublished:January 20,2013Revised:January 23,  2019in6bf3248Tagged:SchoolHere are the results of the big robot construction course we had before christmas! The whole process went smooth and our group was amazing. The design and building of the robot went well even though in hindsight I would’ve changed a lot of stuff. The ending competition didn’t go quite as we had hoped, but we never did place much effort in it anyhow. In summary I’m very pleased with the result.CompetitionWe had a competition with the other robots at the end. It didn’t matter how it went really, but as always it’s fun to do well. I couldn’t embed the youtube links, but here are our epic matches!Game one. Went well, getting our hopes up!Game two. Everything sucks. We accidentally touched the recalibrate button so the robot did not see the lines…Game three. Something is wrong with that curve I tell you! At least it felt better than loosing like the last one.Game four (part 1)Game four (part 2). Retribution!Exhibition. Just a ploy game, with no rules. But they cheated anyway!A bit upset about the second game… If that didn’t happen I’m sure we could’ve won the whole thing, maybe. But no matter!Do noteverplace the blue start button right next to the gray nuke button! Or was the nuke button blue?GalleryHere’s a bunch of nice photos of our robot.Published:January 20,2013Revised:January 23,  2019in6bf3248Tagged:SchoolPreviousNext</description>
      <pubDate>Sun, 20 Jan 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Fixing Problems</title>
      <link>https://www.jonashietala.se/blog/2013/01/13/fixing_problems</link>
      <description>Fixing ProblemsPublished:January 13,2013in5ce0df3Tagged:Slackware,Xmonad,MinecraftToday I have fixed two large annoyances I’ve had!I fixedthe blue people on youtubebugI found a nicethreadwith a great answer. I solved it by forcefully patchinglibflashplayer.soperl -pi.bak -e 's/libvdpau/lixvdpau/g' libflashplayer.soWorked perfectly!I fixed the minecraft stuck in pause bugThis affects you if you’re using xmonad (or similar?) and java 1.7. The solution was simply to downgrade to java 1.6.Another problem I’ve had earlier was that minecraft tries to full screen over both of my screens instead of just one. The solution is to add this to yourxmonad.hs.main=xmonad defaultConfig {...,startupHook=setWMName"LG3D"...}Fixed my Todo ListsOh and I also added a lot of levels to my todo list,as suggested by this post.I have now the levelsProgrammingWritingReadingWatchingVerroMiscAll so I can always have something to do pending on my different energy levels etc.Published:January 13,2013in5ce0df3Tagged:Slackware,Xmonad,MinecraftPreviousNext</description>
      <pubDate>Sun, 13 Jan 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Vacation Filled with Obsession</title>
      <link>https://www.jonashietala.se/blog/2013/01/07/a_vacation_filled_with_obsession</link>
      <description>A Vacation Filled with ObsessionPublished:January  7,2013Revised:July 23,  2013in7a1ecc1Tagged:GamingA nice thing about school are the nice long vacations. Directly after my last exam we went north to our dear home village Övertorneå and spent two weeks celebrating Christmas and New Years Eve. What did we do? I practiced some obsessive behavior withPower GridandMinecraft(and finishing up with someWorld of Tanks).It all began withan articleand the discussion which followed onhacker news. Basically they discussed the pros and cons of different games and specifically noting the advantages ofgerman style board gamesover classical board games likeMonopoly.A summary fromWikipedia:Themed gamesGames made for everyoneNo player eliminationGame ‘mechanics’A note fromsimonwabout Monopoly which I can relate to.Couldn’t agree more. German-style games make Monopoly etc look positively archaic. Two great starter games are Settlers of Catan and Carcassonne. I’m a big fan of Ticket to Ride as well.There are a couple of things that make these games so good. Firstly, they’re extremely well balanced - unlike Monopoly, it’s rare for one player to pull ahead to the point that it’s impossible for anyone else to catch up with them.Secondly, they tend to come to an inevitable conclusion - a game of Settlers will virtually never last more than an hour and a half due to resources / space on the board depleting over time. I’ve had games of Monopoly last 6 hours or more, by which time everyone is fed up and wishes they’d never started playing.After some debating I figured I’d orderPower Gridas it got really good reviews, both from the discussion thread and various reviews.And boy was it worth a buy!The first day I played maybe two games with my little brother, like me he’s very into games and we positively loved it. When my uncle (he loves board games as well) and cousin arrived we played a bit, and then some more. In total we played at least 20 times in 12 days, with a maximum of 4 times one day. The game takes 1,5 - 2 hours and is very mentally taxing so I consider that alot.Power Grid, an great strategy gameI liked it so much that I ordered three of the expansions for it just after I left.Of course we didn’tonlyplayPower Gridday out and day in. We also started a new world in minecraft which we played a bit on… Sometimes things are just so good you can’t get enough of it you know?Published:January  7,2013Revised:July 23,  2013in7a1ecc1Tagged:GamingPreviousNext</description>
      <pubDate>Mon, 07 Jan 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2012 in Review</title>
      <link>https://www.jonashietala.se/blog/2012/12/31/2012_in_review</link>
      <description>2012 in ReviewPublished:December 31,2012Revised:December 30,  2013ina8bbb9bTagged:Yearly ReviewLike thelasttwoyears I’m summarizing the year. At the end of the year like this it always feel like I didn’t accomplish much, but after the yearly summary it always feels better.2012 Geek AchievementsDesigned a processorwhich fulfills theCore Wars 88 standard. Includes a redcode assembler.Went throughpintosin school and learned a lot about operating systems.Began a new website.Wrote some Ruby in conjunction withJekyll.Learned someRustand wrote asmall irc botwith it.Took an advanced mathematics course inLinear Algebra, it was fun!I was a mathematics mentor to the first years inDiscrete Math.Won the “best CV” award from Ericsson during Linkdagarna.Here’s the CV (in Swedish)andhere’s the latex filethat produced it.Got top 3 inIMPA, I did participate three turns out of five.Participated in prog-SM and won a t-shirt! (Or three…)Solved a lot of problems onUVa.Migrated all my private projects fromgithubtobitbucket.Wrote a lot of C.Wrote some C++.Wrote some Perl.Made a robot.Read one programming book -The C Programming Language.2012 Non-Geek AchievementsMe and Veronica had a good year.Achieved 5-kup in Taekwon-do.Read 20 books.Read a lot of manga.Battle Royalewas the highlight of the year I think.Read some manwha. Possibly better than manga??Tower of God(my favourite manga/manwha atm)MagicianThe Breaker New WavesNoblesseDiscoveredPower Grid, aGerman Style Boardgame.2012 FailuresDid not write enough code.Did not participate inLudum Dare.Did not write a new game.I have a mechanic course behind me…Plans for 2013Take care of Veronica.Complete a hardware projectTry out some yoga.Learn about compilers.Take some fun courses.Achieve kup 3 in Taekwon-do.Develop this site a bit.Bigger and better blog posts.Work hard(er?) in school.Code more.Read more books.Fix the Failures of 2012.Published:December 31,2012Revised:December 30,  2013ina8bbb9bTagged:Yearly ReviewPreviousNext</description>
      <pubDate>Mon, 31 Dec 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2012 Read Books</title>
      <link>https://www.jonashietala.se/blog/2012/12/31/2012_read_books</link>
      <description>2012 Read BooksPublished:December 31,2012Revised:July 21,  2013inbcd6a62Tagged:Read BooksI read a post, sadly lost the link, where the author had recorded all books she had read during the year and I thought it’d be pretty fun to do. So here goes, in a mostly ordered list.The Art of Learning-Josh WaitzkinVärldens WhiskeyMore of a reference book.Linear Algebra Done RightCourse book.Linear Algebra Done WrongCourse book.Effective Prototyping for Software MakersCourse book, selected chapters.Över Näktergalens GolvPå en kudde av gräsOptimeringslära-Kaj HolmbergCourse book, great both as a learning tool and reference book.Dune-Frank HerbertA truly great book, the sci-fi world is amazing.Under lysande måneFit Forever-Dolph LundgrenThe Book of CainDune Messiah-Frank HerbertNot quite like the first book, but still brilliant.LärjungenThe C programming Language-Kernighan and RitchieDid not do all exercises, really good book.Software EngineeringCourse book.Operating System ConceptsCourse book. Pretty good, although a bit wordy at times.Linear Systems and Signals-B. P. LathiCourse book. Quite good.XO-Jeffery DeaverThe Definite Book of Body Language-Allan &amp; Barbara PeaseVery informative and also pretty funny.All in all, I did not read that many books this year. I did start on a few which I never finished for various reasons.Published:December 31,2012Revised:July 21,  2013inbcd6a62Tagged:Read BooksPreviousNext</description>
      <pubDate>Mon, 31 Dec 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Understanding the Computer</title>
      <link>https://www.jonashietala.se/blog/2012/12/15/understanding_the_computer_bottom_up</link>
      <description>Understanding the ComputerPublished:December 15,2012Revised:July 23,  2013inc0a62a3Tagged:Computer,ProgrammingWhen I discovered programming it felt like a whole new world opened up for me with endless possibilities. It granted unlimited power and I could create virtually anything and it explained so much to me - how did a program work? How could you make a game or a website? But there was a big question without a good answer lurking in the background. I understood how you made the computer to do something and I understood the concept of electronics on a very crude level, but how did you ever go from a current to a full fledged game?After 2,5 years in University I finally feel I can understanda bitof that. This is a simplified view of my journey so far.Basic ElectronicsWe had a basic electronics course, although I must admit I never really got a good understanding of it and I haven’t used it enough to be comfortable with it. But I have at least a basic idea of how basic digital components can be realized.Basic digital componentsWe only had one introductory course here as well. I didn’t like it at all at the time, I found it a bit dumb. Why care about the theory behind digital logic so much? Who cares?Well, it’s impossible to build something bigger without the building blocks and it’s hard to build a computer without basic combinatorical networks. Still didn’t like it though.Larger digital componentsThis was the first hardware based course (we had several) I liked. Our mission was to build a digital clock or something. Turns out it’s really fun to build things! We extended the clock to be a counter, up or down, and we built other simple things. Life was good and the world of computers started unlocking a little, from the hardware point of view this time.A processorI’m not sure how it happened but the next step after playing with the smaller digital components was to play with a real CPU - motorola’s 68k family. This was also my first insight into assembly, it’s something I always wanted to know. Turns out it wasn’t all that different from regular programming, except that you’re dealing with much more detail. We used the processor to communicate with our familiar digital hardware, we made a 1D ping-pong with diodes and a simple “sinking ship” game and a lot of small assignments. We ported (parts of) Forth to it!After that we had a construction course, we could make a digitalthing! Maybe a processor, hurr?So we did. We made a microprogrammed processor, simulated on an FPGA, which ran redcode. I even wrote an assembler for it!CompilerI’m waiting eagerly for our compiler course to start in ~10 months.Operating systemWe had a super fun course about operating systems and we did some work inpintos, an OS where you’re supposed to improve and implement parts of it. It was perhaps the best course I’ve had yet and I learnt aton. Threading, scheduling, system calls, security, file systems, launching programs, etc…After pintos it feels like I understand what a OS does and how it communicates with hardware and programs.A programAh, we’ve come a whole circle. I’m still writing programs, that’s practically all I’m doing, but now it feels like I have a better grasp of what it takes to run it.There are still things I’d like to do more of. More games, more assembly code, more hardware controlling stuff, using mynewly gottenraspberry piperhaps?, and I definately want to make my own programming language sometime.Published:December 15,2012Revised:July 23,  2013inc0a62a3Tagged:Computer,ProgrammingPreviousNext</description>
      <pubDate>Sat, 15 Dec 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Early Christmas Present</title>
      <link>https://www.jonashietala.se/blog/2012/12/14/early_christmas_present</link>
      <description>Early Christmas PresentPublished:December 14,2012Revised:November 27,  2014ind7f42b7Tagged:New StuffSchool is almost over and it’s almost time to travel back up to Övertorneå. This year me and Veronica opened our Christmas presents a bit early - we’re impatient like that.I got one of the best presents yet I think! ARaspberry Pi!Just look at this bad boy!She got some crochet (virkning?) stuff from me, but she seemed content with that little. Now what shall I do with mine? I’m thinking of fetching a small screen for it and… and… Do something fun with it?Published:December 14,2012Revised:November 27,  2014ind7f42b7Tagged:New StuffPreviousNext</description>
      <pubDate>Fri, 14 Dec 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Monaco What's Yours is Mine</title>
      <link>https://www.jonashietala.se/blog/2012/12/12/monaco_whats_yours_is_mine</link>
      <description>Monaco What's Yours is MinePublished:December 12,2012Revised:July 18,  2016inb259e78Tagged:GamingI’ve been waiting for soon to be three years forMonaco What’s Yours is Mine, and today I was granted an early christmas present - I was given a beta key! w00p!!I was planning on studying and sending some emails to some companies… But who knows what I’ll end up doing?Tomorrow is preorder release, yes I’m going to buy a 4-pack directly, and they will also stream etc. But for new enjoy the 10 month old gameplay video!Click to view on YouTubePublished:December 12,2012Revised:July 18,  2016inb259e78Tagged:GamingPreviousNext</description>
      <pubDate>Wed, 12 Dec 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Kup</title>
      <link>https://www.jonashietala.se/blog/2012/12/02/5_kup</link>
      <description>5 KupPublished:December  2,2012Revised:July 21,  2013inf81972cTagged:Taekwon-doAfter a season with very bad attendence, I blame school and lack of motivation, I still went to grading. I slept well but I was super stressed all weekend so I had to constantly run to the bathroom and I couldn’t eat lunch or breakfast properly, and I don’t usually get nervous…Anyways the grading went well, the kids where absolutely great! They trained 6+ hours on Saturday and 4-5 hours on Sunday and they never complained or made any trouble whatsoever. I’m so proud!My grading went well, I was worried about some jumping kicks… But I didn’t need to do them! The sparring went okay, but nothing really admirable, I guess I need to show up to more trainings. The breaking didn’t pose any problem and the patterns went well, although I got super tired by the end.At the end I succeeded in leveling up, next one is a blue belt! I really, really need to work on my kicks though.Published:December  2,2012Revised:July 21,  2013inf81972cTagged:Taekwon-doPreviousNext</description>
      <pubDate>Sun, 02 Dec 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Dbot</title>
      <link>https://www.jonashietala.se/blog/2012/11/13/dbot</link>
      <description>DbotPublished:November 13,2012Revised:July 21,  2013inbcd6a62Tagged:Programming,PerlSo I made a small irc bot in 294 characters in code-golfing language #1: Perl.Usageperl DbotCommands.name- Echo the bots name.hello- Output “hello world!”.src- Dump the source codeCodeuseIO::Socket;$s=IO::Socket::INET-&gt;new("158.38.8.251:6667");sub o{print$s"$_[0]\n"}o("NICK$0");o("USER b * * :b");while(&lt;$s&gt;){o("PONG$1")if/^PING(.*)$/;o("JOIN #$0")if/004/;if(($p,$h)=/(P.+)\.(.*)./){o("$p$hworld!")if$h=~"h";o($p.$0)if$h=~"n";if($h=~"s"){openF,$0;o($p.do{local$/=})}}}Well uh let’s try that again, without minimize shall we?useIO::Socket;#Connect to one server of irc.quakenet.org$s= IO::Socket::INET-&gt;new("158.38.8.251:6667");#o("txt") writes "txt\n" to the serversubo{print$s"$_[0]\n"}#Register our nickname, same as file nameo("NICK$0");#Register username, necessary stuff :&lt;$s&gt;) {#Play a bit of ping-pongo("PONG$1")if/^PING(.*)$/;#Join when ping-pong has completedo("JOIN #$0")if/004/;#Parse a message our channel with message "."#so example:#: PRIVMSG # :.#(P.+) Match 'PRIVMSG # :'#\. Cmd prefix#(.*) Cmd#. Trailing \rif(($p,$h) =/(P.+)\.(.*)./) {#.hello Echo hello world! Unless an abuser appears!o("$p$hworld!")if$h=~"h";#.name Echo name of boto($p.$0)if$h=~"n";#.src Output whole source codeif($h=~"s") {#Open running script file handleropenF,$0;#Echo contents of running script#file slurpingo($p.do{local$/=  })}}}All hacky, but I had some fun with it.Published:November 13,2012Revised:July 21,  2013inbcd6a62Tagged:Programming,PerlPreviousNext</description>
      <pubDate>Tue, 13 Nov 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Good and Bad Programmers</title>
      <link>https://www.jonashietala.se/blog/2012/11/08/good_and_bad_programmers</link>
      <description>Good and Bad ProgrammersPublished:November  8,2012Revised:November 12,  2024in9a13084Tagged:ProgrammingEvery now and day blog posts about what it takes to be a good programmer or how you figure out if someone is a bad programmer arrives. There’s always talk about how you find the good programmers in interviews and the topic is always hot in schools and universities.Today I read the best comment so far about the topic byHacker Newsregular edw519:My default response to any “good programmer, bad programmer” post:A smart accountant once told me that the answer to “How much money did you make?” is always, “Who wants to know?” If it’s an investor, the answer is “A lot.” If it’s a customer, the answer is “A little.” If it’s the IRS, the answer is “None.”Same thing here. The answer to “Who is a good programmer?” is always, “Who wants to know?”To a project manager, the programmer who hits every deadline (regardless of quality) is a good programmer.To a customer, the programmer who solves their problem quickest is a good programmer.To a business owner, the programmer who makes them the most money is a good programmer.To a PHB, the programmer who makes them look the best is a good programmer.To a journalist, the programmer who tells the best stories is a good programmer.To a junior programmer, the best mentor is the good programmer.To another programmer, the programmer they are most likely to want to go into battle with is a good programmer.To a blogger, the programmer who best fits the profile of the point he is trying to make is a good programmer.Published:November  8,2012Revised:November 12,  2024in9a13084Tagged:ProgrammingPreviousNext</description>
      <pubDate>Thu, 08 Nov 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Laying off Pintos</title>
      <link>https://www.jonashietala.se/blog/2012/10/16/laying_off_pintos</link>
      <description>Laying off PintosPublished:October 16,2012in5ce0df3Tagged:School,ProgrammingExam period is here which means all courses should be wrapping up and a week or so ago we finished upour lab seriesaboutpintos. The labs were among the best I’ve had yet and I learned a ton. We didn’t follow the official instructions but we had our own assigmnets. Basically:Implement some basic system calls.Reimplementtimer_sleepto not use busy waiting.Implement synchronization between processes, program arguments and securing the system calls.
Yes quite a bit bigger than the rest.Synchronize the file system.All in all pretty darn fun. I was considering sharing the code publicly, but that might not be a too bright of an idea. I’ll keep it private for now.Published:October 16,2012in5ce0df3Tagged:School,ProgrammingPreviousNext</description>
      <pubDate>Tue, 16 Oct 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Moving private repositories to Bitbucket</title>
      <link>https://www.jonashietala.se/blog/2012/10/10/moving_private_repositories_to_bitbucket</link>
      <description>Moving private repositories to BitbucketPublished:October 10,2012Revised:January 23,  2019indc7d7c4Tagged:Git,BitbucketLong overdue, I recently moved my private repositories fromGithubtoBitbucket. Github is great of courseand they even gave me a free students account and I still host all mypublic repositoriesthere. Still, Bitbucket has unlimited free private repositories for up to 5 users which is a much better pricing model. And Bitbucket is pretty awesome as well, they’re posting a lot onhacker news, my favourite place on the web. That’s where thefinal pushcame from anyway.The transition was as smooth as a… a sine wave…? Pretty damn smooth that is. Sign up took 30 seconds, copy paste my ssh key and redefine some remotes and I’m basically done. Decentralized source code management (git in this case) is pretty damn awesome.Published:October 10,2012Revised:January 23,  2019indc7d7c4Tagged:Git,BitbucketPreviousNext</description>
      <pubDate>Wed, 10 Oct 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Eduroam for wicd in Linkoping's University</title>
      <link>https://www.jonashietala.se/blog/2012/09/13/eduroam_for_wicd_in_linkopings_university</link>
      <description>Eduroam for wicd in Linkoping's UniversityPublished:September 13,2012in5ce0df3Tagged:EduroamSo we have eduroam at our University and unsurprisingly wicd is not on their official support list but with some googling the wonderfulArch Wikihad the answer. Well, almost.Save the following as/etc/wicd/encryption/templates/ttls-80211:name = TTLS for Wireless
author = Alexander Clouter
version = 1
require anon_identity *Anonymous_Username identity *Identity password *Password
optional ca_cert *Path_to_CA_Cert
-----
ctrl_interface=/var/run/wpa_supplicant
network={
    ssid="$_ESSID"
    scan_ssid=$_SCAN

    key_mgmt=WPA-EAP
    eap=TTLS

    ca_cert="$_CA_CERT"

    phase2="auth=MSCHAPv2 auth=PAP"

    anonymous_identity="$_ANON_IDENTITY"
    identity="$_IDENTITY"
    password="$_PASSWORD"
}Only difference from the wiki is the linesubject_match="$_CERT_SUBJECT"is removed.In a terminal:cd /etc/wicd/encryption/templates
echo ttls-80211 &gt;&gt; activeThen open wicd (I usewicd-curses) and chooseTTLS for Wirelessunder the security mode and enter your credentialsfrom this page. For the lazy peopledownload this, save it somewhere and specify the path to it asPath to CA Certthen input your@liu.seor@student.liu.seand don’t forgetyour password.Done!Published:September 13,2012in5ce0df3Tagged:EduroamPreviousNext</description>
      <pubDate>Thu, 13 Sep 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Robot Project Start</title>
      <link>https://www.jonashietala.se/blog/2012/09/05/robot_project_start</link>
      <description>Robot Project StartPublished:September  5,2012Revised:July 23,  2013inaf1cdd3Tagged:SchoolSo it has begun, the long road until christmas when we’re supposed to have a working warrior robot. We’re gonna do battle with infrared lasers instead of axes but it might be fun anyway. Luckily for me I’m responsible for software and nothing harder than that! w00p!We could maybe cheat a little…Our group seem pretty good, all nice guys (so far!) and we have guys on the harder jobs - documentation responsibilities and project leader - so itshouldgo well. We’ll see!Published:September  5,2012Revised:July 23,  2013inaf1cdd3Tagged:SchoolPreviousNext</description>
      <pubDate>Wed, 05 Sep 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Entering Pintos</title>
      <link>https://www.jonashietala.se/blog/2012/09/03/entering_pintos</link>
      <description>Entering PintosPublished:September  3,2012Revised:July 23,  2013inc0a62a3Tagged:School,ProgrammingFirst week of school is over and it’s been full throttle from the start, in a good way. We’re having four courses and for once I like them all. We have an interesting math course, a useful course “Software Development in Theory” (boring but useful) and a big project course where we shall build a robot. That’ll be fun! But my favourite course so far has been the course about operating systems where we’re supposed to add functionality topintos, a toy operating system from stanford.It’s one of the things I’ve been wanting to learn every since I first came in contact with programming; How does the connection hardware to software work? How does an operating system work? And how does a programming language work? After two years, withimplementing a processorlast year as a high point, I think I can answer how hardware connect with software. I still need to implement my own language but for now I’m having fun with OS programming. Yesterday I implemented basic System Calls and next on the agenda is altering some thread stuff. I might make the code available when the course is over, and maybe even add even more stuff? Fun, Fun!Published:September  3,2012Revised:July 23,  2013inc0a62a3Tagged:School,ProgrammingPreviousNext</description>
      <pubDate>Mon, 03 Sep 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>It's Time for More School</title>
      <link>https://www.jonashietala.se/blog/2012/08/27/its_time_for_more_school</link>
      <description>It's Time for More SchoolPublished:August 27,2012Revised:July 21,  2013inf81972cTagged:SchoolToday it’s finally starting again and it’s off with a flying start. We have 11 lectures this first week and an absolutely smacked schedule. If that wasn’t enough I also have a mentor time to prepare for and I need to start Taekwon-do again.On another note Ḯ’m currently plowing through ‘Liar Game’ manga which is pretty damn nice. It’s a psychological manga about various games where you’re supposed to lie and cheat your way to victory. Corny as it may sound it’s pretty good.Published:August 27,2012Revised:July 21,  2013inf81972cTagged:SchoolPreviousNext</description>
      <pubDate>Mon, 27 Aug 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Rising from the Dead, it's Ludum Dare</title>
      <link>https://www.jonashietala.se/blog/2012/08/25/rising_from_the_dead_its_ludum_dare</link>
      <description>Rising from the Dead, it's Ludum DarePublished:August 25,2012Revised:July 23,  2013in0c5354eTagged:Ludum DareI’ve been a long time gone, been busy with school then having summer vacation and generally not making games or blogging. But I have revived! I scrambled to push my new website live because today it’s Ludum Dare time! The theme is “Evolution” and it’s the 24th time for Ludum Dare and my 4th time entering.Of course, as usual with my Ludum Dare entries I’m totally unprepared. I haven’t used any of the tools I’m going to use in over half a year or something.But I did clear my desk! And an inspirational cactus friend!Published:August 25,2012Revised:July 23,  2013in0c5354eTagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 25 Aug 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ugly and Slow Progress</title>
      <link>https://www.jonashietala.se/blog/2012/08/25/ugly_and_slow_progress</link>
      <description>Ugly and Slow ProgressPublished:August 25,2012Revised:July 23,  2013in0c5354eTagged:Ludum DareLudum Dare is coming along… Slowly. The rust on me is probably so brown it’s nearly black. But I have an idea and it might be good, all I need to do is execute it. Right?Programmer graphics coming to take you away!Anyway it’s going to be a risk-like game with a twist: you can change all the rules and victory conditions. I played a pretty cool card game where changing the rules was the core of the game, pretty neat idea actually. As for the theme I wanted to do something with robots taking over the world - it’s only the next logic evolution of computers anyway.Not sure if the game is going to be anything to celebrate over, but I’m having fun at least. Except for getting annoyed about C++ missing all my favourite features from other languages… But in time I’ll be in love with it anyway.Published:August 25,2012Revised:July 23,  2013in0c5354eTagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 25 Aug 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Up like a Sun, Down like a Pancake</title>
      <link>https://www.jonashietala.se/blog/2012/08/25/up_like_a_sun_down_like_a_pancake</link>
      <description>Up like a Sun, Down like a PancakePublished:August 25,2012Revised:July 21,  2013inbcd6a62Tagged:Ludum DareI was looking forward to this weekend, for Ludum Dare and for me to finally make a game again. But it just don’t feel right to me. I’m not prepared, I feel a little bit stressed and I don’t really have faith in my game so I’m gonna step down this one as well. But it’s fine, Ludum Dare is supposed to be fun and challenging with an emphasis on fun but as it is now I just don’t really feel it.Next time I will come more prepared, that’s a must! I think I need to do some html5 or pygame for the next time. Fast prototyping should mean more than writing a lot of boilerplate code and the boiler will make a damn stew if you’re rusty.Published:August 25,2012Revised:July 21,  2013inbcd6a62Tagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 25 Aug 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Beginning Programming</title>
      <link>https://www.jonashietala.se/blog/2012/03/18/beginning_programming</link>
      <description>Beginning ProgrammingPublished:March 18,2012Revised:July 21,  2013inf81972cTagged:ProgrammingI read a wonderful post,3 Things I hate about “beginner” programming books, which I couldn’t agree more with. Basically he has these points:Too longToo many examples like “Hello World!”No answers to exercises.Nr 1 is a pretty curious one. Even though I think a book is good, I often end up only completing 75-85% of it before going on with my own projects or with something else. Also the best books are often shorter than your average 700+ pages brick.Modern Perl,The Pragmatic ProgrammerandEffective C++are all short but really good.I always hate, really hate, when I can’t find an answer to an exercise in a book. Often I’m unsure or I frankly don’t know how to solve something, even after reading the text and examples, and I also think I learn best by copying. This may sound strange to you but I swear it’s true. When I made my first game I copied from a tutorial and after I changed and wrote something new. This is also the same when doing math, first I want too see examples and how to actually solve something then I copy that and then I go “hmm what does this do, what will happen here”.The small constructed examples you always see, “this Vehicle is a class and the Firetruck inherits Vehicle”, are no use at all I’d say. Is that how you solve a problem? Is that how you program? Not really. Almost all examples are contrived and not useful at all, especially for beginners. I never thought classes where good before I copied a solution to some problem I had. Wonderful!This is what I’d do if I would write a “beginner” programming book:I would use the whole book to construct a game. I would begin with simply drawing a shape, or an image, on the screen. Then I would make it move and at the end of the book I would have all the necessary code for a complete and functional game.I would provideallthe code inside the book. Of course I could provide it online but the act of actually typing in something yourself is very valuable.It should be fun and easy-going. I wouldn’t focus on every little detail but instead on the big picture and my goal would be to get the reader hooked on programming.That’s it! Learning programming is hard, but it’s also very satisfying. My summer project will be to teach my little brother to program, we’ll see how that’ll go.Published:March 18,2012Revised:July 21,  2013inf81972cTagged:ProgrammingPreviousNext</description>
      <pubDate>Sun, 18 Mar 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Changes</title>
      <link>https://www.jonashietala.se/blog/2012/03/04/changes</link>
      <description>ChangesPublished:March  4,2012Revised:July 21,  2013inbcd6a62Tagged:LifeA lot has been going on lately and it feels like I’m being swamped. I can’t complain too much but there are things I’d like to change after the exam period this week.Program more!I have seriously donenothingsince christmas or someting. I need to finish:Ada project for school. Can’t believe I still haven’t done it.New web page. Need to track down a good perl hosting service and actually finish the site.Game for my little brother to create graphics and tweak some code in, I want to teach him to code during the summer! That’s a good healthy challange for me.Ludum Dare 23 in April, yay!Serious Taekwon-do training.Don’t fall behind too much in school.  This time I’m hurrying like mad to catch up before exam and I’m actually worried. This shouldn’t happen! I didn’t even go toa singlelesson this time.Just wanted to get that out there.Published:March  4,2012Revised:July 21,  2013inbcd6a62Tagged:LifePreviousNext</description>
      <pubDate>Sun, 04 Mar 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Favourite Programming Language</title>
      <link>https://www.jonashietala.se/blog/2012/02/24/favourite_programming_language</link>
      <description>Favourite Programming LanguagePublished:February 24,2012Revised:July 21,  2013inf81972cTagged:ProgrammingAll the programmers love to promote their favourite language, or to hate on others. Now I read a post which claimesmy favourite language is not good enough! But he’s correct of course, there is no one language to rule them all. You should always choose the mest language for the job, be it C or Ruby, but most don’t learn enough of them. Maybe he’s right, maybe we’re all just lazy?Whatever the reason I certainly have a favourite language, or rather a few. If I would have to name one I would probably say Perl, just because I’ve had the most fun with it! I do enjoy C++ and as I’ve made most of my precious games in it that’s a good candidate. Haskell is absolutely awesome and so is Lisp. There I’ve listed 4 favourites! But of course I don’t care about that really, I tend to fall in love with most of the languages I use.Well I don’t particulary like Ada… But I do admit it has some nice features, and the error messages are great! But how about Java then? I’ve been joking around a lot with it but to be honest I don’t really hate it. Sure there are better alternatives but there are good points. The JVM, the libraries and the simplicity of it appeals to me. Maybe it’s not simple but I’m used to the thinking.To echohissuggestion: learn new languages. I’ll add that don’t just learn them: use them for something real and learn to love them! And don’t just learn similar languages (from C++ to Java isn’t worth it) but try to switch it up a bit (try C++ to Haskell). You’ll find you’ll be a better programmer when the dust settles, and you can actually choose a language gwith the strengths for a particular prolem.End rant.Published:February 24,2012Revised:July 21,  2013inf81972cTagged:ProgrammingPreviousNext</description>
      <pubDate>Fri, 24 Feb 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Motivation is Valuable</title>
      <link>https://www.jonashietala.se/blog/2012/02/24/motivation_is_valuable</link>
      <description>Motivation is ValuablePublished:February 24,2012Revised:July 21,  2013inf81972cTagged:SchoolIt’s funny how motivation can play such a huge role with my productivity. I’m currently having two math courses; one mandatory about analysis in multiple variables and vector analysis and one voluntary about advanced linear algebra. I don’t like the analysis course, didn’t like the previous ones and I don’t like this one.I don’t fall asleep on lectures ever and I always try my best to listen but this one is pretty horrible. Not sure if the teacher or the content is to blame?On the other hand the linear algebra course is fun and intriguing. Every lecture I’m always surprised when it ends “already 2 hours?”. This is so funny because I’m not really convinced why this is happening, are the courses or the teachers that different? Sure that’s probably true, but mostly I think it’s my motivation that’s hurting me.“Linear algebra seems fun! It’s hard but Iwillmanage it.” vs “Pah analysis again. Damn the first lecture was boring, this course is boring”. I do like linear algebra more and I think it’ll be much more useful for me in my programming career but analysis isn’t so bad, not this degree. I think my motivation blow ups my it into bigger proportions than it really is.It’s pretty bad, we have exam in two weeks and I have literary done nothing in the analysis course… Now I need to study hard if I want to complete it but the lack of motivation is just sooo hard to overcome. Sometimes I think I don’t have the mentality to be a good student. Many of my class mates are in school the whole day, every day, while I try to be in school as little as possible.Published:February 24,2012Revised:July 21,  2013inf81972cTagged:SchoolPreviousNext</description>
      <pubDate>Fri, 24 Feb 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Doing Stuff</title>
      <link>https://www.jonashietala.se/blog/2012/02/12/doing_stuff</link>
      <description>Doing StuffPublished:February 12,2012Revised:July 21,  2013inbcd6a62Tagged:LifeThe school and my life is trotting along. I’m handling the extra course fine, but instead I’ve left the standard math course behind a bit. Actually more than a bit but hopefully I’ll correct things later.No my life is going along just fine, it almost feels like my life is runing ahead and leaving me behind. What have I done lately? School work I guess? Can’t think of anything else the last month to be completely honest, which is pretty far from optimal. I set out this school year with the goal of programming a lot more, but so far that has been pretty dead. Sure I made a lot of progress on the new site during the christmas break but since school started I have done nothing,nothing! So sad.Yesterday I did something else though. I went and bought a bunch of stuff. I bought a birthday present for Veronica which I’m very happy with, and I bought some rubber bands for training the oblique muscles among others. I tried but I couldn’t find a protective condom for my new phone, yes I have a new phone! A white, shining, wonderfulSamsung Galaxy S2which is blowing my mind. I can now surf, watch starcraft and read manga in bed, in the bathroom and in school! Yay! And umm… New boxers.Apart from all that I also hung up Veronica’s two paintings and a white shelf I’ve been meaning to a while. I realized I had no idea whatsoever how to hang up a painting! I bought a big box with screws and stuff but there where only one of them I knew how to use. Now I know how to hang up a painting like the leaning tower of Pisa!You call that leaning? You should check out my paintings!I finally got them sort-of straight, but it took a while.You know your life is running fast if you’re savouring hanging up paintings. But now I will do something about that: I will go to Taekwon-do practice and later maybe going to the children’s practice, yay!Published:February 12,2012Revised:July 21,  2013inbcd6a62Tagged:LifePreviousNext</description>
      <pubDate>Sun, 12 Feb 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Simple Thought</title>
      <link>https://www.jonashietala.se/blog/2012/02/02/a_simple_thought</link>
      <description>A Simple ThoughtPublished:February  2,2012Revised:July 21,  2013inbcd6a62Tagged:SchoolI wrotethat we where doing some microprogramming, making the processor work etc. We had a lab about that yesterday and I was very, very nervous. The preparations weren’t that hard, but they where very bothersome. Converting the instructions to binary/hex by hand is never nice. Turns out the lab was very easy! You also had the option to prepare everything before on their simulator, which dumb be didn’t do.When I thought about how to describe what microprogramming is I was going to write that it’s what makes a processor work. This sounds a bit off though, couldn’t you do the same with physical hardware instead of another programming step inside the processor? Well turns out that’s what RISC is all about. Sometimes the qualms you have when facing something new are completely justified.Published:February  2,2012Revised:July 21,  2013inbcd6a62Tagged:SchoolPreviousNext</description>
      <pubDate>Thu, 02 Feb 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Speeding Ahead</title>
      <link>https://www.jonashietala.se/blog/2012/01/29/speeding_ahead</link>
      <description>Speeding AheadPublished:January 29,2012in5ce0df3Tagged:Life,SchoolLife is slowly settling down over here. School has started with some pretty interesting stuff this year. Firstly we have a math analysis course in multiple variables which is ok. I’m not a fan of the previous analysis courses but maybe this will be a bit different. We’re contining with computer hardware, microprogramming and such, and I enjoy it a little.When I started programming the big question was how did the code I typed into my editor become something the processor could understand? I’ve got a good feeling for different programming languages, and now including the assembly for 86k processors. Now the basic hardware, from logical gates to ackumulators, and code are being connected together which feels very nice indeed. I still like to construct and make stuff in a more high level way though.We’re also having a new course, it’s been totally remade since last year, about software prototyping. I’m quite used to prototyping with my games but as expected a university course about the subject is a bit more structured and dare I say more boring? The course book,Effective Prototyping for Software Makers, is pretty good as it explains the design process in a formal, but not mindnumbingly boring, way. I need to investigate more but I’ll definitely use some of the ideas.The last course for now is the advanced course in linear algebra which me and a friend chose. Linear algebra was probably the hardest math course we’ve had but at the same time I think it’s the most enjoyable and useful so far. And finally I hear it’s very useful for programmers in computation and 3D programming so it’s something I really want to understand.Life with Veronica is also working out, mainly because she’s awesome, and I went to a Taekwon-do training this week. Feels good to practice again!Published:January 29,2012in5ce0df3Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Sun, 29 Jan 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ludum Dare 22 results!</title>
      <link>https://www.jonashietala.se/blog/2012/01/21/ludum_dare_22_results</link>
      <description>Ludum Dare 22 results!Published:January 21,2012Revised:July 23,  2013in7a1ecc1Tagged:Ludum DareThe resultsfromLudum Dare 22are in! I made the gameSat-Efor the 48 hour competition and I wasquite happywith it.#24 Community 3.71This one was really surprising, but welcome. I did post a cute picture of a korean k-pop star so I guess that’s why.#40 Fun 3.38Fun is always great! I’m so happy ^^#49 Theme 3.69I thought my theme choice (Wall-E in space) was good, seems like other thought that too.#65 Overall 3.42This is supposedly the “best” category to do well in so I’m glad. I did a lot better than I thought I would…#95 Humor 2.82Damned blast I should’ve focus more on the funny one-liners.#167 Mood 2.92If I make a better version of the game this is probably the one thing I would focus on. But that is a thought for another time.#247 Innovation 2.69Not very innovating I agree.#338 Audio 2.23No music = shit.#340 Graphics 2.62I guess I’m not that good of an artist, but tell me something I don’t know!§#376 Coolness 35%The coolness factor = amount of games rated. I wasn’t motivated at all sadly… I’m a game developer but I don’t play much games? I’m so strange.Published:January 21,2012Revised:July 23,  2013in7a1ecc1Tagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 21 Jan 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2011 in Review</title>
      <link>https://www.jonashietala.se/blog/2012/01/04/2011_in_review</link>
      <description>2011 in ReviewPublished:January  4,2012Revised:July 21,  2013inbcd6a62Tagged:Yearly ReviewIt’s time to wrap up the year that’s been. Be warned for slight ego boosting here.2011 Geek AchievementsWrote three games this year:My MinionsGrand Thief ArtoSat-EBought anew computer!Bought a mechanical keyboard.Boughtcustom Starcraft 2 keycapsfor the keyboard.Learned 68k assembly.Learned about algorithms and data structures.Bought a lot of programming books.The Pragmatic ProgrammerStructure and Interpretation of Computer ProgramsIntroduction to AlgorithmsModern PerlEffective JavaLearn You a Haskell for Great Good!Land of LispMaybe something more…Read a lot of programming books. Modern Perl and The Pragmatic Programmer were my favourites.Learned some Ada.Learned a lot of Perl.Learned a tiny bit of Haskell.Learned someemacsGot a hint of design understanding thanks toDesign for Hackers2011 Non-Geek AchievementsWent to a dance course with Veronica.My stumach is in good shape!Read and loved A Song of Ice and Fire.Achieved 7 kup in Taekwon-do.Read alotof manga. Some recommendations:Bakuman. A nice slice of life manga about… making manga. Surprisingly captivating.Gamaran. A slightly brutal battle manga with loads of weapons.Vinland Saga. A bit more brutal battle manga about vikings and war.Beelzebub. Battle manga but with a ton of light hearted humor.The Breaker. Another battle manga, a bit more direct perhaps.2011 FailuresDidn’t produce enough games.Didn’t write enough code.Did not learn enough Haskell.Have a lot of books I haven’t read yet.Did not have enough free time.Plans for 2012Keep Veronica happy!Make more games.Code more! Much more!Blog more!Learn more Haskell (yet again)…Transform my site to something new, something that I don’t dread to use.Improve in Taekwon-do.Be more disciplined in studying, coding, training and cleaning.Read the programming books I have but have not read yet.A book about Erlang.K&amp;amp;R C Programming language.SICP, all important for every programmers. I hear.Probably missed something… Damn I’ve got many.Get good results in school.Try to be a bit more social (it’s hard).Get more free time somehow.Complete a larger personal project.Learn more mathematics.Published:January  4,2012Revised:July 21,  2013inbcd6a62Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Wed, 04 Jan 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: Sat-E</title>
      <link>https://www.jonashietala.se/blog/2011/12/28/postmortem_sat-e</link>
      <description>Postmortem: Sat-Eâ˜Published:December 28,2011Revised:January 19,  2019in44a47dbTagged:Postmortems,Ludum Dare,Experimental Gameplay ProjectThis is my postmortem for myLudum Dare 22entry,Sat-E. You can find the timelapseover here.The GoodMotivationI was really motivated forthis dareand it showed in the game and outside it. Itâ€™s super hard to make a game in only 48 hours but this time it went pretty well. Mypreviousattemptswent okay, but there were always something lacking.This timethe game feels a little bit more finished so Iâ€™m going in the right direction.After the game the programming motivation continued and with it Iâ€™ve been improvingmy small fast prototyping frameworkI use when making games. I got a lot of ideas on improvements during the weekend so thatâ€™s great.The feedbackI was moderately happy with how the game turned out, it didnâ€™t contain everything I had envisioned after all, but I got atonof positive feedback anyway which is wonderful! It seems like some thinks that my game is good and thereâ€™s nothing better for your game making confidence than a bunch of flattering words. Iâ€™m even considering developing the game more, maybe spending a couple of days here and there on it during a couple of months when I have the time?I learned a lot!The best way to learn something isjust to doand itâ€™s still true. Iâ€™ve found a bunch of ways to improve and shorten my code, Iâ€™ve made an â€œinfiniteâ€ space constructed by individual chunks and that game physics != real physics. Awesome.Game design is a pretty fascinating creature. Sometimes you give it your best but the resulting game isnâ€™t funny, other times you think your game is shit but then you get comments on your â€œamazingâ€ game! This time I wascertainthe game was crap, a neat idea wrapped behind a boring gameplay but turns out it maybe wasnâ€™t that boring after all?I got this comment:â€œAlso the fact that when that happened the game didnâ€™t simply reset, I lost my money but not my items,
literally stopped me from rage quitting. Bravoâ€My thougts? Wait thatâ€™s a bug! Hmmâ€¦My girlfriendOf course as I live together with someone itâ€™s quite hard to devote an entire weekend, plus the extra time before and after, with my computer. Veronica handled it wonderfully well and she was very supportive which means a lot to me and it helped a ton.The BadThe musicThereâ€™s no music but I had grand plans for making music for the first time ever! It failed hard though. Which brings me to the next pointâ€¦Not familiar with the toolsI usedmy own frameworkfor the game, which is fine, but mylast gamewith it was in May 2011! Which is a looong time ago. I was a bit (a lot) out of practice with this whole pixel arts thing. And of course I had never usedLMMSto make music and that didnâ€™t happen. I was short of time and it was too big of a deal to start it with the last minute.Not enough timeEven though I had the whole weekend planned for the dare and I skipped practice on Sunday I wasstillshort on time. Iâ€™m not really sure why though. I made a pretty simple game, not a lot of art and I generated sound withbfxrwhich took no time at allâ€¦ The reasons really must be:Not enough practice.Unfamiliarity with the tools. Correlates closely to #1.Iâ€™m bad and LD is hard.When I seealltheseamazinggamesIâ€™m reminded on how much better other game makers are. I need more practice and I need to make more games. I should enter the next dare, enterthe experimental gameplay projectand justmake more games.And letâ€™s face it: Making a game in 48 hours is frickinhard.The UglyThe artOh godâ€¦ I suck at making art. Letâ€™s just leave it at that.The codeThereâ€™s a lot of bad and wrong in there, it works but itâ€™s not pretty. In fact, itâ€™s ugly.The gameplayThis is a tricky one. I thought about placing this in the bad section as I didnâ€™t find the game very pleasing at all. The beginning was too slow, the ending too long and there wasnâ€™t enough incentive to continue flying through endless space I thought. But I got a lot of positive comments and reactions which is wonderful! I donâ€™t fully understand why yet so Iâ€™m tagging the gameplay as ugly. After all the gameplay wasnâ€™t like in my dreamâ€¦Ending thoughtsBefore entering the competition Iâ€™m always nervous but high spirited. That feeling is always crushed during the weekend and when I finally get the game done and uploaded I think itâ€™s the worst game ever. Luckily Iâ€™m greeted with positive feedback and that was the case this time again. Maybe they are okay, not super of course, but simply okay.This time the dare came at a time where I felt I havenâ€™t done anything meaningful for a long time, itâ€™s just school, little programming and no game making. Now after my spirits are high and I can face a new year with many more games to come!Until next time, cheers!Published:December 28,2011Revised:January 19,  2019in44a47dbTagged:Postmortems,Ludum Dare,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Wed, 28 Dec 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ludum Dare 22 Timelapse</title>
      <link>https://www.jonashietala.se/blog/2011/12/19/ludum_dare_22_timelapse</link>
      <description>Ludum Dare 22 Timelapseâ˜Published:December 19,2011Revised:July 23,  2013in7a1ecc1Tagged:Timelapse,Ludum DareHereâ€™s the timelapse for my entry toLudum Dare 22,Sat-E.Click to view on YouTubeThis time I managed to record one screen every minute, which is very suboptimal to say the least but I slowed it down a bit so you can at least see something being done there.Published:December 19,2011Revised:July 23,  2013in7a1ecc1Tagged:Timelapse,Ludum DarePreviousNext</description>
      <pubDate>Mon, 19 Dec 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Sat-E</title>
      <link>https://www.jonashietala.se/blog/2011/12/19/sat-e</link>
      <description>Sat-Eâ˜Published:December 19,2011Revised:January 19,  2019in44a47dbTagged:Games,Ludum DareSo I enteredLudum Dare 22this weekend as a preamble for tomorrowâ€™s linear algebra exam. The theme this time around wasAloneand the game I came up with is about a lonely satellite in space, kinda like Wall-E.Sat-EInstructionsCollect junk and other items for you to buy upgrades, and finally, your friend to finish the game. Be careful not to run out of battery, you need to return home to base for a recharge between runs.ControlsArrow Keys - Move aroundSpace/Return - Choose item in docking modeF1 - Developer consoleTimelapseItâ€™s on youtubeand itâ€™s embeddedhere.Sourcehttps://github.com/treeman/Sat-EBuilt using my fast prototyping frameworkhttps://github.com/treeman/7daysPublished:December 19,2011Revised:January 19,  2019in44a47dbTagged:Games,Ludum DarePreviousNext</description>
      <pubDate>Mon, 19 Dec 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Starcraft 2 Keycaps</title>
      <link>https://www.jonashietala.se/blog/2011/12/16/starcraft_2_keycaps</link>
      <description>Starcraft 2 KeycapsPublished:December 16,2011Revised:June 19,  2024in6ff6161Tagged:Computer,Keyboards,New StuffWhen I ordered this computer I was compelled, utterly compelled to buy a mechanical keyboard. Sure they cost almost 10x as much as a “regular” one and they didn’t even have these funky multimedia keys, what gives? Did I loose my insanity? It was supposed to give a great typing experience… And it sure did deliver!I’m bringing this up again because I decided to spend my money on something possibly even more useless (or awesome?). I ordered some starcraft II modifier keys for the keyboard and now they are fitted onto the keyboard. Yay!Published:December 16,2011Revised:June 19,  2024in6ff6161Tagged:Computer,Keyboards,New StuffPreviousNext</description>
      <pubDate>Fri, 16 Dec 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ludum Dare 22 Here I Come</title>
      <link>https://www.jonashietala.se/blog/2011/12/14/ludum_dare_22_here_i_come</link>
      <description>Ludum Dare 22 Here I ComePublished:December 14,2011Revised:July 23,  2013inc0a62a3Tagged:Ludum DareThe time has finally come. After more than three hours of exam writing, and almost double spent on studying for it, I am now ready to declare my entry intoLudum Dare 22! I’ve been away far too long, with my entries for the17thand the20thdare being almost a century away, the ancient game making creature will once again move into action. We’ll just hope the game won’t be ancient as well…Leaving that behind us I can now focus on what to actuallyuse. I wanted to try some new language and some new environment but that seems lika a really bad idea. So I will stick to what I know:My fast prototyping libraryconsisting of old C++ on top of the niceSFMLengine.sfxr, or maybe the newerbfxrfor sound effects. It’s seriously great, give it a try!
Probablymtpaintfor some nice pixelated graphics. I would like to try outinkscapefor some vector based graphics but I might skip it this time.LMMSfor music making. This I tried to use a long time ago… And failed miserably. It’ll be a fun, fun weekend!
And finally my littletimelapse recording hackfor linux. Be careful if you want to try it, it will most likely blow up in your face and take your computer down with it. Handle with care.And of course here’s where I’ll be spending most of my waking hours:Ludum Dare 22 setupI’m planning on getting some new food during all this, but I’m not entirely sure yet.Published:December 14,2011Revised:July 23,  2013inc0a62a3Tagged:Ludum DarePreviousNext</description>
      <pubDate>Wed, 14 Dec 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>On The Decline of FPS Games</title>
      <link>https://www.jonashietala.se/blog/2011/12/12/on_the_decline_of_fps_games</link>
      <description>On The Decline of FPS GamesPublished:December 12,2011Revised:July 23,  2013in7a1ecc1Tagged:Gaming,Game DesignMr. Eriksson just sent me this link as a fitting video on my post onThe Decline of FPS Games.Click to view on YouTubeOh How true!Published:December 12,2011Revised:July 23,  2013in7a1ecc1Tagged:Gaming,Game DesignPreviousNext</description>
      <pubDate>Mon, 12 Dec 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Finishing Stuff</title>
      <link>https://www.jonashietala.se/blog/2011/12/07/finishing_stuff</link>
      <description>Finishing StuffPublished:December  7,2011in5ce0df3Tagged:LifeI haven’t done much blogging or game programming in a while but instead I’ve finished some school stuff. We completed the assembly course labs, which were pretty fun actually, and I managed to finally complete the electronics course I’ve been holding off on for like forever… But now it’s gone, yay!There’s not much left before christmas either, we have some sort of exam on tuesday (very boring course) and one the 20th (very fun course) but other than that I’m free to do whatever I want.I’m planning on enteringLudum Darenext weekend, finally getting some game programming done.I need to recap this year and plan some for the next. I fear this year wasn’t as productive as I had hoped.I’ve been thinking that I know my tools (Vim, the command line) but I need to get a little bit better. Especially with emacs as I feel like a monkey on a typewriter when I’m forced to use it at school. Not cool.And some more smaller stuff I don’t have energy to type out (or maybe you’re interested in reorganizing my home folder?).Published:December  7,2011in5ce0df3Tagged:LifePreviousNext</description>
      <pubDate>Wed, 07 Dec 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Nice Weekend</title>
      <link>https://www.jonashietala.se/blog/2011/11/21/a_nice_weekend</link>
      <description>A Nice WeekendPublished:November 21,2011Revised:July 21,  2013inbcd6a62Tagged:LifeI’ve had a pretty nice weekend. On Friday MLG Orlando began and I’ve been staying up to 2 and sleeping until at least 10 the last days. My inner night-owl is very happy about it, my early-rising girlfriend perhaps not as much, but I think she’s a bit understanding?On Saturday we cleaned the house for Christmas and hung up a star and stuff like that. It was brutally hard work (laugh if you like) but I pulled through without dying too much. Saturday night was full of StarCraft again though so it’s fine!What about Sunday then? Even more StarCraft of course!! IPL had some grand tournament, which Stephano won of course, and MLG had it’s final day. In the middle there somewhere we had some taekwon-do and I did some laundry. With that done I sat and shouted at my chosen ones in the tournament and they did do okay, not like I had hoped but still. Leenock managed to win MLG which is pretty damn awesome.Now I need to adapt to a normal life again, with school andLudum Darecoming up.Published:November 21,2011Revised:July 21,  2013inbcd6a62Tagged:LifePreviousNext</description>
      <pubDate>Mon, 21 Nov 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Decline of FPS Games</title>
      <link>https://www.jonashietala.se/blog/2011/11/20/the_decline_of_fps_games</link>
      <description>The Decline of FPS GamesPublished:November 20,2011Revised:July 23,  2013in7a1ecc1Tagged:Gaming,Game DesignI readan article about the decline of FPS gamesand it made me think a bit. When was the last time I actually enjoyed an FPS game? I installed oldDeus Exa while ago but it’s what 12 years old?Team Fortresswas okay, the one or two times I tried it, but I can’t say I truly enjoyed it, hell I never even played it apart from trying it at a friends pc. Well I boughtDuke Nukem Foreverbut I haven’t even completed it, it’s best server collecting dust at the bookshelf now. No the truly last FPS I enjoyed wasCSS. How is this possible?CSS: my one favorite FPS gameI am not a big FPS fan and I get sick of modern FPS almost directly. It feels like they are all the same, I don’t even want to try them anymore. The biggest upset was actuallyDuke Nukem Foreverlately. It had totally linear levels, you could only use two weapons at a time and it just felt boring and uninspiring. Why is it that FPS games are considered good if the graphics is good? Or have an advanced physics engine? It’s good of course but there has to be more to a game than that. Games feel so shallow nowadays.But I never did think about FPS games when I read the article no I thought about RTS and construction games. The main point the article wanted to put forward is that game designers today, especially big ones, don’t want to take big risks so they do the same thing as everyone else. This is what happened a decade or go or something when we got a bunch of very similar RTS games. I remember that there were a lot of very similar construtor games before that too. But where are they now? I don’t want a million similar titles, but the basic ideas behind those games were great - and I miss them.Where is Evil Genius 2 for example? It’s one of the best games ever but there’s nothing similar, only a bunch of similar games trying to steal the popularity of other, probably better, games in the same style.We need to stop imitating and start innovating, but we also need to bring back the ideas of the classics.Anno 1602, one of many classic constructor games. But where are they now?Published:November 20,2011Revised:July 23,  2013in7a1ecc1Tagged:Gaming,Game DesignPreviousNext</description>
      <pubDate>Sun, 20 Nov 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Swelling with New Shiny Books</title>
      <link>https://www.jonashietala.se/blog/2011/11/09/swelling_with_new_shiny_books</link>
      <description>Swelling with New Shiny BooksPublished:November  9,2011Revised:November 27,  2014ind7f42b7Tagged:Books,New StuffSo I read the wonderfulDesign for Hackersand I managed to win some money for books from a course… So I ran away and ordered some new books, and they just arrived today. Yay!First off I orderedIntroduction to Algorithmswhich is the de facto book about algorithms and it seemed like a fitting thing to do as I won it by doing algorithm assignments.Secondly I’ve been wanting to grabStructure and Interpretation of Computer Programsfor a while and I finally did. It’s one of the classical computer books youhaveto read once in your life (or so they say).I wasn’t going to get a third book, but onadlibriswhere I got the vouchers you couldn’t pay with two vouchers on one order. So I had to split it up and it felt kinda dumb to not use it all… So I ordered a third book. I had no idea what book to get though, butstackoverflowcame to the rescue! It’s a bunch of answers to the question “What is the single most influential book every programmer should read?” and is like a top X list for programming books.Incidentally I’ve got a few of those already, and the two I’ve already decided on was there (SICP is 3rd, Introduction to Algorithms 5th). Of course I wanted to get either the 1st or 2nd and I ended up choosing the 2nd one,The Pragmatic Programmerjust because it seemed a bit easier to read. I’ve got a ton of fairly hardcore programming books I need to plow through so something a bit easier to digest should be welcome.Go go programming books!Published:November  9,2011Revised:November 27,  2014ind7f42b7Tagged:Books,New StuffPreviousNext</description>
      <pubDate>Wed, 09 Nov 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Done this, done that. What now?</title>
      <link>https://www.jonashietala.se/blog/2011/11/05/done_this_done_that_what_now</link>
      <description>Done this, done that. What now?Published:November  5,2011in5ce0df3Tagged:LifeFinished and uploaded our java gameGrand Thief Arto, done an exam (didn’t quite go as intended) and starting some new courses in school. I’m liking my choice of Computer Science more and more.Data structures and Algorithmswas a super fun course, I actually ordered anew book about the subjectjust yesterday.Linear Algebrais really fun now as we’re getting deeper into it and we’re looking into assembly and processor structures now too.Awesome. I can’t believe I considered doing physics or electronics when I could take these courses. Now if I only could do operating systems, compiler construction and language design…In the meantime I’ve finishedDesign for Hackersand it was a really nice book to be honest. I never knew there was so much about design and now I keep noticing funky stuff like what font a particular website is using, what colors and how they direct the reader. I also see a lot of inadequate stuff on my page and I have a few things I’d like to try.I also readWatchmen, the comic, and it was absolutely wonderful. Sadly I saw the movie before but, naturally, the comic was a lot better. So wonderfully dark and ah… Simply awesome.Published:November  5,2011in5ce0df3Tagged:LifePreviousNext</description>
      <pubDate>Sat, 05 Nov 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Design for Hackers has arrived!</title>
      <link>https://www.jonashietala.se/blog/2011/10/19/design_for_hackers_has_arrived</link>
      <description>Design for Hackers has arrived!Published:October 19,2011in5ce0df3Tagged:BooksDesign for HackersIt’s here! After about a month of waiting I’ve finally gotten the book that will make me a design god! Or at least make meawareof something called design. Joking aside I’m really terrible at design and making things look good. Admittedly my programming art for my games has gradually improved but I honestly don’t know what I’m doing, I just mess around until I get something decent. Maybe this can be a small aid? I even have some websites I want to design, and while I’m at it I want to try thePerl web framework mojoliciouswhich looks totally awesome!Published:October 19,2011in5ce0df3Tagged:BooksPreviousNext</description>
      <pubDate>Wed, 19 Oct 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The End of the Tunnel</title>
      <link>https://www.jonashietala.se/blog/2011/10/19/the_end_of_the_tunnel</link>
      <description>The End of the TunnelPublished:October 19,2011Revised:July 23,  2013inaf1cdd3Tagged:LifeLately I’ve been feeling like there’s been a shit-ton of stuff going on, quite a turn-around from thelast time.One course about data structure and algorithms (super fun to be honest) has wrapped up. We thought we were ahead with the assignments but in the end it got very stressful. I sat up pretty late trying to optimize our code from 0.16 to below 0.15 seconds and it almost drove me crazy…My last resort was to convert all strings to integers and do some funky bit shifting operations but it got too late so I had to go to sleep before making it work correctly. Of course I couldn’t sleep and I lay and thought about all the things I didn’t do or where I could’ve messed up. I woke really early, couldn’t sleep, and I went to fix it before our presentation that morning and look and behold! It was fixed in less than 15 minutes and it was blazingly fast! It’s funny how sleep or a nice shower can solve almost any problem you have, except hunger I guess.While this was going on I also took part in a competition of some sorts in connection with the course. There was a programming problem after each lecture that we had to complete and the goal was to get as few hours as possible after the problems were released. Most problems were quite easy but there were a few hard ones. One I also lost some sleep over! But again I woke up and had to run to the computer to try to solve it… At least I won some money for some lovely new books so I guess it was worth it.We’re now finishing our other course,the one with the Java game that spurred me to wanna make more games, and I think I spent a bit too much time on that… The game turned out pretty cool, I will make a post about it tomorrow I think, but it was a level or two above the actual demands I think so we could’ve chilled and not stress that much. And now weonlyhave to document it! Describe how all the classes work with UML and some blocks of text… Sigh.And oh yeah, we had totally forgotten to write a project specification that was supposed to be handed in over a month ago and we had completely missed the deadlines for theotherassignments in that course. Luckily the deadlines were only suggestions and our assistant was cool about the specification too so we survived with our head still intact.It just seems so silly though. Why did we wait with the other assignments, I think I did them in one day or something, until the very last second? It seems like I’ve been here before, and I don’t like it. This time I had a bit more control over the whole situation but it’s still not quite good enough.Anyway now when this is all finishing up I can start to relax again. But then the thought creeps up on me: what’s next?I’m probably gonna program, make a game or two, go through a language, read some books, train a lot… Urr I’m getting all stressed out just thinking out loud like that!No I need to relax. Maybe read some more manga? Yes, that is indeed a good idea…manga…Published:October 19,2011Revised:July 23,  2013inaf1cdd3Tagged:LifePreviousNext</description>
      <pubDate>Wed, 19 Oct 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Grand Thief Arto</title>
      <link>https://www.jonashietala.se/blog/2011/10/19/grand_thief_arto</link>
      <description>Grand Thief Artoâ˜Published:October 19,2011Revised:January 19,  2019in44a47dbTagged:GamesHereâ€™s me and Liâ€™s game for our school course. The game isnâ€™t tweaked too much but itâ€™s a game with some fairly cool ideas.Grand Thief ArtoInstructionsYour goal is to collect loot until you can escape through the entry point when youâ€™ve collected enough to complete the level.There are touchpads and lasers you need to shutdown by walking next to a computer or an electric board and shut them down from there. Otherwise you need to open doors and then just run around and collect.You can either play by launching the bash script â€œplayâ€ directly in the folder or launch the game with:java base.GameFrame
or
java -Xss2048k -Xms64m -Xmx1024m base.GameFrameOr whatever your preferred way of launching java apps is. You obviously need the java runtime, otherwise you might fetch it fromhere.You might need to create the binary files for it. Use the bash script â€œcreateâ€ or do:javac base.GameFrameBut it might not be necessary.ControlsArrow keys - Walk aroundSpace - Do actionEsc - MenuPublished:October 19,2011Revised:January 19,  2019in44a47dbTagged:GamesPreviousNext</description>
      <pubDate>Wed, 19 Oct 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Being Productive</title>
      <link>https://www.jonashietala.se/blog/2011/09/30/being_productive</link>
      <description>Being ProductivePublished:September 30,2011in5ce0df3Tagged:Life HackingSchool’s been going on now for… Is it a month and a half maybe? I don’t know really but it’s all going so fast, week after week is disappearing and I don’t know where they go but I know that I’m at least not wasting them like I did most of last year!Last year I managed school sure, but without doing anything special. Well if you don’t count watching nearly every GSL live (from 06-09 or 11-13 on weekdays) which is pretty awesome. But that’s also taking away a lot of time when I could’ve (and often should’ve) studied - sadly I skipped a lot of school last year. I admit GSL can’t explain it all, I was lazy okay!This year I’d like to a bit better and it has started out fine. I haven’t skipped a single lecture yet (Java doesn’t count!!) and I’m not too far behind in anything and a bit ahead in others, in summary I’m doing great, heh.Aside from school though, which is almost even more important, I’m feeling good and getting things done. Our home hasn’t burned down yet so that’s some success right there, but I’m taking it even farther and taking care of some cooking and stuff too, of course with Veronicas help but anyway. I’m also increasing myTaekwon-dotraining, doing some reading and a bunch of other stuff. Programming too!I took the advice ofCal Newportand now I actually plan my days, every day, on the morning or the night before. Here’s an example:0730 - 0900 Program0900 - 1000 Call OnOff, electric company, DN, corren1000 - 1100 Program1100 - 1130 Foodetc..Of course I don’t really follow it to each and every point, but it helps me know what I need to get done this day. Often I skip and I reorder and I do other stuff a lot but if I’ve done at least half of what I set out to do I’ve been more productive than I’d usually be! And I even remember to do stuff like make a prenumeration on DN which I wouldneverhad otherwise.Something else that’s helped me is a regular and healthy sleeping pattern - go to sleep and wake up at the same time, every day.I’m feeling good about school and everything but I’ve got stuff left to do so don’t see it as a perfect example - far from it to be sure, but it’s a step in the right direction I guess.Published:September 30,2011in5ce0df3Tagged:Life HackingPreviousNext</description>
      <pubDate>Fri, 30 Sep 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Design for Hackers</title>
      <link>https://www.jonashietala.se/blog/2011/09/16/design_for_hackers</link>
      <description>Design for HackersPublished:September 16,2011Revised:January 23,  2019indc7d7c4Tagged:BooksI get these.. urges sometimes. Not likeDexterno, but sometimes I justhaveto buy a specific thing. It happened again yesterday (or was it the day before I don’t know) when I sawthis postonhackernews.It’s a book this time, again, but this is something a little different - it’s about design. Now I know nothing about design but I’ve enjoyed designing some sites and I really like to design games but I don’t have a clue how to do it in a structural manner. I just try different colors and different stuff until “hey that looks kinda good” and it’s done! That’s not how you make something useful or something that looks good - good design. But this book seems to teach you just that!It’s a book for hackers, in the original non-journalistic definition, and it explains stuff in a logical manner! Now I might get a feel for why I think something looks good and I might even be able to improve on it? Happy times!The only issue is that I promised myself to not order any more programming books until I’ve gone through the ones I have - but this isn’t one so it should be okay! So now I made myself to promise that I’ll do the math assignments for the week and then I can order!Instead of writing this I really should do them then.Hrrmm…Published:September 16,2011Revised:January 23,  2019indc7d7c4Tagged:BooksPreviousNext</description>
      <pubDate>Fri, 16 Sep 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>10 Games in 10 Languages</title>
      <link>https://www.jonashietala.se/blog/2011/09/12/10_games_in_10_languages</link>
      <description>10 Games in 10 LanguagesPublished:September 12,2011Revised:January 23,  2019indc7d7c4Tagged:Game MakingFor school we have this programming course for Java. It isn’t anything special really and it would be really boring if I don’t like to program, it almost is anyway, if it weren’t for the fact that we’re to create a game! Just any game will do and we’re in a group of two and we have about a month to complete it. Mmh I like.Me and Li, my conspiring friend, have a pretty decent idea of something we can make. The only minor thing is that neither he nor I know anything about Java. Turns out I’ve donesome gamemakingin mostly C++ and it’s really not different so we’ll see how the game finishes.Now this game me a bit of an idea, or rather it resurfaces and older idea, namely to make a few games in a couple of different languages. I like to explore different languages and I like to make games so why not combine them?I’ll try to make 10 different games with 10 different languages, starting with this Java game. I won’t make this one alone but that hardly matters I guess, there’s plenty of time to code in solitude later.These are some I had in mind:JavaThis one is slated for release in the middle of OctoberC++I’m not sure if this one is considered cheating? I mean I’ve made a few already.CI haven’t done much pure C, and this looks like a nice time as any.LuaI’ve used you to change values without compiling before, but do you have more to offer me?ClojureI do love lisp and as it runs on the JVM it shouldn’t be too different from Java.ScalaScala is one of those languages you justgotto try someday. Also a JVM, piece of cake right?PerlPerhaps my current favorite language, it’s just so fun to write you know?PythonWhen you’re gonna do theLudum Daremany are recommending you to use Python withPyGame, it’s time to find out why.Coffee-script+ html 5One of the more hyped up web technologies right now and I haven’t used them? Shame on me.HaskellOh Haskell, I’ve tried to get you down the last two summers but you won’t quite let me. Enough is enough, you’re going down!I might change one or two later on if I find something better to try out (C++ is a bit lazy to include) and I certainly won’t do them in this order. There’s a big chance I won’t do them once a month either, but that’s the general goal I’m setting up.Now it’s time to do some other, more boring, school work…Published:September 12,2011Revised:January 23,  2019indc7d7c4Tagged:Game MakingPreviousNext</description>
      <pubDate>Mon, 12 Sep 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Back to Training</title>
      <link>https://www.jonashietala.se/blog/2011/09/04/back_to_training</link>
      <description>Back to TrainingPublished:September  4,2011Revised:January 23,  2019indc7d7c4Tagged:Taekwon-doFive days of school now and things are starting to settle down a bit. The courses are pretty cool; we have linear algebra which is pretty interesting, we have a java course where we’re going to make a game (!) and one about structures and algorithms. Pretty promising but we’ll see how things pan out.Taekwon-do practice has started and it’s awesome. In the beginning it’s so hard so I always wonder why I continue, but in the end it’s really fun and it feels good after. If you haven’t tried it you really should, or some other martial arts cause it’s pretty cool.It’s a perfect training for both mind and body. You might think it’s just mindless hardship thanks to all the martial arts movies/anime/manga with crazy training, but you’re also training your awareness, your creativity and decision making and more. Especially when sparring it’s absolutely paramount that your head is with you, doesn’t matter how fast or strong you are, if you don’t fight with your head you’re pretty screwed. That’s what I really like about it, it’s a pretty smart training.What I don’t like however, and this is totally unrelated to anything, is the rain! I went to school five days and I got soaking wetfivetimes! Hrblr… That’s why I’ve decided to do absolutely nothing today, I might watch some GSL and read a bit. I’ve gotLearn you a Haskell for Great Good,Effective JavaandThinking in Javawho can hold me company a bit.And then there’s Taekwon-do training of course!Published:September  4,2011Revised:January 23,  2019indc7d7c4Tagged:Taekwon-doPreviousNext</description>
      <pubDate>Sun, 04 Sep 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Getting Comfortable</title>
      <link>https://www.jonashietala.se/blog/2011/08/28/getting_comfortable</link>
      <description>Getting ComfortablePublished:August 28,2011Revised:July 23,  2013inaf1cdd3Tagged:New Stuff,ComputerSo I physically builtthe computerand now I’ve been using it a while, configuring stuff and getting used to my new screens. I think they’re about three times wide as my old laptop and now I have this one huge vertical space which is absolutely wonderful for surfing forums and reading code. Damn I love coding on it! When I go back to the laptop I feel cramped..And while we’re at dissing the old - I can never ever like another keyboard again! Well, at least not another rubber dome or scissor switch one.No this day forward I’m a mechanical keyboard fantast. You might think I’m crazy but the difference is pretty huge, before my fingers got tired but now they don’t and it’s even fun to type again!If that got you interested you need to readthis geekhack post, it’s nice to say the least.Back to my screen setup again - yes everything with my new computer is either the monitors or the keyboard - I wanted to usexmonadwithout relying on xfce this time. I like xfce as a truly lightweight window manager but a tiling window manager is just vastly superior, and the xfce statusbar is pretty ugly..I set up a nice looking statusbar and some stuff on the desktop withconky. I’ve been wanting to set up a todo list and while I was at it I put up my assignment due dates and my schedule too. And never forget the ever so important manga updates!My dual screen setupA nice little feature I added down on the right is the time in various timezones, they adjust to summer time on their own dates and they change the abbreviations too - from CEST to CET and so on.Something that didn’t go smooth at all is the gaming - I couldn’t ever get any games to work with wine! After a while I found out that an older driver solved the problem, but most games still don’t work with dual screen. So I kinda have to switch between two config files, but that works too I guess.All my config files are up ongithubas well if you’re interested.Published:August 28,2011Revised:July 23,  2013inaf1cdd3Tagged:New Stuff,ComputerPreviousNext</description>
      <pubDate>Sun, 28 Aug 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>New Computer!</title>
      <link>https://www.jonashietala.se/blog/2011/08/21/new_computer</link>
      <description>New Computer!Published:August 21,2011Revised:January 23,  2019indc7d7c4Tagged:New Stuff,ComputerI briefly mentioned my new computer inthe last postand I thought I’d make a post about it, as it’s awesome (as all new computers are).The specs:GPU:Gigabyte GeForce GTX 550Ti OC 1GBCPU:Intel core i5 2500KCPU cooler:Zalman CNPS-9900NTMotherboard:MSI P67A-C45 REV B3Ram:Corsair 4GB (2x2048MB) CL9 1600Mhz XMSHarddrive:1TB Samsung Spinpoint F3 HD103SJPSU:FSP Aurum 400W 80+ GoldDisplays:2 x Dell U2211H ultrasharp 21,5“ widescreenKeyboard:Das Keyboard - Ultimate Model S SilentDVD burner:Samsung DVD±R/RW/RAMCase:Fractal Design Define R3, BlackThe lookI wanted the computer to be fast and silent and Ihadto have two screens. I had a budget of 12,000 SEK and almost managed it too.The screens I chose are two fairly large widescreen IPL screens, very solid, but they quickly ate up about a third of my budget… In hindsight it was a good investment, they’re absolutely wonderful!The processor was fairly straightforward to choose - the i5 2500K is a beast for it’s price. I don’t really need 8GB ram, I think I’ve used 2GB max before so I just stuck with 4 this time. The motherboard is nothing special but I don’t need it to be either.I’ve got about 4TB of storage laying around here so I don’t need any more really, but I chose a relatively fast and silent 1TB disk. I’d love to get a SSD but I couldn’t squeeze that into the budget.Although you can say you don’t need a DVD reader/burner in this era of usb sticks it’s still nice to have, especially since I’ve got a few installation disks I’d like to use. A small fee that saves time I’d say. Floppies are dead for me though.I also wanted it to be quiet and according to some who probably knows better than me by far the biggest noise source is the stock CPU silencer - so I threw down one which looked good. In hindsight it works great too.The case looks good and it was also solid, no qualms there. But the one big issue I had was the graphics card, oh how hard it was! I wanted something silent, something from Nvidia (Ati drivers used to suck on linux, but maybe not anymore), something that’s reasonably powerful and also cheap. Not a bad combination I say! I think I chose something reasonably good - the fan is very silent, it’s a good chipset and it wasn’t all too expensive. However I haven’t gotten any games to work with it on linux but that’s probably a configuration issue, annoying anyway.Keyboard, Das KeyboardThe keyboard, oh the keyboard! I got it in my head that I had to have a mechanical keyboard, they’re supposed to be a lot better than the “regular” ones. And oh yeah it’s absolutely wonderful, it’s a joy to type in and I’m already irking when I have to go back typing on another keyboard. But it is a tad too load according to Veronica, and it was oh soexpensive.My workspace!Overall I’m very happy and I don’t think I would’ve done anything different if I were to buy it today, except maybe try an Ati card, some say the drivers aren’t bad at all anymore.Finally some more pictures:Published:August 21,2011Revised:January 23,  2019indc7d7c4Tagged:New Stuff,ComputerPreviousNext</description>
      <pubDate>Sun, 21 Aug 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Resurrection</title>
      <link>https://www.jonashietala.se/blog/2011/08/18/resurrection</link>
      <description>ResurrectionPublished:August 18,2011in5ce0df3Tagged:LifeAah what a nice summer!It was nice to be back in Övertorneå, doing nothing in particular. Just not having to make lunch and dinner every day is such a relief, and if you do slip up food with grandma or Veronica’s parents is only a phone call away. I watched TV, played rollercoaster 2 and simcity 4 and just killed time in front of my beloved (PC).The only real work I did was clean the house a time or two and made food for my little brother Filip and did some exercises with him when my parents worked. But it was a pretty small price to pay as my mum helped me invest in a new computer! Of course dad couldn’t find out but that wasn’t so hard - I do live about 1400 km away from home anyway.But now things are moving back to the way things were before the summer break; I’m back in Linköping cooking (lunch, dinnerandbreakfast), trying to remember watering our plants and generally enjoying life. Everything is almost set for Veronica’s return so I need to take it easy a bit before she storms into my life again tomorrow…There’s a lot of stuff I need to reboot again; studying obviously but I also want to make more games and program a bit which I completely neglected the last months and taekwon-do is starting again! My first practice went to hell though, I almost managed to get a blackout as I didn’t drink nearly enough but oh well.But the first step is to write a bit more here, I hear that’s auseful skillto have. Instead of taking a boring class I can just write stuff here I guess.Published:August 18,2011in5ce0df3Tagged:LifePreviousNext</description>
      <pubDate>Thu, 18 Aug 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ludum Dare 20 Timelapse</title>
      <link>https://www.jonashietala.se/blog/2011/05/02/ludum_dare_20_timelapse</link>
      <description>Ludum Dare 20 Timelapseâ˜Published:May  2,2011Revised:July 23,  2013in7a1ecc1Tagged:Timelapse,Ludum DareSo this time I managed to compose a timelapse of my weekend and the making ofMy Minions. Sadly I lost the first few hours as I forgot to turn it onâ€¦Anyway hereâ€™s the result:Click to view on YouTubePublished:May  2,2011Revised:July 23,  2013in7a1ecc1Tagged:Timelapse,Ludum DarePreviousNext</description>
      <pubDate>Mon, 02 May 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>I Made It!</title>
      <link>https://www.jonashietala.se/blog/2011/05/02/i_made_it</link>
      <description>I Made It!Published:May  2,2011Revised:October 13,  2023in880a47eTagged:Ludum DareIt’s been over a year, but I haven’t lost (most) my touch yet! For the second time I’ve completed aLudum Dare! Not an easy feat and yet there are tons of games that look absolutely wonderful. I’m not there yet but now I have at least gotten back into game making again, long overdue.I will make a formal post and all that jaz when I wake up tomorrow, or maybe I’ll sleep the whole day… Nah not really, but at least a while.Here’s my entry btw, didn’t turn out the way I wanted it to but in the end I’m quite satisfied. There are a ton of possibilities for it though.Oh well. Nap time!Published:May  2,2011Revised:October 13,  2023in880a47eTagged:Ludum DarePreviousNext</description>
      <pubDate>Mon, 02 May 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>My Minions</title>
      <link>https://www.jonashietala.se/blog/2011/05/02/my_minions</link>
      <description>My Minionsâ˜Published:May  2,2011Revised:January 19,  2019in44a47dbTagged:Games,Ludum DareSo I think I made it! It became a pretty different game from what I set out to create, but Iâ€™m glad with how it turned out.My MinionsInstructionsBuild a pathway and then place objects or release minions on it, everything must be on a path. Place musical objects or make the minions turn or split to make sound and create some music. Or you can create a digital circuit and make it do something fun.ControlsMouse Left - Place an object1 - Toggle up through objects2 - Toggle down through objectsSpace - Release a minionK - Kill all minionsP - PauseLeft Shift - Increase speedLeft Ctrl - Decrease speedL - Load mapS - Save mapF1 - Console, nothin fun :(F10 - Exit the gameNow beware, I didnâ€™t have the time or energy to create a full blown level saving,
so it will always use â€œlevel.datâ€ in bin as itâ€™s save file. It will overwrite and
it will do so without asking.Sourcehttps://github.com/treeman/My-MinionsIf you want to build it yourself it depends on: lua, boost and sfml.Published:May  2,2011Revised:January 19,  2019in44a47dbTagged:Games,Ludum DarePreviousNext</description>
      <pubDate>Mon, 02 May 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Making a Game Again?</title>
      <link>https://www.jonashietala.se/blog/2011/04/28/making_a_game_again</link>
      <description>Making a Game Again?Published:April 28,2011Revised:July 23,  2013inaf1cdd3Tagged:Ludum DareI’ve gotta do a lab today at school, tomorrow I need to do the exam I missed when I had my glasses-missing headaches and I’m going to Ikea and some other shops for, you guessed it, shopping! Sure it’s fun and sure I need to do these things but the only thing on my mind now is making a new game. This weekendLudum Dareis on again and I would really, really like to enter it! It’s beenover a yearsince my last Ludum Dare and almost 11 months since mylast game.I want to make games again..I can’t promise a new game this weekend but I think I might have the time for some game creation on friday, saturday and sunday evening/night so I just might. The last time I even had a massage course the whole day on sunday/saturday so I should be fine.This time I also think I can come up with some more sound and music compared to the last time (where I only had two thuds!). I gotLMMS, a free music creation program. I really suck at making music though lol.I haven’t made a game since I switched to Slackware either, luckilySFMLis cross platform. I’ve also got my old7days library, my collection of old game creating codebase which I was pretty proud of for a while.For graphics I think I’m aiming for some pixelated cool stuff withmtPaint. Pixelated stuff looks awesome, if you’re good at it, and I’d like to make something similar.. At least a little similar.So for a quick recap, if I’m going to make a game again this is what I’m going to use:LMMSfor musicSFMLas the core game library (graphics, sound and input)7days libraryfor useful stuffmtPaintfor pixel graphicsAs usual it’ll be made in C++ (I might do something else another time) and I’ll probably listen toRaubtier, Sarah Brightman, Hans Zimmerand some classical composers(Mozart, Bach, Vivaldi etc).Published:April 28,2011Revised:July 23,  2013inaf1cdd3Tagged:Ludum DarePreviousNext</description>
      <pubDate>Thu, 28 Apr 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>What's up</title>
      <link>https://www.jonashietala.se/blog/2011/04/22/whats_up</link>
      <description>What's upPublished:April 22,2011in5ce0df3Tagged:LifeIt’s been a while again since the last time we met mr. Blog. I’ve been busy with school and other stuff. I’ve thought about you but I just never really picked up emacs to write to you. I know it’s my fault but I beg of your mercy mr. Blog.You knowthat I had laid off school for a bit but now I’ve caught up with almost everything. I’ve got a bit of electronics left: 2 labs and one project assignment. It’s a pretty damn hard course but now when I’ve taken my time to sit down and go through everything it’s quite fun! It’s also a course over the whole semester so it’s not even done yet. The other thing I’m behind in is math. I chose not to do the last exam, so I can do it now in about a week.I’m home in Övertorneå again and it’s fairly chill here. It’s pretty nice to eat food someone else has made, and I don’t have to think about holding the apartment afloat. Admittedly Veronica is agreathelp (I might actually be the help).I’ve been meaning to program a bit but I’ve only done it a little, I’ve been watching starcraft and just chillin’ for the main part.I’ll be sure to update a bit better for you mr. Blog.Published:April 22,2011in5ce0df3Tagged:LifePreviousNext</description>
      <pubDate>Fri, 22 Apr 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Four-Eyed Update</title>
      <link>https://www.jonashietala.se/blog/2011/03/21/a_four-eyed_update</link>
      <description>A Four-Eyed UpdatePublished:March 21,2011in5ce0df3Tagged:LifeWow it’s been a while! Almost a month and a half since mylast update. There I complained about my almost constant headaches which hampered me a lot actually. Luckily now I have joined the rank of cool.I took home three frames I think and tried them out and I settled some I thought were fairly good looking, nothing special mind you but at least they didn’t look horrible on me. Then I went back and I settled on the semi-expensive ones and then I waited. And waited. Then I went back and asked but the glasses didn’t fit into the price class I’d chosen, something about the frames being too bent, so I had to pay some more.Then I waited again, and a little bit more… until I called once more, now I was getting pretty pissed, but they should be here this Friday. They called on Thursday and finally I had them! It’s funny, I was going to demand some discount but even the pricier glasses didn’t fit and so I got some really expensive ones. Fair enough I thought and so I left.The first few days were pretty disoriented, but man oh man what a difference. It’s funny how you don’t realize how bad your sight is before you get a pair of glasses and that really fit me well. Suddenly I didn’t have to stick my nose into the screen to see the text and today I was at school the whole day! Sure I’m a bit lazy sometimes but I also couldn’t concentrate like this before.Life is good.Published:March 21,2011in5ce0df3Tagged:LifePreviousNext</description>
      <pubDate>Mon, 21 Mar 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Week of Headache</title>
      <link>https://www.jonashietala.se/blog/2011/02/09/a_week_of_headache</link>
      <description>A Week of HeadachePublished:February  9,2011in5ce0df3Tagged:LifeThis was supposed to be a productive week with lots and lots of Perl and Ada but instead I’ve had this big headache all week, and some the week before and it’s gotten pretty bad so I can’t really concentrate on anything really. The electronics assignment was a bitch and it took a looong time to complete, even if all I had to do was to rewrite some stuff. You just love when the result is completely wrong just thanks to a misplaced minus sign.So now I’m a bit worried, luckily not as much as my girlfriend, and what’s the cause of this? The lack of water is probably the source of 90% of my headaches but now when I drink and drink it only eases of a bit and then it’s back. Painkillers help a bit but I don’t want to turn into a junkie just to be able to act normally.Luckily I think I’ve found the reason, but sadly it’s not the very best one. I think I need glasses. I squintall the timein front of the computer and I’m getting headaches when I’m reading. So this Friday it’s judgement day. I dunno what I’m hoping for, if it’s glasses then fine at least it should be better, but if it’s not then it might be a bigger problem somewhere.Me of tomorrow?Published:February  9,2011in5ce0df3Tagged:LifePreviousNext</description>
      <pubDate>Wed, 09 Feb 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Little Things in Life</title>
      <link>https://www.jonashietala.se/blog/2011/02/03/the_little_things_in_life</link>
      <description>The Little Things in LifePublished:February  3,2011in5ce0df3Tagged:Programming,Books,LifeIt’s the little things in life that makes it extra special. Sometimes it’s the luxury of coffee together with the morning paper and other times it’s just a small simple smile from a random stranger, kid or dog. Today when I got this bad headache I got saved by a two hour nap and myProgramming in Adabook. It was quite a pleasure to just read it and not worrying about anything else. I even think my headache disappeared a while there.And if that wasn’t enough, my long lostModern Perlis finally here! I’ve skimmed a little and boy I think I’m going to like this one. I’m soon up to two digits with my programming books and I really do like them. Even if I’m not doing anything in that particular language it’s still fun to just read about. There’s always something you’ll learn and even if not I still find it soothing.Reading books, threads, blog posts or random forum rants/wars about programming is sometimes coffee for my brain (I don’t actually drink coffee or anything with caffeine. I’m almost feeling like an endangered programming species).If the book is actually worth reading we’ll see and I’ll report back when I’ve gone through it.Published:February  3,2011in5ce0df3Tagged:Programming,Books,LifePreviousNext</description>
      <pubDate>Thu, 03 Feb 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Focusing Attention: Programming</title>
      <link>https://www.jonashietala.se/blog/2011/01/30/focusing_attention_programming</link>
      <description>Focusing Attention: ProgrammingPublished:January 30,2011Revised:January 23,  2019indc7d7c4Tagged:Attention,ProgrammingThese last two weeks have been a small attempt at clearing up my head a bit. I have far too many things I’d like to do and even if it’s not possible to do them all at once it didn’t stop me from thinking of them. One minute it’s that and the other it’s something completely different. This is really not good as it messes with thetop ideaa lot so I decided to do something about it. By focusing onone single thing each weekI’ve been trying to remedy the situation.Now I haven’t really spent a lot of time with the things I’ve been focusing on, but I’ve been a whole lot calmer and not as stressed up as before. So I think it’s good for me.This week I’m gonna focus on something I haven’t really done so much, namely programming. The little I’ve done is some stuff for school and it’s fun and all, but it’s not really the same as working on your own project. Now I think I’ll try to complete the assignments for the course, but that’s not really a priority and if it’s even a little bit stressful then I’ll cut back on it. We’ve got plenty of time left and it’s not worth it to get stressed by something like that.No I’ll focus on Perl (my new Perl book should arrive this week) and making something fun: an IRC-bot. A simple bot isn’t much of a challange so I need to add some cool functions to it. I’m really annoyed that a friend of mine isalwaysahead of the latest manga releases so I think I’ll automate that one. I’ve actually already made one in both Perl and lua, but they’re pretty damn bad so this time I’ll make it right. Naturally I’ve got a ton of other stuff to add but we’ll see where we end up.The point isn’t to make a bot with a million features, but to start hacking on something fun. Hell I’d be happy if I just stick to the new book and learn Perl a bit.Published:January 30,2011Revised:January 23,  2019indc7d7c4Tagged:Attention,ProgrammingPreviousNext</description>
      <pubDate>Sun, 30 Jan 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Poking at Emacs</title>
      <link>https://www.jonashietala.se/blog/2011/01/30/poking_at_emacs</link>
      <description>Poking at EmacsPublished:January 30,2011Revised:July 21,  2013inbcd6a62Tagged:ProgrammingI’ve been a vimvimfan for a while now and with somerecent configsI’m starting to feel pretty confident and happy with it. For those who don’t know it’s basically a text editor, like notepad, but with a lot of keycommands which allows you to edit code (and text in general) faster. For writing a simple straight up text it might not be worth it, the learning curve is pretty steep, but for someone who codes a lot it’s really good in the long run.Here’san article I read when I read when I started with vim.The thing is that I need to work at school too and everyone there use emacs. Emacs is in many ways similar to vim, but they’re a bit likebitter competitorsand if you’re a vim user, like me, then you’re not an emacs user and vice versa. Also I haven’t gotten vim to work as I want to at school, meaning it doesn’t workexactlylike I’m used to (I’m quite picky with that). So what I’ve done up until now is that I’ve been working from home and trying to avoid emacs as much as humanly possible.It’s been working okay so far, but I don’t think it will for much longer. When we’re declaring our labs our teachers use emacs, when I need to collaborate with other students then they most likely will be using emacs and when we have our exam. It was pretty ridiculous yesterday when we had to show our lab and I got really, really nervous on how to open multiple files in emacs… It feels like something I should be able to do in my sleep and if there’s anything like a nerd ranking somewhere I think I just hit rock bottom.No this shouldn’t be allowed to continue so now I’m going to give emacs a try. I doubt that it’ll replace vim but still I think it’s quite nice. In theory it should be just as nice as vim, with really fast code editing once you get used to it.Here’s a better comparisonof the two. I guess I just don’t like the idea of having to climb another intimidating learning curve.I’ve used notepad, visual studio and vim. Emacs seems though.Published:January 30,2011Revised:July 21,  2013inbcd6a62Tagged:ProgrammingPreviousNext</description>
      <pubDate>Sun, 30 Jan 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Focusing Attention: Study Hacking</title>
      <link>https://www.jonashietala.se/blog/2011/01/26/focusing_attention_study_hacking</link>
      <description>Focusing Attention: Study HackingPublished:January 26,2011Revised:July 21,  2013inbcd6a62Tagged:AttentionA week of drawing is over, but I didn’t draw that much. It was a little bit of a fail from my part.But the past is the past and this week I’m going to be study focused. Not that I need to study, but I really need to rework my study technique. I’ve been going on like a classical student, in the bad sense, by skipping class and getting super stressed when the tests and deadlines are over me. Somehow you manage with some last-minute studying and all is well.Well not really. I already have a bad stomach and stress makes it a lot worse. Even if I didn’t have this problem stress is never good, especially not when youneedto take this test or finish this assignmentfor tomorrow. It screws with my health, my study results and it intrudes on my free time far too much I’d say.This is when I dusted an old bookmark I found a long time ago:Study Hacks. It’s some guy who writes about studying and study technique and he’s gotsomeprettygoodideas. This is what I’ll focus on this week: to change my routines and take control over my studies and don’t let them control me.Here’s a little rundown of the main principles fromStudy Hacksas I understand them;Do fewer thingsSure it makes sense. When I signed up for an extra course last year I felt pretty damn stressed and I couldn’t really focus on my other courses knowing I had this extra class I missed to catch up with. It was even on my mind when I tried to do other things and when I got my stumach problems I decided to drop it. That was seriously a pretty damn good decision: I felt a lot better with it gone.Do them betterAlso what are good grades? They should show your skill but if they’re good they should also impress. And what are you most impressed by? Someone with straight-A or someone who’s read 40 points more but with slightly worse grades? I think we’re more impressed by deep knowledge in a smaller area (better grades in fewer courses) than by someone who’s a know-it-all but specialist-in-nothing. Maybe it’s a good idea to focus on getting really good grades instead of trying to do too much at once and risk to spread out too much?Know why you’re doing themLastly it makes sense why you should know why your study technique works (or doesn’t). So we can change and adapt. After all what is the definition of Insanity?Doing the same thing over and over again expecting different resultsAlbert EinsteinPublished:January 26,2011Revised:July 21,  2013inbcd6a62Tagged:AttentionPreviousNext</description>
      <pubDate>Wed, 26 Jan 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The I'm Great quote</title>
      <link>https://www.jonashietala.se/blog/2011/01/19/the_im_great_quote</link>
      <description>The I'm Great quotePublished:January 19,2011Revised:July 21,  2013inf81972cTagged:LifeA new semester at the uni and so far it looks promising; I got a hold of some new books even though the bookstore had a snakelike queue similar to theJörmungandr(the snake that encircled the earth in nordic mythology) and our new programming course started. This time it’s Ada’s turn and as always it should be interesting. At a first glance it doesn’t look like it’s introducing anything completely new from what I’m used with. I guess it looks like a cross between C and Haskell’s type system spiced up with some other stuff.It’s funny how I notice all these little, syntactic similarities (haven’t done anything real with the language yet so I’m a bit shallow now but whatever) from different languages. It was a long time ago I came across a language that distinguish between functions and subroutines. I think that was the case with Visual Basic, my oh so dear first language a few years ago. Might’ve been five years ago?Anyway quite enough of that, I don’t want to derail too much. What I really wanted to write about is when our new teacher, who by the way is completely awesome, asked us who thought they were a great programmer. Most of us laughed it off but I think there were two, maybe three, who raised their hands.I thought about raising my hand, but who do I think are great programmers?Knuth,Thorvalds,Djikstra,StroustrupSilvermanandCarmackcomes to mind. They’re probably not the greatest, but they’ve done some really notable things. Do I think I’m at their level? What a laugable question, I’mmilesaway. And I’m sure there’s someepic bearded fellowsomewhere out there who’s even higher on the programming skill ladder.Now what is a great programmer then? I have no idea. But I do know that with all the things I don’t know, I couldn’t be one. Sure I’ve done something in about 10 different (some not so different) languages. But there arehundreds more. I’ve done nothing low level, I have no experience with op codes or assembly and I’m not up to date with the latest scripting languages. There are a few new interesting languages likeRust,CoffeeScriptorGowhich I haven’t even looked at yet. Of course the number of languages you know doesn’t make you great, but it just feels like I’m missing stuff.Sure these guys could be great - who am I to say otherwise? But you’ll have to wait a long time for me to spill the I’m great quote. Hell, maybe even a lifetime?Published:January 19,2011Revised:July 21,  2013inf81972cTagged:LifePreviousNext</description>
      <pubDate>Wed, 19 Jan 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Focusing Attention: Drawing</title>
      <link>https://www.jonashietala.se/blog/2011/01/17/focusing_attention_drawing</link>
      <description>Focusing Attention: DrawingPublished:January 17,2011Revised:July 21,  2013inbcd6a62Tagged:AttentionIn mylast postI wrote about some ideas and projects I have and how it’s a little bit too much at a time, so now I’m going to try something new here. In the beginning of every week I’ll declare something I’ll be focusing on and then that’s the only thing I should focus on on my free time. Just so I don’t drift off from irc bots in haskell to opening a new Erlang book or starting a game and then move on with another.Not really so I don’t work on several things at once but so I don’t think about the other things too much.This week I think I’ll be focusing ondrawing. I kinda like to draw and I drew a lot when I was little but then it wore off a bit, I dunno why. I think I was pretty good too, well I didn’t think so then but when I look back at the drawings I’m sure I at least had something going for me.Recently I bought the bookDrawing on the Right Side of the Brain- I’m not really sure why but so far it’s been pretty darn good. Hopefully I’ll have some progress, but I’m sure I’ll have fun whether it’s a success or not.Of course there aresome amazing stuff aroundand if I could get a tenth or even one percentage of his skill it’d be cool has hell!Published:January 17,2011Revised:July 21,  2013inbcd6a62Tagged:AttentionPreviousNext</description>
      <pubDate>Mon, 17 Jan 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Top Idea</title>
      <link>https://www.jonashietala.se/blog/2011/01/14/the_top_idea</link>
      <description>The Top IdeaPublished:January 14,2011Revised:January 23,  2019indc7d7c4Tagged:Life HackingRecently I’ve been having a dozen ideas and projects I’ve been poking around with:I wrote a simple lua, later perl, which announced when a newday9episode has come. Later I expanded it to search for new manga episodes, but now it’s broken and unfinished.In an attempt to learn Haskell I began writing a simple irc bot, but I never did come far with the language and now I’m a bit stuck. I have the bot itself working but I want to restructure it with plugins instead of hardcoding every command and I’d like to have some interactivity like saving state and fetching info from internet. But I haven’t come that far and now it’s on a stand-still.Totally not related to the other two I want to learn how to draw. On a little whim I bought the bookDrawing on the Right Side of the Brainand I was totally blown away. I was a bit sceptic at first but she’s explaining everything so scientifically andthe results look amazing. Almost too good to be true. But as always I started but I’m not there yet, in fact a pretty long way from finished.Back to the programming business. I’d like to update the backend of this site, but to be fair it’s notthatimportant. Just something that’d be nice to do.What’s worse is my game projects. What projects you ask? Well I started a few much bigger games this time and they have just faded away from my brain little by little and now I’m not that into them. I mean the ideas are amazing, but I haven’t done anything with them.The issue here I think is that I’m trying to do far too many things at once. Back when I wrote all myexperimental gamesI didn’t have these many things going on. In fact they were theonlything on my mind - you know the thing you think about when you’re in the shower or before you go to sleep. Hell I’ve even woken up, all sweaty, and had a solution but the very problem I had struggled all day with!Paul Grahamwrote anice articleabout this a while ago. He’s more focused on startups of course but the core of the article very much applies to me. I’m not keeping the right idea on the top of my mind, instead I think it’s changing - I’m doing too many things at once. One time I’m focused on say learning Haskell but the next day, or even the very same night I’m all wound up about a game I’d like to make! How will I ever get things done if I’m floating around like that?Of course Paul points out that I’m in good company, even Newton fell into this trap and I have a feeling many more have this problem.Published:January 14,2011Revised:January 23,  2019indc7d7c4Tagged:Life HackingPreviousNext</description>
      <pubDate>Fri, 14 Jan 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2010 in review</title>
      <link>https://www.jonashietala.se/blog/2011/01/06/2010_in_review</link>
      <description>2010 in reviewPublished:January  6,2011Revised:April  1,  2015infdcf171Tagged:Yearly ReviewI saw apost on briancarperwhere he reviews the past year and it sounds like a great idea actually.2010 Geek AchievementsWrote a few games earlier this year;The Chronicles of Bim: The 100 Fake AfrosA Geek ValentineBeebop The Island HopperWhere’s Teddy?Updated this site a bit.In the process I learned a lot of PHP, Javascript, mysql and design. Fun and useful.Switched toSlackwarewhich I like atonbetter than Ubuntu.Learned a lot more linux. Thanks Slackware.Learned a lot moregit.Learned a lot morevim.Tried out and configureduzblwhich I still use.Learned a bit of Haskell.Tried out Perl a bit.Learned a lot more Lisp.Switched to zsh. It’s fine after a bit of configRebuilt a custom Kernel a few times, some failures but learned a lot.  And got starcraft 2 to work!Read a lot. This years high were One Piece and Jeffery Deaver. Real World Haskell scores the highest Geek score.2010 Non-Geek AchievementsMoved to Linköping with my girlfriend Veronica and I didn’t just survive but I also liked it!Enrolled in a Linköpings University in Computer Science. We’ll see if it’ll get geeky later, atm it’s a breeze but we have a ton of seemingly fun courses to go.Took a massage course.Learned how to cook more than one dish.Did the dishes, expertly maneuvered our vacuum cleaner and did the laundry.More than once!Started Taekwondo and after a few months of hard work I even got a yellow stripe for my white belt!2010 FailuresDidn’t produce enough games.Didn’t write enough code.Got worse in my stumach towards the end of the year. Too stressed and not enough regular meals I guess.Didn’t blog enough. Sorry :(Plans for 2011Get good results in school.Make more games.Code more!Blog more!Learn more Haskell (again). This time continue with the small irc bot I’m writing.Learn a few more languages and expand my knowledge. Maybe some low level stuff with C or assembly? Or some more higher level?Get a better sense of algorithms.Try to be a bit more socialGet a new belt in Taekwondo.Be a bit more disciplined with training, coding and school.Loosen up a bit more so the stumach won’t mess anymore.Last but not least, keep Veronica happy and help around at home.I thought I didn’t do anything this year I guess it’s been a productive year anyway. But in 2011 I think I’ll do a lot more still.Published:January  6,2011Revised:April  1,  2015infdcf171Tagged:Yearly ReviewPreviousNext</description>
      <pubDate>Thu, 06 Jan 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>My Dream Game: The Tycoon</title>
      <link>https://www.jonashietala.se/blog/2011/01/05/my_dream_game_the_tycoon</link>
      <description>My Dream Game: The TycoonPublished:January  5,2011Revised:July 23,  2013in7a1ecc1Tagged:Game Design,GamingI’ve been playingStarcraft 2a little this christmas. It wasn’t dead serious 1v1 which really is my favorite but I’ve played 2v2 with some friends and I actually played the campaign a bit and it was pretty fun! Usually I never play the campaign on RTS games but this one I liked. I even bought it to my little brother and he seems to like it.But it’s funny - yesterday when I went down to check on him he was playingRollercoaster Tycoon 3!Illustration of Rollercoaster Tycoon 3One of my absolute favourite games (the whole series in fact) and that got me all nostalgic again. Tycoon games are so good;SimCity,Theme Hospital,Rollercoaster Tycoon,Evil Geniusand more! I’m not surprised to see him playing this old game, I replay these games myself from time to time. I’m almost throughTheme Hospitalfor the fifth time or something. You just don’t seem to get tired of them you know.Of course I’d like to make my own tycoon game. Not entirely unlikeJonas IceCream Standbut with actual building of course. I wonder how it’d look like though.evil genius’ traps/base planning + rollercoasters + theme hospital’s hilarity + simcity’s economy = ?The best of the best games should make something good. That’s only a theory though…Published:January  5,2011Revised:July 23,  2013in7a1ecc1Tagged:Game Design,GamingPreviousNext</description>
      <pubDate>Wed, 05 Jan 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Christmas break</title>
      <link>https://www.jonashietala.se/blog/2010/12/18/christmas_break</link>
      <description>Christmas breakPublished:December 18,2010Revised:July 21,  2013inf81972cTagged:SchoolSo school is on a break and I welcome it with all of my heart. The semester has been pretty fun and I really enjoy studying here. We hadlispthe whole time which is a pretty sweet little language and if you haven’t, give it a shot. Then we had math and I do like math, although I wasn’t really motivated this time around and I dunno why. Maybe because I think I got it pretty fast and that didn’t really motivate me to study when the test came around and I got far too many dumb mistakes I think.. Not good, not good.Speaking about math then I took an extra course, mathematical statistics or something funky like that but meh it wasn’t all I thought it’d be. In fact it was almost a bit boring and when I got problems with my stumach again (dunno why, but I think it has to do with stress or my irregular eating patterns, or both) so I kinda dropped it. But nothing’s really missed: we’re gonna have something similar later on anyway.Now I haven’t made anything game related in a while which sucks. A month ago or something I was poking at some prototype but it hasn’t gotten anywhere yet. I was going to enterludum dare 19but then I kinda just didn’t, and now it’s too late to do anything. And I have like a thousand ideas I’d like to do, but I don’t seem to have done anything.Argh!And then there’s my other programming interests of course. I’ve been poking at Haskell a few months ago but now I actually want tolearnthe damn language and the best way to do that is to make something real from scratch, so I’ve started my own (atm extremely simple) irc bot. Then I’ve bought the classical K&amp;amp;R C book and some book about Erlang and I’d like to get going with those too.Add to that we’re gonna do Ada in school after christmas which could be pretty darn fun too. There’s surely not a shortage of stuff to at least!Published:December 18,2010Revised:July 21,  2013inf81972cTagged:SchoolPreviousNext</description>
      <pubDate>Sat, 18 Dec 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Going to University</title>
      <link>https://www.jonashietala.se/blog/2010/10/06/going_to_university</link>
      <description>Going to UniversityPublished:October  6,2010Revised:July 23,  2013in0c5354eTagged:SchoolI mentioned in the last post that I’m going to the university, which might explain my lack of activity here and for that I’m sorry. It’s not as hard as I had imagined, and I don’t have that much in school but there’s still a lot that’s going on. For example now how to make something which doesn’t focus on pasta or meatballs and I’ve also done the laundry a few times. These are all thanks to my girlfriend and without her I doubt that I would eat anything other than pasta and I would constantly wake up just to find that I don’t have any clean underwear left.There are still a few homework things I need to do from time to time, but those are often either math or lisp which are pretty fun so no harm has been done to me yet.I should really begin with the game making again now when my schedual is opening up a bit.A secret preview of my latest game project.Published:October  6,2010Revised:July 23,  2013in0c5354eTagged:SchoolPreviousNext</description>
      <pubDate>Wed, 06 Oct 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The great Hochstapler</title>
      <link>https://www.jonashietala.se/blog/2010/09/19/the_great_hochstapler</link>
      <description>The great HochstaplerPublished:September 19,2010Revised:July 23,  2013in7a1ecc1Tagged:GamingHey there. A lot has happened lately since my last update and my last game here.I’m now a pretty happy student at Linköpings university and I’m reading something similar to Computer Science or Computer engineering, but I guess it’ll become whatever you make it to be. For starters we’re reading a bit math and a bit common lisp, which is fun but hopefully this is just the beginning.Me and Veronica are now living in a fairly nice apartment and I think I’ve increased my cooking skills a few magnitudes since I got here. Admittedly that’s not a too big of an accomplishment…I haven’t had any time, or energy, to focus on game development. There are a few things I’d like to do but we’ll see what happens. My friend on the other hand has been productive and he has just finished one of his big game projects:Hochstapler.Hochstapler, the epic production from Gridlock GamesIt’s a really fun game with some inspiration from the old commodore and I really recommend you to give it a try. The only downside is of course that I just can’t beat his highscore!Published:September 19,2010Revised:July 23,  2013in7a1ecc1Tagged:GamingPreviousNext</description>
      <pubDate>Sun, 19 Sep 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Where's Teddy?</title>
      <link>https://www.jonashietala.se/blog/2010/06/06/wheres_teddy</link>
      <description>Where's Teddy?Published:June  6,2010Revised:September 28,  2023in06bcc1aTagged:GamesSo I did this course Game Design and what’s a course on Game Design without a game? Well, here it is. Made in about seven days (more likely eight) and I thought it became quite cool.Where’s Teddy?How to PlayYour mission is to find teddy and his teddybear friends. The problem is that it’s dark and it’s really hard to find them if you can’t see where you’re going but thankfully you have a candle with you and if you’re lucky you can stumble on more candles to keep you from going completely dark.ControlsMove withArrow KeysSwitch and light candles withSpaceNext Level:NPrevious Level:PReset Level:RConsole:F1CreditsSound effects:Random fromfreesoundMusic:Joshua Holtz - Sounds of InsectsRest:MeSourcehttp://github.com/treeman/Wheres-TeddyPublished:June  6,2010Revised:September 28,  2023in06bcc1aTagged:GamesPreviousNext</description>
      <pubDate>Sun, 06 Jun 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Game Design Analysis: World of Goo</title>
      <link>https://www.jonashietala.se/blog/2010/06/01/game_design_analysis_world_of_goo</link>
      <description>Game Design Analysis: World of Gooâ˜Published:June  1,2010Revised:September 11,  2024ind76e3b2Tagged:Game Design,Game Design CourseContentsIntroductionAnalysisActions and confirmationVarying the mechanicsConsequences of the rulesModsConclusionReferencesIntroductionThis is the second essay for the course Game Design and this thime I will be analysing the gameWorld of Gooa bit.The first levelThe game is very simple. You begin with a structure and a few Goo balls, the charming balls bobbing around there, which you can drag and drop to build on the structure. Your goal is to reach the pipe and it will suck in the surviving Goo balls and you need to collect a certain amount of balls, in this case at least 4. All you ever use is your mouse and one button to pick up and place the balls.A step by step of the core mechanicsThe beginning levels are very easy but it will get increasingly harder and you have to plan your building so you donâ€™t use up too many Goo balls.But as itâ€™s a physics game you will also have to think about gravity so your tower wonâ€™t topple over and crash, which will happen to you a lot in the later levels.Oh noes my bridge is collapsing!Thatâ€™s about the whole game concept right there; build structures to reach the pipe but use so few balls, or building blocks, as you can. You might think that itâ€™s a shallow game with doing the same thing over and over â€“ but you couldnâ€™t be more wrong, there are a lot of different Goo balls to play around with; sticky balls, dangling balls, exploding balls, shooting balls, removable balls and more which will force you to change your build process in different directions. The level design is simply fantastic and it challenges your constructions and it makes the game very varied.The levels are both fun and diverseThe game which inspired World of Goo, namely Tower of Goo was an experimental one week, one person game with the aim of simply building a high tower and you can still do that in World of Goo in a sandbox mode and you can compete online on who makes the highest tower.The level chooser screen, be proud of those flags!If you like challenges thereâ€™s more to do: for every level thereâ€™s this extra hard ending criteria â€“ a challenge â€“ for you to get gray hairs from. Thereâ€™s time challenges, constraints on number of moves and a minimum of balls collected and some of them are extremely though. If youâ€™re successful youâ€™ll get a nice little flag on the level chooser screen.The game is quite large with 5 different chapters and thereâ€™s around 10 levels each. Every chapter has itâ€™s own theme and they vary quite a lot; thereâ€™s focus on explosions, balloons and thereâ€™s even Goo balls you can shoot! This gives the game fairly long but it manages to stay fresh all the way through.The 5 chapters + sandbox (Tower of Goo) is the World of GooAnalysisActions and confirmationOne of the things World of Goo does really well is to communicate to the player. When a first time player loads the first level itâ€™s almost always clear what to do, you have this helpful sign showing your first move (drop a goo ball here) and you have this curious looking pipe just above you and not much else to distract you. After each level you get a score screen on how you did and both the level and world screen are helpfully showing your progress and what to do next. But to me the most impressive thing is how your actions are handled.When you hover your cursor over moving Goo balls or removable joints youâ€™ll get a clear marker around the selected ball and itâ€™ll stop and give you a cute look just to show you â€˜Hey! Itâ€™s me you wanna pick up!â€™. Likewise when you have a ball selected and youâ€™re moving it around for a good spot youâ€™ll get a small notion of where itâ€™s going to connect and always you have a nice big clear marker on where your cursor is.Selecting, building, shooting and movingVisual confirmation in all honor but what really makes actions clear is the sounds. For every Goo ball hovered over and every joint constructed thereâ€™s a short confirmation of your action and for every dead Goo and every block crashed thereâ€™s an unique sound to let you know that something bad happened here in your little world. Every Goo that go down the pipe will emit a happy little laugh and you just love the hear that extra peculiar laugh which will tell you if you did complete the extra level challenge.I didnâ€™t find any sound or visual effect for when your action fails, for example there were no error sound when trying to click in an empty space and the mouse pointer never acknowledged my clicks if they werenâ€™t valid. But you can say that they arenâ€™t necessary, because for every valid action and for every click you can make, where something actually happens, thereâ€™s always a confirmation sound and that is enough to let you know that something was successful and unsuccessful.Although simple the visual and auditive feedback works absolutely wonderful and I never had to wonder if my actions were registered, it felt like they always were and if things didnâ€™t work as I wanted to I realized pretty quick that I was doing something wrong.Varying the mechanicsThe concept of the whole game is really quite simple, create structures with drag nâ€™ drop Goo balls, add in some simple physics and youâ€™re done. Itâ€™s amazing how captivating something simple as this can be and I believe it has a lot to do with the small incremental changes the game makes all the time.One thing the game does is introduce new Goo balls all the time; balls you can remove multiple times force you to climb and restructure, balloon Goos create interesting aerial acrobatics and a sticky Goo makes the structure mobile.Lifting off and climbing is possible thanks to different Goo ballsEven Gooâ€™s with minor changes like industrial Goo which you canâ€™t control or dangling Goo which will only dangle down gives a lot of depth to the game thanks to the great level design.There are lotâ€™s and lotâ€™s of levels which change the way you playItâ€™s not just build straight up; itâ€™s build around, use balloons to topple the tower from island to island and itâ€™s surprising how hard it is to build a tower in water or in a tumbler, you really have to stop and think or else it wonâ€™t work. The game is constantly varying itâ€™s mechanics and you have to change with it, you have to evolve to keep up.Perhaps the most radical experiment is the fourth chapter. We get new Gooâ€™s that shoot! This is different from our regular balls that we can move around freely and they usually build or attach when we release them but these launch themselves when we drag n drop them. Itâ€™s the only way we can move them around and with one type we get to shoot and build.Shooting Goo?Still staying true to the basic mechanics, select ball, drag n drop for effect with some physics and this could easily have been a game of itâ€™s own.Going the other way around World of Goo also experiments with the drag nâ€™ drop of Goo. They introduce block Goo which is immobile and it doesnâ€™t walk around your structure like the other Goo and the only way you can move, the only way you can interact with them is to move them around and use them to block and for support or just to create a very unstable tower.Block Goo; immobile and blocky but yet they manage to add something to the gameAll in all World of Goo uses their simple core concept to itâ€™s limit with a ton of variation and experimentation and it makes the game feel novel all the way through those 50+ levels.Consequences of the rulesWorld of Goo is a physics based game; when building structures you need to compensate against gravity so your tower wonâ€™t collapse and you need to make sure your structure has enough joints so it can withstand tension and compression. Physics games are hard to create, you canâ€™t rely on a perfect representation as itâ€™s too hard to simulate perfectly and there are many edge cases youâ€™ll have to handle.You can for example make it easier through this level if you force your structure into the wall and this â€œbreakâ€ it. In real life a structure like this would completely break but in the game that doesnâ€™t happen, the joints simply turn inwards and now you have a nice and short structure to move around.Small structures are easier to move aroundThis happens because in the rules you can only break a structure if you either drop it into the ocean or on spikes, and loose them forever, or if you connect with a special construction destroying cogs. Here we exceed the tension and the compression and instead of breaking we get our joints twisted.You even have to abuse the rules because the extra hard level goals canâ€™t be beat otherwise. Iâ€™m sure the creators chose to incorporate the bugs into the game and they even call them features in a way to create bigger challenges in the extra level requirements.Some core game rules abuseThe left picture:In World of Goo in some levels there are sleeping goo balls which you canâ€™t get control of if you donâ€™t get your construction close enough. But you can pick up and move around the balls and even throw them and if you do you can actually make the sleeping balls bounce around too. If you throw at the right angle you can bounce the sleeping balls close enough your structure and theyâ€™ll wake up.The middle picture:Your ultimate goal is the pipe and it will start sucking in your goo balls if you get your construction close. But if you have the green goo balls which you can remove from the structure you can get a small structure hanging from the pipeâ€™s suction! Then you proceed to move the rest of the goo balls freely onto the structure and you will get a lot more balls collected. Itâ€™s so good you can actually get every goo ball, except one, if you do this trick. Incidentally the creators noticed this bug, or feature, when testing and so they set the extra level goal to precisely one less than your total balls.The right picture:In a level thereâ€™s a huge head which hangs from a small hook. When youâ€™ve exploded the head you can get the hook to attach to the wall by throwing goo balls at your dangling structure. It will then connect to the wall because it doesnâ€™t make any distinction to exploding heads or walls, it just sticks to it.ModsThe game is more or less a closed system but if youâ€™re interested it isnâ€™t too hard to create new levels, alter the online scoreboard (which has happened a lot) or even add new Goo balls. The site goofans.com is a dedicated site which collects fan-made levels and mods.Colorful balloons and a new Christmas levelThereâ€™s even a tool,GooTool, which is a tool which letâ€™s you manage your installed mods, manage your profile stats, general options like screen resolution and even add in your own language.These changes, these mods, are mainly geared towards resources and not the actual game rules. It is possible to change them but then you more or less have to rewrite and mod the game on assembly level. This could be said about every computer game but itâ€™s really hard and time consuming to do, but it sure is possible.ConclusionI think World of Goo is an excellent game and there are so many things it does right. The game is good about telling you what to do and when youâ€™ve done something good by using both visuals and sound effects. The game basic foundation of the game is really quite simple but they manage to create a lot of diversity and this fresh feel throughout the whole game by introducing small, and big, variations to the core mechanics.The simple rules will create a few bugs and surprising side effects but they turn it around and they even call them features when they force you to use them if you want to complete the extra hard level requirements.There are a few mods and new levels out there if you hunger for more and with a little effort you can create your own, even if most of the game rules are quite inaccessible.ReferencesSalen &amp; Zimmerman, 2004. Rules of Play. The MIT Press.http://2dboy.com/http://www.worldofgoo.com/http://goofans.com/http://goofans.com/gootool/aboutAccessed may 1stPublished:June  1,2010Revised:September 11,  2024ind76e3b2Tagged:Game Design,Game Design CoursePreviousNext</description>
      <pubDate>Tue, 01 Jun 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Generating ideas</title>
      <link>https://www.jonashietala.se/blog/2010/05/23/generating_ideas</link>
      <description>Generating ideasPublished:May 23,2010Revised:July 21,  2013inbcd6a62Tagged:Game DesignSo I got a fairly fun assignment from the game design course I’m taking for once. I should come up with 50 ideas using my own idea generation technique.I used a sort of “notes in the basket” approach where you placed some notes with words in a basket and randomly drew two and then you should come up with something with the two words. But I’m too lazy to write a lot of notes and it’s pretty damn hard to come up with a lot of good words too, so I tried to automate the process.I searched for some random words and found this site:http://www.wordswarm.net/and I pulled out a few pages and got a few thousand words. Then I made a very simple tool which randomly combines two lines from a file and creates a sentence, much like the you would with the notes but this is just so much faster. Granted I had a lot of shitty words and I got a lot of garbage lines but I could go through so many lines it was a very simple task to get these 50 one-lined game ideas.These are not fully fledged game ideas, but merely seeds from which you could grow a game.Pensionere wheelchair raceFish and surf on the fishDeep sun explorationVimCity - A simcity but with ascii chars which will teach you vimCrazy units RTSRTS with important landscapes - Destructable, things moving, rising water, paths in snow etcHouse destruction  -explosions!Hospital creation with strange diseases you need to cureCreate Nautilus  -an underwater city creatorPrison diner maid  -give lunch to hungry prisonersPrison break  -with stealth, create stuff with different thingsBread seller  -bread maker tycoon?Night debt collection heroImprison Berth the jewel thief  -police hunting a thief in the night/museumFeed azimutal, the mythic beast in the skyThe 59th beetle-killer squads patriotic killingsTrauma center boomMake mt. 63 a tourist franchiseChop the mighty “King’s wood” from the legendary forest of deathUntagling Sarsenet  -the predecessor to skynetThe great pie theftSawyer the egoist antHerbsman Abdal, the lone man growing herbs in the desertCarving the first images  -like caveman styleBart the Darting heroBrady the Big Eater glutton  -Rush into restaurants and eat everything, then splitThe struggle against Montezuma II, A mayan RTS war gameIndustrializing CakedoomMini racers the beginning: AutobahnSaunter on thin ice  -wannabe ice princessClark the Corrupt and Ruler of the Rhen  -screw your inhabitants and take all the moneyA wooden submarine  -the first submarine, the turtleAristocrat apartment buildingManaging the missionaries hygieneThe world’s best ToastsThe raspberry in CosmosThe viking slap-upDigging after teaColorizing the world with a trumpetRound Rod explores Square CityOrdering the OrangesSmuggling over the boarderLife at the Toxic Waste DumpCreating a Ghost Town  -with real ghosts who want to live their lifeRiding a Lawnmower and killing GremlingsDigging gold on MarsThe life of a Bacteria, birth, mutation and world conqueringPut the surfing DuckButler who’s carrying silverPublished:May 23,2010Revised:July 21,  2013inbcd6a62Tagged:Game DesignPreviousNext</description>
      <pubDate>Sun, 23 May 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Competition Feedback</title>
      <link>https://www.jonashietala.se/blog/2010/05/18/competition_feedback</link>
      <description>Competition FeedbackPublished:May 18,2010Revised:July 23,  2013in7a1ecc1Tagged:Ludum DareThe voting is over and I got a few ratings I want to comment on. You can view all ratings and commentshere.They’re all from 1 to 5.Innovation: 3.75This is by far the most positive of the bunch and the one button timing combination worked great!Fun: 3.29Again a good grade and I thought the game was fun although it became really frustrating.Theme: 3.17The islands wasn’t very prominent in the game and the game could’ve been about anything really, but again I’m more than happy with the grade.Graphics: 2.54Very simple and with some more effort it would’ve been better. But I’m happy, programmer graphics ftw!Audio: 2.14I only had two click sounds but still got fairly high. Many decided not to vote on it and I wouldn’t either. They were just last minutes add-ons but good to see someone liked it.Humor: 2.54I didn’t focus on this at all but got some decent grades from it anyway. Not sure if my graphics arethatugly.Overall: 3.13The most prestigious grade and it’s okay. I’m absolutely happy with it, especially since my desperate hope was to getsomethingplayable out of this.Community: 1.64The community rating is for posts and stuff over at the Ludum Dare homepage. Sadly I didn’t spend time there, almost at all, so I can’t really say anything about this.Overall I’m really happy with everything and I’m really happy with my relatively good grades.I will do my very best to make my next game even better, but atm I can’t seem to decide which idea I want to work with (I have like 4-5 serious ideas I’d want to explore).Published:May 18,2010Revised:July 23,  2013in7a1ecc1Tagged:Ludum DarePreviousNext</description>
      <pubDate>Tue, 18 May 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: Beebop The Island Hopper</title>
      <link>https://www.jonashietala.se/blog/2010/04/26/postmortem__beebop_the_island_hopper</link>
      <description>Postmortem: Beebop The Island Hopperâ˜Published:April 26,2010Revised:January 19,  2019in44a47dbTagged:Postmortems,Ludum Dare,Experimental Gameplay ProjectSo I participated in theLudum Darefor the first time and this is a postmortem of my gameBeebop The Island Hopperfor the themeIslands.About Ludum DareLudum Dareis a competition which runs maybe two times a year and the competition is 24 hours long with a specific theme. After the 48 hours are over everyone who submitted a game can rate the other games in different categories such as graphics, fun, theme and overall.More info here.The other entriesView all 205 Ludum Dare 17 entriesHoly helltheylookabsolutelyfantastic! Taking part in a competition like this is so humbling, I canâ€™t even begin to compare myself to the best games out there. But thatâ€™s good, I have games and creators to look up to and so I know how I can improve. Which by the way I can do with everything.StatsThis time I didnâ€™t log my hours and so I donâ€™t have a good enough graph to show you. Thinking back I worked about 8 hours during this 48 hour challenge, two of them on Saturday and the remaining six late on Sunday. I didnâ€™t work many hours on this game but the hours I did work were really productive.PressureOnce again I think Iâ€™ve proven that pressure is the best motivator. The game feels as finished as any other game Iâ€™ve made. Sure itâ€™s not the biggest game and it has very limited features but it was made in less than a third of the time. Actually even less if you count the hours and not the days!The GameEven despite it being extremely simple it did suck up a bit of my time when I tried to beat it (which will take you a minute or two). I kinda liked playing it.The graphics are pretty good, I have a pretty special style and I personally think itâ€™s not half-bad and hopefully you like it too. The music and sound areâ€¦ well there is no music and I have like three sound effects in total - two of them are different kinds of clicks!Overall I like it, but itâ€™s nothing really special. If I would try to give it an unbiased score (we all think our children are fantastic after all) it would probably be a3 of 5.ConclusionThe pressure of a deadline is a powerful motivator and now Iâ€™ve found that no more than a week, or even a weekend, is enough to make a game. And it might even end up being enjoyable.Published:April 26,2010Revised:January 19,  2019in44a47dbTagged:Postmortems,Ludum Dare,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Mon, 26 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Beebop The Island Hopper</title>
      <link>https://www.jonashietala.se/blog/2010/04/26/beebop_the_island_hopper</link>
      <description>Beebop The Island Hopperâ˜Published:April 26,2010Revised:September 28,  2023in06bcc1aTagged:Games,Ludum DareItâ€™s here! The stuff of dreams, an entry for the epicLudum Dare 17has been made! For those who donâ€™t know itâ€™s a 48 hour game making competition which actually is pretty silly. Even more silly is my two hours of commitment yesterday but late this night at about 03:05 I am now, finally, writing this post! The theme wasislandsand this is what I came up with:Beebop The Island HopperControlsAny Key.CreditsSound effects:Random fromfreesoundRandom Coolness:Ludum DareRest:MeSourcehttp://github.com/treeman/ludumdare17Published:April 26,2010Revised:September 28,  2023in06bcc1aTagged:Games,Ludum DarePreviousNext</description>
      <pubDate>Mon, 26 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ludum Dare 17 - an hour or two into it</title>
      <link>https://www.jonashietala.se/blog/2010/04/24/ludum_dare_17_-_an_hour_or_two_into_it</link>
      <description>Ludum Dare 17 - an hour or two into itPublished:April 24,2010Revised:July 23,  2013inaf1cdd3Tagged:Ludum DareI decided to participate in theLudum Darethis time, even though I’ve spent the whole day on a massage course (which by the way was pretty darn good), and about halfway there this is what I’ve done:Chockingly… uglyAll is not what meets the eye though, I’ve got the basics done with fully scriptable islands and actually the very basic gameplay too. Now it’s just the blows and whistles left (meaning it’s about 90% left).Published:April 24,2010Revised:July 23,  2013inaf1cdd3Tagged:Ludum DarePreviousNext</description>
      <pubDate>Sat, 24 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Evolution of RTS games</title>
      <link>https://www.jonashietala.se/blog/2010/04/23/evolution_of_rts_games</link>
      <description>Evolution of RTS gamesâ˜Published:April 23,2010Revised:September 11,  2024ind76e3b2Tagged:Game Design,Game Design CourseContentsIntroductionThe Journey BeginsThe RTS BoomLife After the BoomThe Modern AgeConclusionReferencesIntroductionThis is an essay for the course Game Design and Iâ€™m going to give you a ride through the evolution of RTS game genre. I like RTS games and Iâ€™ve played them for as long as I can remember, from the classic Red Alert and Age of Empires to the newer Supreme Commander and Starcraft 2 (beta).First of all what is a Real Time Strategy game? How do we narrow it down? The first distinction Iâ€™d like to draw is the Real Time part. Games like chess and civilization are most certainly strategy games but they are not executed in real time. Instead you wait for your turn and then make your move. Turn-based games like these are in my mind not RTS games. Neither are â€œGod gamesâ€ like SimCity and The Sims. You have very few boundaries and you can do what you want, when you want and how you want. But I think of RTS games more as a competition â€“ a race against time.Iâ€™d like to draw a loose definition for an RTS: â€œharvest, build and destroyâ€. Practically all RTS games are based around the idea to get money or some kind of resources to build up an army and proceed to destroy your enemy.I will focus more on the beginning RTS games as they are still the main influence to all RTS games and then I will a bit more quickly go through the modern games and the modern ideas that continues to drive RTS forward.The Journey BeginsIn the beginning there was no RTS games. Hard to imagine I know but thatâ€™s the truth. When the idea of RTS was born the gaming scene looked a lot different from now. In the 1980â€™s Nintendo had blown new life into the video game industry and it was the simple games that held us entertained, games like Pong, Tetris and Pac-Man. However the tides were shifting and more advanced games like SimCity were on the rise.Dune II (1992) wasnâ€™t the first RTS game, there had been several games with RTS influence in them but this was the first complete RTS. The game was all about control. You chose exactly what units to build and when to build them and you could command every single unit at will â€“ perhaps drive it across the map to check what your opponent is building?The game introduced the concept of a tech-tree (Technology Tree) where you could â€œtech upâ€ to stronger but more expensive tanks or you could continue to build cheap tanks. Gone where the days when you had to rely on a rock-paper-scissor balance between units, such as tank beats artillery which beats infantry which beats tanks, and instead you had the choice of countering a tank with a bigger tank! Or with a mind-control tank or you could choose to destroy the factory producing the tanks. Choosing the right time to climb up the tech-tree became vital to your success but it was complicated by â€œthe shroudâ€ which was a black fog covering the map where you havenâ€™t been. This in turn forced players to scout and check what the opponent is doing having to constantly revise what units he should build and if he had to tech up.The sandy land of Dune 2Perhaps the most revolutionary concept Dune introduced was the resource system. To build things you had to have spice, the gameâ€™s only resource, and to get spice you had to harvest it on the map and bring it home to convert it to money and then units or buildings. What this practically means is the player had to have control of the map, he had to have a place he could get spice or else he would probably die. The concept of map-control is something that is driving virtually all RTS games to date.
The first online capable game was Warcraft: Orcs and Humans (1994) but the online boom wouldnâ€™t come just yet. Instead it was the game Command &amp; Conquer (1995) who refined RTS a bit more. It wasnâ€™t a graphical masterpiece nor very complex instead itâ€™s simple but it just works. The game screams atmosphere and war. All the units were pretty straightforward (I mean who doesnâ€™t know an apache, a rocket launcher or an M1A1 tank?) so it was pretty easy to pick up. But beneath the simple exterior lay a surprisingly deep game.The game built on Dune 2 and in fact some fans nicknamed it Dune 3; the shroud and the resource system was the same and the tech-tree was built upon and it introduced the concept of a BO (Build Order â€“ a predefined order to build things to maximize unit production or similar). C&amp;amp;C furthered the sense of control, in Dune you could just select one unit at a time but here you could select several, you could then store it in a group 0-9 and whenever you pressed the number again the group associated with it would be selected.Instead of the â€œtank, bigger tank, biggest tankâ€ from Dune C&amp;amp;C furthered the unit differences with tanks and infantry. Infantry was weak and could even be run over by the tanks with a satisfying splat sound, but they were dirt cheap and vital for early scouting. Tanks on the other hand were strong and fast but they were expensive and they had to rely on driving over infantry in order to effectively kill them. This gave the game a whole new level depth.The RTS BoomWarcraft II: Tides of Darkness (1995) became the first mega-successful RTS game. For some the interface was a letdown with no groups or build queues but instead it introduced the standard right click. Example with a peon: if you right click on a gold mine he will harvest and if you click on an enemy he will attack. It also allowed you to build anywhere opening for the oh so popular tower rush (build offensive defense towers). For the first time we got to have full naval battles with battleships, submarines and even a very own naval-resource. They improved the shroud and turned it into the now standard Fog of War where the fog regrows if you donâ€™t have any units there.But the thing that really set Warcraft II apart was the online multiplayer. A huge community gathered and spawned leagues, clans and ladders and essentially creating the base of modern competitive RTS gaming.Command &amp; Conquer Red Alert (1996) was the original C&amp;amp;C but more and better. It kept the defining pieces but moved up the pace with high yield minerals and a stronger focus on tank warfare. In fact the focus on tanks was so strong that it introduced the concept of a â€œtank rushâ€ where you amass a lots of tanks quickly and then rush your opponent to catch him of guard. The factions were different and unique and featured for the first time full featured land, sea and air combat. Red Alert also has a crazy and good story where Einstein witnesses the horrors of Hitler and proceeds to g back in time and kill, but without the competition for Stalin a new war breaks out. This placed new importance on the story in RTS games, a tradition which still continues today.We can spot Red Alertâ€™s mighty mammoth tankIf you think about classical RTS games the chances are high youâ€™ll think about Age of Empires (1997). The game is one of the most influential RTS games and if youâ€™ve ever played it itâ€™s easy to see why. Itâ€™s balanced, polished and very deep. Itâ€™s one of the first games to introduce the concept of â€œAgesâ€, essentially tiers in a tech tree. There are four ages which letâ€™s you progress from the very basic clubmen to advanced bowmen and even war elephants. The whole system is nicely done and the progression to higher tiers is fluent and it adds a lot of depth to the game. The resource system is still one of the most complex in any RTS with a whopping four resources for you to balance. Another new concept was the random maps. This way every game was a whole new experience with lots of different chokes and the importance of scouting was set on a whole new level.There are games that would introduce one or two novel ideas and then there is Total Annihilation (1997). The game was the first 3D RTS game and it featured real physics simulation. Gone where the days when your units would hit instantaneously and without fail, here everything was simulated; on bumpy terrain the shots could fire into the ground, the front units would absorb and block hits and higher terrain would give the benefit of an increased range. TA was one of the first games where units could shoot while moving, making for some interesting run and dodge tactics. Dead units would even leave wreckages on the  battlefield, wreckage that would block movement and you could reclaim them and regain some of the metal you used to build them.When weâ€™re on the topic of metal and resources â€“ TA has one of the most unique resource systems to date: theyâ€™re unlimited. Unlike games like C&amp;amp;C with a finite resource system you never had to worry if you had enough, metal and energy would be regenerated infinitely so it was never a question if you could afford it, but how long it would take to be built. TA reintroduced the â€œHero unitâ€ from the era before Dune II, where you actually were a unit and if that died you loose.TA was more a game without limits than anything before â€“ battles with hundreds of units were commonplace and when the big units in other games fired across the screen, the big guns in TA fired across tens of screens or even across the whole map! Where other games had strong Rock-Paper-Scissor counters TA had none. You could even fire artillery at airplanes (although pretty useless). Instead the balance revolved around unit speeds, turning times and overkill.Until this day, almost 12 years later, Starcraft (1998) is still the most competitively played RTS. The game had a great story and had three completely different races. Other games differentiated their factions with units but in Starcraft even the way you built things was different. But the thing that sets it apart from anything else is the community and in particular the competitive gaming scene that gathered around it. Itâ€™s so ridiculously popular in South Korea that itâ€™s considered the National Sport there and the players are treated as rock-stars.Why did this game become so popular? I donâ€™t know; it took almost a decade to get it balanced good and it isnâ€™t extremely fast paced. Itâ€™s really fun to play but almost more importantly is that itâ€™s fun to watch, the immersion factor and the excitement of a high skilled game is unparalleled and I think thatâ€™s what sparked the formation of a dedicated community. Then the community in itself is a reason why Starcraft has stood the test of time â€“ the formation of pro leagues, great map support and excellent coverage has made sure the community has flourished.Starcraft, the most successful RTS game yetLife After the BoomThe success of RTS as a genre sparked the creation of a lot of pretty similar, but often very good, games like one of my personal memories KKnD (1997). However it didnâ€™t take long until the next big revolution: true 3D brought to you by Homeworld (1999). Total Annihilation had used 3D terrain but Homeworld set the player in space and gave the freedom of the Z-dimension. Instead of just moving on a flat, albeit bumpy, surface you could now move freely in any direction youâ€™d like. In addition Homeworld became known for itâ€™s atmospheric and rich story and they introduced persistence in the single player campaign. It means that you would retain all of your units and upgrades from your last mission and if you had finished it badly with only a few units the next mission would prove impossible and you had to replay it.Building on a concept and improving it has been heavily used in RTS and it has brought us some of the very good games. Age of Empires II (1999) was all of the original but better. Command &amp; Conquer: Red Alert 2 (2000) upped the pace of of older C&amp;amp;C games and created a fun, with some good humor, easy to pick up but hard to master classic RTS game. Red Alert 2 still had a cartoony 2D look who many loved but it was to become one of the last 2D RTS games.Age of Mythology (2002) was a spin-off from the Age of Empires with all its goodness but with additional â€œGod powersâ€. Rise of Nations (2003) incorporated classical board game features such as territory and it tried out a resource system with a whopping 6 resources (crazy!).Warcraft III (2002) continued on where Warcraft II left but with added focus on abilities and RPG like hero units. The game is very centered around you gaining experience and leveling up your hero by killing neutral monsters, called creeping, as the three heroes you could have are more powerful than the rest of your army. Instead of a hard unit cap like in Starcraft Warcraft tried the approach with upkeep: if you have a large population youâ€™ll gain less gold and it worked pretty well as multiple expansions would do more harm than good.The focus on heroes and abilities made the game really micro intense (taking care of individual units) as opposed to the very macro (economy) centered Starcraft. (Itâ€™s pretty amusing in the current Starcraft 2 beta where you can actually see what game the top players used to play, Starcraft players usually have great macro but pretty bad micro whereas top Warcraft 3 players micro a few units but their economy is bad.)A human player harassing an Orc in Warcraft 3Command &amp; Conquer Generals (2003) shifted the focus for the C&amp;amp;C series. It made the building panel a bit more free, so you could easier build where and what you wanted, it had radically different factions and sub-factions but it had a very poor story but perhaps the most noteworthy addition was that upgrade change unit behavior instead of simply making them deal +1 damage. For example infantry was weak against tanks but with an armor-piercing upgrade they could destroy it.Lord of the Rings: The Battle for Middle Earth (2004) had a pretty interesting and different build system. Where other games placed no limits on where you could build the game only allowed you to build on specific places and they were very limited. This forced you to really think about what to build â€“ one mismatched building and you could get your entire army mismatched against your enemy. It also had a sort of RPG experience points tree whit a lot of different power ups you could have, but these too were limited and forced the player to make hard decisions, and hard decisions are good.Dawn of War: Warhammer 40,000 (2004) changed the well known resource system, instead of harvesting the player was given â€œmap pointsâ€ combined with an in-house generated resource. You also had squads, which were treated as one unit for easier control and as several when in battle.The Modern AgeCompany of Heroes (2006) is a pretty special game. It fuses the cinematic experience from an FPS with the tactical and strategical depth from an RTS. You command a lot less units and youâ€™re a lot closer to the battlefield. The environment is almost fully destructible and your units will take shelter behind anything they can find. Things like where you attack a tank became important as the armor was considerably weaker in the back and ammunition and fuel was considered a scarce resource.The immersion of Company of Heroes is simply stunningWorld in Conflict (2009) took the tactics even further and is considered an RTT â€“ Real Time Tactics. In WiC there are no resources, just a sum given in the start of the game for you to call in units with. When the units are killed the points are slowly given back ensuring you wonâ€™t run out of units. The game is solely focused on controlling your units and thus isnâ€™t really a true RTS in my eyes but a game bordering between the two.Supreme Commander (2007) is the spiritual successor to Total Annihilation and it stands in stark contrast to WiCâ€™s tactical focus â€“ here itâ€™s about the broad strokes man. Given the strategic zoom you can zoom out until you can see the whole battlefield and all the hundreds of units are there for you to command. The scale is huge, nukes and experimental super units trashing around gives the game an epic feel. But thereâ€™s a lot more to Supcom than watching huge battles, itâ€™s using the whole TA system with infinite economy, wreckages and no hard counters. We have new intelligence modes; in addition to line of sight as in almost every other games there are radar, sonar and omni (see all). To counter these we get cloaking and radar jamming units. Another thing Supcom does well is the improved interface with infinite queues which tie well with the infinite resources so you donâ€™t have to babysit your factories to get them to continually produce units.Me and Toejams showing off in Supreme CommanderToday there are both big scaled games like Hearts of Iron III (2008) and small-scale like Company of Heroes. There are games that relies on the old tried-but-true formula (Starcraft 2 currently in beta) and other more novel (Darwinia 2005). If you look closely youâ€™ll notice the core the old RTS games are still here, unchanged. Starcraft 2â€™s resource system is basically the same as in Dune II and grouping are still the same as in the original C&amp;amp;C. Games are still living on, and building on, the successful ideas of the past (the new C&amp;amp;C, AoE3 etc) and I personally think they will continue to entertain us, Dune II style, for at least a couple of decades more.ConclusionWeâ€™ve been through the evolution of the RTS from the beginning with Dune II until modern games like Supreme Commander and World in Conflict. The simple one resource system has given birth to four and even six resource systems and some games have opted for â€œmap pointsâ€ or different infinite resources. The simple shroud concept has turned into the now standard Fog of War and there has been some advanced intelligence gathering going on in a few games. The Hero concept with borrowed RPG elements are now standard in many games and the tech tree has been branched into several different flavors. The scale has both been amplified and minimized and units has differentiated themselves from each other.Thanks to the online multiplayer pioneered almost 15 years ago has turned a little niche genre into a mega-industry with competitions held in several different games and countries. But where the genre is heading is anyones guess, but whichever way itâ€™s heading Iâ€™m sure it will continue to entertain and surprise you.ReferencesEverything accessed 21 mars 2010gamespot1,gamespot2History of RTS during the years 1989-2001. Pretty good.Gamereplays RTS history, a great resource written by several RTS enthusiasts.A top 20 list, take it with a grain of salt. Used for inspiration.From wikipedia various stuff (mainly dates):Dune the novelWarcraft: Orcs and HumansDarwiniaAge of Empires II: The Age of KingsKKnDAge of MythologyWorld in ConflictHearts of Iron 3Published:April 23,2010Revised:September 11,  2024ind76e3b2Tagged:Game Design,Game Design CoursePreviousNext</description>
      <pubDate>Fri, 23 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Before the Games: The Site</title>
      <link>https://www.jonashietala.se/blog/2010/04/16/before_the_games_the_site</link>
      <description>Before the Games: The SitePublished:April 16,2010Revised:July 21,  2013inbcd6a62Tagged:BlogI’ve got some things I want to do before I start with my next game and they’re all about improving the site. The last week or so has been extremely productive with me throwing out a lot of wasted code, speeding up the site and adding/removing features and I want to continue with that and get the things done now when I’m in the flow.You can find the whole source for the site, excluding a few security related files ofc,on githubwhere I’ve also uploaded a small to-do list and some ideas I might want to implement.Here’s a small summary of the stuff:Allow editing all the information pages without doing it through phpmyadmin, merge it together with the post editing.Change the layout of adding comments and it’s preview, try unhide it.Fix the layout of search and possibly tweak the inner workingsRevamp archive page, maybe use it as a sitemap?Add read next/previous posts on post and older/newer posts?Make comment editing work, for guests too.Statistics!! I have third party statistics but I want stats for the most active commenter and other stuff.A greater 404 pageRefactor, remove garbage code and refactor some more.I’m itching a little bit about a new game, but first thing’s first.Published:April 16,2010Revised:July 21,  2013inbcd6a62Tagged:BlogPreviousNext</description>
      <pubDate>Fri, 16 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Widening the horizon</title>
      <link>https://www.jonashietala.se/blog/2010/04/10/widening_the_horizon</link>
      <description>Widening the horizonPublished:April 10,2010Revised:July 23,  2013inc0a62a3Tagged:ProgrammingThis is a game making site but where are the games? What gives?I’ve been slightly less motivated in making games lately and I’ve been doing different things, just to get my ideas and my motivation up. As I said in anearlier postI wanted a break from Experimental Games and I want to spend more time on each game just to get the quality of the games up.Lately I’ve been usingvimand I really like it but the learning curve is really high, so why not make a game about it? To make the learning progress easier and hopefully even somewhat fun. I haven’t come up with a great idea yet, and thus I haven’t started, but I’m pretty optimistic.I alsomentionedLudum Darebut as the looks of things it ain’t gonna happen this time. I’ve got a massage course the whole weekend timed on just as the 48 hour game making competition is and I don’t think I wanna stress myself to manage the both of them.Instead for a game I’ve been focusing on learningHaskelland on improving this site. Trying out different stuff like trying a new paradigm and trying out different languages is a really good way ofSharpening your Saw. Yes technically he meant doing things not related to programming, such as math, but I still see it as doing something completely different and improving while doing that.For exampleKohana, the framework this site is built on, has made me think more about tools and frameworks instead of just language features as it transformed my awful, hackish site into this beautiful little thing literally in the blink of an eye. Or takejQuerywhich took my epic cross-browser checks and transformed it into beautiful code. These two seemingly small changes made the boring web developer processreally fun!Yeah that’s what I’ve been doing; I’ve been widening my horizon and I’ve been having fun at the process!WoooPublished:April 10,2010Revised:July 23,  2013inc0a62a3Tagged:ProgrammingPreviousNext</description>
      <pubDate>Sat, 10 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The games that make me who I am</title>
      <link>https://www.jonashietala.se/blog/2010/04/06/the_games_that_make_me_who_i_am</link>
      <description>The games that make me who I amPublished:April  6,2010in5ce0df3Tagged:Life,GamingI readan articlethe other day where he met someone who didn’t read fiction:He suggested that fiction was a waste of his time — he read to learn, not for "mere" entertainmentI don’t agree with this view and neither did he:Fiction allows you to be part of situations that are unlikely to happen otherwise. You can experience thousands of years worth of events by reading fiction. Yes, it is true that what happens to you in real-life — with it’s finality and incomparably richer stimulation – out-weighs that of a book. However, the course altering moments in life are infrequent. Fiction provides a means of accelerating your “personal growth.”He then gives us a list of fiction characters who has made him who he is, many small pieces of trait that has become a part of him.Interesting I thought and I began thinking of what characters I could identify with (Lincoln RhymeandRobert Langdoncomes to mind) but then I started thinking ofgames. What games has made me who I am? It’s not an easy answer and it’ll never become exhaustive but it’s interesting to think about and here’s my try:WormsI played the demo of Worms 2 to death, I ran to my friend all the time to play Worms Armageddon and I’ve been addicted to blasting ugly worms with banana bombs ever since.RollerCoaster TycoonI love rollercoasters and I love to build stuff so naturally I played the games a ton… I’m still tingling with excitement when I think of building a super-coaster. The builder that is me was born with this.Hospital TycoonAnother constructor game with hilarious humor and I’m still harboring thoughts of resurrecting this beauty as a new game. I think it was one of the first games to make me think about actually making games instead of just playing.Counter-Strike SourceThe best anger management there is. Or well I’m not really civil when playing it but it lets me went out pretty damn good, but don’t sit near me when I’m playing - it’s not good for your ears.World of GooThe game that opened my eyes to the wonders of Indie Games.Supreme CommanderIntroduced me to the world of competitive gaming, or rather the competitive mindset. It also helped me become a better person by helping and being a part of a great community.Evil GeniusHumor + Base Building = Epic Win.These are just a few games from the top of my head, some had big impacts and some slightly less so.We started with a quote and that’s how we’ll end it:I am the product of my parents, my friends, my life, my experiences…and my teachers.Published:April  6,2010in5ce0df3Tagged:Life,GamingPreviousNext</description>
      <pubDate>Tue, 06 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Death to the Forum</title>
      <link>https://www.jonashietala.se/blog/2010/04/02/death_to_the_forum</link>
      <description>Death to the ForumPublished:April  2,2010Revised:July 21,  2013inbcd6a62Tagged:BlogWell it was fun while it lasted, but now it’s gone and it’ll stay gone for a long time I think. It was mainly a test to see if I could do it and I’m really proud of my styling of it but it’s deader than in a grave, which isn’t really surprising, and it bothered me that I didn’t write it myself - like really bothered me.phpBBis fantastic in many ways; easy, fast and easily managed but it just didn’t feel right as I hadn’t done it. Kinda the same as why I’m not using any popular blog tool but I’ve rolled my own. It feels pretty good to use a site you’ve written completely yourself…And no I don’t want to write my own forum now, for now I’ll stick with a tweak here a tweak there on the site.Published:April  2,2010Revised:July 21,  2013inbcd6a62Tagged:BlogPreviousNext</description>
      <pubDate>Fri, 02 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Experimental Games</title>
      <link>https://www.jonashietala.se/blog/2010/03/30/the_experimental_games</link>
      <description>The Experimental Gamesâ˜Published:March 30,2010Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectItâ€™s been nine months since I started doing Experimental Games and I think itâ€™s time to evaluate and maybe go in a new direction.At firstI had been stuck for ages with my never-ending projects and I had literally nothing to show for all my coding. Well now things have changed a bit: Iâ€™ve successfully releasedseven experimental games, games that more or less are playable, working and sometimes even fun! These months have taught me that games arenâ€™t impossible year long projects, they donâ€™t have to be perfect to be enjoyable and above all they taught me to get things done!Here are a few lessons I learned the hard way.IterateDonâ€™t try to make the game perfect from the start cause it wonâ€™t be perfect and it wonâ€™t be pretty. Instead create the ugliest, crappiest playable version of your game you can and then work from there. The best games where those who got playable the earliest:MenuCity,BuggerandJonas IceCream Stand. The other crappier games such asA Geek ValentineandBlack and Whitegot playable just in a very late stage and indeed they also became the least fun.Fun isnâ€™t created on the spot - itâ€™s created through iterations. Itâ€™s like carving a wood figure. You donâ€™t create it with a big slash, you carefully chop the wood off little by little until the figure is complete. This is how I think good, fun games are made.This quantum leap wasnâ€™t achieved with a big chop, but with many smaller onesGet things doneThis is the thing that changed with me the most. At first I thought games where all about the planning stage - the idea stage. Itâ€™s important to have a great idea and itâ€™s good to write down things sure but you canâ€™t just sit on your ass doing the big talk and not actually do anything. As said about iteration you canâ€™t make the game perfect from the start and you canâ€™t the whole game from the start either. The game will change and your idea about whatâ€™s good for the game will change too.Take for example my latest gameA Geek Valentine. I had envisioned the game as a game where you built trap combos from a top down point of view. But the game changed into a pac-man type (Iâ€™m not all too happy about it though). For better or worse games and ideas change, stop planning and start getting shit done.Set GoalsIn December I had the truly great themeNew World Orderand it spawned the best game idea Iâ€™ve had, a sort of SimCity game but instead of building stuff you plot to take over the city and taint it with your evil propaganda. Like in North Korea or in the old Soviet. But the game was not to be.Why you ask? I think itâ€™s because I never had a goal -I broke the one week ruleand I could just push the deadline further and further and I never got anything done. With other games when I was at the 2-3 last days I always got a big energy boost and I always managed to get the game finished. But here I could just say â€œmeh, Iâ€™ll do it laterâ€ and so it never got done. Itâ€™sDuke Nukem Foreverall over again (maybe a bit smaller okay). Goals will help immensely to get things done.Have funIn retrospect I should have had an overall goal for my experimental games too. I never put an end date - it was justnew month = new gameand in the end it wasnâ€™t very inspiring to just churn out a game. It was as if I just had to make a game, it wasnâ€™t something I wanted to do and it was almost as if it had become a chore.Mind you Iâ€™ve had lots and lots of fun making these games and the games who were the most fun to play were also the ones I had the most fun making. You could divide my games into three categories I think.The beginning:FunBallsBlack and WhiteThe middle:Really FunBuggerMenuCityJonas IceCream StandFailed game: The Zed Worker PartyThe end:Not so FunThe Chronicles of Bim: The 100 Fake AfrosA Geek ValentineThe funny thing about this is that it works really really well both ways. Both how fun the games are and how fun I thought it was to make them. I think this is an indication for all you game developers out there:Have Fun, not only will you live a happier and longer life but the game will also be a lot more fun!ConclusionIâ€™m not sure what the meaning of this post was. At first I wanted to state a new beginning for myself and then it turned out to a lessons-learned postâ€¦ but whatever.I wonâ€™t be doing monthly experimental games for a while now, Iâ€™m happy with the results but Iâ€™m not at all motivated right now and I need a little break. I will continue my game making but it just wonâ€™t be exactly the same - maybe I will try to release a game, any game, each month or Iâ€™ll focus on making â€œrealâ€ games - games which are everything I want them to be, not just a proof of a concept. I guess thatâ€™s something thatâ€™s been bothering me about my experimental games - it feels like something is missing.Published:March 30,2010Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Tue, 30 Mar 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>No game this month</title>
      <link>https://www.jonashietala.se/blog/2010/03/25/no_game_this_month</link>
      <description>No game this monthPublished:March 25,2010in5ce0df3Tagged:Experimental Gameplay ProjectWell here I am in the end of the month - without a game. It’s a failure I know but once again I lack inspiration and then it’s really hard to do something. Instead I’ve been thinking of something I could do that would make me wanna code like really bad again. I’m thinking of patching up this website, the forums are bugging me like hell as I didn’t write it, switching rendering framework for my games and just now today I’ve done a fewProject Eulerchallenges in Haskell which was pretty fun (but hard as I’m really bad with it).Next time I’ve got my sights on theLudum Darewhich instead of a seven day game is a two day game! We’ll see how that’ll go.. If I have the power and the time to.I’ve also written a small piece about the Evolution of RTS games, heavily shortened to fit a perfect 5 pages a feat I’m quite proud of. Of course I wanted to write a hell of a lot more.In short: Not much has happened and not a lot is happening but we’ll see what the future has in store.Published:March 25,2010in5ce0df3Tagged:Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Thu, 25 Mar 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: A Geek Valentine</title>
      <link>https://www.jonashietala.se/blog/2010/03/10/postmortem_a_geek_valentine</link>
      <description>Postmortem: A Geek Valentineâ˜Published:March 10,2010Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectAh man the mush in my brain is finally letting go and Iâ€™m starting to feel this tiny little programming urge againâ€¦ This time itâ€™s not Haskell or a new experimental game thatâ€™s luring me on, no this time itâ€™s me longing to create thisfantastic awesome epicRTS game. Sadly itâ€™s a long way to go thereâ€¦Anyway letâ€™s get this going!A Geek Valentineisnâ€™t a good game by any means, itâ€™s really nothing special. The gameplay sucked really bad. Itâ€™s kinda funny as I told Sundb00m this would be my greatest game gameplay wise.Yeah right..Hard Work Work!This is a small graph which shows how Iâ€™ve worked for a straight week from the 22th to the 28th. The Y-axis is hours and the X-axis is days. The labels are for either work or break and the height of the green peaks if you check it on the Y-axis is the sum of both green and red. Green is for hours where I actually worked and the red is for when I had a break. You know food, clipping toenails, reading manga and playing counter-strike.Total work time: ~25 hoursTotal break: ~15 hoursWeekend work: 13.8 hoursWeekend break: 8.3 hoursThe noteworthy thing about this is that I spend more than half of the whole weekâ€™s worth of time in the weekend and I probably got even more done during that time. I think itâ€™s the whole deal with being chased with a the brutal thing of failure that motivates me.Graphical AdorationAbout the game letâ€™s start with the positive stuff. I really like how the game looks, it actually looks pretty darn good (even though I forgot about the girlsâ€™ turning, now theyâ€™re just looking forward). Iâ€™m really improving in a graphical sense, something I thought impossible when I began this journey.Do something you LikeLike with a Big L. I felt I had a really nice idea going for this one. In the end it looked and felt like a bad pacman clone but this wasnâ€™t what I had in mindat all. The idea was to build cool trap-combos sort of like in theEpic Game Evil Genius.Hereâ€™s a plan for an Ã¼ber-trap in Evil GeniusI really love Evil Genius and especially the base building but letâ€™s face it - I failed. But the idea kept motivating me and it was really fun to try to make it happen.A first small taste of an â€œAIâ€How do the girls move? They have a 5x5 vision with a 2 radius (theyâ€™re in the middle) and they choose what to do. If they see the dude close to them either in front, left or right theyâ€™ll go there. Otherwise theyâ€™ll try to follow a path in front of them or to the left or right. Otherwise theyâ€™ll just go in a random direction.They are extremely stupid and you can trap them in a never-ending loop fairly easy and itâ€™s a stretch to say they have intelligence but it was pretty cool to dip my hand into AI programming. I know itâ€™s extremely shallow and bad and stuff but still it was pretty rewarding to see them actually move around on their ownâ€¦I might actually develop this game further with special regard to AI. Change the core of the game so you can script both the player and the girls, just for laugh and giggles?The game sucks but heyâ€¦Yupp itâ€™s not my best game, in fact I think itâ€™s one of the worst. But I still like it a lot and my trap-building idea is still alive and I might develop the game more, improve the AI and focus on building traps (need a lot more cool traps damnet). Yes I think I might do thatâ€¦Published:March 10,2010Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Wed, 10 Mar 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>March Theme: 10 seconds</title>
      <link>https://www.jonashietala.se/blog/2010/03/02/march_theme_10_seconds</link>
      <description>March Theme: 10 secondsPublished:March  2,2010in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectWell well here’s something interesting.The Experimental Gameplay Projecthas given us a really interesting thing to focus on: Time. LikeBraid, it’s time for us to make something interesting with time itself. 10 seconds is the constraint and that’s not a lot, but perhaps enough?Published:March  2,2010in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Tue, 02 Mar 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Geek Valentine</title>
      <link>https://www.jonashietala.se/blog/2010/02/28/a_geek_valentine</link>
      <description>A Geek Valentineâ˜Published:February 28,2010Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectYes! I made it! Itâ€™s 22:22 on the very last day of February and Iâ€™ve been programming virtually non-stop for the past two days, my brain feels like mashed potatoes.A Geek ValentineControlsSteer with the arrow keys.Use spacebar to:Build the time machineBuy and place traps (Just face an empty square and choose a trop on the top right)Sell traps (Face and click)StoryWell itâ€™s Valentineâ€™s Day and as the geek you are this is the worst day ever. Luckily you havean almost complete time machine hidden here in the grass and if you could complete it youâ€™ll be safe for now! But bewareâ€¦ The girls are searching for you! Place traps and run away!AboutThis game, as usual, was made forThe Experimental Gameplay Project. This time they asked for a short explanation on how the theme would fit together so here it is:Rejection + Valentineâ€™s day = feelings hurtAnd youâ€™re the one hurting all the girlsâ€™ feelings. Enjoy.CreditsMusic: Nighttime Falls, Iâ€™ll be Waiting for Her -ilocan18Sound effects:Random fromfreesoundRest:MeSourcehttp://github.com/treeman/RejectionPublished:February 28,2010Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Sun, 28 Feb 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>February gets Themed: Rejection</title>
      <link>https://www.jonashietala.se/blog/2010/02/01/february_gets_themed_rejection</link>
      <description>February gets Themed: RejectionPublished:February  1,2010in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectThe Experimental Gameplay Projecthas announced their next theme - and shame on me if I wouldn’t follow suite! With valentine coming up I might just have found a pretty nice idea, just now, writing this…Booyah!!Published:February  1,2010in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Mon, 01 Feb 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why is my file so huge?</title>
      <link>https://www.jonashietala.se/blog/2010/01/24/why_is_my_file_so_huge</link>
      <description>Why is my file so huge?Published:January 24,2010Revised:July 23,  2013in7a1ecc1Tagged:ProgrammingMy latest game was absolutely huge! And I’m not talking about the music (which was pretty huge too - roughly 20mb) but the little .exe file.It was 14,6mb!!Now every way you look at it,that’s incredibly huge. It’s like comparing an ant to a human. Normally the little ant is the exe file which should be small, except that it’s not.Ants are powerful creaturesIncredible I thought, what the heck did I do wrong? I mean my code isn’t really good but I never knew it was this horrible. So today I was determined to find the cause of this obscene mutant ant.I started out chopping off everything regarding exceptions, cause all c++ resources I’ve read say exceptions will take space like a mutant gremlin. Okay I thought and chopped away everything - but nothing happened.Now that’s weird, what happens if I scrap this.. and this.. It ended with me beginning a big revamp of my whole “engine”, or rather collection of stuff - nothing inherently wrong as it was badly needed - but nothing happened with my exe file! It was still almost 2mb big with basically only a hello world…Then it struck me! I had been using-gwith gcc and without any optimizing at all. When I turned on size and speed optimizations and scrapped the debugging the change was quite extraordinary.The mutant 14 637 kb was magically transformed to a more fitting ant size of 856 kb. I couldn’t save much of the total file size (23 254 kb -&gt; 20 768 kb) so while I apologize for hogging your bandwidth, time and harddrive space I’m hoping you won’t be too mad at me.Published:January 24,2010Revised:July 23,  2013in7a1ecc1Tagged:ProgrammingPreviousNext</description>
      <pubDate>Sun, 24 Jan 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: The Chronicles of Bim: The 100 Fake Afros</title>
      <link>https://www.jonashietala.se/blog/2010/01/19/postmortem_the_chronicles_of_bim_the_100_fake_afros</link>
      <description>Postmortem: The Chronicles of Bim: The 100 Fake Afrosâ˜Published:January 19,2010Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectMy first shooter! Itâ€™s working (although a friend got a null pointer error) so Iâ€™m a little happy.The TimeI spent about 24 hours on this game. A whopping 30% was break time, mostly me eating, reading manga or playing gamesâ€¦ This is proof of me being really lazy this month I think.Itâ€™s pretty cool that everything regarding the scripting, loading the little levels I had from lua files and writing them took only a mere hour! I could have saved so much time if I wouldâ€™ve scrapped the whole levels idea completely. (Levels are more than just the code it takes to load them from a fileâ€¦ a lot more)ImmersionWe all love big bangs and loads of stuff flying around on screen and sadly I didnâ€™t deliver. I had all these ideas of pieces of dead afros flying around and dead things piling up on the ground which youâ€™ll walk overâ€¦ but I never did any of it which is sad cause it would be pretty damn cool.Another thing is the messages on the left side. Pretty cool - if they would actually say anything, but again I didnâ€™t have time or the inclination or whatever to do anything with itâ€¦All weâ€™re left with are the quakes which are kinda cool but they could do with some tweaking, maybe shorter and less frequent to really get theomgeffect.GameplayIt plays okay. Not a lot happening, itâ€™s just a race against time. The immersion part would really hot up the gameplay cause really, itâ€™s fun to blast things into the sky!ConclusionThe game feels like itâ€™s not finished. The whole afro thing was cool but itâ€™s not revolutionary or anything different. Itâ€™s stuck in the middle between random ideas and mediocrity. Too bad.Published:January 19,2010Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Tue, 19 Jan 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>My Dream Game: The RTS</title>
      <link>https://www.jonashietala.se/blog/2010/01/18/my_dream_game_the_rts</link>
      <description>My Dream Game: The RTSPublished:January 18,2010Revised:July 23,  2013in7a1ecc1Tagged:Game Design,GamingEven if there are a million great games there’s one that has a very special place in my heart:Supreme Commander. It’s not the game I’ve played the most and there might even be games which are better and more fun butsupcomwas the game that introduced me to competitive gaming and it made it me feel like no game had done before. I took gaming seriously for once; sure I had played online with cs but I was never serious. I did nothing to improve myself, I didn’t really care - as long as I didn’t have 1-10 or a silly just-beginning-stat.Before supcom I always cheated my way through an RTS game (I still remember thatpepperoni pizzagives food andquarrygives stone in age of empires) or just gave up when things got rough. Now I’m happy to give it my best just to beat guitar hero on expert and someday I’m sure I’ll do it! Getting beat down by a lame rush? Before I would just whine and shout “lamer” and throw out the game but instead I saved the replay, copied his moves and presto! Now I got to be the one who got shouted at!! And I can tell you - it felt a lot better…All this effort I put into the game really got me involved on a very different level than in any game before. I’d never even thought thatSimCity, the great 4th edition, was imbalanced. But when I think about it: the huge apartment-building with a couple of thousand inhabitants it always, always without fail clogged down all the transports even when I dedicated everything around it just for transport. Later I found out it was bugged and there’s a fix, somewhere, to download which will fix this and some other bugs. Now I started to find things I didn’t like in supcom, things that was… wrong. No matter what you did, and no matter what the really good guys did - you couldn’t beat a certain strategy. It ended with everyone playing the same faction, spamming the same units in game after game… Not really fun. I participated in discussions and believe it or not I think that I was right more often than not. I was improving!But hey! Why did they do this? What if they had done this instead?If I had made a game it would have done this and thus been a lot better…And here I am. I have this dream of making the best RTS game ever… Staying true to my play style from supcom: copy the good things from others, improve them and make them my own, my plan is to mix in the great things from all the RTS games I’ve played throughout the years. Obviously the most prominent would be supcom but also StarCraft, kknd, TA and CnC among others…Published:January 18,2010Revised:July 23,  2013in7a1ecc1Tagged:Game Design,GamingPreviousNext</description>
      <pubDate>Mon, 18 Jan 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Chronicles of Bim: The 100 Fake Afros</title>
      <link>https://www.jonashietala.se/blog/2010/01/16/the_chronicles_of_bim_the_100_fake_afros</link>
      <description>The Chronicles of Bim: The 100 Fake Afrosâ˜Published:January 16,2010Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectAaah feels good having a game ready after the last monthâ€™s failure! This time itâ€™s a small shooter.The Chronicles of Bim: The 100 Fake AfroBullet masher - can you keep up with 100 enemies at the screen?InstructionW: upA: leftS: downD: rightmouse: shootspace: leap into the sky!CreditsMusic:The Last Prophecy -Matthew Le Blanc (SynthR)Sound effects:Random fromfreesoundRest:MeSourcehttp://github.com/treeman/100-thingsPublished:January 16,2010Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Sat, 16 Jan 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>New Year, New Theme: 100 Things</title>
      <link>https://www.jonashietala.se/blog/2010/01/01/new_year_new_theme_100_things</link>
      <description>New Year, New Theme: 100 ThingsPublished:January  1,2010in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectHappy New Year, Everyone! 2009 was great in many ways; I drove a submarine (yeah quite literally), I released 6 experimental games and recently I discovered the completely amazing gameEvil Geniusbut lets try to make 2010 even better!So let’s forget our small mishaps (yes I’m looking atyou- December month without a game) and roll out a new theme. As usual I’m following The Experimental Gameplay Project’s theme which happens to be100 Things.And Things could mean anything from sprites, sound effects to pixels or enemies.Published:January  1,2010in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Now we have a Forum</title>
      <link>https://www.jonashietala.se/blog/2009/12/21/now_we_have_a_forum</link>
      <description>Now we have a ForumPublished:December 21,2009Revised:July 21,  2013inbcd6a62Tagged:BlogIn a burst of random energy I made a forum for madeoftree. Well okay I just made an awesome style for the awesome phpBB - the forum itself was up and running in say 10min and the rest of the latest days has been all about customizing. Now it’s finallykindacomplete so here it is (EDIT: it is now taken down)!Making it was the easy bit - now we need to generate some content! Where is the almighty sundb00m when we’re in a desperate need for spam?!Published:December 21,2009Revised:July 21,  2013inbcd6a62Tagged:BlogPreviousNext</description>
      <pubDate>Mon, 21 Dec 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Pushing toward Git</title>
      <link>https://www.jonashietala.se/blog/2009/12/16/pushing_toward_git</link>
      <description>Pushing toward GitPublished:December 16,2009Revised:July 23,  2013inc0a62a3Tagged:GitThe time has come; it’s time for me to move my source out in the open for the first time.I present to you the source of the upcoming game (which has no name yet):Repository deleted, never became anythingAvailable on GithubIt’s nothing special really, if you want take a look at the code and help me improve it.Published:December 16,2009Revised:July 23,  2013inc0a62a3Tagged:GitPreviousNext</description>
      <pubDate>Wed, 16 Dec 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Breaking the rule of three</title>
      <link>https://www.jonashietala.se/blog/2009/12/14/breaking_the_rule_of_three</link>
      <description>Breaking the rule of threePublished:December 14,2009Revised:July 23,  2013inaf1cdd3Tagged:Experimental Gameplay ProjectIt’s pretty darn stressful making a game in a week, especially when you have this big great vision on how your game should be (which isalwaysgrand). For me makingBalls,Black and WhiteandJonas IceCream Standwhere truly stressful,MenuCityandBuggernot so much but still.This is why I’m giving me an early Christmas gift:I won’t make the December game in a week. In fact I haven’t even logged the hours, I just work on it a little here and a little there and boy it’s nice not having to do something all the time.But there are downsides of course. I’m breaking my rules which is… bad and I don’t have that productivity boost I always get when under a deadline so now I’m pretty far behind.But the screenshot looks promising doesn’t it?Published:December 14,2009Revised:July 23,  2013inaf1cdd3Tagged:Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Mon, 14 Dec 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Arty Timeline</title>
      <link>https://www.jonashietala.se/blog/2009/12/09/the_arty_timeline</link>
      <description>The Arty TimelinePublished:December  9,2009Revised:July 23,  2013inaf1cdd3Tagged:Timeline,Experimental Gameplay ProjectWhile working onJonas IceCream StandI took a screenshot every day and I thought they looked pretty cool so here they are:And now I’m off withNew World Orderand (for once) I’ve got a really really good idea!Published:December  9,2009Revised:July 23,  2013inaf1cdd3Tagged:Timeline,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Wed, 09 Dec 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>December Theme: New World Order</title>
      <link>https://www.jonashietala.se/blog/2009/12/04/december_theme_new_world_order</link>
      <description>December Theme: New World OrderPublished:December  4,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectTheThe Experimental Gameplay Projectdrives on with theArt Gametheme which will last the rest of this year but that’s something we can’t accept! I’ve done my game and I didn’t force myself out from the Haskell world just to do nuthin so here’s a new little theme for me :)What does the U.S one dollar bill, the French Revolution and Zion have in common? It’s the conspiracyNew World Orderof course!The paranoid can find it anything so this shouldn’t be a problem?Right?!Published:December  4,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Fri, 04 Dec 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: Jonas IceCream Stand</title>
      <link>https://www.jonashietala.se/blog/2009/12/01/postmortem_jonas_icecream_stand</link>
      <description>Postmortem: Jonas IceCream Standâ˜Published:December  1,2009Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectAh my latest gameJonas IceCream Standis finished and up and running and Iâ€™m really proud of it! And thanks for the feedback guys, itâ€™s always welcome.I spent almost exactly fifty hours on this game and thatâ€™s by far the most Iâ€™ve spent on a 7day project. To be honest itâ€™s probably more but Iâ€™m not really good at logging all the hoursâ€¦A RaceThis game was a race against time from start to finish. I understood right from the beginning this wouldnâ€™t be easy. Creating a whole GUI from scratch, composing animation and a focus on graphics(!). Iâ€™ve never done a GUI, it would be really easy with a decent framework for itâ€¦ But I donâ€™t have one for it so all the GUI code isreallymessy and hard to maintain.I guess Iâ€™m learning the coding lessons the hard way. Keeping it structured and maintainable even, no, especially under pressure is extremely important. Itâ€™s a good thing I have a fast iteration cycle repeating itself for every new game Iâ€™m making.HehArtI keep saying it again and again but Iâ€™m not a graphics designer but I should stop saying that! Although not wonderful I think my games are looking good and this game is no exception. Itâ€™s certainly the most complex graphical wise.The fading effect on the sky was pretty cool, but itâ€™s kinda crude and it doesnâ€™t fit the overall theme very well. The theme has a few distinct colors with a little â€œchildishâ€ feel to them. I feel the fading adds a bit too many colors to it. But I do think the end points (in the middle of the night with all the stars and when itâ€™s as light as possible) looks pretty good. And Iâ€™m not sure it was a very good idea to include a MenuCity silhouette in the background.A beautiful night skyGameplaySadly I donâ€™t think the gameplay was one of my best. Sure the first five maybe ten minutes are a blast, they almost awoke my slumbering tycoon feelings. But the game is so badly balanced, itâ€™s far too easy when youâ€™ve passed a point in the game. The problem is that I balanced the game the last handful of hours on the very last day and that doesnâ€™t work, not at all. A great gameplay needs to evolve, it canâ€™t be created just there on the stop. Well thatâ€™s my experience at least.ConclusionI think the game is really great. Sadly it gets boring far too fast but it does have great potential. Itâ€™s almost worth given a remake as a â€œrealâ€ game.Published:December  1,2009Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Tue, 01 Dec 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jonas IceCream Stand</title>
      <link>https://www.jonashietala.se/blog/2009/11/25/jonas_icecream_stand</link>
      <description>Jonas IceCream Standâ˜Published:November 25,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectAhoy there! This time Iâ€™ll take you along for a ride with an arty Tycoon game.Jonas IceCream StandGet wild and become a Crazy Dealer of IceCream!InstructionsIt should be pretty self-explanatory, itâ€™s a very simply tycoon game.CreditsMusic:All Around Us -Eric MaskolI Will Always Look up to You -Steve ChattertonSound effects:Random fromfreesoundRest:MePublished:November 25,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Wed, 25 Nov 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>An invisible Remake</title>
      <link>https://www.jonashietala.se/blog/2009/11/02/an_invisible_remake</link>
      <description>An invisible RemakePublished:November  2,2009Revised:January 23,  2019indc7d7c4Tagged:BlogWhat does a guy like me do when not working on a new game? Except living my life, being a coach for my little brother’s hockey team and eating strawberries? The last week or so I’ve been working hard with my webpage, yes this page. If you’ve visited my site before today you’ll know what I’m talking about.NOTThere’s practically zero visible difference. You might notice the ‘Quick n Dirty File Download’ or the little line of text towards the bottom of the page, or even the ability for multiple tags! That’s kinda freaky stuff eh? And only +1 week to do that! :DThe big thing was actually a complete rewrite of the whole site. From really bad and random spaghetti code I managed to produce some half-nice code. I wrote the site withKohanawhich was a blast to use! If you’re making a page of some sort I can heartily recommend to give it a try.Soon it’s time for some game making again, I just need a good idea… hm.Published:November  2,2009Revised:January 23,  2019indc7d7c4Tagged:BlogPreviousNext</description>
      <pubDate>Mon, 02 Nov 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>November Theme: Art Game</title>
      <link>https://www.jonashietala.se/blog/2009/11/01/november_theme_art_game</link>
      <description>November Theme: Art GamePublished:November  1,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectBack over atThe Experimental Gameplay Projecta new theme has come up. My last three themes haven’t been “my” themes: I’ve been following their lead and their themes and this month is no exception. This months’ apparently a big theme -Art. It’s even a collaboration with a big art museum…The idea that games are art is an old one and there are a few games considered art - but it’s really hard to make an actualart game. But I’ll try :)Published:November  1,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Sun, 01 Nov 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: MenuCity</title>
      <link>https://www.jonashietala.se/blog/2009/10/19/postmortem_menucity</link>
      <description>Postmortem: MenuCityâ˜Published:October 19,2009Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectGood times, good times.MenuCityhas been out a while and thanks for all the positive and constructive feedback guys, itâ€™s like my food doing this (programming is my air and the fun is the waterâ€¦ err). Anyway hereâ€™s the postmortem of my latest, and greatest, game.Letâ€™s start with a hideous graph:God itâ€™s ugly, but it works I guess. I spent about 32 hours on this game which is the most Iâ€™ve spent on an experimental game so far. The bulk of the game was actually done really, really quickly like the second day or so. All the gameplay was there and with pacemaker art too! The last 5 days of production was focused on polish, level design and art.ArtI spent a lot of hours doing the arty business and I think the game looks really good. Youâ€™d think the art I have in the game would be doable in a lot fewer hours than I spent and youâ€™re absolutely right. In the beginning I had a very different style in mind, it was supposed to be a dude trapped in a console (a beautiful one) with all the ground, the birds (yes birds!) and the blocks all comprised of numbersâ€¦ But as I worked on it I switched more and more to the style I have now, albeit diverging from the theme but meh.ProductionThese games Iâ€™m doing, theyâ€™re more about production than the games themselves I realize that now. Naturally Iâ€™m making the games how could theynotbe about games?Itâ€™s just my impression but when Iâ€™m doing the games my focus is more on the process of making them, like planning on a free day which I can get zoned and only focus on the code, instead of playing around with â€œcoolâ€ stuff.This is good Iâ€™d say! But meh - we all like cool stuff, I mean itâ€™scool!But making things happen, making things work on screen is way cooler than having them all set up in my head. And besides, my very best ideas (and games) have come when I focus on making them work instead of how cool they should be.What isis always way cooler thanwhat should be.The Game itselfAhh the gameâ€¦ This one is my very best; it looks as good asBugger, itâ€™s more addictive thanBallsand itâ€™s even criminal to compare the levels to those ofBlack and White! So what could be better? There are a few things:Horrible tutorial. I tried to redeem myselfherebut still.Be able to move the camera for an overview of terrain. This I had planned, but I had other more important things to do and then I sorta forgot about itâ€¦Go back 5sec or a few moves. I mean how many times did you press the rest button? I know I did press it a dozen times too many.Move up with the side keys instead of having to switch, and slowing down, between up and side. This was suggested later and I donâ€™t know why I didnâ€™t think of this from the beginning :SRepetitive sound. Well honestly I.. uhâ€¦ yeah. The song is wonderful but some variation would be nice. And for the next game you need to stop and change the music from a menu, instead of the obscure console options. (sound_enabled 0in console f1 or set in settings.ini)Disappointing ending. This one is so true.. I might spoil this for you but the last level isnâ€™t as demanding as the ultra hard ninth level. And there wasnâ€™t even any ending credits or anything like that, almost like cleaning my room real good without anyone acknowledging it =(ConclusionMenuCity gave me a great ride, both developing it and playing it. And all the positive feedback doesnâ€™t hurt my ego either ^^. There are things I dislike and annoy me but the games are getting better, Iâ€™m learning loads and the most important thing of all: Itâ€™s fun :)Yesterday I checked the date and thereâ€™s almost two weeks left until my next monthly experimental game! I might have to start another side projectâ€¦ hum humâ€¦Published:October 19,2009Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Mon, 19 Oct 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>MenuCity: Level 0 Walkthrough</title>
      <link>https://www.jonashietala.se/blog/2009/10/16/menucity_level_0_walkthrough</link>
      <description>MenuCity: Level 0 WalkthroughPublished:October 16,2009Revised:July 23,  2013in0c5354eTagged:WalkthroughIt hasn’t even been a week since I released my latest gameMenyCityand already so much positive feedback! I’m so thrilled :) However, all isn’t blue skies and nice sunshine. A lot of times the first question is: How do you play it? or How do you get past the first level? I admit yes, the tutorial is really bad…So this is me trying to redeem myself! I can’t go back and change the game and make a better tutorial - that would violate my limit of 7 days for each game so here’s the next thing. A nice walkthrough with a lot of pictures explaining the basics and it’ll show you how to actually complete the tutorial! :pThis is you in the first level.The big thing seems to be your ability to pick up stuff. Use the down key to pick up a block. The yellow stripey things are there to show you how many times you can pick up a block, so be careful.You can climb one block up with the up key, naturally with or without a block on your head.If you fall down you can’t get back up, here it’s okay - but don’t move too far to the left! Then you’ll get stuck and you can’t turn to drop the block.Put down the block with the same key you picked it up - down. Notice that the block went all black and you can’t pick it up anymore. This will be the cause of some real frustration later on, trust me.And here we go! All we have to do now is climb up that silly looking city silhouette and walk to the goal. And we’re done! =)Hopefully you’ll find this helpful if you’re stuck and dunno wtf this game is all about. If you want a walkthrough on some later levels just let me know and I’ll see what I can do.Published:October 16,2009Revised:July 23,  2013in0c5354eTagged:WalkthroughPreviousNext</description>
      <pubDate>Fri, 16 Oct 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>An intriguing new puzzle</title>
      <link>https://www.jonashietala.se/blog/2009/10/13/an_intriguing_new_puzzle</link>
      <description>An intriguing new puzzlePublished:October 13,2009Revised:July 23,  2013in7a1ecc1Tagged:GamingHere’s another game made for theexperimental gameplay project:Slidokuwhich is a sort of mix between Rubik’s cube and sudoku. I enjoy puzzles like those and I really enjoyed this one too - it took me a while to beat it but I just love the feeling when you do. If you like puzzles take a look, it’ll be worth it!Published:October 13,2009Revised:July 23,  2013in7a1ecc1Tagged:GamingPreviousNext</description>
      <pubDate>Tue, 13 Oct 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>MenuCity</title>
      <link>https://www.jonashietala.se/blog/2009/10/13/menucity</link>
      <description>MenuCityâ˜Published:October 13,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectThis game is called MenuCity and itâ€™s a numbers game. Well thatâ€™s the theme anyway. The game pretty much held to what I planned for - except that it deviated from the theme -again- a bit.My game is very reminiscent of the old calculator classicBlock Dudemade by Brandon Sterner. If you like that game, or any puzzle game for that matter, youâ€™re gonna love this one.MenuCityInstructionsLeft/Right arrows - MoveUp arrow - ClimbDown arrow - Pick up/Put downf1 - Secret dev consoleIf youâ€™re stuck this might help:Walkthrough Level 0CreditsMusic: The Year Before The War -Eric MaskolSound effects: Random fromfreesoundRest: MePublished:October 13,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Tue, 13 Oct 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>October theme says: Numbers</title>
      <link>https://www.jonashietala.se/blog/2009/10/01/october_theme_says_numbers</link>
      <description>October theme says: NumbersPublished:October  1,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectNew month and a new theme. As with the two previous games I’m followingThe Experimental Gameplay Projecttheme which this month is numbers. What’s it gonna be? A sudoku game or something more… thrilling? I’ll see what I can do :)Published:October  1,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Thu, 01 Oct 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why make games</title>
      <link>https://www.jonashietala.se/blog/2009/09/28/why_make_games</link>
      <description>Why make gamesPublished:September 28,2009Revised:July 23,  2013in7a1ecc1Tagged:Game MakingWhy did I start making games? Because I like to play them of course. Think of all the fantastic games;Super Mario, Lemmings, Tetris, GTA, The Sims, Counterstrike, Theme Hospital, SimCity and Rollercoaster Tycoon… Damn - when you count them like this you’ll see how many great games there are out there. And I can honestly say each and every one of them has inspired me and made me wanna create something similar.No - something even better!I also like to program, that’s almost a must if you should make a working game from scratch, so I figured why not use it to make something productive and hopefully something fun?Published:September 28,2009Revised:July 23,  2013in7a1ecc1Tagged:Game MakingPreviousNext</description>
      <pubDate>Mon, 28 Sep 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: Bugger</title>
      <link>https://www.jonashietala.se/blog/2009/09/24/postmortem_bugger</link>
      <description>Postmortem: Buggerâ˜Published:September 24,2009Revised:July 23,  2013inaf1cdd3Tagged:Postmortems,Experimental Gameplay ProjectItâ€™s time for the follow up on my latest gameBugger.Wow it seems like forever since I begun this monthly game business, but itâ€™s only been two months since I first thought about this and here I am having finished my third game. Iâ€™ve really come a long way, in the beginning I though Iâ€™d only make state of the art crap games. Like I would struggle to even get a Tetris up and running. Thatâ€™s partially why I decided to makeBalls.Anyway I started out with a small idea: speed-typing. It later turned out to be bugs you killed, but thatâ€™s of minor importance really. They were supposed to bind to the themeFailureby letting the average gamer feel how a programmer fight for his life against bugs. Bugs are for those who donâ€™t know errors in your program - they can be as simple as a wrong letter in the wrong place causing havoc in the game or a bigger thing like a fundamental flaw in your game. Think about the balls who got stuck in mid-air inBalls. Thatâ€™s a typical bugâ€¦If I followed the theme good or bad you be the judge. Personally I donâ€™t think it was as clear as Iâ€™d want it to do but meh.The game itself took 25 hours to make - but more than 5 hours of them was me having a break.
Hereâ€™s a little jummy pie of what took time:Compared to my two other games I spent a bigger part on both graphics and level design - and that was sourly needed imho. The â€œembedding scriptingâ€ part is where I built in the ability to build levels from lua. I think the result was really good and it saved a lot of time just being able to edit a file without having to recompile every single little change.You can make your own levels too, just open the â€œlevels.luaâ€ file in a text editor and make your changes. I wonâ€™t explain anymore since itâ€™s really simple.Iâ€™m also using about 1/5 of my working time to rest. Jikes! Thatâ€™s almost too much. But I dunno, it really hurts staring at your computer screen hour after hour. My longest session - without a break, even a bathroom one - was almost five hours. I totaled more than 10 hours that day I think.. As always I do the bulk of the work when Iâ€™m out of time. The last two days were responsible for at least 90% of the work!I guess you could say thatâ€™s a lesson: youâ€™re most productive, and ambitious, when youâ€™ve got a smoldering iron up your ass.Published:September 24,2009Revised:July 23,  2013inaf1cdd3Tagged:Postmortems,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Thu, 24 Sep 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Bugger</title>
      <link>https://www.jonashietala.se/blog/2009/09/20/bugger</link>
      <description>Buggerâ˜Published:September 20,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectAhhhâ€¦ Finally another game! Theme of this beauty isFailureand your mission here is to avoid the bugs. As a programmer the fight with those nasty bugs are a daily occurrence and now Iâ€™ve brought you a chance to kill those nasties too!The gameplay wasnâ€™t what I was planning on - yet again - but Iâ€™m actually quite content with the game. Itâ€™s able to grab your attention for at least a few minutes before loosing you and itâ€™s absolutely the prettiest one Iâ€™ve ever made! Enjoy! ^^BuggerInstructionType the text on the bugs to make them disappear, thatâ€™s all folks!CreditsMusic: Dare to Breathe -Tom FahySound effects: Random fromfreesoundRest: MePublished:September 20,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Sun, 20 Sep 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>September theme: Failure</title>
      <link>https://www.jonashietala.se/blog/2009/09/12/september_theme_failure</link>
      <description>September theme: FailurePublished:September 12,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectI’m out of the busy mode and here’s the new theme! I’ve got an idea and I’ll be beginning very soon I hope and again I’m followingExperimental Gameplay Project’s site.Let’s rock!!Published:September 12,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Sat, 12 Sep 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Going into Being Busy mode</title>
      <link>https://www.jonashietala.se/blog/2009/08/25/going_into_being_busy_mode</link>
      <description>Going into Being Busy modePublished:August 25,2009in5ce0df3Tagged:LifeI’m in the civil service atm and, sadly, we’re going to be extremely busy the coming… two months or something? So I can’t promise a game the next two months. Kinda beats the point of this site doesn’t it? I’m really sorry and that’s all I can say really…Hopefully I’ll get a week somewhere with enough spare time to create something. It’s a damn sure I’ll have to make a game about submarine warfare!!Published:August 25,2009in5ce0df3Tagged:LifePreviousNext</description>
      <pubDate>Tue, 25 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: Black and White</title>
      <link>https://www.jonashietala.se/blog/2009/08/21/postmortem_black_and_white</link>
      <description>Postmortem: Black and Whiteâ˜Published:August 21,2009Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectAll this time working on my latest game I thought it sucked and I was trying hard to make it to not suck. My spirit wasnâ€™t high, just checkthis postandthisbut now when itâ€™s done itâ€™s like night and day, or like black and white! Iâ€™m damn happy I got it done!! Aah Iâ€™ll try to make this postmortem shorter than the last oneâ€¦ That was huge.Lessons Iâ€™ve learnedLevels take timeI know youâ€™re all disappointed by a measly three levels in the game and for that Iâ€™m sorry. I hadnâ€™t set aside time for making the levels in my mental plan so when I ran over the time limit of 7 days I had to cut down on some stuff - this time it was the levels.A codebase rocksFor my first game I had some basic code from older projects I used, like handling states, a small menu and a vector class among others and that saved me a whole lot of time. Now I had even more code so I got something on screen a lot faster and I could afford beginning with creating the dude and his animation (although I kinda overdid that) knowing I already had the basic foundation in place. Now Iâ€™m going to get my coding skillz up and the experience and this is another really big stone which will allow me to make bigger and more badass games later on.It might not suck so hard after allâ€¦In the beginning I was pretty confident but I quickly lost that momentum and I thought a lot about how sucky this game isâ€¦ Itâ€™s not polished, itâ€™s not fun and the levels suck etc but it turned out to be okay! I have to stop being so damn negative! These are experimental games for crying out loud, theyâ€™re expected to fail once in a while and guess what? It doesnâ€™t matter!Published:August 21,2009Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Fri, 21 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Black and White</title>
      <link>https://www.jonashietala.se/blog/2009/08/20/black_and_white</link>
      <description>Black and Whiteâ˜Published:August 20,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectHere it is at last! Boasting a unoriginal name, themedBare Minimum. My thoughts where to create a game where graphics where included into the gameplay but sadly it didnâ€™t come out nearly as good as I expected it too.Yes I know there are a lot of things bad and wrong with this game, but this is a competition with myself to create a game in only seven days and you canâ€™t always polish the games like your heart tells you to do.Black and WhiteInstructionsMove left and right with the arrows, jump with space and change the blocks with enter. Esc into the menu and there you can enter a highly advanced (not) level editor to change the levels however you want with left and right mouse.CreditsMusic: What we take to the grave - Tom FahySound effects: Random fromfreesoundRest: MePublished:August 20,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Thu, 20 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Incomplete game coming up</title>
      <link>https://www.jonashietala.se/blog/2009/08/19/incomplete_game_coming_up</link>
      <description>Incomplete game coming upPublished:August 19,2009in5ce0df3Tagged:Experimental Gameplay ProjectMan I’m far too much of a perfectionist, with this mentality I’ll never get anything done - seriously. I spent far too many hours, even days, figuring out in my mind how the game should be and I started off going for nothing less than just that. But it turned out to be a lot harder and a lot bigger but still I couldn’t let it go and start over with something new, something fresh.I wonder isn’t this something very common? Not just in game development but for everything in life; we always stick with our idea of perfection and stuff that we’re familiar with, trying hard not to do something different and unfamiliar. I can honestly say I’ve tried to make something fresh and different but maybe that’s my problem. I’m trying too hard and when it’s impossible I still won’t let it go… Just maybe it might work if I do it like this… maybe?!No this month’s game is going to be crap, I can see it. Polish, which I believe is the single most important ingredient in a game, is non-existent. And worse yet, the gameplay is bad - in fact it’s even worse, it’s unplayable and boring! Never mind that I’ll give myself tomorrow to give the game a bit more love in the hope of making it just a tiny bit less sucky.What do you think; should I release the game - no matter what - after one week and ignore my need for perfection or should I give the unfinished and “bad” game more love so it might be a little better and a bit more fun to play?Published:August 19,2009in5ce0df3Tagged:Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Wed, 19 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Going down</title>
      <link>https://www.jonashietala.se/blog/2009/08/16/going_down</link>
      <description>Going downPublished:August 16,2009in5ce0df3Tagged:LifeAh my first game was so painless so I thought I could do any game I could imagine! Shooters, and mario bros kinda stuff. Well now I’m not so upbeat anymore, I’ve worked on this game for 7 days now and it’s not playable at all. With seven days I don’t mean a week, I’ve had a big break in the middle with no reason at all!Anyway I realize I can’t make the one week mark… which sucks… and the game isn’t looking or feeling the way I want it too but I will release it when I’ve made it slightly less sucky.Published:August 16,2009in5ce0df3Tagged:LifePreviousNext</description>
      <pubDate>Sun, 16 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>August theme: Bare Minimum</title>
      <link>https://www.jonashietala.se/blog/2009/08/04/august_theme_bare_minimum</link>
      <description>August theme: Bare MinimumPublished:August  4,2009in5ce0df3Tagged:Experimental Gameplay Project,Game Jam ThemesThis time I’ll be followingmy inspiring siteand declareBare Minimumas the theme for my next game. This could really be anything, from graphics to user interaction… But I’ve got an idea. It’ll be a real challange for me to make but hopefully I’ll have a game in a few weeks time.Published:August  4,2009in5ce0df3Tagged:Experimental Gameplay Project,Game Jam ThemesPreviousNext</description>
      <pubDate>Tue, 04 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Postmortem: Balls</title>
      <link>https://www.jonashietala.se/blog/2009/08/04/postmortem_balls</link>
      <description>Postmortem: Ballsâ˜Published:August  4,2009Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectSo itâ€™s been what? Two, three years since I discovered the art of programming and I havenâ€™t made one single game?! Well now Iâ€™m not counting the visual basic nightmaremastermindI made a long time ago but a real game. Whatever that means. Iâ€™ve had these monster-projects;Point and click monkey island style adventure gameThe beginning c++ adventure for me. Kinda harsh start up donâ€™t you think? I thought so too - it never got anywhere near completion or playability.Another heavy gameThink fully destructible environment. Need I say more?â€¦ No.The Game EngineThe project everyone dreams of making games ends up doing and either discover it didnâ€™t amount in anything playable, which I did, or youâ€™ll end up thinking creating games isextremelyhard and itâ€™ll take years for just a small game.The Dream projectIâ€™ve been thinking of making a few posts about the games in my dreams. Which Iâ€™ll most certainly complete! Sometimeâ€¦ Maybeâ€¦?!Somewhere about now I got interested in Indie games. I thinkWorld of Goowas the first but Iâ€™m not really sure. Maybearmadillo runorbridge builder? Damn! I couldnâ€™t even google the link tobridge builder aka pontifex 3- all I found was a thousand torrent sitesâ€¦But what I did find waskloonigames, some guy who did the same thing Iâ€™m doing. Or Iâ€™m doing the same as him: following the footsteps of theExperimental Gameplay Project. Making a game in 7 days, something surely impossible, and I havenâ€™t even made any game before! Oh crap! But as Petri (kloonigames dude) so elegantly put it:My experiences told my that creating, even a small, game takes months, if not years. So to do it in 7 days seem frightening. And not only the code, but graphics, music, sound, levels and all things included. I shit my pants even thinking about it and almost gave up. Luckily I realized that the worst thing that could happen (beside shitting my pants) was wasting a week of my life. I could do that easily with a Buffy the Vampire Slayer marathon.And hereâ€™s a summary of my firstevergameBalls. Itâ€™s availableherefor download.The GoodI got it done!It seemed impossible and it scared the hell out of me. But I made it!! Aaahâ€¦ It feels so good right now. And the game is actually pretty fun! It doesnâ€™t suck, it doesnâ€™t crash (but itâ€™s a bit buggy) and I can sort of say I managed to stick to my themeAddictive Gaming. Now with this over with I can focus on my next game. Not just now but in a while, now Iâ€™m confident to try new, bigger and hopefully better things and I know I can pull it off!Iâ€™m on top of the world! Nothing is impossible! Superman and Neo - youâ€™re just sooo jealous right now.It didnâ€™t even take longâ€¦I end up usingtimelogfrom kloonigames to track my time. The game took25,5 hours to make, but I spent 7,5 hours of that time on a break! Either reading manga, playing cs or just surfing around and chatting. This isnâ€™t the time to nag about my lack of concentration and that Iâ€™m lazy, this is where I realize I didnâ€™t even work myself to death making the game. I could afford a break here and there, and now when I think about it they were really necessary.Pressure is goodI did manage to implement some physics and collision detection, even though itâ€™s really simple. This was a first for me and I did it under a tight schedule! A coincidence? I donâ€™t think so, a small amount of pressure is really really good. It is during these times Iâ€™m most productive and I really do get things doneif I have to.The BadThe motivation didnâ€™t stickAlthough I made the game and it was pretty good I didnâ€™t even remotely invest as much time in it as I could - and I donâ€™t know why. I lost that super motivation pretty early in development and when I hit a bug or something that needed a lot of changing to implement I usually cut corners or just ran away screaming.Is this the every day life of a developer? If itâ€™s this though to get motivated wonder how you can motivate yourself working on a shitty project?The UglyThe codeWow - Iâ€™m never showing the source of this to anyone! I tried doing the things which would make the game nearest completion, I did cut some corners but in the end the job is done. But itâ€™s really ugly and before reusing the code Iâ€™ll need to clean it up a lot!Whatâ€™s that smellâ€¦? It stinks of smelly code!Published:August  4,2009Revised:January 19,  2019in44a47dbTagged:Postmortems,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Tue, 04 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Balls</title>
      <link>https://www.jonashietala.se/blog/2009/08/01/balls</link>
      <description>Ballsâ˜Published:August  1,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectHereâ€™s my first ever experimental game! The theme wasAddictive Gaming. My first thought was oh god Iâ€™ll be making another tetris clone but the end result turned out a bit different. Iâ€™m not sure itâ€™s very addictive but itâ€™s actually okay! =DBalls is a game aboutâ€¦ balls. Well itâ€™s all in 2D so maybe Circles would be a better description but I donâ€™t think that captures the attention enough.I didnâ€™t think this was possible but here it is! My very first jewel =)BallsInstructionsWellâ€¦ Thereâ€™s nothing to it really. Move the mouse over the balls to make them shrink, survive until the top is filled with balls.CreditsMusic: Markovich/A.M.P. - Twisted in flightSound effects: Random fromfreesoundRest: MePublished:August  1,2009Revised:January 23,  2019in40d0d5eTagged:Games,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Sat, 01 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>My first theme: Addictive Gaming</title>
      <link>https://www.jonashietala.se/blog/2009/07/25/my_first_theme_addictive_gaming</link>
      <description>My first theme: Addictive GamingPublished:July 25,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectIn true experimental spirit I’ll now announce the theme for my first game:Addictive Gaming. I won’t be following the lead from theExperimental Gameplay Project’s sitebut I will follow their three laws (7 days, alone, themes).Puh… my first game! Wish me luck =)Published:July 25,2009in5ce0df3Tagged:Game Jam Themes,Experimental Gameplay ProjectPreviousNext</description>
      <pubDate>Sat, 25 Jul 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The first (worst) post</title>
      <link>https://www.jonashietala.se/blog/2009/07/21/the_first_worst_post</link>
      <description>The first (worst) postPublished:July 21,2009in5ce0df3Tagged:BlogWell, here it is: The opening post. What will come here? Here’s where I’ll outline what the blog will be about and maybe, if I’m dedicated, it won’t die before Christmas you think.And sure, you’re right. I will run away to the corner in about two and a half months crying I never got the traffic I’m fantasizing about but I can try to summarize the site in one sentence:I’m going to make a themed game every month. There, I’ve said it. Tired and scared of wasting my time with a monster-project I’ve decided to use theexperimental project model. Basically I’m going to make a game in 7 days, kinda like God made the world. And I’m alone making these games, all the gfx, the sound and the code.If this got you interested check back regularly for some cool (I hope) games and read my posts.Published:July 21,2009in5ce0df3Tagged:BlogNext</description>
      <pubDate>Tue, 21 Jul 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Winter Kit Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2016/01/16/netrunner_winter_kit_tournament</link>
      <description>Netrunner Winter Kit Tournament LinköpingPublished:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerAfter quite the hiatus fromNetrunnerI had a chance to join a tournament here in Linköping with 14 participants. The number of players has grown a lot since the previous tournament which is really great.As I really wanted to win the wonderfulDay Jobplaymat I went with two of the best decks I could come up with. I went with theNoisedeck I’ve been playing a while which has been performing really well. I was expecting a lot of EtF so I was on the verge on playing a classicLooking 4 JobWhizzard deck but I switched to Noise just before the tournament as I’m more comfortable with it but I also find it more fun to play Noise than anything else. As for the corp I had played a littleFoodcoatssince it dominated worlds and it has felt extremely solid overall.Tournament structureWe did 4 rounds of swiss without a cut, even though I was personally hoping for 5 rounds. The more games I can play the better it is, I just love to play you know. As usual you get 2 points for each game you win and 1 point for a timed win.Round 1: Dan, Reina/Syncvs ReinaHe got me low on credits early but I played it slow and slowly but steadily accumulated enough credits to build rez enough ice and score out. Foodcoats destroyed the game.vs SyncI was really scared of Sync as Noise is weak against tags and I don’t run any meat damage protection. But I got a nice start and got a few points lead but he still managed to score out some astro counters and I carelessly gave him a Quantum Predictive Model so he got up to 5 point. Luckily I had set up the shard combo with utopia and hades shard I maged to score out with them the click before he would have won.Generally I need to be more mindful of quantum predictive model. I actually think it’s a really good agenda in this type of deck.4 points, 2-0Round 2: Johannes, Leela/Haarpsichordvs LeelaI was really, really poor in the beginning of the game and I had trouble getting my campaigns to stick. I made the really big mistake of trying to rush out an Accelerated Beta Test but I was too poor and too scared of Legwork and The Maker’s Eye after bounce to do it. In the process I had blocked Breaker Bay Grid from my campaigns which made the game really slow… I think I could have won in the end anyway but he got through my remote twice by forcing through an Ichi. Well played by him but I feel like I should have done better.vs HaarpsichordA bit rushed on time and super scared of 24/7 News Cycle I got a fairly good grip in the beginning with a Lamprey lock and I stole a couple of agendas early. Unfortunately I accumulated two News Team and nullified my lead. I still managed to find a couple of agendas to have the lead.In the turn I went through a Gutenberg and took a tag (which I could have avoided with Faust) and gave him a Quantum Predictive Model while I was on 4 points. If I had just broken the sub I would have gone up to 5 points and I had a Hades Shard with at least one 2 pointer in the archive… Once again I need to be more mindful of taking tags. Still had more points and got the timed win.5 points, 3-1Round 3: Henrik, Noise/Blue Sunvs NoiseEtf got set up well and the runner didn’t do anything useful at the start and I got set up really well economically and I was quite safe. Game ended early due to a faceplant into Assassin with only 2 cards in hand and I had a ton of money.vs Blue SunI knew Henrik ran an Accelerated Diagnostics combo deck and I was again scared of dying to Scorched Earth with my not having any protection. But I got a lot of HQ and R&amp;amp;D accesses by trashing two Spiderwebs and an Assassin and I managed to ping away some kill pieces. He drew a lot with jacksson and managed to end up with all three copies of scorch in archives and I finally won by a Medium for his whole R&amp;amp;D.9 points, 5-1Round 4: Fredrik, Kate/EtFThe last game of the tournament and I and Fredrik were the top dogs. As I had one timed win but Fredrik did not so I had to win both games to win the tournament. Tough task as Fredrik is a very solid player.vs KateI was a little flooded in the beginning but I didn’t get punished for it and after that I drew really good. I managed to stick the campaigns in the remote and I had a ton of money basically the whole game. Fredrik security nexus kate and I managed to get two 2-points early and I didn’t draw any agendas in the midgame when he was set up with his monster rig.At the end of the game I had built up a 4-Ice remote and a 5-Ice R&amp;amp;D. He hit me with an Escher which felt quite awful as he had a bunch of R&amp;amp;D interfaces but it turns out my super taxing ice and R&amp;amp;D luck saved me. Foodcoat can and will make extremely taxing servers it turns out…vs EtFFredrik ran a sort of Team Sponsorship fast-advance/rush EtF which I wasn’t looking forward to all that much. But luckily he didn’t draw a lot of economy and I managed to keep him down economically by a combination of lamprey and forcing him to rez ice. I also sniped an early 2-pointer by clicking through an eli and breaking a marcus with Faust, which felt really good admittedly. Overall I managed to keep up a ton of pressure on him even though I didn’t find aesop’s until fairly late.I really felt in control the whole game and the game ended as a timed win for me. The only bigger mistake I recall is one I did on my last turn in the game where I installed a cache and then ran on the remote server thinking I could beat the ash trace just to plant into a Turing. At this point I was already at 5 points and what I could have done is walk through R&amp;amp;D 2 times by taking assassin to the face to maximize my chances of getting a regular win.12 points, 7-1The resultsI was a bit down after loosing points in the second round but I managed to recoup very well in the end. I felt I had some really good in some key matches and my decks served me very well. I will probably try some other corps but I may still continue playing Noise even after the most wanted list.In the end I managed to win the whole tournament which I didn’t really expect. I was hoping to do well but I wasn’t expecting it.As my prize I naturally chose Day Job. The Ice Wall participation prize was great as well. I’m a little sad I didn’t get the Corroder one as I think it looks really good, but you can’t get everything in this world.Was a good tournament and everyone were once again awesome! I’m already planning for the next one!Published:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Summer Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2015/09/18/netrunner_summer_tournament_linkping</link>
      <description>Netrunner Summer Tournament LinköpingPublished:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerThere was anotherNetrunnertournament this Sunday with 8 entrants. We had two new legal data packs with Old Hollywood and The Universe of Tomorrow so a lot of new things were tried. I heard a rumor that a full playset of both Aesop’s Pawnshop and Wyldside were available so I decided to not take my jankiest ideas and playNoiseandBlue Sun.The Noise buildwas practically unchanged from what I’ve played previously. The Blue Sun was a new glacier build with space ice and the new agendas Hollywood Renovation and The Future is Now. I wanted the threat of scorch and I also threw in two snares for extra spice.SwissWith 8 players we did 4 rounds of swiss, without any cut.Match 1: Dan, Valencia/Haarpsichordvs ValenciaI tried to push a Hollywood Renovation early, but it was snagged with blackmail.  It was a big gamble which unfortunately didn’t pan out.  This was a kinda large mistake, but in the end it didn’t matter.  I got my huge ice up and running and I forced him out of my servers.  I made a big play with Hollywood Renovation where I fast advanced a The Future is Now with the 5th and 6th advancement tokens and the game was basically over from that point.  I think I flatlined him in the end, but that’s more of a symbolic victory as I could have just as easily scored out.vs HaarpsichordSuper close, he had scored a lot of points and I was sitting with clot. In the end he installs 3 new remotes, one behind an ice. I push through the ice to steal the first agenda and I imp the second one (now the Imp is without counters). So I install another program, trashing the imp, then trashing the third remote with the imp. All new remotes were agendas. After this my victory was clear as a run on archives sealed the deal.4 points, 2-0Match 2: Harald, Haarpsichord, Hayleevs HaarpsichordI felt like I was behind the whole game, but so did Harald. In the end I managed to snag another very close win, but I’m not sure how that happened. All my Aesop’s were in the bottom of my stack but somehow I managed to steal/imp enough to make up for it. What decided things was a Clot hidden on my street peddler, which he overlooked. Without it I should have lost the game.vs HayleeI allowed some accesses to R&amp;amp;D, but mostly no big damage was done. Then I sealed the game up and the win was basically clear. I had a public support ticking down but we ran out of time so I got one point for being up to 6 agenda points. Maybe I could have played it faster to get the victory on time, but I don’t know.7 points, 4-0Match 3: Henrik, NEH, Chaos Theoryvs NEHI got set up fairly well and I managed to trash a sansan early. I had clot and everything was going alright. I hit a Snare in a remote which took me off guard a bit. The turn after he made another remote and I contemplated running on it, I did have imp tokens after all, but I decided it was fine to possibly allow him a single agenda. Big mistake as I installed cards down to 3 cards in hand and I died to a breaking news and scorch. For some reason I was convinced he was running the fast advance version, or some kind of nearpad, but the reality is I played too fast and didn’t consider everything properly. Live (or die) and learn I guess.vs Chaos TheoryAfter I rezzed an Archer on the remote it was basically game over as he couldn’t break it with the exception of datasuckers/parasiters, which quickly got used. I iced up my centrals with huge space ice and I could simply score out and win. He tried a big Vamp play against HQ, but on the last click and with a tag he died against double scorch after taking down my curtain wall.9 points, 5-1Match 4: Johannes, Haarpsichord/Ianvs HaarpsichordA blistering game where he rushed out agendas and I tried to punish/steal with Imp. The game slowed down when I had a Clot on board and I pushed up to 6 points. A run on archives with a Jackson reshuffle and then triggering Utopia shard sealed the deal.vs IanWe laughed about our decks being super late game focused and he stayed true to his words and he installed a ton of resources, three Gang Signs and two HQ interfaces. I was kinda agenda flooded but I managed to push them out in Archives with double Jackson. The game was decided in a funny way I think, even if I misplayed it quite a bit (I blame tiredness or something!).I had Hollywood Renovation with a bunch of advancement tokens, The Future is Now in a naked remote and one Snare and one Scorch in my hand. So I advanced Hollywood Renovation 3 times and scored it. He hit a Snare but nothing else with all his accesses. Then I scored The Future is Now and fetched my second Snare from R&amp;amp;D, which he accessed and died to. Naturally the correct play would have been to advance Hollywood Renovation twice, score The Future is Now and fetch the Snare. Now if he hits a Snare I can just scorch him on my last click.13 points, 7-1The resultsThe self critic in me keeps on thinking about the lost game and the game which went to time, but some small part of me tries to point out that things actually went well. I felt fine in all games and it never felt hopeless in any game. I did take “better” or more serious decks and the other guys joked about my very serious decks, but it’s fine. I did accomplish my goal and I even won the tournament, yay!I managed to achieve my goal and I got to choose a playset of Aesops! I also got a couple of Swordsman and a new deckbox. It’s a little bit sad that I declined the Femme Fatale alt-art as it’s preeetty… But maybe next time.Published:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner ID draft Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/08/29/netrunner_id_draft_rebro</link>
      <description>Netrunner ID draft ÖrebroPublished:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerI entered an ID draft tournament inNetrunnerhosted in Örebro and this is a brief overview of what happened. Disclaimer: My memory is a little bit fuzzy and the events may or may not correspond to what actually happened.The draftThe idea was to randomly sort all entrants and in turn each chooses an ID which nobody else can choose. When everyone has chosen an ID the procedure continues in reverse order. This means you can choose either corp or runner early and leave the other until later.I got the 5th spot and Geist, Nasir, RP and NEH was chosen before me. If the goal was to do well I should probably have chosen a strong corp like Blue Sun, HB or possibly PE but I had just started playing Noise and I was loving every second of it so that was my choice. It was a little bit boring perhaps as it wasn’t a new ID I had to come up, but I had no idea of what I actually wanted to play with as corp so I simply delayed that decision. When it was my turn again most actually good corps had gone and I could choose between Titan, Harmony Medtech, Argus and Biotech (and some others…). Recently some popular Titan lists had popped up on netrunnerdb so I took that one.This is the drafting result:Frida unfortunately did not attend the actual draft and she had to pick both runner and corp last.With Wayland and Jinteki being relatively popular I was thinking of adding I’ve had worse to Noise… But in the end I decided to be ballsy and skip all that. And no plascretes. But I thought with some careful play and Imp/Utopia shard I could manage. Instead I went with the no frills 3 Aesop/3 Cache low economy approach which I’ve found is perfectly fine. I slotted 2 Hacktivist meeting as the local playgroup in Linköping insisted on running Cerebral static and Manhunt and maybe others would do weird stuff with currents as well?This is the Noise deck.The Titan buildis basically the popularAtlas Shruggedwith Beanstalk replacing Subliminal messaging and an extra Crisium Grid for the relative increase of criminal. In testing the corp deck performed okay… But never amazing. Noise performed consistently whenever I didn’t just die against Jinteki due to… Jinteki stuff.The matchesWhen we arrived at Örebro the basement already full of Magic gamers is already hot and things would only get worse. I didn’t get enough sleep and I’m already tired but still pumped to play some Netrunner!  The tournament features five rounds of swiss without a cut.Match 1: Yoshi, Reina/Blue Sunvs ReinaHedge fund, beanstalk, install ice over HQ. Runner installs things, runs on R&amp;amp;D and misses. I sea source-scorch second turn as he has 2 (or 3?) cards and I feel a bit bad about it. Unfortunately silly wins and losses like these happens sometimes.vs Blue SunHe gets a great start with ice and money. I’m having trouble setting up and I can’t find D4v1d before he can retrieve his oversighted Curtain Wall. I’m too scared/incapable of stealing his agendas as he’s rushing them out. When I finally get my Imp going on HQ he already has a scored atlas with two tokens and he scores out a hostile in a flash. I made a mistake of not installing a clone chip as I had a clot in my heap and I maybe should have been more aggressive but overall Yoshi outplayed me.2 points, 1-1Match 2: Dan, TWIY/Whizzardvs TWIYDan is from Linköping, same as me, but I haven’t actually played him but I knew his was a variation of theMidseasons/Psychographics rush deck. I play very carefully and builds up while he takes money. He gets a bunch more money and I continue milling and building. I’m waiting for him to start scoring out and I go through a Tollbooth and imps away an NAPD contract, but he never gets the astro train going while I sit back milling with clot ready. The game basically end when he never scores out and I get a mill victory.vs WhizzardHe trashes my sansans but I get some points scored. The game goes a bit long and we’re almost going to time. I think I could have won by rezzing an Archer against his faust when he doesn’t have enough cards to continue the game, but I stress out and for some reason I don’t rez it. Later he finds a 3-pointer for the win from HQ. I guess I took the risk as he could have just as easily hit a Snare and loose.4 points, 2-2Match 3: Johannes, Harmony Medtech/Geistvs GeistI’ve played against Johannes a lot so I know his deck and he knows mine. I get an excellent start with 3(!) Quandary protecting HQ, R&amp;amp;D and my remote. I manage to tax out his breaking and entering breakers as I score out with the help of sansan. Annoyingly Forger prevented me from scorching him more than once but in the end I manage to score out behind 2x barriers and a Quandary as he had basically exhausted his breakers and clone chips.vs Harmony MedtechI got set up with Noise fast and controlled the game from the start. He scored out a Nisei but I was never really worried. I made a stupid move of running archives when I had just trashed a Cyberdex and later I ran it again! But in the end my start was just too good and I won by pounding HQ with Lamprey, Imp and parasites.8 points, 4-2Match 4: Magnus, Nisei Division/Valenciavs Nisei DivisionI’ve never played Magnus but I know he’s a very good player so I’m really nervous to play him. He installs over R&amp;amp;D and remote and does a hedge fund. I install a lamprey and imp and run HQ… Just to hit a Snare. Sigh. I thought about it but I figured it wouldn’t be a big deal, but it was. I don’t shake the tag as I don’t have any resource installed and he scorches me. Huge misplay from me and now I’m trying not to tilt too hard.vs ValenciaI have a fairly bad starting hand which I keep… For some unknown reason. He’s very aggressive and he gets a medium dig going but misses. I don’t care about it too much and continue trying to score/finding my pieces. He does another big medium dig through a Grim, paying 3 + 1 cards for it and another ice, and hits a Snare on his last click, with two cards left in hand. I have a jackson out so I click to draw two cards and find the scorch for the win.Funny how both games ends in basically the same way. I’m still a bit upset about the way I lost but it feels a little bit better that I could pull out a win against such a good player, even if it was a lucky one.10 points, 5-3Match 5: Frida, Argus/Silhouettevs ArgusI know Frida loves meat damage so I play very carefully. I get a good start and I imp a bunch of things from R&amp;amp;D while milling a healthy amount. She scores out a couple of 1-pointers but I’m milling very fast and she’s not threatening me yet. When she goes up to 5 points I have as much money as she has so I make a run on archives (I also have an installed Utopia Shard) and take the win.vs SilhouetteAgain I get a good start and I get a Crisium grid on HQ to stop siphon. She doesn’t find her breakers and I get a hostile scored followed by the atlas train.14 points, 7-3Final resultsI won 7 matches, 4 with Titan and 3 with Noise. Surprisingly my corp faired better than my runner which can partly be explained by the two lucky flatlines I got. But overall it felt a lot better than during testing. Perhaps it’s because I’ve never played a rush deck before and the style takes a little getting used to? Then I got the silly scorched loss with Noise which really shouldn’t happen if you play as you should. But mistakes happen. I’m quite glad I managed to avoid tilting though.Generally with Noise I feel if the corp doesn’t push scoring windows hard you’re always in control of the game. Even then it’s difficult without a secondary win condition like scorch or midseasons. This is what Yoshi did with Blue Sun so very well where I really felt behind the whole game, but perhaps I was being too cautious.Overall I’m quite pleased with my result all things considered. This is the final results after the five rounds of swiss:There were quite a lot of prizes available and after the three victors took theirs this is what took home as my 4th place:I wanted to have a full playset of aesop’s, especially as I really love Noise, but the mat feels a little more special. I still want the alt-arts though, hopefully I can get them from somewhere else.Published:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Years at Linköping's University</title>
      <link>https://www.jonashietala.se/blog/2015/07/22/5_years_at_the_university</link>
      <description>5 Years at LinkÃ¶ping's Universityâ˜Published:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolI recently finished my masterâ€™s degree (civilingenjÃ¶r or civil engineering) at LinkÃ¶pingâ€™s University. At first it felt like 5 years would be an eternity, but in hindsight it was over in a flash. my gut feeling is that I havenâ€™t learnt or done anything of note, except you know actually finishing my degree, but if I sit down and think about it I have done some things. Actually quite a lot of things.First yearI moved to LinkÃ¶ping with my girlfriend and it was quite an adjustment as we both moved from our parents and to a city where we practically knew nothing and no one. But we managed fine and while we never went out to parties or went to other student events we found some friends. I also startedITF Taekwon-doafter a few months.There werenâ€™t too much to do in school. The focus was on foundation math courses, mostly things I had already done but needed refreshing, and on introductory programming courses which werenâ€™t challenging at all for me.Second yearDuring the second year I felt the courses were harder and more interesting than the first yearâ€™s courses. The courses in Combinatorial Optimization, Data Structures and Algorithms and Linear Algebra were fun and new for me. I also took an extra continuation course in Linear Algebra which was interesting.When I started the university I thought I would like electronics and hardware construction, but the courses from the first year were really not interesting at all. Even when making the transition from analog to digital I didnâ€™t care for it at all. But it all changed when we started actuallybuildingthings with digital circuits.At first we had an introductory course where we built digital clocks and counters. You were supposed to have prepared a design sketch for the labs, but me and my partner for some reason never did it, and so we were always running late in the labs. I remember one very fun, or horrible, occasion where we had struggled a lot with one lab and we had spent almost the full 4 hours until we finally completed it with maybe 10 - 15 minutes left. Filled with relief we started taring apart what we so painstakingly had built. When done we realized we had one part left where we were supposed to use the circuit we just destroyedâ€¦ Luckily we could use the circuits another group had made, but it was a painful lesson in always reading the descriptions and prepare for the labs in advance.The digital circuit labs were followed by a digital project of our own choice. Wedesigned a processorwhich could run theCore Wars 88 standardand we simulated it on an FPGA.The main block schema for the processorAnd here is a small video of the simulation in action:Click to view on YouTubeThe project was interesting as it was an outlet for our creativity and it touched on several different areas. Processor design, hardware debugging (!) and I wrote aredcode assemblerfor our CPU and amicrocode compiler.The behaviour of the processor is controlled by microcode which basically is a set of control outputs of 0s and 1s. For example our processor has 18 outputs consisting of a total of 39 bits (uPC_addris internal).game FIFO IR ADR1 ADR2 OP M1 M2 mem1 mem2 mem3 mem_addr ALU1 ALU2 ALU buss PC  uPC  uPC_addr00   00  0   00  00   0  00 00  00   00   00    000     00   0   000 000  00 00000 00000000To make things easier, instead of manually editing each 0/1 line we introduced a DSL which then the compiler turns into microcode lines.For examplethe microcodeis described in our DSL:; Startup, check if we're in gamejmpS $GAME                              ; Execute game code only if we're runningjmpO +0                                 ; Infinite loop if we've recieved game over, reset to break it; Clear memory contentsALU = 0                                 ; Load 0ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC:CLRMEM PC -&gt; mem_addr                          ; Look at PCOP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem         ; Clear itALU++                                   ; IncrALU1 -&gt; PC, jmpZ $LOADP                 ; If 0 we're done loopingjmp $CLRMEM                             ; Else continue...And is then compiled intoVHDL code:signalmem:Data:=(--Startup, check if we're in game"00000000000000000000000000000000000011000110011",--jmpS GAME(33)"00000000000000000000000000000000000101000000001",--jmpO +0(01)--Clear memory contents"00000000000000000000000000110000000000000000000",--ALU = 0"00000000010101000000000000000100010000000000000",--ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC"00000000000000000000110000000000000000000000000",--PC -&gt; mem_addr"00000000000000101010000000000000000000000000000",--OP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem"00000000000000000000000000100000000000000000000",--ALU++"00000000000000000000000000000100010001100001001",--ALU1 -&gt; buss, buss -&gt; PC, jmpZ LOADP(09)"00000000000000000000000000000000000001000000100",--jmp CLRMEM(04)...The redcode assemblers job is to transform a warrior (a piece of redcode) into a binary object file which we can then send to the FPGA for execution.For example this warrior:step    EQU 417init    EQU 1337size    EQU 9JMP start           ; boot jump as we can't specify PC in the middle T.Tsrc     DAT 0               ; src pointerstart   MOV #size, src      ; setup src pointercopy    MOV @src,DJN copy, srcSPL @dst            ; throw a pc thereADD #step, dst      ; space out a bitJMP start           ; make a new copy, yay!dst     DAT #0, #init       ; dst pointerendCompiles to:$ ./assembler jonas-replicator.red -r0000000000001001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000010010001111111111111000000000001101100011111111111100000000000000101000000001001000000011111111111110001111111111101000000001010100000000000000000110000000000000000000000000010010000000001101000010000000000000010000000000100000000011111111110110000000000000000000000000000010100000000000000000000010100111001With the--verbosetag the format can be examined:$ ./assembler jonas-replicator.red --verbose0000000000001001  00 09  ; Number of rows (9) jonas-replicator.redpad    OP  A  B  pad     A op      pad      B op00000000 0100 00 00 000 0000000000010 000 0000000000000   00 40 00 02 00 00  ; JMP  start           (2)  0(0)00000000 0000 00 00 000 0000000000000 000 0000000000000   00 00 00 00 00 00  ; DAT  0               (0)  0(0)00000000 0001 01 00 000 0000000001001 000 1111111111111   00 14 00 09 1f ff  ; MOV # size(9)  src       (-1)00000000 0001 10 11 000 1111111111110 000 0000000000101   00 1b 1f fe 00 05  ; MOV @ src(-2) &lt; dst      (5)00000000 1001 00 00 000 1111111111111 000 1111111111101   00 90 1f ff 1f fd  ; DJN  copy(-1)  src(-3)00000000 1010 10 00 000 0000000000011 000 0000000000000   00 a8 00 03 00 00  ; SPL @ dst            (3)  0(0)00000000 0010 01 00 000 0000110100001 000 0000000000010   00 24 01 a1 00 02  ; ADD # step(417)  dst      (2)00000000 0100 00 00 000 1111111111011 000 0000000000000   00 40 1f fb 00 00  ; JMP  start           (-5)  0(0)00000000 0000 01 01 000 0000000000000 000 0010100111001   00 05 00 00 05 39  ; DAT # 0(0) # init       (1337)If youâ€™re interested in the project you canread more on github.In addition, or as a prerequisite, to this awesome project we also got an introduction to 68k assembly and to computer architecture which was very good.This year me and a friend also made game in the Java programming course calledGrand Thief Arto. Not the greatest of games but it was still fun to make it. I also became a mentor in discrete math for the first year students which was a fun and easy way to earn a bit of extra money.Third yearThis year we continued with some more advanced courses. We had some project oriented courses with some theory about how projects should be run and then a practical part where we made some software for an actual company. The overall idea the course idea is great, to get some real world experience and to get some interaction with an actual company, but the execution was very much not so.For example in the middle of the project one of our project members were supposed to be exchanged with another member from another project. The motivation was that â€œin the real world this could happen, so you need to always be preparedâ€ but thatâ€™s just stupid in my opinion. Firstly you donâ€™t get fired and just booted from the team very often, but you get an advanced notice and you have some time to prepare the team, yourself and your eventual replacement for the move. Secondly it adds a very real sense of dread and nervousness for everyone involved. I happened to really like all members in the project and I was very worried to be switched out. Turns out I was the one who had to change project. I was very upset and I didnâ€™t click nearly as well with the new team and I thought the experience really sucked and I became demotivated.Another thing which was quite bad was the extreme focus on documentation. The whole first 2-3 months were supposed to be a planning stage and the actual implementation was supposed to be done the last 2-3 months. But large parts of the implementation stage were also spent on documentation, or rather writing documents because the course demanded it and we never had any use for the majority. The funny thing is that most of the project theory was spent on motivating why the waterfall development model wasnâ€™t suited to software development, but what did the project degenerate into? Even despite our best efforts, we tried to implement an iterative development as our customers didnâ€™t really know what they wanted, but we were foiled by course planners.A much better project was theRobot projectwhere we created an autonomous robot! There we poked around with hardware and lower level programming in C.Debugging this was quite an experienceI continued to be a mentor in discrete math and I joinedTeam Obelixwhich organized student visits to different companies. I won the â€œbest CVâ€ award given by Ericsson, I won some things in the local programming competitionIMPAand I had a great course in operative systems where we usedPintos. I took an extra course in Graph Theory which was quite different from other math courses but very interesting. Additionally I took aProgramming Languagescourse at Coursera, also quite nice.This summer I also had my first real programming job which was a summer internship atConfiguraand I had a really good time and we replaced their triangulation software.Fourth yearThe courses from the previous years were all mandatory, with the exception of some extra courses I took, but for the 4th and 5th year I could choose my own profile and what courses to take. I spent quite a lot of time thinking about which courses I wanted to take. In the end Iâ€™m quite happy with my selection but there are many interesting courses I had to say no to. The main profile I targeted was theProgramming and Algorithmsprofile.In hindsight these are my favourite courses during the year:TDDD48 Automated PlanningAAPS Advanced Algorithmic Problem SolvingTDDB44 Compiler ConstructionTATA54 Number TheoryTDDC17 Artificial IntelligenceTDDD56 Multicore and GPU ComputingTDDA69 Data and Program Structures (SICP)I didnâ€™t find the compiler courseasfun as I had initially thought. The theory part wasnâ€™t very interesting but the lab part was really, really good! All in all it still was a very fun course. The AI courses (Automated Planning and Artificial Intelligence) were great and AI is an area Iâ€™m very interested in. During this time I also took anonline course in Machine Learningvia Coursera by Stanford University. Number Theory is another maybe niche area in mathematics which I found interesting.I continued doing some programming competitions as can be seen inUVawhich enabled my to go toNWERC 2013in the Netherlands. Ultimately Iâ€™m not super good at these competitions but it was still a great experience. Netherlands (or specifically Delft) was great. In the Multicore and GPU Computing course there was a parallel sorting contest which I and my lab partner managed to win. The goal was to create a sorting routine on the CPU with the best sorting performance. Oh and I also went through the classic book Structure and Interpretation of Computer Programs orSICPin a course. Very excellent book!During the summer I also took part inIDA Summer of Code 2014where I contributed torust. I also had mysecond summer job at Configura:Our octree implementationFifth yearAt the end of my fourth year I had grown a bit study tired. I had thought the summer jobs would have helped a bit but although the summer jobs were amazing it might have been better to take a bit of a holiday, which I did not do at all.But the real issue wasnâ€™t me getting sick of studying, although I was a bit unmotivated, but I was fast approaching a burnout. It never got so serious that I became apathetic but it was pretty bad for a while. The last semester in my 4th year I only did 27 hp (30 hp is the target value) and the first semester in my 5th year I only managed 24 hp. I had accumulated extra points so I finished the university with 308.5 hp, of the required 30 hp, but I was less effective the last 1.5 year or so than usual.I might write more about my burnout in another post, but I did three main things to get out of it. The first thing I did was to start CBT (Cognitive Behavioral Therapy or Kognitiv beteendeterapi in Swedish). The second was to continue with things which made me happy and more importantly gave me more energy. Basically I started exercising more regularly. And the third thing I did was to scale down on my ambitions and focus on taking care of myself, this is the reason I didnâ€™t study 100% the first semester.In the end I think I managed to get rid of the worst effects of the burnout and I managed to finish my studies. I was also a mentor in discrete math for a fourth time. I didnâ€™t complete a ton of courses as the whole last semester was spent on writing myMasterâ€™s thesisbut I did complete a great course in cryptology and one about logic programming in Prolog.The cryptology course was especially good as it even introducedBitcoinand the way the blockchain worked. Big kudos to that! I was aware of Bitcoin before but I wasnâ€™t aware of the implementation details.All coursesFor reference this is the list of courses I completed. It surprises me at least to see how much Iâ€™ve actually done these years.I started two extra courses which I never finished:TAMS15   Mathematical Statistics, first courseTATA49   Geometry with ApplicationsThe statistics course was started during my first year, but I finished a similar in my later years and the geometry course was taken as a fun extra course but I later decided to skip it.First yearTATA41   Calculus in One Variable 1TATA42   Calculus in One Variable 2TATA65   Discrete MathematicsTDDC10   Perspectives to Computer TechnologyTDDC66   Computer Systems and ProgrammingTDDC67   Functional Programming and LispTDDC68   Imperative Programming and AdaTSEA22   Switching Theory and Logical DesignTSTE58   ElectronicsTTIT02   Foundation Course in MathematicsSecond yearTAOP33   Combinatorial Optimization, Introductory CourseTATA24   Linear AlgebraTATA53   Linear Algebra, Honours CourseTATA61   Multivariable and Vector CalculusTDDC36   LogicTDDC69   Object Oriented Programming and JavaTDDC70   Data Structures and AlgorithmsTDDD60   Interactive SystemsTFYY68   Engineering MechanicsTSEA43   Digital Project LaboratoryTSEA47   Computer Hardware and Architecture, part 1TSEA49   Computer Hardware and Architecture, part 2Third yearTAMS27   Mathematical StatisticsTATA50   Transform TheoryTATA64   Graph TheoryTDDB68   Concurrent Programming and Operating SystemsTDDC93   Software Engineering TheoryTDDD09   Software Engineering ProjectTEIO27   Technology Based EntrepreneurshipTFYA68   PhysicsTGTU50   Visits to IndustryTSDT18   Signals and SystemsTSEA29   Microcomputer, Project LaboratoryTSKS10   Signals, Information and CommunicationTSRT12   Automatic Control YFourth yearTANA09   Numerical Algorithms in Computer ScienceTATA54   Number TheoryTD1077   Advanced Algorithmic Problem SolvingTDDA69   Data and Program StructuresTDDB44   Compiler ConstructionTDDC17   Artificial IntelligenceTDDD14   Formal Languages and Automata TheoryTDDD20   Design and Analysis of AlgorithmsTDDD48   Automated PlanningTDDD56   Multicore and GPU ComputingFifth yearTDDD08   Logic ProgrammingTDDD38   Advanced Programming in C++TGTU49   History of TechnologyTQDT33   Degree Project - Masterâ€™s ThesisTSIT03   CryptologyPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Lindhska Store Championship Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/04/02/netrunner_lindhska_store_championship_rebro</link>
      <description>Netrunner Lindhska Store Championship ÖrebroPublished:April  2,2015in814820fTagged:Netrunner,GamingAfter the awesomeness during theprevious store championship, I decided to go to the store championship at Lindhska Bokhandel in Örebro.I brought a modified version of the same corp I used the last time, aBlue Sun kill deckand anew runnerwith Leela Patel. See the links for cards and some card choices.The tournament was a 26-player one, at least that’s the number I heard, with 5 rounds of swiss followed by a double elimination bracket. 7 players from Linköping went, again I think but I’m not sure if that’s the correct number.SwissMatch 1, Tennin/Reinavs TenninMemory is a bit fuzzy here. I think I got off to a good start, but somehow the corp stabilized and we went into a long slog of a game. For some reason the corp managed to score out before I could find the final agenda.It certainly felt like I could have won the game, but I’m not sure what I did wrong. Might be that I wasn’t comfortable with the deck and played too aggressively. 0-2vs ReinaAgain I don’t remember the specifics. We had very little time and I manage to score out an agenda, so I get a timed win.Still, corp felt great and I was in control, 1-2.Match 2, RP/Chaos Theoryvs Replicating PerfectionAh RP. Actually the first time I’ve played against the id, but I had a pretty good idea of how to approach the game. I scored an early agenda but I’m slowly getting locked out. Then he makes a pretty big misplay - he flips a naked remote and he wants to score, but it’s Nisei MK II instead of a 3/2 agenda and now he’s flustered. I apologize and I score the Nisei and I remove the Enhanced Login Protocol.Still, he’s not out of the game. I run indexing but he hid a Jackson in a remote, stupid mistake! I manage to same old thing indexing again and I score another agenda and I place another agenda as the 5th card. I carefully count the cards and I manage to score the winning agenda, before being locked out of the game.The opponent said he’s only played a week… Still played pretty good I’m very glad for that victory. 3-2vs Chaos TheoryAnother quick corp game. Snare last click into scorch for a simple victory. His inexperienced lost him the game there.5-2 and feeling better.Match 3, RP/MaxXvs MaxXWe’re 6 players from Linköping and 2 from Stockholm at the top. Sadly I’m facing David, also from Linköping and we’re on our way to knock each other down.The game is slow, very slow. I feel in control and take it slow and easy. Scoring some agendas when I get them, but not drawing all that much. MaxX runs out of cards and runs a Levy. Somehow he runs of cards again and I know I’ve won.I have no idea how this happened, but we actually went to time, during our first match! Maybe it really was an intense game or maybe I was just tired or hungry… But anyway it happened. I manage to set up a win-win scenario for me during my second-to-last turn. Either he lets me score out or he runs the remote and let me sea-source scorch him to death (he had a hand size of 3 due to an early Cerebral Overwriter). He cooses the second option.7-2Match 4, NEH/Whizzardvs Near-Earth HubThis was by far the most stressful/exciting game of the day for me. I get a bad hand and I mulligan… Into a much much worse hand. No economy, no nothing. The corp scores an early astroscript, this isn’t looking so good… I do something, I can’t remember, then he sets up  a remote with one advancement counter on. Curious, it’s probably an NAPD, but sadly I can’t get in and score so I’m gearing up for a next turn combo.Sadly, it’s a Project Beale, worth 3 points and he’s got an astroscript token. From bad to worse, much worse. I desperately run his hand and his remote. Oh no, he’s got a scorch on top of R&amp;amp;D and he’s got a Data Raven protecting HQ. Luckily I’ve got a plascrete so I go tag-me with a Legwork, finding nothing. He’s using Jackson to draw like mad.I run another Legwork with a same old thing through the Data Raven and I find two agendas and I get in some single-accesses on R&amp;amp;D. Lady luck isn’t smiling for long though as he draws and install-advance a remote. Surely an NAPD, which I’m too poor to get at.My only hope is R&amp;amp;D and I have two interfaces out so I can access 3 cards. If I can bounce the NAPD I might still have a chance. The first card is a.. NAPD which I can’t steal. The second is a Breaking News so I bounce the advanced card now sitting on 5 agenda points.I’m too poor to get the NAPD and the next turn I get Scorched to death.The game was practically over from the terrible start, but I almost managed to steal a win. I got praise from the opponent but I can’t stop but think that I should have had a few more credits for that NAPD…7-4, feeling the pain.vs WhizzardAnother id I haven’t played against. He tried, and was successful for a while, with killing my oversighted curtain walls and keeping my economy low. But still, I managed to score out two the cleaners and putting more and more pressure as I gradually build up my economy lead. I think I hit a shattered remains as well.The game ends with me advancing the winning agenda, he tries but cannot access it or any other agenda, and I score for the win.Again corp is feeling absolutely great. 9-4Match 5, EtF/KateThis time I’m faced up against Henrik, my buddy from Linköping who knows my decks and I know his decks. Sadly it appears this is the battle for top 8.vs Engineering the FutureDuring practice I felt very confident with my Leela deck and I get a great start scoring two 3/2 agendas. Not thinking more about it I try to build up a bit and getting ready to score the winning agenda as I know he has a few 5/3.But things are not shaping up that way. I try to keep is economy low but he manages to get two adonis campaigns up and running and he hits two large GRNLD Refineries. Probably a huge misplay by me to allow that to happen. With his economy up he gets some nice taxing servers up and my aggressive running has not paid off at all. He’s all set up and I practically have nothing.My last hope is an indexing through a Janus I know is there. By my counts I’m only 2 or 1 credit off from making two succesful runs through R&amp;amp;D in the hopes of scoring out, but it’s not meant to be. I’ve already accumulated 3 brain damage from previous (too aggressive) encounters.With great play he manages to score out and win. Well played. 9-6vs KateAgain I’m having difficulties to recall the specifics of the match. I know I managed to hit one shattered remains to stop his drip econ for a while. I manage to score an agenda but time is running out.I have a 5/3 agenda which I’ve already advanced twice. I literary have my whole hand full of kill cards: 1 snare, 1 sea-source, 3 scorch and 2 punitives and with more money I’m just waiting for him to make a run. I decide to fake the agenda as the almighty 9/6 Government Takeover agenda and I advance it up to 7 in the course of two turns. In hindsight it might have been better to score it out as a 5/3, but that’s not what I did.So sitting at 7 advancement counters Henrik decides to… Not run it! Instead he runs my hand twice, the second time he imps my sea-source. Sigh.So the game ends with me winning on time, somehow it feels a bit frustrating as I had so much control the whole game, thinking how can I loose? Turns out, with some bad luck and some good runner decisions it’s quite possible not to win.10-6.The CutAs Henrik and I had the battle for the last place into playoffs, which I lost, Henrik makes the cut on 11 points and we’re a bunch of other players with 10 points.  Huge congrats to Henrik as he really did play better than I did.SummaryOnce again I’m amazed by the friendliness of the Netrunner community. Everyone was really nice and friendly. I joked around a bit with some guys and girls I’ve never even met before, which is no small feat with a very shy and introvert person such as myself. I got a ride all the way from Linköping to Örebro and the guy with the other car even came and asked me if I wanted to come with him earlier as I got knocked out. As it happens I stayed and watched some of Henrik’s and Fredrik’s matches.As for the games themselves I’m super happy with my corp deck which practically went undefeated during the tournament. I felt quite comfortable to win both the games where I got a timed win from.The runner deck however I’m not super happy with. It felt slow and low on economy and just a bit awkward. Some of the problems can be attributed to good corp play: I didn’t land many good account siphons which made my economy quite bad and they played around Leela’s ability quite well. Ice up centrals at least twice and don’t score out agendas on the last click.But mostly I think I didn’t play the runner deck right, I wanted to play more aggressively than maybe you’re supposed to with a slower control deck such as the one I had made. I really need to try out a Leela build based on Desperado and an economy package with Dirty Laundry and Security Testing, I think it might fit my style better. I also want to play around more with the wonderful Anarchs…Looking forward to the next time I can play some Netrunner!Published:April  2,2015in814820fTagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Winter Kit Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2016/01/16/netrunner_winter_kit_tournament</link>
      <description>Netrunner Winter Kit Tournament LinköpingPublished:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerAfter quite the hiatus fromNetrunnerI had a chance to join a tournament here in Linköping with 14 participants. The number of players has grown a lot since the previous tournament which is really great.As I really wanted to win the wonderfulDay Jobplaymat I went with two of the best decks I could come up with. I went with theNoisedeck I’ve been playing a while which has been performing really well. I was expecting a lot of EtF so I was on the verge on playing a classicLooking 4 JobWhizzard deck but I switched to Noise just before the tournament as I’m more comfortable with it but I also find it more fun to play Noise than anything else. As for the corp I had played a littleFoodcoatssince it dominated worlds and it has felt extremely solid overall.Tournament structureWe did 4 rounds of swiss without a cut, even though I was personally hoping for 5 rounds. The more games I can play the better it is, I just love to play you know. As usual you get 2 points for each game you win and 1 point for a timed win.Round 1: Dan, Reina/Syncvs ReinaHe got me low on credits early but I played it slow and slowly but steadily accumulated enough credits to build rez enough ice and score out. Foodcoats destroyed the game.vs SyncI was really scared of Sync as Noise is weak against tags and I don’t run any meat damage protection. But I got a nice start and got a few points lead but he still managed to score out some astro counters and I carelessly gave him a Quantum Predictive Model so he got up to 5 point. Luckily I had set up the shard combo with utopia and hades shard I maged to score out with them the click before he would have won.Generally I need to be more mindful of quantum predictive model. I actually think it’s a really good agenda in this type of deck.4 points, 2-0Round 2: Johannes, Leela/Haarpsichordvs LeelaI was really, really poor in the beginning of the game and I had trouble getting my campaigns to stick. I made the really big mistake of trying to rush out an Accelerated Beta Test but I was too poor and too scared of Legwork and The Maker’s Eye after bounce to do it. In the process I had blocked Breaker Bay Grid from my campaigns which made the game really slow… I think I could have won in the end anyway but he got through my remote twice by forcing through an Ichi. Well played by him but I feel like I should have done better.vs HaarpsichordA bit rushed on time and super scared of 24/7 News Cycle I got a fairly good grip in the beginning with a Lamprey lock and I stole a couple of agendas early. Unfortunately I accumulated two News Team and nullified my lead. I still managed to find a couple of agendas to have the lead.In the turn I went through a Gutenberg and took a tag (which I could have avoided with Faust) and gave him a Quantum Predictive Model while I was on 4 points. If I had just broken the sub I would have gone up to 5 points and I had a Hades Shard with at least one 2 pointer in the archive… Once again I need to be more mindful of taking tags. Still had more points and got the timed win.5 points, 3-1Round 3: Henrik, Noise/Blue Sunvs NoiseEtf got set up well and the runner didn’t do anything useful at the start and I got set up really well economically and I was quite safe. Game ended early due to a faceplant into Assassin with only 2 cards in hand and I had a ton of money.vs Blue SunI knew Henrik ran an Accelerated Diagnostics combo deck and I was again scared of dying to Scorched Earth with my not having any protection. But I got a lot of HQ and R&amp;amp;D accesses by trashing two Spiderwebs and an Assassin and I managed to ping away some kill pieces. He drew a lot with jacksson and managed to end up with all three copies of scorch in archives and I finally won by a Medium for his whole R&amp;amp;D.9 points, 5-1Round 4: Fredrik, Kate/EtFThe last game of the tournament and I and Fredrik were the top dogs. As I had one timed win but Fredrik did not so I had to win both games to win the tournament. Tough task as Fredrik is a very solid player.vs KateI was a little flooded in the beginning but I didn’t get punished for it and after that I drew really good. I managed to stick the campaigns in the remote and I had a ton of money basically the whole game. Fredrik security nexus kate and I managed to get two 2-points early and I didn’t draw any agendas in the midgame when he was set up with his monster rig.At the end of the game I had built up a 4-Ice remote and a 5-Ice R&amp;amp;D. He hit me with an Escher which felt quite awful as he had a bunch of R&amp;amp;D interfaces but it turns out my super taxing ice and R&amp;amp;D luck saved me. Foodcoat can and will make extremely taxing servers it turns out…vs EtFFredrik ran a sort of Team Sponsorship fast-advance/rush EtF which I wasn’t looking forward to all that much. But luckily he didn’t draw a lot of economy and I managed to keep him down economically by a combination of lamprey and forcing him to rez ice. I also sniped an early 2-pointer by clicking through an eli and breaking a marcus with Faust, which felt really good admittedly. Overall I managed to keep up a ton of pressure on him even though I didn’t find aesop’s until fairly late.I really felt in control the whole game and the game ended as a timed win for me. The only bigger mistake I recall is one I did on my last turn in the game where I installed a cache and then ran on the remote server thinking I could beat the ash trace just to plant into a Turing. At this point I was already at 5 points and what I could have done is walk through R&amp;amp;D 2 times by taking assassin to the face to maximize my chances of getting a regular win.12 points, 7-1The resultsI was a bit down after loosing points in the second round but I managed to recoup very well in the end. I felt I had some really good in some key matches and my decks served me very well. I will probably try some other corps but I may still continue playing Noise even after the most wanted list.In the end I managed to win the whole tournament which I didn’t really expect. I was hoping to do well but I wasn’t expecting it.As my prize I naturally chose Day Job. The Ice Wall participation prize was great as well. I’m a little sad I didn’t get the Corroder one as I think it looks really good, but you can’t get everything in this world.Was a good tournament and everyone were once again awesome! I’m already planning for the next one!Published:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Summer Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2015/09/18/netrunner_summer_tournament_linkping</link>
      <description>Netrunner Summer Tournament LinköpingPublished:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerThere was anotherNetrunnertournament this Sunday with 8 entrants. We had two new legal data packs with Old Hollywood and The Universe of Tomorrow so a lot of new things were tried. I heard a rumor that a full playset of both Aesop’s Pawnshop and Wyldside were available so I decided to not take my jankiest ideas and playNoiseandBlue Sun.The Noise buildwas practically unchanged from what I’ve played previously. The Blue Sun was a new glacier build with space ice and the new agendas Hollywood Renovation and The Future is Now. I wanted the threat of scorch and I also threw in two snares for extra spice.SwissWith 8 players we did 4 rounds of swiss, without any cut.Match 1: Dan, Valencia/Haarpsichordvs ValenciaI tried to push a Hollywood Renovation early, but it was snagged with blackmail.  It was a big gamble which unfortunately didn’t pan out.  This was a kinda large mistake, but in the end it didn’t matter.  I got my huge ice up and running and I forced him out of my servers.  I made a big play with Hollywood Renovation where I fast advanced a The Future is Now with the 5th and 6th advancement tokens and the game was basically over from that point.  I think I flatlined him in the end, but that’s more of a symbolic victory as I could have just as easily scored out.vs HaarpsichordSuper close, he had scored a lot of points and I was sitting with clot. In the end he installs 3 new remotes, one behind an ice. I push through the ice to steal the first agenda and I imp the second one (now the Imp is without counters). So I install another program, trashing the imp, then trashing the third remote with the imp. All new remotes were agendas. After this my victory was clear as a run on archives sealed the deal.4 points, 2-0Match 2: Harald, Haarpsichord, Hayleevs HaarpsichordI felt like I was behind the whole game, but so did Harald. In the end I managed to snag another very close win, but I’m not sure how that happened. All my Aesop’s were in the bottom of my stack but somehow I managed to steal/imp enough to make up for it. What decided things was a Clot hidden on my street peddler, which he overlooked. Without it I should have lost the game.vs HayleeI allowed some accesses to R&amp;amp;D, but mostly no big damage was done. Then I sealed the game up and the win was basically clear. I had a public support ticking down but we ran out of time so I got one point for being up to 6 agenda points. Maybe I could have played it faster to get the victory on time, but I don’t know.7 points, 4-0Match 3: Henrik, NEH, Chaos Theoryvs NEHI got set up fairly well and I managed to trash a sansan early. I had clot and everything was going alright. I hit a Snare in a remote which took me off guard a bit. The turn after he made another remote and I contemplated running on it, I did have imp tokens after all, but I decided it was fine to possibly allow him a single agenda. Big mistake as I installed cards down to 3 cards in hand and I died to a breaking news and scorch. For some reason I was convinced he was running the fast advance version, or some kind of nearpad, but the reality is I played too fast and didn’t consider everything properly. Live (or die) and learn I guess.vs Chaos TheoryAfter I rezzed an Archer on the remote it was basically game over as he couldn’t break it with the exception of datasuckers/parasiters, which quickly got used. I iced up my centrals with huge space ice and I could simply score out and win. He tried a big Vamp play against HQ, but on the last click and with a tag he died against double scorch after taking down my curtain wall.9 points, 5-1Match 4: Johannes, Haarpsichord/Ianvs HaarpsichordA blistering game where he rushed out agendas and I tried to punish/steal with Imp. The game slowed down when I had a Clot on board and I pushed up to 6 points. A run on archives with a Jackson reshuffle and then triggering Utopia shard sealed the deal.vs IanWe laughed about our decks being super late game focused and he stayed true to his words and he installed a ton of resources, three Gang Signs and two HQ interfaces. I was kinda agenda flooded but I managed to push them out in Archives with double Jackson. The game was decided in a funny way I think, even if I misplayed it quite a bit (I blame tiredness or something!).I had Hollywood Renovation with a bunch of advancement tokens, The Future is Now in a naked remote and one Snare and one Scorch in my hand. So I advanced Hollywood Renovation 3 times and scored it. He hit a Snare but nothing else with all his accesses. Then I scored The Future is Now and fetched my second Snare from R&amp;amp;D, which he accessed and died to. Naturally the correct play would have been to advance Hollywood Renovation twice, score The Future is Now and fetch the Snare. Now if he hits a Snare I can just scorch him on my last click.13 points, 7-1The resultsThe self critic in me keeps on thinking about the lost game and the game which went to time, but some small part of me tries to point out that things actually went well. I felt fine in all games and it never felt hopeless in any game. I did take “better” or more serious decks and the other guys joked about my very serious decks, but it’s fine. I did accomplish my goal and I even won the tournament, yay!I managed to achieve my goal and I got to choose a playset of Aesops! I also got a couple of Swordsman and a new deckbox. It’s a little bit sad that I declined the Femme Fatale alt-art as it’s preeetty… But maybe next time.Published:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner ID draft Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/08/29/netrunner_id_draft_rebro</link>
      <description>Netrunner ID draft ÖrebroPublished:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerI entered an ID draft tournament inNetrunnerhosted in Örebro and this is a brief overview of what happened. Disclaimer: My memory is a little bit fuzzy and the events may or may not correspond to what actually happened.The draftThe idea was to randomly sort all entrants and in turn each chooses an ID which nobody else can choose. When everyone has chosen an ID the procedure continues in reverse order. This means you can choose either corp or runner early and leave the other until later.I got the 5th spot and Geist, Nasir, RP and NEH was chosen before me. If the goal was to do well I should probably have chosen a strong corp like Blue Sun, HB or possibly PE but I had just started playing Noise and I was loving every second of it so that was my choice. It was a little bit boring perhaps as it wasn’t a new ID I had to come up, but I had no idea of what I actually wanted to play with as corp so I simply delayed that decision. When it was my turn again most actually good corps had gone and I could choose between Titan, Harmony Medtech, Argus and Biotech (and some others…). Recently some popular Titan lists had popped up on netrunnerdb so I took that one.This is the drafting result:Frida unfortunately did not attend the actual draft and she had to pick both runner and corp last.With Wayland and Jinteki being relatively popular I was thinking of adding I’ve had worse to Noise… But in the end I decided to be ballsy and skip all that. And no plascretes. But I thought with some careful play and Imp/Utopia shard I could manage. Instead I went with the no frills 3 Aesop/3 Cache low economy approach which I’ve found is perfectly fine. I slotted 2 Hacktivist meeting as the local playgroup in Linköping insisted on running Cerebral static and Manhunt and maybe others would do weird stuff with currents as well?This is the Noise deck.The Titan buildis basically the popularAtlas Shruggedwith Beanstalk replacing Subliminal messaging and an extra Crisium Grid for the relative increase of criminal. In testing the corp deck performed okay… But never amazing. Noise performed consistently whenever I didn’t just die against Jinteki due to… Jinteki stuff.The matchesWhen we arrived at Örebro the basement already full of Magic gamers is already hot and things would only get worse. I didn’t get enough sleep and I’m already tired but still pumped to play some Netrunner!  The tournament features five rounds of swiss without a cut.Match 1: Yoshi, Reina/Blue Sunvs ReinaHedge fund, beanstalk, install ice over HQ. Runner installs things, runs on R&amp;amp;D and misses. I sea source-scorch second turn as he has 2 (or 3?) cards and I feel a bit bad about it. Unfortunately silly wins and losses like these happens sometimes.vs Blue SunHe gets a great start with ice and money. I’m having trouble setting up and I can’t find D4v1d before he can retrieve his oversighted Curtain Wall. I’m too scared/incapable of stealing his agendas as he’s rushing them out. When I finally get my Imp going on HQ he already has a scored atlas with two tokens and he scores out a hostile in a flash. I made a mistake of not installing a clone chip as I had a clot in my heap and I maybe should have been more aggressive but overall Yoshi outplayed me.2 points, 1-1Match 2: Dan, TWIY/Whizzardvs TWIYDan is from Linköping, same as me, but I haven’t actually played him but I knew his was a variation of theMidseasons/Psychographics rush deck. I play very carefully and builds up while he takes money. He gets a bunch more money and I continue milling and building. I’m waiting for him to start scoring out and I go through a Tollbooth and imps away an NAPD contract, but he never gets the astro train going while I sit back milling with clot ready. The game basically end when he never scores out and I get a mill victory.vs WhizzardHe trashes my sansans but I get some points scored. The game goes a bit long and we’re almost going to time. I think I could have won by rezzing an Archer against his faust when he doesn’t have enough cards to continue the game, but I stress out and for some reason I don’t rez it. Later he finds a 3-pointer for the win from HQ. I guess I took the risk as he could have just as easily hit a Snare and loose.4 points, 2-2Match 3: Johannes, Harmony Medtech/Geistvs GeistI’ve played against Johannes a lot so I know his deck and he knows mine. I get an excellent start with 3(!) Quandary protecting HQ, R&amp;amp;D and my remote. I manage to tax out his breaking and entering breakers as I score out with the help of sansan. Annoyingly Forger prevented me from scorching him more than once but in the end I manage to score out behind 2x barriers and a Quandary as he had basically exhausted his breakers and clone chips.vs Harmony MedtechI got set up with Noise fast and controlled the game from the start. He scored out a Nisei but I was never really worried. I made a stupid move of running archives when I had just trashed a Cyberdex and later I ran it again! But in the end my start was just too good and I won by pounding HQ with Lamprey, Imp and parasites.8 points, 4-2Match 4: Magnus, Nisei Division/Valenciavs Nisei DivisionI’ve never played Magnus but I know he’s a very good player so I’m really nervous to play him. He installs over R&amp;amp;D and remote and does a hedge fund. I install a lamprey and imp and run HQ… Just to hit a Snare. Sigh. I thought about it but I figured it wouldn’t be a big deal, but it was. I don’t shake the tag as I don’t have any resource installed and he scorches me. Huge misplay from me and now I’m trying not to tilt too hard.vs ValenciaI have a fairly bad starting hand which I keep… For some unknown reason. He’s very aggressive and he gets a medium dig going but misses. I don’t care about it too much and continue trying to score/finding my pieces. He does another big medium dig through a Grim, paying 3 + 1 cards for it and another ice, and hits a Snare on his last click, with two cards left in hand. I have a jackson out so I click to draw two cards and find the scorch for the win.Funny how both games ends in basically the same way. I’m still a bit upset about the way I lost but it feels a little bit better that I could pull out a win against such a good player, even if it was a lucky one.10 points, 5-3Match 5: Frida, Argus/Silhouettevs ArgusI know Frida loves meat damage so I play very carefully. I get a good start and I imp a bunch of things from R&amp;amp;D while milling a healthy amount. She scores out a couple of 1-pointers but I’m milling very fast and she’s not threatening me yet. When she goes up to 5 points I have as much money as she has so I make a run on archives (I also have an installed Utopia Shard) and take the win.vs SilhouetteAgain I get a good start and I get a Crisium grid on HQ to stop siphon. She doesn’t find her breakers and I get a hostile scored followed by the atlas train.14 points, 7-3Final resultsI won 7 matches, 4 with Titan and 3 with Noise. Surprisingly my corp faired better than my runner which can partly be explained by the two lucky flatlines I got. But overall it felt a lot better than during testing. Perhaps it’s because I’ve never played a rush deck before and the style takes a little getting used to? Then I got the silly scorched loss with Noise which really shouldn’t happen if you play as you should. But mistakes happen. I’m quite glad I managed to avoid tilting though.Generally with Noise I feel if the corp doesn’t push scoring windows hard you’re always in control of the game. Even then it’s difficult without a secondary win condition like scorch or midseasons. This is what Yoshi did with Blue Sun so very well where I really felt behind the whole game, but perhaps I was being too cautious.Overall I’m quite pleased with my result all things considered. This is the final results after the five rounds of swiss:There were quite a lot of prizes available and after the three victors took theirs this is what took home as my 4th place:I wanted to have a full playset of aesop’s, especially as I really love Noise, but the mat feels a little more special. I still want the alt-arts though, hopefully I can get them from somewhere else.Published:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Years at Linköping's University</title>
      <link>https://www.jonashietala.se/blog/2015/07/22/5_years_at_the_university</link>
      <description>5 Years at LinkÃ¶ping's Universityâ˜Published:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolI recently finished my masterâ€™s degree (civilingenjÃ¶r or civil engineering) at LinkÃ¶pingâ€™s University. At first it felt like 5 years would be an eternity, but in hindsight it was over in a flash. my gut feeling is that I havenâ€™t learnt or done anything of note, except you know actually finishing my degree, but if I sit down and think about it I have done some things. Actually quite a lot of things.First yearI moved to LinkÃ¶ping with my girlfriend and it was quite an adjustment as we both moved from our parents and to a city where we practically knew nothing and no one. But we managed fine and while we never went out to parties or went to other student events we found some friends. I also startedITF Taekwon-doafter a few months.There werenâ€™t too much to do in school. The focus was on foundation math courses, mostly things I had already done but needed refreshing, and on introductory programming courses which werenâ€™t challenging at all for me.Second yearDuring the second year I felt the courses were harder and more interesting than the first yearâ€™s courses. The courses in Combinatorial Optimization, Data Structures and Algorithms and Linear Algebra were fun and new for me. I also took an extra continuation course in Linear Algebra which was interesting.When I started the university I thought I would like electronics and hardware construction, but the courses from the first year were really not interesting at all. Even when making the transition from analog to digital I didnâ€™t care for it at all. But it all changed when we started actuallybuildingthings with digital circuits.At first we had an introductory course where we built digital clocks and counters. You were supposed to have prepared a design sketch for the labs, but me and my partner for some reason never did it, and so we were always running late in the labs. I remember one very fun, or horrible, occasion where we had struggled a lot with one lab and we had spent almost the full 4 hours until we finally completed it with maybe 10 - 15 minutes left. Filled with relief we started taring apart what we so painstakingly had built. When done we realized we had one part left where we were supposed to use the circuit we just destroyedâ€¦ Luckily we could use the circuits another group had made, but it was a painful lesson in always reading the descriptions and prepare for the labs in advance.The digital circuit labs were followed by a digital project of our own choice. Wedesigned a processorwhich could run theCore Wars 88 standardand we simulated it on an FPGA.The main block schema for the processorAnd here is a small video of the simulation in action:Click to view on YouTubeThe project was interesting as it was an outlet for our creativity and it touched on several different areas. Processor design, hardware debugging (!) and I wrote aredcode assemblerfor our CPU and amicrocode compiler.The behaviour of the processor is controlled by microcode which basically is a set of control outputs of 0s and 1s. For example our processor has 18 outputs consisting of a total of 39 bits (uPC_addris internal).game FIFO IR ADR1 ADR2 OP M1 M2 mem1 mem2 mem3 mem_addr ALU1 ALU2 ALU buss PC  uPC  uPC_addr00   00  0   00  00   0  00 00  00   00   00    000     00   0   000 000  00 00000 00000000To make things easier, instead of manually editing each 0/1 line we introduced a DSL which then the compiler turns into microcode lines.For examplethe microcodeis described in our DSL:; Startup, check if we're in gamejmpS $GAME                              ; Execute game code only if we're runningjmpO +0                                 ; Infinite loop if we've recieved game over, reset to break it; Clear memory contentsALU = 0                                 ; Load 0ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC:CLRMEM PC -&gt; mem_addr                          ; Look at PCOP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem         ; Clear itALU++                                   ; IncrALU1 -&gt; PC, jmpZ $LOADP                 ; If 0 we're done loopingjmp $CLRMEM                             ; Else continue...And is then compiled intoVHDL code:signalmem:Data:=(--Startup, check if we're in game"00000000000000000000000000000000000011000110011",--jmpS GAME(33)"00000000000000000000000000000000000101000000001",--jmpO +0(01)--Clear memory contents"00000000000000000000000000110000000000000000000",--ALU = 0"00000000010101000000000000000100010000000000000",--ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC"00000000000000000000110000000000000000000000000",--PC -&gt; mem_addr"00000000000000101010000000000000000000000000000",--OP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem"00000000000000000000000000100000000000000000000",--ALU++"00000000000000000000000000000100010001100001001",--ALU1 -&gt; buss, buss -&gt; PC, jmpZ LOADP(09)"00000000000000000000000000000000000001000000100",--jmp CLRMEM(04)...The redcode assemblers job is to transform a warrior (a piece of redcode) into a binary object file which we can then send to the FPGA for execution.For example this warrior:step    EQU 417init    EQU 1337size    EQU 9JMP start           ; boot jump as we can't specify PC in the middle T.Tsrc     DAT 0               ; src pointerstart   MOV #size, src      ; setup src pointercopy    MOV @src,DJN copy, srcSPL @dst            ; throw a pc thereADD #step, dst      ; space out a bitJMP start           ; make a new copy, yay!dst     DAT #0, #init       ; dst pointerendCompiles to:$ ./assembler jonas-replicator.red -r0000000000001001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000010010001111111111111000000000001101100011111111111100000000000000101000000001001000000011111111111110001111111111101000000001010100000000000000000110000000000000000000000000010010000000001101000010000000000000010000000000100000000011111111110110000000000000000000000000000010100000000000000000000010100111001With the--verbosetag the format can be examined:$ ./assembler jonas-replicator.red --verbose0000000000001001  00 09  ; Number of rows (9) jonas-replicator.redpad    OP  A  B  pad     A op      pad      B op00000000 0100 00 00 000 0000000000010 000 0000000000000   00 40 00 02 00 00  ; JMP  start           (2)  0(0)00000000 0000 00 00 000 0000000000000 000 0000000000000   00 00 00 00 00 00  ; DAT  0               (0)  0(0)00000000 0001 01 00 000 0000000001001 000 1111111111111   00 14 00 09 1f ff  ; MOV # size(9)  src       (-1)00000000 0001 10 11 000 1111111111110 000 0000000000101   00 1b 1f fe 00 05  ; MOV @ src(-2) &lt; dst      (5)00000000 1001 00 00 000 1111111111111 000 1111111111101   00 90 1f ff 1f fd  ; DJN  copy(-1)  src(-3)00000000 1010 10 00 000 0000000000011 000 0000000000000   00 a8 00 03 00 00  ; SPL @ dst            (3)  0(0)00000000 0010 01 00 000 0000110100001 000 0000000000010   00 24 01 a1 00 02  ; ADD # step(417)  dst      (2)00000000 0100 00 00 000 1111111111011 000 0000000000000   00 40 1f fb 00 00  ; JMP  start           (-5)  0(0)00000000 0000 01 01 000 0000000000000 000 0010100111001   00 05 00 00 05 39  ; DAT # 0(0) # init       (1337)If youâ€™re interested in the project you canread more on github.In addition, or as a prerequisite, to this awesome project we also got an introduction to 68k assembly and to computer architecture which was very good.This year me and a friend also made game in the Java programming course calledGrand Thief Arto. Not the greatest of games but it was still fun to make it. I also became a mentor in discrete math for the first year students which was a fun and easy way to earn a bit of extra money.Third yearThis year we continued with some more advanced courses. We had some project oriented courses with some theory about how projects should be run and then a practical part where we made some software for an actual company. The overall idea the course idea is great, to get some real world experience and to get some interaction with an actual company, but the execution was very much not so.For example in the middle of the project one of our project members were supposed to be exchanged with another member from another project. The motivation was that â€œin the real world this could happen, so you need to always be preparedâ€ but thatâ€™s just stupid in my opinion. Firstly you donâ€™t get fired and just booted from the team very often, but you get an advanced notice and you have some time to prepare the team, yourself and your eventual replacement for the move. Secondly it adds a very real sense of dread and nervousness for everyone involved. I happened to really like all members in the project and I was very worried to be switched out. Turns out I was the one who had to change project. I was very upset and I didnâ€™t click nearly as well with the new team and I thought the experience really sucked and I became demotivated.Another thing which was quite bad was the extreme focus on documentation. The whole first 2-3 months were supposed to be a planning stage and the actual implementation was supposed to be done the last 2-3 months. But large parts of the implementation stage were also spent on documentation, or rather writing documents because the course demanded it and we never had any use for the majority. The funny thing is that most of the project theory was spent on motivating why the waterfall development model wasnâ€™t suited to software development, but what did the project degenerate into? Even despite our best efforts, we tried to implement an iterative development as our customers didnâ€™t really know what they wanted, but we were foiled by course planners.A much better project was theRobot projectwhere we created an autonomous robot! There we poked around with hardware and lower level programming in C.Debugging this was quite an experienceI continued to be a mentor in discrete math and I joinedTeam Obelixwhich organized student visits to different companies. I won the â€œbest CVâ€ award given by Ericsson, I won some things in the local programming competitionIMPAand I had a great course in operative systems where we usedPintos. I took an extra course in Graph Theory which was quite different from other math courses but very interesting. Additionally I took aProgramming Languagescourse at Coursera, also quite nice.This summer I also had my first real programming job which was a summer internship atConfiguraand I had a really good time and we replaced their triangulation software.Fourth yearThe courses from the previous years were all mandatory, with the exception of some extra courses I took, but for the 4th and 5th year I could choose my own profile and what courses to take. I spent quite a lot of time thinking about which courses I wanted to take. In the end Iâ€™m quite happy with my selection but there are many interesting courses I had to say no to. The main profile I targeted was theProgramming and Algorithmsprofile.In hindsight these are my favourite courses during the year:TDDD48 Automated PlanningAAPS Advanced Algorithmic Problem SolvingTDDB44 Compiler ConstructionTATA54 Number TheoryTDDC17 Artificial IntelligenceTDDD56 Multicore and GPU ComputingTDDA69 Data and Program Structures (SICP)I didnâ€™t find the compiler courseasfun as I had initially thought. The theory part wasnâ€™t very interesting but the lab part was really, really good! All in all it still was a very fun course. The AI courses (Automated Planning and Artificial Intelligence) were great and AI is an area Iâ€™m very interested in. During this time I also took anonline course in Machine Learningvia Coursera by Stanford University. Number Theory is another maybe niche area in mathematics which I found interesting.I continued doing some programming competitions as can be seen inUVawhich enabled my to go toNWERC 2013in the Netherlands. Ultimately Iâ€™m not super good at these competitions but it was still a great experience. Netherlands (or specifically Delft) was great. In the Multicore and GPU Computing course there was a parallel sorting contest which I and my lab partner managed to win. The goal was to create a sorting routine on the CPU with the best sorting performance. Oh and I also went through the classic book Structure and Interpretation of Computer Programs orSICPin a course. Very excellent book!During the summer I also took part inIDA Summer of Code 2014where I contributed torust. I also had mysecond summer job at Configura:Our octree implementationFifth yearAt the end of my fourth year I had grown a bit study tired. I had thought the summer jobs would have helped a bit but although the summer jobs were amazing it might have been better to take a bit of a holiday, which I did not do at all.But the real issue wasnâ€™t me getting sick of studying, although I was a bit unmotivated, but I was fast approaching a burnout. It never got so serious that I became apathetic but it was pretty bad for a while. The last semester in my 4th year I only did 27 hp (30 hp is the target value) and the first semester in my 5th year I only managed 24 hp. I had accumulated extra points so I finished the university with 308.5 hp, of the required 30 hp, but I was less effective the last 1.5 year or so than usual.I might write more about my burnout in another post, but I did three main things to get out of it. The first thing I did was to start CBT (Cognitive Behavioral Therapy or Kognitiv beteendeterapi in Swedish). The second was to continue with things which made me happy and more importantly gave me more energy. Basically I started exercising more regularly. And the third thing I did was to scale down on my ambitions and focus on taking care of myself, this is the reason I didnâ€™t study 100% the first semester.In the end I think I managed to get rid of the worst effects of the burnout and I managed to finish my studies. I was also a mentor in discrete math for a fourth time. I didnâ€™t complete a ton of courses as the whole last semester was spent on writing myMasterâ€™s thesisbut I did complete a great course in cryptology and one about logic programming in Prolog.The cryptology course was especially good as it even introducedBitcoinand the way the blockchain worked. Big kudos to that! I was aware of Bitcoin before but I wasnâ€™t aware of the implementation details.All coursesFor reference this is the list of courses I completed. It surprises me at least to see how much Iâ€™ve actually done these years.I started two extra courses which I never finished:TAMS15   Mathematical Statistics, first courseTATA49   Geometry with ApplicationsThe statistics course was started during my first year, but I finished a similar in my later years and the geometry course was taken as a fun extra course but I later decided to skip it.First yearTATA41   Calculus in One Variable 1TATA42   Calculus in One Variable 2TATA65   Discrete MathematicsTDDC10   Perspectives to Computer TechnologyTDDC66   Computer Systems and ProgrammingTDDC67   Functional Programming and LispTDDC68   Imperative Programming and AdaTSEA22   Switching Theory and Logical DesignTSTE58   ElectronicsTTIT02   Foundation Course in MathematicsSecond yearTAOP33   Combinatorial Optimization, Introductory CourseTATA24   Linear AlgebraTATA53   Linear Algebra, Honours CourseTATA61   Multivariable and Vector CalculusTDDC36   LogicTDDC69   Object Oriented Programming and JavaTDDC70   Data Structures and AlgorithmsTDDD60   Interactive SystemsTFYY68   Engineering MechanicsTSEA43   Digital Project LaboratoryTSEA47   Computer Hardware and Architecture, part 1TSEA49   Computer Hardware and Architecture, part 2Third yearTAMS27   Mathematical StatisticsTATA50   Transform TheoryTATA64   Graph TheoryTDDB68   Concurrent Programming and Operating SystemsTDDC93   Software Engineering TheoryTDDD09   Software Engineering ProjectTEIO27   Technology Based EntrepreneurshipTFYA68   PhysicsTGTU50   Visits to IndustryTSDT18   Signals and SystemsTSEA29   Microcomputer, Project LaboratoryTSKS10   Signals, Information and CommunicationTSRT12   Automatic Control YFourth yearTANA09   Numerical Algorithms in Computer ScienceTATA54   Number TheoryTD1077   Advanced Algorithmic Problem SolvingTDDA69   Data and Program StructuresTDDB44   Compiler ConstructionTDDC17   Artificial IntelligenceTDDD14   Formal Languages and Automata TheoryTDDD20   Design and Analysis of AlgorithmsTDDD48   Automated PlanningTDDD56   Multicore and GPU ComputingFifth yearTDDD08   Logic ProgrammingTDDD38   Advanced Programming in C++TGTU49   History of TechnologyTQDT33   Degree Project - Masterâ€™s ThesisTSIT03   CryptologyPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Lindhska Store Championship Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/04/02/netrunner_lindhska_store_championship_rebro</link>
      <description>Netrunner Lindhska Store Championship ÖrebroPublished:April  2,2015in814820fTagged:Netrunner,GamingAfter the awesomeness during theprevious store championship, I decided to go to the store championship at Lindhska Bokhandel in Örebro.I brought a modified version of the same corp I used the last time, aBlue Sun kill deckand anew runnerwith Leela Patel. See the links for cards and some card choices.The tournament was a 26-player one, at least that’s the number I heard, with 5 rounds of swiss followed by a double elimination bracket. 7 players from Linköping went, again I think but I’m not sure if that’s the correct number.SwissMatch 1, Tennin/Reinavs TenninMemory is a bit fuzzy here. I think I got off to a good start, but somehow the corp stabilized and we went into a long slog of a game. For some reason the corp managed to score out before I could find the final agenda.It certainly felt like I could have won the game, but I’m not sure what I did wrong. Might be that I wasn’t comfortable with the deck and played too aggressively. 0-2vs ReinaAgain I don’t remember the specifics. We had very little time and I manage to score out an agenda, so I get a timed win.Still, corp felt great and I was in control, 1-2.Match 2, RP/Chaos Theoryvs Replicating PerfectionAh RP. Actually the first time I’ve played against the id, but I had a pretty good idea of how to approach the game. I scored an early agenda but I’m slowly getting locked out. Then he makes a pretty big misplay - he flips a naked remote and he wants to score, but it’s Nisei MK II instead of a 3/2 agenda and now he’s flustered. I apologize and I score the Nisei and I remove the Enhanced Login Protocol.Still, he’s not out of the game. I run indexing but he hid a Jackson in a remote, stupid mistake! I manage to same old thing indexing again and I score another agenda and I place another agenda as the 5th card. I carefully count the cards and I manage to score the winning agenda, before being locked out of the game.The opponent said he’s only played a week… Still played pretty good I’m very glad for that victory. 3-2vs Chaos TheoryAnother quick corp game. Snare last click into scorch for a simple victory. His inexperienced lost him the game there.5-2 and feeling better.Match 3, RP/MaxXvs MaxXWe’re 6 players from Linköping and 2 from Stockholm at the top. Sadly I’m facing David, also from Linköping and we’re on our way to knock each other down.The game is slow, very slow. I feel in control and take it slow and easy. Scoring some agendas when I get them, but not drawing all that much. MaxX runs out of cards and runs a Levy. Somehow he runs of cards again and I know I’ve won.I have no idea how this happened, but we actually went to time, during our first match! Maybe it really was an intense game or maybe I was just tired or hungry… But anyway it happened. I manage to set up a win-win scenario for me during my second-to-last turn. Either he lets me score out or he runs the remote and let me sea-source scorch him to death (he had a hand size of 3 due to an early Cerebral Overwriter). He cooses the second option.7-2Match 4, NEH/Whizzardvs Near-Earth HubThis was by far the most stressful/exciting game of the day for me. I get a bad hand and I mulligan… Into a much much worse hand. No economy, no nothing. The corp scores an early astroscript, this isn’t looking so good… I do something, I can’t remember, then he sets up  a remote with one advancement counter on. Curious, it’s probably an NAPD, but sadly I can’t get in and score so I’m gearing up for a next turn combo.Sadly, it’s a Project Beale, worth 3 points and he’s got an astroscript token. From bad to worse, much worse. I desperately run his hand and his remote. Oh no, he’s got a scorch on top of R&amp;amp;D and he’s got a Data Raven protecting HQ. Luckily I’ve got a plascrete so I go tag-me with a Legwork, finding nothing. He’s using Jackson to draw like mad.I run another Legwork with a same old thing through the Data Raven and I find two agendas and I get in some single-accesses on R&amp;amp;D. Lady luck isn’t smiling for long though as he draws and install-advance a remote. Surely an NAPD, which I’m too poor to get at.My only hope is R&amp;amp;D and I have two interfaces out so I can access 3 cards. If I can bounce the NAPD I might still have a chance. The first card is a.. NAPD which I can’t steal. The second is a Breaking News so I bounce the advanced card now sitting on 5 agenda points.I’m too poor to get the NAPD and the next turn I get Scorched to death.The game was practically over from the terrible start, but I almost managed to steal a win. I got praise from the opponent but I can’t stop but think that I should have had a few more credits for that NAPD…7-4, feeling the pain.vs WhizzardAnother id I haven’t played against. He tried, and was successful for a while, with killing my oversighted curtain walls and keeping my economy low. But still, I managed to score out two the cleaners and putting more and more pressure as I gradually build up my economy lead. I think I hit a shattered remains as well.The game ends with me advancing the winning agenda, he tries but cannot access it or any other agenda, and I score for the win.Again corp is feeling absolutely great. 9-4Match 5, EtF/KateThis time I’m faced up against Henrik, my buddy from Linköping who knows my decks and I know his decks. Sadly it appears this is the battle for top 8.vs Engineering the FutureDuring practice I felt very confident with my Leela deck and I get a great start scoring two 3/2 agendas. Not thinking more about it I try to build up a bit and getting ready to score the winning agenda as I know he has a few 5/3.But things are not shaping up that way. I try to keep is economy low but he manages to get two adonis campaigns up and running and he hits two large GRNLD Refineries. Probably a huge misplay by me to allow that to happen. With his economy up he gets some nice taxing servers up and my aggressive running has not paid off at all. He’s all set up and I practically have nothing.My last hope is an indexing through a Janus I know is there. By my counts I’m only 2 or 1 credit off from making two succesful runs through R&amp;amp;D in the hopes of scoring out, but it’s not meant to be. I’ve already accumulated 3 brain damage from previous (too aggressive) encounters.With great play he manages to score out and win. Well played. 9-6vs KateAgain I’m having difficulties to recall the specifics of the match. I know I managed to hit one shattered remains to stop his drip econ for a while. I manage to score an agenda but time is running out.I have a 5/3 agenda which I’ve already advanced twice. I literary have my whole hand full of kill cards: 1 snare, 1 sea-source, 3 scorch and 2 punitives and with more money I’m just waiting for him to make a run. I decide to fake the agenda as the almighty 9/6 Government Takeover agenda and I advance it up to 7 in the course of two turns. In hindsight it might have been better to score it out as a 5/3, but that’s not what I did.So sitting at 7 advancement counters Henrik decides to… Not run it! Instead he runs my hand twice, the second time he imps my sea-source. Sigh.So the game ends with me winning on time, somehow it feels a bit frustrating as I had so much control the whole game, thinking how can I loose? Turns out, with some bad luck and some good runner decisions it’s quite possible not to win.10-6.The CutAs Henrik and I had the battle for the last place into playoffs, which I lost, Henrik makes the cut on 11 points and we’re a bunch of other players with 10 points.  Huge congrats to Henrik as he really did play better than I did.SummaryOnce again I’m amazed by the friendliness of the Netrunner community. Everyone was really nice and friendly. I joked around a bit with some guys and girls I’ve never even met before, which is no small feat with a very shy and introvert person such as myself. I got a ride all the way from Linköping to Örebro and the guy with the other car even came and asked me if I wanted to come with him earlier as I got knocked out. As it happens I stayed and watched some of Henrik’s and Fredrik’s matches.As for the games themselves I’m super happy with my corp deck which practically went undefeated during the tournament. I felt quite comfortable to win both the games where I got a timed win from.The runner deck however I’m not super happy with. It felt slow and low on economy and just a bit awkward. Some of the problems can be attributed to good corp play: I didn’t land many good account siphons which made my economy quite bad and they played around Leela’s ability quite well. Ice up centrals at least twice and don’t score out agendas on the last click.But mostly I think I didn’t play the runner deck right, I wanted to play more aggressively than maybe you’re supposed to with a slower control deck such as the one I had made. I really need to try out a Leela build based on Desperado and an economy package with Dirty Laundry and Security Testing, I think it might fit my style better. I also want to play around more with the wonderful Anarchs…Looking forward to the next time I can play some Netrunner!Published:April  2,2015in814820fTagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Winter Kit Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2016/01/16/netrunner_winter_kit_tournament</link>
      <description>Netrunner Winter Kit Tournament LinköpingPublished:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerAfter quite the hiatus fromNetrunnerI had a chance to join a tournament here in Linköping with 14 participants. The number of players has grown a lot since the previous tournament which is really great.As I really wanted to win the wonderfulDay Jobplaymat I went with two of the best decks I could come up with. I went with theNoisedeck I’ve been playing a while which has been performing really well. I was expecting a lot of EtF so I was on the verge on playing a classicLooking 4 JobWhizzard deck but I switched to Noise just before the tournament as I’m more comfortable with it but I also find it more fun to play Noise than anything else. As for the corp I had played a littleFoodcoatssince it dominated worlds and it has felt extremely solid overall.Tournament structureWe did 4 rounds of swiss without a cut, even though I was personally hoping for 5 rounds. The more games I can play the better it is, I just love to play you know. As usual you get 2 points for each game you win and 1 point for a timed win.Round 1: Dan, Reina/Syncvs ReinaHe got me low on credits early but I played it slow and slowly but steadily accumulated enough credits to build rez enough ice and score out. Foodcoats destroyed the game.vs SyncI was really scared of Sync as Noise is weak against tags and I don’t run any meat damage protection. But I got a nice start and got a few points lead but he still managed to score out some astro counters and I carelessly gave him a Quantum Predictive Model so he got up to 5 point. Luckily I had set up the shard combo with utopia and hades shard I maged to score out with them the click before he would have won.Generally I need to be more mindful of quantum predictive model. I actually think it’s a really good agenda in this type of deck.4 points, 2-0Round 2: Johannes, Leela/Haarpsichordvs LeelaI was really, really poor in the beginning of the game and I had trouble getting my campaigns to stick. I made the really big mistake of trying to rush out an Accelerated Beta Test but I was too poor and too scared of Legwork and The Maker’s Eye after bounce to do it. In the process I had blocked Breaker Bay Grid from my campaigns which made the game really slow… I think I could have won in the end anyway but he got through my remote twice by forcing through an Ichi. Well played by him but I feel like I should have done better.vs HaarpsichordA bit rushed on time and super scared of 24/7 News Cycle I got a fairly good grip in the beginning with a Lamprey lock and I stole a couple of agendas early. Unfortunately I accumulated two News Team and nullified my lead. I still managed to find a couple of agendas to have the lead.In the turn I went through a Gutenberg and took a tag (which I could have avoided with Faust) and gave him a Quantum Predictive Model while I was on 4 points. If I had just broken the sub I would have gone up to 5 points and I had a Hades Shard with at least one 2 pointer in the archive… Once again I need to be more mindful of taking tags. Still had more points and got the timed win.5 points, 3-1Round 3: Henrik, Noise/Blue Sunvs NoiseEtf got set up well and the runner didn’t do anything useful at the start and I got set up really well economically and I was quite safe. Game ended early due to a faceplant into Assassin with only 2 cards in hand and I had a ton of money.vs Blue SunI knew Henrik ran an Accelerated Diagnostics combo deck and I was again scared of dying to Scorched Earth with my not having any protection. But I got a lot of HQ and R&amp;amp;D accesses by trashing two Spiderwebs and an Assassin and I managed to ping away some kill pieces. He drew a lot with jacksson and managed to end up with all three copies of scorch in archives and I finally won by a Medium for his whole R&amp;amp;D.9 points, 5-1Round 4: Fredrik, Kate/EtFThe last game of the tournament and I and Fredrik were the top dogs. As I had one timed win but Fredrik did not so I had to win both games to win the tournament. Tough task as Fredrik is a very solid player.vs KateI was a little flooded in the beginning but I didn’t get punished for it and after that I drew really good. I managed to stick the campaigns in the remote and I had a ton of money basically the whole game. Fredrik security nexus kate and I managed to get two 2-points early and I didn’t draw any agendas in the midgame when he was set up with his monster rig.At the end of the game I had built up a 4-Ice remote and a 5-Ice R&amp;amp;D. He hit me with an Escher which felt quite awful as he had a bunch of R&amp;amp;D interfaces but it turns out my super taxing ice and R&amp;amp;D luck saved me. Foodcoat can and will make extremely taxing servers it turns out…vs EtFFredrik ran a sort of Team Sponsorship fast-advance/rush EtF which I wasn’t looking forward to all that much. But luckily he didn’t draw a lot of economy and I managed to keep him down economically by a combination of lamprey and forcing him to rez ice. I also sniped an early 2-pointer by clicking through an eli and breaking a marcus with Faust, which felt really good admittedly. Overall I managed to keep up a ton of pressure on him even though I didn’t find aesop’s until fairly late.I really felt in control the whole game and the game ended as a timed win for me. The only bigger mistake I recall is one I did on my last turn in the game where I installed a cache and then ran on the remote server thinking I could beat the ash trace just to plant into a Turing. At this point I was already at 5 points and what I could have done is walk through R&amp;amp;D 2 times by taking assassin to the face to maximize my chances of getting a regular win.12 points, 7-1The resultsI was a bit down after loosing points in the second round but I managed to recoup very well in the end. I felt I had some really good in some key matches and my decks served me very well. I will probably try some other corps but I may still continue playing Noise even after the most wanted list.In the end I managed to win the whole tournament which I didn’t really expect. I was hoping to do well but I wasn’t expecting it.As my prize I naturally chose Day Job. The Ice Wall participation prize was great as well. I’m a little sad I didn’t get the Corroder one as I think it looks really good, but you can’t get everything in this world.Was a good tournament and everyone were once again awesome! I’m already planning for the next one!Published:January 16,2016Revised:January 23,  2019indc7d7c4Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Summer Tournament Linköping</title>
      <link>https://www.jonashietala.se/blog/2015/09/18/netrunner_summer_tournament_linkping</link>
      <description>Netrunner Summer Tournament LinköpingPublished:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerThere was anotherNetrunnertournament this Sunday with 8 entrants. We had two new legal data packs with Old Hollywood and The Universe of Tomorrow so a lot of new things were tried. I heard a rumor that a full playset of both Aesop’s Pawnshop and Wyldside were available so I decided to not take my jankiest ideas and playNoiseandBlue Sun.The Noise buildwas practically unchanged from what I’ve played previously. The Blue Sun was a new glacier build with space ice and the new agendas Hollywood Renovation and The Future is Now. I wanted the threat of scorch and I also threw in two snares for extra spice.SwissWith 8 players we did 4 rounds of swiss, without any cut.Match 1: Dan, Valencia/Haarpsichordvs ValenciaI tried to push a Hollywood Renovation early, but it was snagged with blackmail.  It was a big gamble which unfortunately didn’t pan out.  This was a kinda large mistake, but in the end it didn’t matter.  I got my huge ice up and running and I forced him out of my servers.  I made a big play with Hollywood Renovation where I fast advanced a The Future is Now with the 5th and 6th advancement tokens and the game was basically over from that point.  I think I flatlined him in the end, but that’s more of a symbolic victory as I could have just as easily scored out.vs HaarpsichordSuper close, he had scored a lot of points and I was sitting with clot. In the end he installs 3 new remotes, one behind an ice. I push through the ice to steal the first agenda and I imp the second one (now the Imp is without counters). So I install another program, trashing the imp, then trashing the third remote with the imp. All new remotes were agendas. After this my victory was clear as a run on archives sealed the deal.4 points, 2-0Match 2: Harald, Haarpsichord, Hayleevs HaarpsichordI felt like I was behind the whole game, but so did Harald. In the end I managed to snag another very close win, but I’m not sure how that happened. All my Aesop’s were in the bottom of my stack but somehow I managed to steal/imp enough to make up for it. What decided things was a Clot hidden on my street peddler, which he overlooked. Without it I should have lost the game.vs HayleeI allowed some accesses to R&amp;amp;D, but mostly no big damage was done. Then I sealed the game up and the win was basically clear. I had a public support ticking down but we ran out of time so I got one point for being up to 6 agenda points. Maybe I could have played it faster to get the victory on time, but I don’t know.7 points, 4-0Match 3: Henrik, NEH, Chaos Theoryvs NEHI got set up fairly well and I managed to trash a sansan early. I had clot and everything was going alright. I hit a Snare in a remote which took me off guard a bit. The turn after he made another remote and I contemplated running on it, I did have imp tokens after all, but I decided it was fine to possibly allow him a single agenda. Big mistake as I installed cards down to 3 cards in hand and I died to a breaking news and scorch. For some reason I was convinced he was running the fast advance version, or some kind of nearpad, but the reality is I played too fast and didn’t consider everything properly. Live (or die) and learn I guess.vs Chaos TheoryAfter I rezzed an Archer on the remote it was basically game over as he couldn’t break it with the exception of datasuckers/parasiters, which quickly got used. I iced up my centrals with huge space ice and I could simply score out and win. He tried a big Vamp play against HQ, but on the last click and with a tag he died against double scorch after taking down my curtain wall.9 points, 5-1Match 4: Johannes, Haarpsichord/Ianvs HaarpsichordA blistering game where he rushed out agendas and I tried to punish/steal with Imp. The game slowed down when I had a Clot on board and I pushed up to 6 points. A run on archives with a Jackson reshuffle and then triggering Utopia shard sealed the deal.vs IanWe laughed about our decks being super late game focused and he stayed true to his words and he installed a ton of resources, three Gang Signs and two HQ interfaces. I was kinda agenda flooded but I managed to push them out in Archives with double Jackson. The game was decided in a funny way I think, even if I misplayed it quite a bit (I blame tiredness or something!).I had Hollywood Renovation with a bunch of advancement tokens, The Future is Now in a naked remote and one Snare and one Scorch in my hand. So I advanced Hollywood Renovation 3 times and scored it. He hit a Snare but nothing else with all his accesses. Then I scored The Future is Now and fetched my second Snare from R&amp;amp;D, which he accessed and died to. Naturally the correct play would have been to advance Hollywood Renovation twice, score The Future is Now and fetch the Snare. Now if he hits a Snare I can just scorch him on my last click.13 points, 7-1The resultsThe self critic in me keeps on thinking about the lost game and the game which went to time, but some small part of me tries to point out that things actually went well. I felt fine in all games and it never felt hopeless in any game. I did take “better” or more serious decks and the other guys joked about my very serious decks, but it’s fine. I did accomplish my goal and I even won the tournament, yay!I managed to achieve my goal and I got to choose a playset of Aesops! I also got a couple of Swordsman and a new deckbox. It’s a little bit sad that I declined the Femme Fatale alt-art as it’s preeetty… But maybe next time.Published:September 18,2015Revised:January 16,  2016ind0e265aTagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner ID draft Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/08/29/netrunner_id_draft_rebro</link>
      <description>Netrunner ID draft ÖrebroPublished:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerI entered an ID draft tournament inNetrunnerhosted in Örebro and this is a brief overview of what happened. Disclaimer: My memory is a little bit fuzzy and the events may or may not correspond to what actually happened.The draftThe idea was to randomly sort all entrants and in turn each chooses an ID which nobody else can choose. When everyone has chosen an ID the procedure continues in reverse order. This means you can choose either corp or runner early and leave the other until later.I got the 5th spot and Geist, Nasir, RP and NEH was chosen before me. If the goal was to do well I should probably have chosen a strong corp like Blue Sun, HB or possibly PE but I had just started playing Noise and I was loving every second of it so that was my choice. It was a little bit boring perhaps as it wasn’t a new ID I had to come up, but I had no idea of what I actually wanted to play with as corp so I simply delayed that decision. When it was my turn again most actually good corps had gone and I could choose between Titan, Harmony Medtech, Argus and Biotech (and some others…). Recently some popular Titan lists had popped up on netrunnerdb so I took that one.This is the drafting result:Frida unfortunately did not attend the actual draft and she had to pick both runner and corp last.With Wayland and Jinteki being relatively popular I was thinking of adding I’ve had worse to Noise… But in the end I decided to be ballsy and skip all that. And no plascretes. But I thought with some careful play and Imp/Utopia shard I could manage. Instead I went with the no frills 3 Aesop/3 Cache low economy approach which I’ve found is perfectly fine. I slotted 2 Hacktivist meeting as the local playgroup in Linköping insisted on running Cerebral static and Manhunt and maybe others would do weird stuff with currents as well?This is the Noise deck.The Titan buildis basically the popularAtlas Shruggedwith Beanstalk replacing Subliminal messaging and an extra Crisium Grid for the relative increase of criminal. In testing the corp deck performed okay… But never amazing. Noise performed consistently whenever I didn’t just die against Jinteki due to… Jinteki stuff.The matchesWhen we arrived at Örebro the basement already full of Magic gamers is already hot and things would only get worse. I didn’t get enough sleep and I’m already tired but still pumped to play some Netrunner!  The tournament features five rounds of swiss without a cut.Match 1: Yoshi, Reina/Blue Sunvs ReinaHedge fund, beanstalk, install ice over HQ. Runner installs things, runs on R&amp;amp;D and misses. I sea source-scorch second turn as he has 2 (or 3?) cards and I feel a bit bad about it. Unfortunately silly wins and losses like these happens sometimes.vs Blue SunHe gets a great start with ice and money. I’m having trouble setting up and I can’t find D4v1d before he can retrieve his oversighted Curtain Wall. I’m too scared/incapable of stealing his agendas as he’s rushing them out. When I finally get my Imp going on HQ he already has a scored atlas with two tokens and he scores out a hostile in a flash. I made a mistake of not installing a clone chip as I had a clot in my heap and I maybe should have been more aggressive but overall Yoshi outplayed me.2 points, 1-1Match 2: Dan, TWIY/Whizzardvs TWIYDan is from Linköping, same as me, but I haven’t actually played him but I knew his was a variation of theMidseasons/Psychographics rush deck. I play very carefully and builds up while he takes money. He gets a bunch more money and I continue milling and building. I’m waiting for him to start scoring out and I go through a Tollbooth and imps away an NAPD contract, but he never gets the astro train going while I sit back milling with clot ready. The game basically end when he never scores out and I get a mill victory.vs WhizzardHe trashes my sansans but I get some points scored. The game goes a bit long and we’re almost going to time. I think I could have won by rezzing an Archer against his faust when he doesn’t have enough cards to continue the game, but I stress out and for some reason I don’t rez it. Later he finds a 3-pointer for the win from HQ. I guess I took the risk as he could have just as easily hit a Snare and loose.4 points, 2-2Match 3: Johannes, Harmony Medtech/Geistvs GeistI’ve played against Johannes a lot so I know his deck and he knows mine. I get an excellent start with 3(!) Quandary protecting HQ, R&amp;amp;D and my remote. I manage to tax out his breaking and entering breakers as I score out with the help of sansan. Annoyingly Forger prevented me from scorching him more than once but in the end I manage to score out behind 2x barriers and a Quandary as he had basically exhausted his breakers and clone chips.vs Harmony MedtechI got set up with Noise fast and controlled the game from the start. He scored out a Nisei but I was never really worried. I made a stupid move of running archives when I had just trashed a Cyberdex and later I ran it again! But in the end my start was just too good and I won by pounding HQ with Lamprey, Imp and parasites.8 points, 4-2Match 4: Magnus, Nisei Division/Valenciavs Nisei DivisionI’ve never played Magnus but I know he’s a very good player so I’m really nervous to play him. He installs over R&amp;amp;D and remote and does a hedge fund. I install a lamprey and imp and run HQ… Just to hit a Snare. Sigh. I thought about it but I figured it wouldn’t be a big deal, but it was. I don’t shake the tag as I don’t have any resource installed and he scorches me. Huge misplay from me and now I’m trying not to tilt too hard.vs ValenciaI have a fairly bad starting hand which I keep… For some unknown reason. He’s very aggressive and he gets a medium dig going but misses. I don’t care about it too much and continue trying to score/finding my pieces. He does another big medium dig through a Grim, paying 3 + 1 cards for it and another ice, and hits a Snare on his last click, with two cards left in hand. I have a jackson out so I click to draw two cards and find the scorch for the win.Funny how both games ends in basically the same way. I’m still a bit upset about the way I lost but it feels a little bit better that I could pull out a win against such a good player, even if it was a lucky one.10 points, 5-3Match 5: Frida, Argus/Silhouettevs ArgusI know Frida loves meat damage so I play very carefully. I get a good start and I imp a bunch of things from R&amp;amp;D while milling a healthy amount. She scores out a couple of 1-pointers but I’m milling very fast and she’s not threatening me yet. When she goes up to 5 points I have as much money as she has so I make a run on archives (I also have an installed Utopia Shard) and take the win.vs SilhouetteAgain I get a good start and I get a Crisium grid on HQ to stop siphon. She doesn’t find her breakers and I get a hostile scored followed by the atlas train.14 points, 7-3Final resultsI won 7 matches, 4 with Titan and 3 with Noise. Surprisingly my corp faired better than my runner which can partly be explained by the two lucky flatlines I got. But overall it felt a lot better than during testing. Perhaps it’s because I’ve never played a rush deck before and the style takes a little getting used to? Then I got the silly scorched loss with Noise which really shouldn’t happen if you play as you should. But mistakes happen. I’m quite glad I managed to avoid tilting though.Generally with Noise I feel if the corp doesn’t push scoring windows hard you’re always in control of the game. Even then it’s difficult without a secondary win condition like scorch or midseasons. This is what Yoshi did with Blue Sun so very well where I really felt behind the whole game, but perhaps I was being too cautious.Overall I’m quite pleased with my result all things considered. This is the final results after the five rounds of swiss:There were quite a lot of prizes available and after the three victors took theirs this is what took home as my 4th place:I wanted to have a full playset of aesop’s, especially as I really love Noise, but the mat feels a little more special. I still want the alt-arts though, hopefully I can get them from somewhere else.Published:August 29,2015Revised:September  1,  2015infd44df8Tagged:Gaming,NetrunnerPreviousNext</description>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>5 Years at Linköping's University</title>
      <link>https://www.jonashietala.se/blog/2015/07/22/5_years_at_the_university</link>
      <description>5 Years at LinkÃ¶ping's Universityâ˜Published:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolI recently finished my masterâ€™s degree (civilingenjÃ¶r or civil engineering) at LinkÃ¶pingâ€™s University. At first it felt like 5 years would be an eternity, but in hindsight it was over in a flash. my gut feeling is that I havenâ€™t learnt or done anything of note, except you know actually finishing my degree, but if I sit down and think about it I have done some things. Actually quite a lot of things.First yearI moved to LinkÃ¶ping with my girlfriend and it was quite an adjustment as we both moved from our parents and to a city where we practically knew nothing and no one. But we managed fine and while we never went out to parties or went to other student events we found some friends. I also startedITF Taekwon-doafter a few months.There werenâ€™t too much to do in school. The focus was on foundation math courses, mostly things I had already done but needed refreshing, and on introductory programming courses which werenâ€™t challenging at all for me.Second yearDuring the second year I felt the courses were harder and more interesting than the first yearâ€™s courses. The courses in Combinatorial Optimization, Data Structures and Algorithms and Linear Algebra were fun and new for me. I also took an extra continuation course in Linear Algebra which was interesting.When I started the university I thought I would like electronics and hardware construction, but the courses from the first year were really not interesting at all. Even when making the transition from analog to digital I didnâ€™t care for it at all. But it all changed when we started actuallybuildingthings with digital circuits.At first we had an introductory course where we built digital clocks and counters. You were supposed to have prepared a design sketch for the labs, but me and my partner for some reason never did it, and so we were always running late in the labs. I remember one very fun, or horrible, occasion where we had struggled a lot with one lab and we had spent almost the full 4 hours until we finally completed it with maybe 10 - 15 minutes left. Filled with relief we started taring apart what we so painstakingly had built. When done we realized we had one part left where we were supposed to use the circuit we just destroyedâ€¦ Luckily we could use the circuits another group had made, but it was a painful lesson in always reading the descriptions and prepare for the labs in advance.The digital circuit labs were followed by a digital project of our own choice. Wedesigned a processorwhich could run theCore Wars 88 standardand we simulated it on an FPGA.The main block schema for the processorAnd here is a small video of the simulation in action:Click to view on YouTubeThe project was interesting as it was an outlet for our creativity and it touched on several different areas. Processor design, hardware debugging (!) and I wrote aredcode assemblerfor our CPU and amicrocode compiler.The behaviour of the processor is controlled by microcode which basically is a set of control outputs of 0s and 1s. For example our processor has 18 outputs consisting of a total of 39 bits (uPC_addris internal).game FIFO IR ADR1 ADR2 OP M1 M2 mem1 mem2 mem3 mem_addr ALU1 ALU2 ALU buss PC  uPC  uPC_addr00   00  0   00  00   0  00 00  00   00   00    000     00   0   000 000  00 00000 00000000To make things easier, instead of manually editing each 0/1 line we introduced a DSL which then the compiler turns into microcode lines.For examplethe microcodeis described in our DSL:; Startup, check if we're in gamejmpS $GAME                              ; Execute game code only if we're runningjmpO +0                                 ; Infinite loop if we've recieved game over, reset to break it; Clear memory contentsALU = 0                                 ; Load 0ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC:CLRMEM PC -&gt; mem_addr                          ; Look at PCOP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem         ; Clear itALU++                                   ; IncrALU1 -&gt; PC, jmpZ $LOADP                 ; If 0 we're done loopingjmp $CLRMEM                             ; Else continue...And is then compiled intoVHDL code:signalmem:Data:=(--Startup, check if we're in game"00000000000000000000000000000000000011000110011",--jmpS GAME(33)"00000000000000000000000000000000000101000000001",--jmpO +0(01)--Clear memory contents"00000000000000000000000000110000000000000000000",--ALU = 0"00000000010101000000000000000100010000000000000",--ALU1 -&gt; buss, buss -&gt; OP, buss -&gt; M1, buss -&gt; M2, buss -&gt; PC"00000000000000000000110000000000000000000000000",--PC -&gt; mem_addr"00000000000000101010000000000000000000000000000",--OP -&gt; mem, M1 -&gt; mem, M2 -&gt; mem"00000000000000000000000000100000000000000000000",--ALU++"00000000000000000000000000000100010001100001001",--ALU1 -&gt; buss, buss -&gt; PC, jmpZ LOADP(09)"00000000000000000000000000000000000001000000100",--jmp CLRMEM(04)...The redcode assemblers job is to transform a warrior (a piece of redcode) into a binary object file which we can then send to the FPGA for execution.For example this warrior:step    EQU 417init    EQU 1337size    EQU 9JMP start           ; boot jump as we can't specify PC in the middle T.Tsrc     DAT 0               ; src pointerstart   MOV #size, src      ; setup src pointercopy    MOV @src,DJN copy, srcSPL @dst            ; throw a pc thereADD #step, dst      ; space out a bitJMP start           ; make a new copy, yay!dst     DAT #0, #init       ; dst pointerendCompiles to:$ ./assembler jonas-replicator.red -r0000000000001001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000010010001111111111111000000000001101100011111111111100000000000000101000000001001000000011111111111110001111111111101000000001010100000000000000000110000000000000000000000000010010000000001101000010000000000000010000000000100000000011111111110110000000000000000000000000000010100000000000000000000010100111001With the--verbosetag the format can be examined:$ ./assembler jonas-replicator.red --verbose0000000000001001  00 09  ; Number of rows (9) jonas-replicator.redpad    OP  A  B  pad     A op      pad      B op00000000 0100 00 00 000 0000000000010 000 0000000000000   00 40 00 02 00 00  ; JMP  start           (2)  0(0)00000000 0000 00 00 000 0000000000000 000 0000000000000   00 00 00 00 00 00  ; DAT  0               (0)  0(0)00000000 0001 01 00 000 0000000001001 000 1111111111111   00 14 00 09 1f ff  ; MOV # size(9)  src       (-1)00000000 0001 10 11 000 1111111111110 000 0000000000101   00 1b 1f fe 00 05  ; MOV @ src(-2) &lt; dst      (5)00000000 1001 00 00 000 1111111111111 000 1111111111101   00 90 1f ff 1f fd  ; DJN  copy(-1)  src(-3)00000000 1010 10 00 000 0000000000011 000 0000000000000   00 a8 00 03 00 00  ; SPL @ dst            (3)  0(0)00000000 0010 01 00 000 0000110100001 000 0000000000010   00 24 01 a1 00 02  ; ADD # step(417)  dst      (2)00000000 0100 00 00 000 1111111111011 000 0000000000000   00 40 1f fb 00 00  ; JMP  start           (-5)  0(0)00000000 0000 01 01 000 0000000000000 000 0010100111001   00 05 00 00 05 39  ; DAT # 0(0) # init       (1337)If youâ€™re interested in the project you canread more on github.In addition, or as a prerequisite, to this awesome project we also got an introduction to 68k assembly and to computer architecture which was very good.This year me and a friend also made game in the Java programming course calledGrand Thief Arto. Not the greatest of games but it was still fun to make it. I also became a mentor in discrete math for the first year students which was a fun and easy way to earn a bit of extra money.Third yearThis year we continued with some more advanced courses. We had some project oriented courses with some theory about how projects should be run and then a practical part where we made some software for an actual company. The overall idea the course idea is great, to get some real world experience and to get some interaction with an actual company, but the execution was very much not so.For example in the middle of the project one of our project members were supposed to be exchanged with another member from another project. The motivation was that â€œin the real world this could happen, so you need to always be preparedâ€ but thatâ€™s just stupid in my opinion. Firstly you donâ€™t get fired and just booted from the team very often, but you get an advanced notice and you have some time to prepare the team, yourself and your eventual replacement for the move. Secondly it adds a very real sense of dread and nervousness for everyone involved. I happened to really like all members in the project and I was very worried to be switched out. Turns out I was the one who had to change project. I was very upset and I didnâ€™t click nearly as well with the new team and I thought the experience really sucked and I became demotivated.Another thing which was quite bad was the extreme focus on documentation. The whole first 2-3 months were supposed to be a planning stage and the actual implementation was supposed to be done the last 2-3 months. But large parts of the implementation stage were also spent on documentation, or rather writing documents because the course demanded it and we never had any use for the majority. The funny thing is that most of the project theory was spent on motivating why the waterfall development model wasnâ€™t suited to software development, but what did the project degenerate into? Even despite our best efforts, we tried to implement an iterative development as our customers didnâ€™t really know what they wanted, but we were foiled by course planners.A much better project was theRobot projectwhere we created an autonomous robot! There we poked around with hardware and lower level programming in C.Debugging this was quite an experienceI continued to be a mentor in discrete math and I joinedTeam Obelixwhich organized student visits to different companies. I won the â€œbest CVâ€ award given by Ericsson, I won some things in the local programming competitionIMPAand I had a great course in operative systems where we usedPintos. I took an extra course in Graph Theory which was quite different from other math courses but very interesting. Additionally I took aProgramming Languagescourse at Coursera, also quite nice.This summer I also had my first real programming job which was a summer internship atConfiguraand I had a really good time and we replaced their triangulation software.Fourth yearThe courses from the previous years were all mandatory, with the exception of some extra courses I took, but for the 4th and 5th year I could choose my own profile and what courses to take. I spent quite a lot of time thinking about which courses I wanted to take. In the end Iâ€™m quite happy with my selection but there are many interesting courses I had to say no to. The main profile I targeted was theProgramming and Algorithmsprofile.In hindsight these are my favourite courses during the year:TDDD48 Automated PlanningAAPS Advanced Algorithmic Problem SolvingTDDB44 Compiler ConstructionTATA54 Number TheoryTDDC17 Artificial IntelligenceTDDD56 Multicore and GPU ComputingTDDA69 Data and Program Structures (SICP)I didnâ€™t find the compiler courseasfun as I had initially thought. The theory part wasnâ€™t very interesting but the lab part was really, really good! All in all it still was a very fun course. The AI courses (Automated Planning and Artificial Intelligence) were great and AI is an area Iâ€™m very interested in. During this time I also took anonline course in Machine Learningvia Coursera by Stanford University. Number Theory is another maybe niche area in mathematics which I found interesting.I continued doing some programming competitions as can be seen inUVawhich enabled my to go toNWERC 2013in the Netherlands. Ultimately Iâ€™m not super good at these competitions but it was still a great experience. Netherlands (or specifically Delft) was great. In the Multicore and GPU Computing course there was a parallel sorting contest which I and my lab partner managed to win. The goal was to create a sorting routine on the CPU with the best sorting performance. Oh and I also went through the classic book Structure and Interpretation of Computer Programs orSICPin a course. Very excellent book!During the summer I also took part inIDA Summer of Code 2014where I contributed torust. I also had mysecond summer job at Configura:Our octree implementationFifth yearAt the end of my fourth year I had grown a bit study tired. I had thought the summer jobs would have helped a bit but although the summer jobs were amazing it might have been better to take a bit of a holiday, which I did not do at all.But the real issue wasnâ€™t me getting sick of studying, although I was a bit unmotivated, but I was fast approaching a burnout. It never got so serious that I became apathetic but it was pretty bad for a while. The last semester in my 4th year I only did 27 hp (30 hp is the target value) and the first semester in my 5th year I only managed 24 hp. I had accumulated extra points so I finished the university with 308.5 hp, of the required 30 hp, but I was less effective the last 1.5 year or so than usual.I might write more about my burnout in another post, but I did three main things to get out of it. The first thing I did was to start CBT (Cognitive Behavioral Therapy or Kognitiv beteendeterapi in Swedish). The second was to continue with things which made me happy and more importantly gave me more energy. Basically I started exercising more regularly. And the third thing I did was to scale down on my ambitions and focus on taking care of myself, this is the reason I didnâ€™t study 100% the first semester.In the end I think I managed to get rid of the worst effects of the burnout and I managed to finish my studies. I was also a mentor in discrete math for a fourth time. I didnâ€™t complete a ton of courses as the whole last semester was spent on writing myMasterâ€™s thesisbut I did complete a great course in cryptology and one about logic programming in Prolog.The cryptology course was especially good as it even introducedBitcoinand the way the blockchain worked. Big kudos to that! I was aware of Bitcoin before but I wasnâ€™t aware of the implementation details.All coursesFor reference this is the list of courses I completed. It surprises me at least to see how much Iâ€™ve actually done these years.I started two extra courses which I never finished:TAMS15   Mathematical Statistics, first courseTATA49   Geometry with ApplicationsThe statistics course was started during my first year, but I finished a similar in my later years and the geometry course was taken as a fun extra course but I later decided to skip it.First yearTATA41   Calculus in One Variable 1TATA42   Calculus in One Variable 2TATA65   Discrete MathematicsTDDC10   Perspectives to Computer TechnologyTDDC66   Computer Systems and ProgrammingTDDC67   Functional Programming and LispTDDC68   Imperative Programming and AdaTSEA22   Switching Theory and Logical DesignTSTE58   ElectronicsTTIT02   Foundation Course in MathematicsSecond yearTAOP33   Combinatorial Optimization, Introductory CourseTATA24   Linear AlgebraTATA53   Linear Algebra, Honours CourseTATA61   Multivariable and Vector CalculusTDDC36   LogicTDDC69   Object Oriented Programming and JavaTDDC70   Data Structures and AlgorithmsTDDD60   Interactive SystemsTFYY68   Engineering MechanicsTSEA43   Digital Project LaboratoryTSEA47   Computer Hardware and Architecture, part 1TSEA49   Computer Hardware and Architecture, part 2Third yearTAMS27   Mathematical StatisticsTATA50   Transform TheoryTATA64   Graph TheoryTDDB68   Concurrent Programming and Operating SystemsTDDC93   Software Engineering TheoryTDDD09   Software Engineering ProjectTEIO27   Technology Based EntrepreneurshipTFYA68   PhysicsTGTU50   Visits to IndustryTSDT18   Signals and SystemsTSEA29   Microcomputer, Project LaboratoryTSKS10   Signals, Information and CommunicationTSRT12   Automatic Control YFourth yearTANA09   Numerical Algorithms in Computer ScienceTATA54   Number TheoryTD1077   Advanced Algorithmic Problem SolvingTDDA69   Data and Program StructuresTDDB44   Compiler ConstructionTDDC17   Artificial IntelligenceTDDD14   Formal Languages and Automata TheoryTDDD20   Design and Analysis of AlgorithmsTDDD48   Automated PlanningTDDD56   Multicore and GPU ComputingFifth yearTDDD08   Logic ProgrammingTDDD38   Advanced Programming in C++TGTU49   History of TechnologyTQDT33   Degree Project - Masterâ€™s ThesisTSIT03   CryptologyPublished:July 22,2015Revised:January 23,  2019in6bf3248Tagged:Life,SchoolPreviousNext</description>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Netrunner Lindhska Store Championship Örebro</title>
      <link>https://www.jonashietala.se/blog/2015/04/02/netrunner_lindhska_store_championship_rebro</link>
      <description>Netrunner Lindhska Store Championship ÖrebroPublished:April  2,2015in814820fTagged:Netrunner,GamingAfter the awesomeness during theprevious store championship, I decided to go to the store championship at Lindhska Bokhandel in Örebro.I brought a modified version of the same corp I used the last time, aBlue Sun kill deckand anew runnerwith Leela Patel. See the links for cards and some card choices.The tournament was a 26-player one, at least that’s the number I heard, with 5 rounds of swiss followed by a double elimination bracket. 7 players from Linköping went, again I think but I’m not sure if that’s the correct number.SwissMatch 1, Tennin/Reinavs TenninMemory is a bit fuzzy here. I think I got off to a good start, but somehow the corp stabilized and we went into a long slog of a game. For some reason the corp managed to score out before I could find the final agenda.It certainly felt like I could have won the game, but I’m not sure what I did wrong. Might be that I wasn’t comfortable with the deck and played too aggressively. 0-2vs ReinaAgain I don’t remember the specifics. We had very little time and I manage to score out an agenda, so I get a timed win.Still, corp felt great and I was in control, 1-2.Match 2, RP/Chaos Theoryvs Replicating PerfectionAh RP. Actually the first time I’ve played against the id, but I had a pretty good idea of how to approach the game. I scored an early agenda but I’m slowly getting locked out. Then he makes a pretty big misplay - he flips a naked remote and he wants to score, but it’s Nisei MK II instead of a 3/2 agenda and now he’s flustered. I apologize and I score the Nisei and I remove the Enhanced Login Protocol.Still, he’s not out of the game. I run indexing but he hid a Jackson in a remote, stupid mistake! I manage to same old thing indexing again and I score another agenda and I place another agenda as the 5th card. I carefully count the cards and I manage to score the winning agenda, before being locked out of the game.The opponent said he’s only played a week… Still played pretty good I’m very glad for that victory. 3-2vs Chaos TheoryAnother quick corp game. Snare last click into scorch for a simple victory. His inexperienced lost him the game there.5-2 and feeling better.Match 3, RP/MaxXvs MaxXWe’re 6 players from Linköping and 2 from Stockholm at the top. Sadly I’m facing David, also from Linköping and we’re on our way to knock each other down.The game is slow, very slow. I feel in control and take it slow and easy. Scoring some agendas when I get them, but not drawing all that much. MaxX runs out of cards and runs a Levy. Somehow he runs of cards again and I know I’ve won.I have no idea how this happened, but we actually went to time, during our first match! Maybe it really was an intense game or maybe I was just tired or hungry… But anyway it happened. I manage to set up a win-win scenario for me during my second-to-last turn. Either he lets me score out or he runs the remote and let me sea-source scorch him to death (he had a hand size of 3 due to an early Cerebral Overwriter). He cooses the second option.7-2Match 4, NEH/Whizzardvs Near-Earth HubThis was by far the most stressful/exciting game of the day for me. I get a bad hand and I mulligan… Into a much much worse hand. No economy, no nothing. The corp scores an early astroscript, this isn’t looking so good… I do something, I can’t remember, then he sets up  a remote with one advancement counter on. Curious, it’s probably an NAPD, but sadly I can’t get in and score so I’m gearing up for a next turn combo.Sadly, it’s a Project Beale, worth 3 points and he’s got an astroscript token. From bad to worse, much worse. I desperately run his hand and his remote. Oh no, he’s got a scorch on top of R&amp;amp;D and he’s got a Data Raven protecting HQ. Luckily I’ve got a plascrete so I go tag-me with a Legwork, finding nothing. He’s using Jackson to draw like mad.I run another Legwork with a same old thing through the Data Raven and I find two agendas and I get in some single-accesses on R&amp;amp;D. Lady luck isn’t smiling for long though as he draws and install-advance a remote. Surely an NAPD, which I’m too poor to get at.My only hope is R&amp;amp;D and I have two interfaces out so I can access 3 cards. If I can bounce the NAPD I might still have a chance. The first card is a.. NAPD which I can’t steal. The second is a Breaking News so I bounce the advanced card now sitting on 5 agenda points.I’m too poor to get the NAPD and the next turn I get Scorched to death.The game was practically over from the terrible start, but I almost managed to steal a win. I got praise from the opponent but I can’t stop but think that I should have had a few more credits for that NAPD…7-4, feeling the pain.vs WhizzardAnother id I haven’t played against. He tried, and was successful for a while, with killing my oversighted curtain walls and keeping my economy low. But still, I managed to score out two the cleaners and putting more and more pressure as I gradually build up my economy lead. I think I hit a shattered remains as well.The game ends with me advancing the winning agenda, he tries but cannot access it or any other agenda, and I score for the win.Again corp is feeling absolutely great. 9-4Match 5, EtF/KateThis time I’m faced up against Henrik, my buddy from Linköping who knows my decks and I know his decks. Sadly it appears this is the battle for top 8.vs Engineering the FutureDuring practice I felt very confident with my Leela deck and I get a great start scoring two 3/2 agendas. Not thinking more about it I try to build up a bit and getting ready to score the winning agenda as I know he has a few 5/3.But things are not shaping up that way. I try to keep is economy low but he manages to get two adonis campaigns up and running and he hits two large GRNLD Refineries. Probably a huge misplay by me to allow that to happen. With his economy up he gets some nice taxing servers up and my aggressive running has not paid off at all. He’s all set up and I practically have nothing.My last hope is an indexing through a Janus I know is there. By my counts I’m only 2 or 1 credit off from making two succesful runs through R&amp;amp;D in the hopes of scoring out, but it’s not meant to be. I’ve already accumulated 3 brain damage from previous (too aggressive) encounters.With great play he manages to score out and win. Well played. 9-6vs KateAgain I’m having difficulties to recall the specifics of the match. I know I managed to hit one shattered remains to stop his drip econ for a while. I manage to score an agenda but time is running out.I have a 5/3 agenda which I’ve already advanced twice. I literary have my whole hand full of kill cards: 1 snare, 1 sea-source, 3 scorch and 2 punitives and with more money I’m just waiting for him to make a run. I decide to fake the agenda as the almighty 9/6 Government Takeover agenda and I advance it up to 7 in the course of two turns. In hindsight it might have been better to score it out as a 5/3, but that’s not what I did.So sitting at 7 advancement counters Henrik decides to… Not run it! Instead he runs my hand twice, the second time he imps my sea-source. Sigh.So the game ends with me winning on time, somehow it feels a bit frustrating as I had so much control the whole game, thinking how can I loose? Turns out, with some bad luck and some good runner decisions it’s quite possible not to win.10-6.The CutAs Henrik and I had the battle for the last place into playoffs, which I lost, Henrik makes the cut on 11 points and we’re a bunch of other players with 10 points.  Huge congrats to Henrik as he really did play better than I did.SummaryOnce again I’m amazed by the friendliness of the Netrunner community. Everyone was really nice and friendly. I joked around a bit with some guys and girls I’ve never even met before, which is no small feat with a very shy and introvert person such as myself. I got a ride all the way from Linköping to Örebro and the guy with the other car even came and asked me if I wanted to come with him earlier as I got knocked out. As it happens I stayed and watched some of Henrik’s and Fredrik’s matches.As for the games themselves I’m super happy with my corp deck which practically went undefeated during the tournament. I felt quite comfortable to win both the games where I got a timed win from.The runner deck however I’m not super happy with. It felt slow and low on economy and just a bit awkward. Some of the problems can be attributed to good corp play: I didn’t land many good account siphons which made my economy quite bad and they played around Leela’s ability quite well. Ice up centrals at least twice and don’t score out agendas on the last click.But mostly I think I didn’t play the runner deck right, I wanted to play more aggressively than maybe you’re supposed to with a slower control deck such as the one I had made. I really need to try out a Leela build based on Desperado and an economy package with Dirty Laundry and Security Testing, I think it might fit my style better. I also want to play around more with the wonderful Anarchs…Looking forward to the next time I can play some Netrunner!Published:April  2,2015in814820fTagged:Netrunner,GamingPreviousNext</description>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
